// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: schema.tl.sync_service.proto

package mtproto // import "open.chat/mtproto"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import types "github.com/gogo/protobuf/types"

import strings "strings"
import reflect "reflect"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import encoding_binary "encoding/binary"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// --------------------------------------------------------------------------------------------
// invokeAfterMsg#cb9f372d {X:Type} msg_id:long query:!X = X;
type TLInvokeAfterMsg struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MsgId                int64         `protobuf:"varint,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Query                []byte        `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeAfterMsg) Reset()         { *m = TLInvokeAfterMsg{} }
func (m *TLInvokeAfterMsg) String() string { return proto.CompactTextString(m) }
func (*TLInvokeAfterMsg) ProtoMessage()    {}
func (*TLInvokeAfterMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{0}
}
func (m *TLInvokeAfterMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeAfterMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeAfterMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLInvokeAfterMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeAfterMsg.Merge(dst, src)
}
func (m *TLInvokeAfterMsg) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeAfterMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeAfterMsg.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeAfterMsg proto.InternalMessageInfo

func (m *TLInvokeAfterMsg) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeAfterMsg) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLInvokeAfterMsg) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// invokeAfterMsgs#3dc4b4f0 {X:Type} msg_ids:Vector<long> query:!X = X;
type TLInvokeAfterMsgs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MsgIds               []int64       `protobuf:"varint,2,rep,packed,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
	Query                []byte        `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeAfterMsgs) Reset()         { *m = TLInvokeAfterMsgs{} }
func (m *TLInvokeAfterMsgs) String() string { return proto.CompactTextString(m) }
func (*TLInvokeAfterMsgs) ProtoMessage()    {}
func (*TLInvokeAfterMsgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{1}
}
func (m *TLInvokeAfterMsgs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeAfterMsgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeAfterMsgs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLInvokeAfterMsgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeAfterMsgs.Merge(dst, src)
}
func (m *TLInvokeAfterMsgs) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeAfterMsgs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeAfterMsgs.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeAfterMsgs proto.InternalMessageInfo

func (m *TLInvokeAfterMsgs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeAfterMsgs) GetMsgIds() []int64 {
	if m != nil {
		return m.MsgIds
	}
	return nil
}

func (m *TLInvokeAfterMsgs) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// initConnection#c1cd5ea9 {X:Type} flags:# api_id:int device_model:string system_version:string app_version:string system_lang_code:string lang_pack:string lang_code:string proxy:flags.0?InputClientProxy params:flags.1?JSONValue query:!X = X;
type TLInitConnection struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ApiId                int32             `protobuf:"varint,2,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	DeviceModel          string            `protobuf:"bytes,3,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	SystemVersion        string            `protobuf:"bytes,4,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	AppVersion           string            `protobuf:"bytes,5,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	SystemLangCode       string            `protobuf:"bytes,6,opt,name=system_lang_code,json=systemLangCode,proto3" json:"system_lang_code,omitempty"`
	LangPack             string            `protobuf:"bytes,7,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string            `protobuf:"bytes,8,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Proxy                *InputClientProxy `protobuf:"bytes,9,opt,name=proxy,proto3" json:"proxy,omitempty"`
	Params               *JSONValue        `protobuf:"bytes,10,opt,name=params,proto3" json:"params,omitempty"`
	Query                []byte            `protobuf:"bytes,11,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLInitConnection) Reset()         { *m = TLInitConnection{} }
func (m *TLInitConnection) String() string { return proto.CompactTextString(m) }
func (*TLInitConnection) ProtoMessage()    {}
func (*TLInitConnection) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{2}
}
func (m *TLInitConnection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInitConnection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInitConnection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLInitConnection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInitConnection.Merge(dst, src)
}
func (m *TLInitConnection) XXX_Size() int {
	return m.Size()
}
func (m *TLInitConnection) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInitConnection.DiscardUnknown(m)
}

var xxx_messageInfo_TLInitConnection proto.InternalMessageInfo

func (m *TLInitConnection) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInitConnection) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLInitConnection) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *TLInitConnection) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *TLInitConnection) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *TLInitConnection) GetSystemLangCode() string {
	if m != nil {
		return m.SystemLangCode
	}
	return ""
}

func (m *TLInitConnection) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLInitConnection) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLInitConnection) GetProxy() *InputClientProxy {
	if m != nil {
		return m.Proxy
	}
	return nil
}

func (m *TLInitConnection) GetParams() *JSONValue {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *TLInitConnection) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// invokeWithLayer#da9b0d0d {X:Type} layer:int query:!X = X;
type TLInvokeWithLayer struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Layer                int32         `protobuf:"varint,2,opt,name=layer,proto3" json:"layer,omitempty"`
	Query                []byte        `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeWithLayer) Reset()         { *m = TLInvokeWithLayer{} }
func (m *TLInvokeWithLayer) String() string { return proto.CompactTextString(m) }
func (*TLInvokeWithLayer) ProtoMessage()    {}
func (*TLInvokeWithLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{3}
}
func (m *TLInvokeWithLayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeWithLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeWithLayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLInvokeWithLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeWithLayer.Merge(dst, src)
}
func (m *TLInvokeWithLayer) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeWithLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeWithLayer.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeWithLayer proto.InternalMessageInfo

func (m *TLInvokeWithLayer) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeWithLayer) GetLayer() int32 {
	if m != nil {
		return m.Layer
	}
	return 0
}

func (m *TLInvokeWithLayer) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// invokeWithoutUpdates#bf9459b7 {X:Type} query:!X = X;
type TLInvokeWithoutUpdates struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Query                []byte        `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeWithoutUpdates) Reset()         { *m = TLInvokeWithoutUpdates{} }
func (m *TLInvokeWithoutUpdates) String() string { return proto.CompactTextString(m) }
func (*TLInvokeWithoutUpdates) ProtoMessage()    {}
func (*TLInvokeWithoutUpdates) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{4}
}
func (m *TLInvokeWithoutUpdates) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeWithoutUpdates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeWithoutUpdates.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLInvokeWithoutUpdates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeWithoutUpdates.Merge(dst, src)
}
func (m *TLInvokeWithoutUpdates) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeWithoutUpdates) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeWithoutUpdates.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeWithoutUpdates proto.InternalMessageInfo

func (m *TLInvokeWithoutUpdates) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeWithoutUpdates) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// invokeWithMessagesRange#365275f2 {X:Type} range:MessageRange query:!X = X;
type TLInvokeWithMessagesRange struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Range                *MessageRange `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	Query                []byte        `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeWithMessagesRange) Reset()         { *m = TLInvokeWithMessagesRange{} }
func (m *TLInvokeWithMessagesRange) String() string { return proto.CompactTextString(m) }
func (*TLInvokeWithMessagesRange) ProtoMessage()    {}
func (*TLInvokeWithMessagesRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{5}
}
func (m *TLInvokeWithMessagesRange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeWithMessagesRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeWithMessagesRange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLInvokeWithMessagesRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeWithMessagesRange.Merge(dst, src)
}
func (m *TLInvokeWithMessagesRange) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeWithMessagesRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeWithMessagesRange.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeWithMessagesRange proto.InternalMessageInfo

func (m *TLInvokeWithMessagesRange) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeWithMessagesRange) GetRange() *MessageRange {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *TLInvokeWithMessagesRange) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// invokeWithTakeout#aca9fd2e {X:Type} takeout_id:long query:!X = X;
type TLInvokeWithTakeout struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	TakeoutId            int64         `protobuf:"varint,2,opt,name=takeout_id,json=takeoutId,proto3" json:"takeout_id,omitempty"`
	Query                []byte        `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeWithTakeout) Reset()         { *m = TLInvokeWithTakeout{} }
func (m *TLInvokeWithTakeout) String() string { return proto.CompactTextString(m) }
func (*TLInvokeWithTakeout) ProtoMessage()    {}
func (*TLInvokeWithTakeout) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{6}
}
func (m *TLInvokeWithTakeout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeWithTakeout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeWithTakeout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLInvokeWithTakeout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeWithTakeout.Merge(dst, src)
}
func (m *TLInvokeWithTakeout) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeWithTakeout) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeWithTakeout.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeWithTakeout proto.InternalMessageInfo

func (m *TLInvokeWithTakeout) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeWithTakeout) GetTakeoutId() int64 {
	if m != nil {
		return m.TakeoutId
	}
	return 0
}

func (m *TLInvokeWithTakeout) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// auth.sendCode#a677244f phone_number:string api_id:int api_hash:string settings:CodeSettings = auth.SentCode;
type TLAuthSendCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	ApiId                int32         `protobuf:"varint,3,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	ApiHash              string        `protobuf:"bytes,4,opt,name=api_hash,json=apiHash,proto3" json:"api_hash,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`
	AllowFlashcall       bool          `protobuf:"varint,6,opt,name=allow_flashcall,json=allowFlashcall,proto3" json:"allow_flashcall,omitempty"`
	CurrentNumber        *Bool         `protobuf:"bytes,7,opt,name=current_number,json=currentNumber,proto3" json:"current_number,omitempty"`
	LangCode             string        `protobuf:"bytes,8,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthSendCode) Reset()         { *m = TLAuthSendCode{} }
func (m *TLAuthSendCode) String() string { return proto.CompactTextString(m) }
func (*TLAuthSendCode) ProtoMessage()    {}
func (*TLAuthSendCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{7}
}
func (m *TLAuthSendCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSendCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSendCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthSendCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSendCode.Merge(dst, src)
}
func (m *TLAuthSendCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSendCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSendCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSendCode proto.InternalMessageInfo

func (m *TLAuthSendCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthSendCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthSendCode) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLAuthSendCode) GetApiHash() string {
	if m != nil {
		return m.ApiHash
	}
	return ""
}

func (m *TLAuthSendCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *TLAuthSendCode) GetAllowFlashcall() bool {
	if m != nil {
		return m.AllowFlashcall
	}
	return false
}

func (m *TLAuthSendCode) GetCurrentNumber() *Bool {
	if m != nil {
		return m.CurrentNumber
	}
	return nil
}

func (m *TLAuthSendCode) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// auth.signUp#80eee427 phone_number:string phone_code_hash:string first_name:string last_name:string = auth.Authorization;
type TLAuthSignUp struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,3,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	FirstName            string        `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string        `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PhoneCode            string        `protobuf:"bytes,6,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthSignUp) Reset()         { *m = TLAuthSignUp{} }
func (m *TLAuthSignUp) String() string { return proto.CompactTextString(m) }
func (*TLAuthSignUp) ProtoMessage()    {}
func (*TLAuthSignUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{8}
}
func (m *TLAuthSignUp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSignUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSignUp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthSignUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSignUp.Merge(dst, src)
}
func (m *TLAuthSignUp) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSignUp) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSignUp.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSignUp proto.InternalMessageInfo

func (m *TLAuthSignUp) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthSignUp) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthSignUp) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAuthSignUp) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *TLAuthSignUp) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *TLAuthSignUp) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// auth.signIn#bcd51581 phone_number:string phone_code_hash:string phone_code:string = auth.Authorization;
type TLAuthSignIn struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,3,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string        `protobuf:"bytes,4,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthSignIn) Reset()         { *m = TLAuthSignIn{} }
func (m *TLAuthSignIn) String() string { return proto.CompactTextString(m) }
func (*TLAuthSignIn) ProtoMessage()    {}
func (*TLAuthSignIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{9}
}
func (m *TLAuthSignIn) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSignIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSignIn.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthSignIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSignIn.Merge(dst, src)
}
func (m *TLAuthSignIn) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSignIn) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSignIn.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSignIn proto.InternalMessageInfo

func (m *TLAuthSignIn) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthSignIn) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthSignIn) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAuthSignIn) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// auth.logOut#5717da40 = Bool;
type TLAuthLogOut struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthLogOut) Reset()         { *m = TLAuthLogOut{} }
func (m *TLAuthLogOut) String() string { return proto.CompactTextString(m) }
func (*TLAuthLogOut) ProtoMessage()    {}
func (*TLAuthLogOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{10}
}
func (m *TLAuthLogOut) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthLogOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthLogOut.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthLogOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthLogOut.Merge(dst, src)
}
func (m *TLAuthLogOut) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthLogOut) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthLogOut.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthLogOut proto.InternalMessageInfo

func (m *TLAuthLogOut) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// auth.resetAuthorizations#9fab0d1a = Bool;
type TLAuthResetAuthorizations struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthResetAuthorizations) Reset()         { *m = TLAuthResetAuthorizations{} }
func (m *TLAuthResetAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAuthResetAuthorizations) ProtoMessage()    {}
func (*TLAuthResetAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{11}
}
func (m *TLAuthResetAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthResetAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthResetAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthResetAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthResetAuthorizations.Merge(dst, src)
}
func (m *TLAuthResetAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthResetAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthResetAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthResetAuthorizations proto.InternalMessageInfo

func (m *TLAuthResetAuthorizations) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// auth.exportAuthorization#e5bfffcd dc_id:int = auth.ExportedAuthorization;
type TLAuthExportAuthorization struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	DcId                 int32         `protobuf:"varint,2,opt,name=dc_id,json=dcId,proto3" json:"dc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthExportAuthorization) Reset()         { *m = TLAuthExportAuthorization{} }
func (m *TLAuthExportAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAuthExportAuthorization) ProtoMessage()    {}
func (*TLAuthExportAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{12}
}
func (m *TLAuthExportAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthExportAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthExportAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthExportAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthExportAuthorization.Merge(dst, src)
}
func (m *TLAuthExportAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthExportAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthExportAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthExportAuthorization proto.InternalMessageInfo

func (m *TLAuthExportAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthExportAuthorization) GetDcId() int32 {
	if m != nil {
		return m.DcId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// auth.importAuthorization#e3ef9613 id:int bytes:bytes = auth.Authorization;
type TLAuthImportAuthorization struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   int32         `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Bytes                []byte        `protobuf:"bytes,3,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthImportAuthorization) Reset()         { *m = TLAuthImportAuthorization{} }
func (m *TLAuthImportAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAuthImportAuthorization) ProtoMessage()    {}
func (*TLAuthImportAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{13}
}
func (m *TLAuthImportAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthImportAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthImportAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthImportAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthImportAuthorization.Merge(dst, src)
}
func (m *TLAuthImportAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthImportAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthImportAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthImportAuthorization proto.InternalMessageInfo

func (m *TLAuthImportAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthImportAuthorization) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLAuthImportAuthorization) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// auth.bindTempAuthKey#cdd42a05 perm_auth_key_id:long nonce:long expires_at:int encrypted_message:bytes = Bool;
type TLAuthBindTempAuthKey struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PermAuthKeyId        int64         `protobuf:"varint,2,opt,name=perm_auth_key_id,json=permAuthKeyId,proto3" json:"perm_auth_key_id,omitempty"`
	Nonce                int64         `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ExpiresAt            int32         `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	EncryptedMessage     []byte        `protobuf:"bytes,5,opt,name=encrypted_message,json=encryptedMessage,proto3" json:"encrypted_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthBindTempAuthKey) Reset()         { *m = TLAuthBindTempAuthKey{} }
func (m *TLAuthBindTempAuthKey) String() string { return proto.CompactTextString(m) }
func (*TLAuthBindTempAuthKey) ProtoMessage()    {}
func (*TLAuthBindTempAuthKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{14}
}
func (m *TLAuthBindTempAuthKey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthBindTempAuthKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthBindTempAuthKey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthBindTempAuthKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthBindTempAuthKey.Merge(dst, src)
}
func (m *TLAuthBindTempAuthKey) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthBindTempAuthKey) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthBindTempAuthKey.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthBindTempAuthKey proto.InternalMessageInfo

func (m *TLAuthBindTempAuthKey) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthBindTempAuthKey) GetPermAuthKeyId() int64 {
	if m != nil {
		return m.PermAuthKeyId
	}
	return 0
}

func (m *TLAuthBindTempAuthKey) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TLAuthBindTempAuthKey) GetExpiresAt() int32 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *TLAuthBindTempAuthKey) GetEncryptedMessage() []byte {
	if m != nil {
		return m.EncryptedMessage
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// auth.importBotAuthorization#67a3ff2c flags:int api_id:int api_hash:string bot_auth_token:string = auth.Authorization;
type TLAuthImportBotAuthorization struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Flags                int32         `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
	ApiId                int32         `protobuf:"varint,3,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	ApiHash              string        `protobuf:"bytes,4,opt,name=api_hash,json=apiHash,proto3" json:"api_hash,omitempty"`
	BotAuthToken         string        `protobuf:"bytes,5,opt,name=bot_auth_token,json=botAuthToken,proto3" json:"bot_auth_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthImportBotAuthorization) Reset()         { *m = TLAuthImportBotAuthorization{} }
func (m *TLAuthImportBotAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAuthImportBotAuthorization) ProtoMessage()    {}
func (*TLAuthImportBotAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{15}
}
func (m *TLAuthImportBotAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthImportBotAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthImportBotAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthImportBotAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthImportBotAuthorization.Merge(dst, src)
}
func (m *TLAuthImportBotAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthImportBotAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthImportBotAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthImportBotAuthorization proto.InternalMessageInfo

func (m *TLAuthImportBotAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthImportBotAuthorization) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAuthImportBotAuthorization) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLAuthImportBotAuthorization) GetApiHash() string {
	if m != nil {
		return m.ApiHash
	}
	return ""
}

func (m *TLAuthImportBotAuthorization) GetBotAuthToken() string {
	if m != nil {
		return m.BotAuthToken
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// auth.checkPassword#d18b4d16 password:InputCheckPasswordSRP = auth.Authorization;
type TLAuthCheckPassword struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	PasswordHash         []byte                 `protobuf:"bytes,3,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAuthCheckPassword) Reset()         { *m = TLAuthCheckPassword{} }
func (m *TLAuthCheckPassword) String() string { return proto.CompactTextString(m) }
func (*TLAuthCheckPassword) ProtoMessage()    {}
func (*TLAuthCheckPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{16}
}
func (m *TLAuthCheckPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthCheckPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthCheckPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthCheckPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthCheckPassword.Merge(dst, src)
}
func (m *TLAuthCheckPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthCheckPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthCheckPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthCheckPassword proto.InternalMessageInfo

func (m *TLAuthCheckPassword) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthCheckPassword) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *TLAuthCheckPassword) GetPasswordHash() []byte {
	if m != nil {
		return m.PasswordHash
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// auth.requestPasswordRecovery#d897bc66 = auth.PasswordRecovery;
type TLAuthRequestPasswordRecovery struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthRequestPasswordRecovery) Reset()         { *m = TLAuthRequestPasswordRecovery{} }
func (m *TLAuthRequestPasswordRecovery) String() string { return proto.CompactTextString(m) }
func (*TLAuthRequestPasswordRecovery) ProtoMessage()    {}
func (*TLAuthRequestPasswordRecovery) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{17}
}
func (m *TLAuthRequestPasswordRecovery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthRequestPasswordRecovery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthRequestPasswordRecovery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthRequestPasswordRecovery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthRequestPasswordRecovery.Merge(dst, src)
}
func (m *TLAuthRequestPasswordRecovery) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthRequestPasswordRecovery) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthRequestPasswordRecovery.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthRequestPasswordRecovery proto.InternalMessageInfo

func (m *TLAuthRequestPasswordRecovery) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// auth.recoverPassword#4ea56e92 code:string = auth.Authorization;
type TLAuthRecoverPassword struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Code                 string        `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthRecoverPassword) Reset()         { *m = TLAuthRecoverPassword{} }
func (m *TLAuthRecoverPassword) String() string { return proto.CompactTextString(m) }
func (*TLAuthRecoverPassword) ProtoMessage()    {}
func (*TLAuthRecoverPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{18}
}
func (m *TLAuthRecoverPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthRecoverPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthRecoverPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthRecoverPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthRecoverPassword.Merge(dst, src)
}
func (m *TLAuthRecoverPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthRecoverPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthRecoverPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthRecoverPassword proto.InternalMessageInfo

func (m *TLAuthRecoverPassword) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthRecoverPassword) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// auth.resendCode#3ef1a9bf phone_number:string phone_code_hash:string = auth.SentCode;
type TLAuthResendCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,3,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthResendCode) Reset()         { *m = TLAuthResendCode{} }
func (m *TLAuthResendCode) String() string { return proto.CompactTextString(m) }
func (*TLAuthResendCode) ProtoMessage()    {}
func (*TLAuthResendCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{19}
}
func (m *TLAuthResendCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthResendCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthResendCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthResendCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthResendCode.Merge(dst, src)
}
func (m *TLAuthResendCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthResendCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthResendCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthResendCode proto.InternalMessageInfo

func (m *TLAuthResendCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthResendCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthResendCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// auth.cancelCode#1f040578 phone_number:string phone_code_hash:string = Bool;
type TLAuthCancelCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,3,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthCancelCode) Reset()         { *m = TLAuthCancelCode{} }
func (m *TLAuthCancelCode) String() string { return proto.CompactTextString(m) }
func (*TLAuthCancelCode) ProtoMessage()    {}
func (*TLAuthCancelCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{20}
}
func (m *TLAuthCancelCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthCancelCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthCancelCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthCancelCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthCancelCode.Merge(dst, src)
}
func (m *TLAuthCancelCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthCancelCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthCancelCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthCancelCode proto.InternalMessageInfo

func (m *TLAuthCancelCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthCancelCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthCancelCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// auth.dropTempAuthKeys#8e48a188 except_auth_keys:Vector<long> = Bool;
type TLAuthDropTempAuthKeys struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ExceptAuthKeys       []int64       `protobuf:"varint,2,rep,packed,name=except_auth_keys,json=exceptAuthKeys,proto3" json:"except_auth_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthDropTempAuthKeys) Reset()         { *m = TLAuthDropTempAuthKeys{} }
func (m *TLAuthDropTempAuthKeys) String() string { return proto.CompactTextString(m) }
func (*TLAuthDropTempAuthKeys) ProtoMessage()    {}
func (*TLAuthDropTempAuthKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{21}
}
func (m *TLAuthDropTempAuthKeys) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthDropTempAuthKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthDropTempAuthKeys.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthDropTempAuthKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthDropTempAuthKeys.Merge(dst, src)
}
func (m *TLAuthDropTempAuthKeys) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthDropTempAuthKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthDropTempAuthKeys.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthDropTempAuthKeys proto.InternalMessageInfo

func (m *TLAuthDropTempAuthKeys) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthDropTempAuthKeys) GetExceptAuthKeys() []int64 {
	if m != nil {
		return m.ExceptAuthKeys
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// auth.exportLoginToken#b1b41517 api_id:int api_hash:string except_ids:Vector<int> = auth.LoginToken;
type TLAuthExportLoginToken struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ApiId                int32         `protobuf:"varint,2,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	ApiHash              string        `protobuf:"bytes,3,opt,name=api_hash,json=apiHash,proto3" json:"api_hash,omitempty"`
	ExceptIds            []int32       `protobuf:"varint,4,rep,packed,name=except_ids,json=exceptIds,proto3" json:"except_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthExportLoginToken) Reset()         { *m = TLAuthExportLoginToken{} }
func (m *TLAuthExportLoginToken) String() string { return proto.CompactTextString(m) }
func (*TLAuthExportLoginToken) ProtoMessage()    {}
func (*TLAuthExportLoginToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{22}
}
func (m *TLAuthExportLoginToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthExportLoginToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthExportLoginToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthExportLoginToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthExportLoginToken.Merge(dst, src)
}
func (m *TLAuthExportLoginToken) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthExportLoginToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthExportLoginToken.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthExportLoginToken proto.InternalMessageInfo

func (m *TLAuthExportLoginToken) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthExportLoginToken) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLAuthExportLoginToken) GetApiHash() string {
	if m != nil {
		return m.ApiHash
	}
	return ""
}

func (m *TLAuthExportLoginToken) GetExceptIds() []int32 {
	if m != nil {
		return m.ExceptIds
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// auth.importLoginToken#95ac5ce4 token:bytes = auth.LoginToken;
type TLAuthImportLoginToken struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Token                []byte        `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthImportLoginToken) Reset()         { *m = TLAuthImportLoginToken{} }
func (m *TLAuthImportLoginToken) String() string { return proto.CompactTextString(m) }
func (*TLAuthImportLoginToken) ProtoMessage()    {}
func (*TLAuthImportLoginToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{23}
}
func (m *TLAuthImportLoginToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthImportLoginToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthImportLoginToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthImportLoginToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthImportLoginToken.Merge(dst, src)
}
func (m *TLAuthImportLoginToken) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthImportLoginToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthImportLoginToken.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthImportLoginToken proto.InternalMessageInfo

func (m *TLAuthImportLoginToken) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthImportLoginToken) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// auth.acceptLoginToken#e894ad4d token:bytes = Authorization;
type TLAuthAcceptLoginToken struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Token                []byte        `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthAcceptLoginToken) Reset()         { *m = TLAuthAcceptLoginToken{} }
func (m *TLAuthAcceptLoginToken) String() string { return proto.CompactTextString(m) }
func (*TLAuthAcceptLoginToken) ProtoMessage()    {}
func (*TLAuthAcceptLoginToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{24}
}
func (m *TLAuthAcceptLoginToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthAcceptLoginToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthAcceptLoginToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthAcceptLoginToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthAcceptLoginToken.Merge(dst, src)
}
func (m *TLAuthAcceptLoginToken) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthAcceptLoginToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthAcceptLoginToken.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthAcceptLoginToken proto.InternalMessageInfo

func (m *TLAuthAcceptLoginToken) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthAcceptLoginToken) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.registerDevice#68976c6f flags:# no_muted:flags.0?true token_type:int token:string app_sandbox:Bool secret:bytes other_uids:Vector<int> = Bool;
type TLAccountRegisterDevice struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	NoMuted              bool          `protobuf:"varint,2,opt,name=no_muted,json=noMuted,proto3" json:"no_muted,omitempty"`
	TokenType            int32         `protobuf:"varint,3,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	Token                string        `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	AppSandbox           *Bool         `protobuf:"bytes,5,opt,name=app_sandbox,json=appSandbox,proto3" json:"app_sandbox,omitempty"`
	Secret               []byte        `protobuf:"bytes,6,opt,name=secret,proto3" json:"secret,omitempty"`
	OtherUids            []int32       `protobuf:"varint,7,rep,packed,name=other_uids,json=otherUids,proto3" json:"other_uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountRegisterDevice) Reset()         { *m = TLAccountRegisterDevice{} }
func (m *TLAccountRegisterDevice) String() string { return proto.CompactTextString(m) }
func (*TLAccountRegisterDevice) ProtoMessage()    {}
func (*TLAccountRegisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{25}
}
func (m *TLAccountRegisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountRegisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountRegisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountRegisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountRegisterDevice.Merge(dst, src)
}
func (m *TLAccountRegisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountRegisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountRegisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountRegisterDevice proto.InternalMessageInfo

func (m *TLAccountRegisterDevice) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountRegisterDevice) GetNoMuted() bool {
	if m != nil {
		return m.NoMuted
	}
	return false
}

func (m *TLAccountRegisterDevice) GetTokenType() int32 {
	if m != nil {
		return m.TokenType
	}
	return 0
}

func (m *TLAccountRegisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TLAccountRegisterDevice) GetAppSandbox() *Bool {
	if m != nil {
		return m.AppSandbox
	}
	return nil
}

func (m *TLAccountRegisterDevice) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *TLAccountRegisterDevice) GetOtherUids() []int32 {
	if m != nil {
		return m.OtherUids
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.unregisterDevice#3076c4bf token_type:int token:string other_uids:Vector<int> = Bool;
type TLAccountUnregisterDevice struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	TokenType            int32         `protobuf:"varint,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	Token                string        `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	OtherUids            []int32       `protobuf:"varint,4,rep,packed,name=other_uids,json=otherUids,proto3" json:"other_uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUnregisterDevice) Reset()         { *m = TLAccountUnregisterDevice{} }
func (m *TLAccountUnregisterDevice) String() string { return proto.CompactTextString(m) }
func (*TLAccountUnregisterDevice) ProtoMessage()    {}
func (*TLAccountUnregisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{26}
}
func (m *TLAccountUnregisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUnregisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUnregisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUnregisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUnregisterDevice.Merge(dst, src)
}
func (m *TLAccountUnregisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUnregisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUnregisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUnregisterDevice proto.InternalMessageInfo

func (m *TLAccountUnregisterDevice) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUnregisterDevice) GetTokenType() int32 {
	if m != nil {
		return m.TokenType
	}
	return 0
}

func (m *TLAccountUnregisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TLAccountUnregisterDevice) GetOtherUids() []int32 {
	if m != nil {
		return m.OtherUids
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.updateNotifySettings#84be5b93 peer:InputNotifyPeer settings:InputPeerNotifySettings = Bool;
type TLAccountUpdateNotifySettings struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputNotifyPeer         `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Settings             *InputPeerNotifySettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLAccountUpdateNotifySettings) Reset()         { *m = TLAccountUpdateNotifySettings{} }
func (m *TLAccountUpdateNotifySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateNotifySettings) ProtoMessage()    {}
func (*TLAccountUpdateNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{27}
}
func (m *TLAccountUpdateNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdateNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateNotifySettings.Merge(dst, src)
}
func (m *TLAccountUpdateNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateNotifySettings proto.InternalMessageInfo

func (m *TLAccountUpdateNotifySettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateNotifySettings) GetPeer() *InputNotifyPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLAccountUpdateNotifySettings) GetSettings() *InputPeerNotifySettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.getNotifySettings#12b3ad31 peer:InputNotifyPeer = PeerNotifySettings;
type TLAccountGetNotifySettings struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputNotifyPeer `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLAccountGetNotifySettings) Reset()         { *m = TLAccountGetNotifySettings{} }
func (m *TLAccountGetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetNotifySettings) ProtoMessage()    {}
func (*TLAccountGetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{28}
}
func (m *TLAccountGetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetNotifySettings.Merge(dst, src)
}
func (m *TLAccountGetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetNotifySettings proto.InternalMessageInfo

func (m *TLAccountGetNotifySettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetNotifySettings) GetPeer() *InputNotifyPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.resetNotifySettings#db7e1747 = Bool;
type TLAccountResetNotifySettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetNotifySettings) Reset()         { *m = TLAccountResetNotifySettings{} }
func (m *TLAccountResetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetNotifySettings) ProtoMessage()    {}
func (*TLAccountResetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{29}
}
func (m *TLAccountResetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountResetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetNotifySettings.Merge(dst, src)
}
func (m *TLAccountResetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetNotifySettings proto.InternalMessageInfo

func (m *TLAccountResetNotifySettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.updateProfile#78515775 flags:# first_name:flags.0?string last_name:flags.1?string about:flags.2?string = User;
type TLAccountUpdateProfile struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FirstName            *types.StringValue `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             *types.StringValue `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	About                *types.StringValue `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountUpdateProfile) Reset()         { *m = TLAccountUpdateProfile{} }
func (m *TLAccountUpdateProfile) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateProfile) ProtoMessage()    {}
func (*TLAccountUpdateProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{30}
}
func (m *TLAccountUpdateProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdateProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateProfile.Merge(dst, src)
}
func (m *TLAccountUpdateProfile) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateProfile.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateProfile proto.InternalMessageInfo

func (m *TLAccountUpdateProfile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateProfile) GetFirstName() *types.StringValue {
	if m != nil {
		return m.FirstName
	}
	return nil
}

func (m *TLAccountUpdateProfile) GetLastName() *types.StringValue {
	if m != nil {
		return m.LastName
	}
	return nil
}

func (m *TLAccountUpdateProfile) GetAbout() *types.StringValue {
	if m != nil {
		return m.About
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.updateStatus#6628562c offline:Bool = Bool;
type TLAccountUpdateStatus struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Offline              *Bool         `protobuf:"bytes,2,opt,name=offline,proto3" json:"offline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdateStatus) Reset()         { *m = TLAccountUpdateStatus{} }
func (m *TLAccountUpdateStatus) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateStatus) ProtoMessage()    {}
func (*TLAccountUpdateStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{31}
}
func (m *TLAccountUpdateStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdateStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateStatus.Merge(dst, src)
}
func (m *TLAccountUpdateStatus) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateStatus proto.InternalMessageInfo

func (m *TLAccountUpdateStatus) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateStatus) GetOffline() *Bool {
	if m != nil {
		return m.Offline
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.getWallPapers#aabb1763 hash:int = account.WallPapers;
type TLAccountGetWallPapersAABB1763 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetWallPapersAABB1763) Reset()         { *m = TLAccountGetWallPapersAABB1763{} }
func (m *TLAccountGetWallPapersAABB1763) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetWallPapersAABB1763) ProtoMessage()    {}
func (*TLAccountGetWallPapersAABB1763) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{32}
}
func (m *TLAccountGetWallPapersAABB1763) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetWallPapersAABB1763) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetWallPapersAABB1763.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetWallPapersAABB1763) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetWallPapersAABB1763.Merge(dst, src)
}
func (m *TLAccountGetWallPapersAABB1763) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetWallPapersAABB1763) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetWallPapersAABB1763.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetWallPapersAABB1763 proto.InternalMessageInfo

func (m *TLAccountGetWallPapersAABB1763) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetWallPapersAABB1763) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// account.reportPeer#ae189d5f peer:InputPeer reason:ReportReason = Bool;
type TLAccountReportPeer struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Reason               *ReportReason `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountReportPeer) Reset()         { *m = TLAccountReportPeer{} }
func (m *TLAccountReportPeer) String() string { return proto.CompactTextString(m) }
func (*TLAccountReportPeer) ProtoMessage()    {}
func (*TLAccountReportPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{33}
}
func (m *TLAccountReportPeer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountReportPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountReportPeer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountReportPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountReportPeer.Merge(dst, src)
}
func (m *TLAccountReportPeer) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountReportPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountReportPeer.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountReportPeer proto.InternalMessageInfo

func (m *TLAccountReportPeer) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountReportPeer) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLAccountReportPeer) GetReason() *ReportReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.checkUsername#2714d86c username:string = Bool;
type TLAccountCheckUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Username             string        `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountCheckUsername) Reset()         { *m = TLAccountCheckUsername{} }
func (m *TLAccountCheckUsername) String() string { return proto.CompactTextString(m) }
func (*TLAccountCheckUsername) ProtoMessage()    {}
func (*TLAccountCheckUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{34}
}
func (m *TLAccountCheckUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountCheckUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountCheckUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountCheckUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountCheckUsername.Merge(dst, src)
}
func (m *TLAccountCheckUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountCheckUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountCheckUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountCheckUsername proto.InternalMessageInfo

func (m *TLAccountCheckUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountCheckUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.updateUsername#3e0bdd7c username:string = User;
type TLAccountUpdateUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Username             string        `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdateUsername) Reset()         { *m = TLAccountUpdateUsername{} }
func (m *TLAccountUpdateUsername) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateUsername) ProtoMessage()    {}
func (*TLAccountUpdateUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{35}
}
func (m *TLAccountUpdateUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdateUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateUsername.Merge(dst, src)
}
func (m *TLAccountUpdateUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateUsername proto.InternalMessageInfo

func (m *TLAccountUpdateUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.getPrivacy#dadbc950 key:InputPrivacyKey = account.PrivacyRules;
type TLAccountGetPrivacy struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Key                  *InputPrivacyKey `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLAccountGetPrivacy) Reset()         { *m = TLAccountGetPrivacy{} }
func (m *TLAccountGetPrivacy) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetPrivacy) ProtoMessage()    {}
func (*TLAccountGetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{36}
}
func (m *TLAccountGetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetPrivacy.Merge(dst, src)
}
func (m *TLAccountGetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetPrivacy proto.InternalMessageInfo

func (m *TLAccountGetPrivacy) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetPrivacy) GetKey() *InputPrivacyKey {
	if m != nil {
		return m.Key
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.setPrivacy#c9f81ce8 key:InputPrivacyKey rules:Vector<InputPrivacyRule> = account.PrivacyRules;
type TLAccountSetPrivacy struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Key                  *InputPrivacyKey    `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Rules                []*InputPrivacyRule `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLAccountSetPrivacy) Reset()         { *m = TLAccountSetPrivacy{} }
func (m *TLAccountSetPrivacy) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetPrivacy) ProtoMessage()    {}
func (*TLAccountSetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{37}
}
func (m *TLAccountSetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetPrivacy.Merge(dst, src)
}
func (m *TLAccountSetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetPrivacy proto.InternalMessageInfo

func (m *TLAccountSetPrivacy) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetPrivacy) GetKey() *InputPrivacyKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *TLAccountSetPrivacy) GetRules() []*InputPrivacyRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.deleteAccount#418d4e0b reason:string = Bool;
type TLAccountDeleteAccount struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Reason               string        `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountDeleteAccount) Reset()         { *m = TLAccountDeleteAccount{} }
func (m *TLAccountDeleteAccount) String() string { return proto.CompactTextString(m) }
func (*TLAccountDeleteAccount) ProtoMessage()    {}
func (*TLAccountDeleteAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{38}
}
func (m *TLAccountDeleteAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountDeleteAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountDeleteAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountDeleteAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountDeleteAccount.Merge(dst, src)
}
func (m *TLAccountDeleteAccount) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountDeleteAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountDeleteAccount.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountDeleteAccount proto.InternalMessageInfo

func (m *TLAccountDeleteAccount) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountDeleteAccount) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.getAccountTTL#8fc711d = AccountDaysTTL;
type TLAccountGetAccountTTL struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetAccountTTL) Reset()         { *m = TLAccountGetAccountTTL{} }
func (m *TLAccountGetAccountTTL) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAccountTTL) ProtoMessage()    {}
func (*TLAccountGetAccountTTL) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{39}
}
func (m *TLAccountGetAccountTTL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAccountTTL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAccountTTL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetAccountTTL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAccountTTL.Merge(dst, src)
}
func (m *TLAccountGetAccountTTL) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAccountTTL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAccountTTL.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAccountTTL proto.InternalMessageInfo

func (m *TLAccountGetAccountTTL) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.setAccountTTL#2442485e ttl:AccountDaysTTL = Bool;
type TLAccountSetAccountTTL struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Ttl                  *AccountDaysTTL `protobuf:"bytes,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLAccountSetAccountTTL) Reset()         { *m = TLAccountSetAccountTTL{} }
func (m *TLAccountSetAccountTTL) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetAccountTTL) ProtoMessage()    {}
func (*TLAccountSetAccountTTL) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{40}
}
func (m *TLAccountSetAccountTTL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetAccountTTL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetAccountTTL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSetAccountTTL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetAccountTTL.Merge(dst, src)
}
func (m *TLAccountSetAccountTTL) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetAccountTTL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetAccountTTL.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetAccountTTL proto.InternalMessageInfo

func (m *TLAccountSetAccountTTL) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetAccountTTL) GetTtl() *AccountDaysTTL {
	if m != nil {
		return m.Ttl
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.sendChangePhoneCode#82574ae5 phone_number:string settings:CodeSettings = auth.SentCode;
type TLAccountSendChangePhoneCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	AllowFlashcall       bool          `protobuf:"varint,4,opt,name=allow_flashcall,json=allowFlashcall,proto3" json:"allow_flashcall,omitempty"`
	CurrentNumber        *Bool         `protobuf:"bytes,5,opt,name=current_number,json=currentNumber,proto3" json:"current_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendChangePhoneCode) Reset()         { *m = TLAccountSendChangePhoneCode{} }
func (m *TLAccountSendChangePhoneCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendChangePhoneCode) ProtoMessage()    {}
func (*TLAccountSendChangePhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{41}
}
func (m *TLAccountSendChangePhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendChangePhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendChangePhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSendChangePhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendChangePhoneCode.Merge(dst, src)
}
func (m *TLAccountSendChangePhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendChangePhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendChangePhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendChangePhoneCode proto.InternalMessageInfo

func (m *TLAccountSendChangePhoneCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSendChangePhoneCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountSendChangePhoneCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *TLAccountSendChangePhoneCode) GetAllowFlashcall() bool {
	if m != nil {
		return m.AllowFlashcall
	}
	return false
}

func (m *TLAccountSendChangePhoneCode) GetCurrentNumber() *Bool {
	if m != nil {
		return m.CurrentNumber
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.changePhone#70c32edb phone_number:string phone_code_hash:string phone_code:string = User;
type TLAccountChangePhone struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,3,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string        `protobuf:"bytes,4,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountChangePhone) Reset()         { *m = TLAccountChangePhone{} }
func (m *TLAccountChangePhone) String() string { return proto.CompactTextString(m) }
func (*TLAccountChangePhone) ProtoMessage()    {}
func (*TLAccountChangePhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{42}
}
func (m *TLAccountChangePhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountChangePhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountChangePhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountChangePhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountChangePhone.Merge(dst, src)
}
func (m *TLAccountChangePhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountChangePhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountChangePhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountChangePhone proto.InternalMessageInfo

func (m *TLAccountChangePhone) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountChangePhone) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountChangePhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAccountChangePhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.updateDeviceLocked#38df3532 period:int = Bool;
type TLAccountUpdateDeviceLocked struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Period               int32         `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdateDeviceLocked) Reset()         { *m = TLAccountUpdateDeviceLocked{} }
func (m *TLAccountUpdateDeviceLocked) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateDeviceLocked) ProtoMessage()    {}
func (*TLAccountUpdateDeviceLocked) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{43}
}
func (m *TLAccountUpdateDeviceLocked) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateDeviceLocked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateDeviceLocked.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdateDeviceLocked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateDeviceLocked.Merge(dst, src)
}
func (m *TLAccountUpdateDeviceLocked) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateDeviceLocked) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateDeviceLocked.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateDeviceLocked proto.InternalMessageInfo

func (m *TLAccountUpdateDeviceLocked) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateDeviceLocked) GetPeriod() int32 {
	if m != nil {
		return m.Period
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// account.getAuthorizations#e320c158 = account.Authorizations;
type TLAccountGetAuthorizations struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetAuthorizations) Reset()         { *m = TLAccountGetAuthorizations{} }
func (m *TLAccountGetAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAuthorizations) ProtoMessage()    {}
func (*TLAccountGetAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{44}
}
func (m *TLAccountGetAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAuthorizations.Merge(dst, src)
}
func (m *TLAccountGetAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAuthorizations proto.InternalMessageInfo

func (m *TLAccountGetAuthorizations) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.resetAuthorization#df77f3bc hash:long = Bool;
type TLAccountResetAuthorization struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetAuthorization) Reset()         { *m = TLAccountResetAuthorization{} }
func (m *TLAccountResetAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetAuthorization) ProtoMessage()    {}
func (*TLAccountResetAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{45}
}
func (m *TLAccountResetAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountResetAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetAuthorization.Merge(dst, src)
}
func (m *TLAccountResetAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetAuthorization proto.InternalMessageInfo

func (m *TLAccountResetAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountResetAuthorization) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// account.getPassword#548a30f5 = account.Password;
type TLAccountGetPassword struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetPassword) Reset()         { *m = TLAccountGetPassword{} }
func (m *TLAccountGetPassword) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetPassword) ProtoMessage()    {}
func (*TLAccountGetPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{46}
}
func (m *TLAccountGetPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetPassword.Merge(dst, src)
}
func (m *TLAccountGetPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetPassword proto.InternalMessageInfo

func (m *TLAccountGetPassword) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.getPasswordSettings#9cd4eaf9 password:InputCheckPasswordSRP = account.PasswordSettings;
type TLAccountGetPasswordSettings struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	CurrentPasswordHash  []byte                 `protobuf:"bytes,3,opt,name=current_password_hash,json=currentPasswordHash,proto3" json:"current_password_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAccountGetPasswordSettings) Reset()         { *m = TLAccountGetPasswordSettings{} }
func (m *TLAccountGetPasswordSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetPasswordSettings) ProtoMessage()    {}
func (*TLAccountGetPasswordSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{47}
}
func (m *TLAccountGetPasswordSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetPasswordSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetPasswordSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetPasswordSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetPasswordSettings.Merge(dst, src)
}
func (m *TLAccountGetPasswordSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetPasswordSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetPasswordSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetPasswordSettings proto.InternalMessageInfo

func (m *TLAccountGetPasswordSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetPasswordSettings) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *TLAccountGetPasswordSettings) GetCurrentPasswordHash() []byte {
	if m != nil {
		return m.CurrentPasswordHash
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.updatePasswordSettings#a59b102f password:InputCheckPasswordSRP new_settings:account.PasswordInputSettings = Bool;
type TLAccountUpdatePasswordSettings struct {
	Constructor          TLConstructor                  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Password             *InputCheckPasswordSRP         `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	NewSettings          *Account_PasswordInputSettings `protobuf:"bytes,3,opt,name=new_settings,json=newSettings,proto3" json:"new_settings,omitempty"`
	CurrentPasswordHash  []byte                         `protobuf:"bytes,4,opt,name=current_password_hash,json=currentPasswordHash,proto3" json:"current_password_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TLAccountUpdatePasswordSettings) Reset()         { *m = TLAccountUpdatePasswordSettings{} }
func (m *TLAccountUpdatePasswordSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdatePasswordSettings) ProtoMessage()    {}
func (*TLAccountUpdatePasswordSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{48}
}
func (m *TLAccountUpdatePasswordSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdatePasswordSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdatePasswordSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdatePasswordSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdatePasswordSettings.Merge(dst, src)
}
func (m *TLAccountUpdatePasswordSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdatePasswordSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdatePasswordSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdatePasswordSettings proto.InternalMessageInfo

func (m *TLAccountUpdatePasswordSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdatePasswordSettings) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *TLAccountUpdatePasswordSettings) GetNewSettings() *Account_PasswordInputSettings {
	if m != nil {
		return m.NewSettings
	}
	return nil
}

func (m *TLAccountUpdatePasswordSettings) GetCurrentPasswordHash() []byte {
	if m != nil {
		return m.CurrentPasswordHash
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.sendConfirmPhoneCode#1b3faa88 hash:string settings:CodeSettings = auth.SentCode;
type TLAccountSendConfirmPhoneCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 string        `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	AllowFlashcall       bool          `protobuf:"varint,4,opt,name=allow_flashcall,json=allowFlashcall,proto3" json:"allow_flashcall,omitempty"`
	CurrentNumber        *Bool         `protobuf:"bytes,5,opt,name=current_number,json=currentNumber,proto3" json:"current_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendConfirmPhoneCode) Reset()         { *m = TLAccountSendConfirmPhoneCode{} }
func (m *TLAccountSendConfirmPhoneCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendConfirmPhoneCode) ProtoMessage()    {}
func (*TLAccountSendConfirmPhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{49}
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendConfirmPhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSendConfirmPhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendConfirmPhoneCode.Merge(dst, src)
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendConfirmPhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendConfirmPhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendConfirmPhoneCode proto.InternalMessageInfo

func (m *TLAccountSendConfirmPhoneCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSendConfirmPhoneCode) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TLAccountSendConfirmPhoneCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *TLAccountSendConfirmPhoneCode) GetAllowFlashcall() bool {
	if m != nil {
		return m.AllowFlashcall
	}
	return false
}

func (m *TLAccountSendConfirmPhoneCode) GetCurrentNumber() *Bool {
	if m != nil {
		return m.CurrentNumber
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.confirmPhone#5f2178c3 phone_code_hash:string phone_code:string = Bool;
type TLAccountConfirmPhone struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,2,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string        `protobuf:"bytes,3,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountConfirmPhone) Reset()         { *m = TLAccountConfirmPhone{} }
func (m *TLAccountConfirmPhone) String() string { return proto.CompactTextString(m) }
func (*TLAccountConfirmPhone) ProtoMessage()    {}
func (*TLAccountConfirmPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{50}
}
func (m *TLAccountConfirmPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountConfirmPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountConfirmPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountConfirmPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountConfirmPhone.Merge(dst, src)
}
func (m *TLAccountConfirmPhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountConfirmPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountConfirmPhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountConfirmPhone proto.InternalMessageInfo

func (m *TLAccountConfirmPhone) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountConfirmPhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAccountConfirmPhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.getTmpPassword#449e0b51 password:InputCheckPasswordSRP period:int = account.TmpPassword;
type TLAccountGetTmpPassword struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Period               int32                  `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	PasswordHash         []byte                 `protobuf:"bytes,4,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAccountGetTmpPassword) Reset()         { *m = TLAccountGetTmpPassword{} }
func (m *TLAccountGetTmpPassword) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetTmpPassword) ProtoMessage()    {}
func (*TLAccountGetTmpPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{51}
}
func (m *TLAccountGetTmpPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetTmpPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetTmpPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetTmpPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetTmpPassword.Merge(dst, src)
}
func (m *TLAccountGetTmpPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetTmpPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetTmpPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetTmpPassword proto.InternalMessageInfo

func (m *TLAccountGetTmpPassword) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetTmpPassword) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *TLAccountGetTmpPassword) GetPeriod() int32 {
	if m != nil {
		return m.Period
	}
	return 0
}

func (m *TLAccountGetTmpPassword) GetPasswordHash() []byte {
	if m != nil {
		return m.PasswordHash
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.getWebAuthorizations#182e6d6f = account.WebAuthorizations;
type TLAccountGetWebAuthorizations struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetWebAuthorizations) Reset()         { *m = TLAccountGetWebAuthorizations{} }
func (m *TLAccountGetWebAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetWebAuthorizations) ProtoMessage()    {}
func (*TLAccountGetWebAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{52}
}
func (m *TLAccountGetWebAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetWebAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetWebAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetWebAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetWebAuthorizations.Merge(dst, src)
}
func (m *TLAccountGetWebAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetWebAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetWebAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetWebAuthorizations proto.InternalMessageInfo

func (m *TLAccountGetWebAuthorizations) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.resetWebAuthorization#2d01b9ef hash:long = Bool;
type TLAccountResetWebAuthorization struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetWebAuthorization) Reset()         { *m = TLAccountResetWebAuthorization{} }
func (m *TLAccountResetWebAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetWebAuthorization) ProtoMessage()    {}
func (*TLAccountResetWebAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{53}
}
func (m *TLAccountResetWebAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetWebAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetWebAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountResetWebAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetWebAuthorization.Merge(dst, src)
}
func (m *TLAccountResetWebAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetWebAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetWebAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetWebAuthorization proto.InternalMessageInfo

func (m *TLAccountResetWebAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountResetWebAuthorization) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// account.resetWebAuthorizations#682d2594 = Bool;
type TLAccountResetWebAuthorizations struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetWebAuthorizations) Reset()         { *m = TLAccountResetWebAuthorizations{} }
func (m *TLAccountResetWebAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetWebAuthorizations) ProtoMessage()    {}
func (*TLAccountResetWebAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{54}
}
func (m *TLAccountResetWebAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetWebAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetWebAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountResetWebAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetWebAuthorizations.Merge(dst, src)
}
func (m *TLAccountResetWebAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetWebAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetWebAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetWebAuthorizations proto.InternalMessageInfo

func (m *TLAccountResetWebAuthorizations) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.getAllSecureValues#b288bc7d = Vector<SecureValue>;
type TLAccountGetAllSecureValues struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetAllSecureValues) Reset()         { *m = TLAccountGetAllSecureValues{} }
func (m *TLAccountGetAllSecureValues) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAllSecureValues) ProtoMessage()    {}
func (*TLAccountGetAllSecureValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{55}
}
func (m *TLAccountGetAllSecureValues) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAllSecureValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAllSecureValues.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetAllSecureValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAllSecureValues.Merge(dst, src)
}
func (m *TLAccountGetAllSecureValues) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAllSecureValues) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAllSecureValues.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAllSecureValues proto.InternalMessageInfo

func (m *TLAccountGetAllSecureValues) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.getSecureValue#73665bc2 types:Vector<SecureValueType> = Vector<SecureValue>;
type TLAccountGetSecureValue struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Types                []*SecureValueType `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountGetSecureValue) Reset()         { *m = TLAccountGetSecureValue{} }
func (m *TLAccountGetSecureValue) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetSecureValue) ProtoMessage()    {}
func (*TLAccountGetSecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{56}
}
func (m *TLAccountGetSecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetSecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetSecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetSecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetSecureValue.Merge(dst, src)
}
func (m *TLAccountGetSecureValue) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetSecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetSecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetSecureValue proto.InternalMessageInfo

func (m *TLAccountGetSecureValue) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetSecureValue) GetTypes() []*SecureValueType {
	if m != nil {
		return m.Types
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.saveSecureValue#899fe31d value:InputSecureValue secure_secret_id:long = SecureValue;
type TLAccountSaveSecureValue struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Value                *InputSecureValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	SecureSecretId       int64             `protobuf:"varint,3,opt,name=secure_secret_id,json=secureSecretId,proto3" json:"secure_secret_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLAccountSaveSecureValue) Reset()         { *m = TLAccountSaveSecureValue{} }
func (m *TLAccountSaveSecureValue) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveSecureValue) ProtoMessage()    {}
func (*TLAccountSaveSecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{57}
}
func (m *TLAccountSaveSecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveSecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveSecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSaveSecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveSecureValue.Merge(dst, src)
}
func (m *TLAccountSaveSecureValue) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveSecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveSecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveSecureValue proto.InternalMessageInfo

func (m *TLAccountSaveSecureValue) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSaveSecureValue) GetValue() *InputSecureValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TLAccountSaveSecureValue) GetSecureSecretId() int64 {
	if m != nil {
		return m.SecureSecretId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// account.deleteSecureValue#b880bc4b types:Vector<SecureValueType> = Bool;
type TLAccountDeleteSecureValue struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Types                []*SecureValueType `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountDeleteSecureValue) Reset()         { *m = TLAccountDeleteSecureValue{} }
func (m *TLAccountDeleteSecureValue) String() string { return proto.CompactTextString(m) }
func (*TLAccountDeleteSecureValue) ProtoMessage()    {}
func (*TLAccountDeleteSecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{58}
}
func (m *TLAccountDeleteSecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountDeleteSecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountDeleteSecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountDeleteSecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountDeleteSecureValue.Merge(dst, src)
}
func (m *TLAccountDeleteSecureValue) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountDeleteSecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountDeleteSecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountDeleteSecureValue proto.InternalMessageInfo

func (m *TLAccountDeleteSecureValue) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountDeleteSecureValue) GetTypes() []*SecureValueType {
	if m != nil {
		return m.Types
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.getAuthorizationForm#b86ba8e1 bot_id:int scope:string public_key:string = account.AuthorizationForm;
type TLAccountGetAuthorizationForm struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	BotId                int32         `protobuf:"varint,2,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Scope                string        `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	PublicKey            string        `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetAuthorizationForm) Reset()         { *m = TLAccountGetAuthorizationForm{} }
func (m *TLAccountGetAuthorizationForm) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAuthorizationForm) ProtoMessage()    {}
func (*TLAccountGetAuthorizationForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{59}
}
func (m *TLAccountGetAuthorizationForm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAuthorizationForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAuthorizationForm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetAuthorizationForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAuthorizationForm.Merge(dst, src)
}
func (m *TLAccountGetAuthorizationForm) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAuthorizationForm) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAuthorizationForm.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAuthorizationForm proto.InternalMessageInfo

func (m *TLAccountGetAuthorizationForm) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetAuthorizationForm) GetBotId() int32 {
	if m != nil {
		return m.BotId
	}
	return 0
}

func (m *TLAccountGetAuthorizationForm) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *TLAccountGetAuthorizationForm) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.acceptAuthorization#e7027c94 bot_id:int scope:string public_key:string value_hashes:Vector<SecureValueHash> credentials:SecureCredentialsEncrypted = Bool;
type TLAccountAcceptAuthorization struct {
	Constructor          TLConstructor               `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	BotId                int32                       `protobuf:"varint,2,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Scope                string                      `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	PublicKey            string                      `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	ValueHashes          []*SecureValueHash          `protobuf:"bytes,5,rep,name=value_hashes,json=valueHashes,proto3" json:"value_hashes,omitempty"`
	Credentials          *SecureCredentialsEncrypted `protobuf:"bytes,6,opt,name=credentials,proto3" json:"credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TLAccountAcceptAuthorization) Reset()         { *m = TLAccountAcceptAuthorization{} }
func (m *TLAccountAcceptAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAccountAcceptAuthorization) ProtoMessage()    {}
func (*TLAccountAcceptAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{60}
}
func (m *TLAccountAcceptAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountAcceptAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountAcceptAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountAcceptAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountAcceptAuthorization.Merge(dst, src)
}
func (m *TLAccountAcceptAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountAcceptAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountAcceptAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountAcceptAuthorization proto.InternalMessageInfo

func (m *TLAccountAcceptAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountAcceptAuthorization) GetBotId() int32 {
	if m != nil {
		return m.BotId
	}
	return 0
}

func (m *TLAccountAcceptAuthorization) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *TLAccountAcceptAuthorization) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *TLAccountAcceptAuthorization) GetValueHashes() []*SecureValueHash {
	if m != nil {
		return m.ValueHashes
	}
	return nil
}

func (m *TLAccountAcceptAuthorization) GetCredentials() *SecureCredentialsEncrypted {
	if m != nil {
		return m.Credentials
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.sendVerifyPhoneCode#a5a356f9 phone_number:string settings:CodeSettings = auth.SentCode;
type TLAccountSendVerifyPhoneCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	AllowFlashcall       bool          `protobuf:"varint,4,opt,name=allow_flashcall,json=allowFlashcall,proto3" json:"allow_flashcall,omitempty"`
	CurrentNumber        *Bool         `protobuf:"bytes,5,opt,name=current_number,json=currentNumber,proto3" json:"current_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendVerifyPhoneCode) Reset()         { *m = TLAccountSendVerifyPhoneCode{} }
func (m *TLAccountSendVerifyPhoneCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendVerifyPhoneCode) ProtoMessage()    {}
func (*TLAccountSendVerifyPhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{61}
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendVerifyPhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSendVerifyPhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendVerifyPhoneCode.Merge(dst, src)
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendVerifyPhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendVerifyPhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendVerifyPhoneCode proto.InternalMessageInfo

func (m *TLAccountSendVerifyPhoneCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSendVerifyPhoneCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountSendVerifyPhoneCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *TLAccountSendVerifyPhoneCode) GetAllowFlashcall() bool {
	if m != nil {
		return m.AllowFlashcall
	}
	return false
}

func (m *TLAccountSendVerifyPhoneCode) GetCurrentNumber() *Bool {
	if m != nil {
		return m.CurrentNumber
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.verifyPhone#4dd3a7f6 phone_number:string phone_code_hash:string phone_code:string = Bool;
type TLAccountVerifyPhone struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,3,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string        `protobuf:"bytes,4,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountVerifyPhone) Reset()         { *m = TLAccountVerifyPhone{} }
func (m *TLAccountVerifyPhone) String() string { return proto.CompactTextString(m) }
func (*TLAccountVerifyPhone) ProtoMessage()    {}
func (*TLAccountVerifyPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{62}
}
func (m *TLAccountVerifyPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountVerifyPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountVerifyPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountVerifyPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountVerifyPhone.Merge(dst, src)
}
func (m *TLAccountVerifyPhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountVerifyPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountVerifyPhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountVerifyPhone proto.InternalMessageInfo

func (m *TLAccountVerifyPhone) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountVerifyPhone) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountVerifyPhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAccountVerifyPhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.sendVerifyEmailCode#7011509f email:string = account.SentEmailCode;
type TLAccountSendVerifyEmailCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Email                string        `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendVerifyEmailCode) Reset()         { *m = TLAccountSendVerifyEmailCode{} }
func (m *TLAccountSendVerifyEmailCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendVerifyEmailCode) ProtoMessage()    {}
func (*TLAccountSendVerifyEmailCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{63}
}
func (m *TLAccountSendVerifyEmailCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendVerifyEmailCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendVerifyEmailCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSendVerifyEmailCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendVerifyEmailCode.Merge(dst, src)
}
func (m *TLAccountSendVerifyEmailCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendVerifyEmailCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendVerifyEmailCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendVerifyEmailCode proto.InternalMessageInfo

func (m *TLAccountSendVerifyEmailCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSendVerifyEmailCode) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.verifyEmail#ecba39db email:string code:string = Bool;
type TLAccountVerifyEmail struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Email                string        `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Code                 string        `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountVerifyEmail) Reset()         { *m = TLAccountVerifyEmail{} }
func (m *TLAccountVerifyEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountVerifyEmail) ProtoMessage()    {}
func (*TLAccountVerifyEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{64}
}
func (m *TLAccountVerifyEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountVerifyEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountVerifyEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountVerifyEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountVerifyEmail.Merge(dst, src)
}
func (m *TLAccountVerifyEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountVerifyEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountVerifyEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountVerifyEmail proto.InternalMessageInfo

func (m *TLAccountVerifyEmail) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountVerifyEmail) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *TLAccountVerifyEmail) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.initTakeoutSession#f05b4804 flags:# contacts:flags.0?true message_users:flags.1?true message_chats:flags.2?true message_megagroups:flags.3?true message_channels:flags.4?true files:flags.5?true file_max_size:flags.5?int = account.Takeout;
type TLAccountInitTakeoutSession struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Contacts             bool              `protobuf:"varint,2,opt,name=contacts,proto3" json:"contacts,omitempty"`
	MessageUsers         bool              `protobuf:"varint,3,opt,name=message_users,json=messageUsers,proto3" json:"message_users,omitempty"`
	MessageChats         bool              `protobuf:"varint,4,opt,name=message_chats,json=messageChats,proto3" json:"message_chats,omitempty"`
	MessageMegagroups    bool              `protobuf:"varint,5,opt,name=message_megagroups,json=messageMegagroups,proto3" json:"message_megagroups,omitempty"`
	MessageChannels      bool              `protobuf:"varint,6,opt,name=message_channels,json=messageChannels,proto3" json:"message_channels,omitempty"`
	Files                bool              `protobuf:"varint,7,opt,name=files,proto3" json:"files,omitempty"`
	FileMaxSize          *types.Int32Value `protobuf:"bytes,8,opt,name=file_max_size,json=fileMaxSize,proto3" json:"file_max_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLAccountInitTakeoutSession) Reset()         { *m = TLAccountInitTakeoutSession{} }
func (m *TLAccountInitTakeoutSession) String() string { return proto.CompactTextString(m) }
func (*TLAccountInitTakeoutSession) ProtoMessage()    {}
func (*TLAccountInitTakeoutSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{65}
}
func (m *TLAccountInitTakeoutSession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountInitTakeoutSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountInitTakeoutSession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountInitTakeoutSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountInitTakeoutSession.Merge(dst, src)
}
func (m *TLAccountInitTakeoutSession) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountInitTakeoutSession) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountInitTakeoutSession.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountInitTakeoutSession proto.InternalMessageInfo

func (m *TLAccountInitTakeoutSession) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountInitTakeoutSession) GetContacts() bool {
	if m != nil {
		return m.Contacts
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageUsers() bool {
	if m != nil {
		return m.MessageUsers
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageChats() bool {
	if m != nil {
		return m.MessageChats
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageMegagroups() bool {
	if m != nil {
		return m.MessageMegagroups
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageChannels() bool {
	if m != nil {
		return m.MessageChannels
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetFiles() bool {
	if m != nil {
		return m.Files
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetFileMaxSize() *types.Int32Value {
	if m != nil {
		return m.FileMaxSize
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.finishTakeoutSession#1d2652ee flags:# success:flags.0?true = Bool;
type TLAccountFinishTakeoutSession struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Success              bool          `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountFinishTakeoutSession) Reset()         { *m = TLAccountFinishTakeoutSession{} }
func (m *TLAccountFinishTakeoutSession) String() string { return proto.CompactTextString(m) }
func (*TLAccountFinishTakeoutSession) ProtoMessage()    {}
func (*TLAccountFinishTakeoutSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{66}
}
func (m *TLAccountFinishTakeoutSession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountFinishTakeoutSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountFinishTakeoutSession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountFinishTakeoutSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountFinishTakeoutSession.Merge(dst, src)
}
func (m *TLAccountFinishTakeoutSession) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountFinishTakeoutSession) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountFinishTakeoutSession.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountFinishTakeoutSession proto.InternalMessageInfo

func (m *TLAccountFinishTakeoutSession) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountFinishTakeoutSession) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// --------------------------------------------------------------------------------------------
// account.confirmPasswordEmail#8fdf1920 code:string = Bool;
type TLAccountConfirmPasswordEmail struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Code                 string        `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountConfirmPasswordEmail) Reset()         { *m = TLAccountConfirmPasswordEmail{} }
func (m *TLAccountConfirmPasswordEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountConfirmPasswordEmail) ProtoMessage()    {}
func (*TLAccountConfirmPasswordEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{67}
}
func (m *TLAccountConfirmPasswordEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountConfirmPasswordEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountConfirmPasswordEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountConfirmPasswordEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountConfirmPasswordEmail.Merge(dst, src)
}
func (m *TLAccountConfirmPasswordEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountConfirmPasswordEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountConfirmPasswordEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountConfirmPasswordEmail proto.InternalMessageInfo

func (m *TLAccountConfirmPasswordEmail) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountConfirmPasswordEmail) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.resendPasswordEmail#7a7f2a15 = Bool;
type TLAccountResendPasswordEmail struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResendPasswordEmail) Reset()         { *m = TLAccountResendPasswordEmail{} }
func (m *TLAccountResendPasswordEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountResendPasswordEmail) ProtoMessage()    {}
func (*TLAccountResendPasswordEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{68}
}
func (m *TLAccountResendPasswordEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResendPasswordEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResendPasswordEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountResendPasswordEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResendPasswordEmail.Merge(dst, src)
}
func (m *TLAccountResendPasswordEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResendPasswordEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResendPasswordEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResendPasswordEmail proto.InternalMessageInfo

func (m *TLAccountResendPasswordEmail) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.cancelPasswordEmail#c1cbd5b6 = Bool;
type TLAccountCancelPasswordEmail struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountCancelPasswordEmail) Reset()         { *m = TLAccountCancelPasswordEmail{} }
func (m *TLAccountCancelPasswordEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountCancelPasswordEmail) ProtoMessage()    {}
func (*TLAccountCancelPasswordEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{69}
}
func (m *TLAccountCancelPasswordEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountCancelPasswordEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountCancelPasswordEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountCancelPasswordEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountCancelPasswordEmail.Merge(dst, src)
}
func (m *TLAccountCancelPasswordEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountCancelPasswordEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountCancelPasswordEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountCancelPasswordEmail proto.InternalMessageInfo

func (m *TLAccountCancelPasswordEmail) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.getContactSignUpNotification#9f07c728 = Bool;
type TLAccountGetContactSignUpNotification struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetContactSignUpNotification) Reset()         { *m = TLAccountGetContactSignUpNotification{} }
func (m *TLAccountGetContactSignUpNotification) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetContactSignUpNotification) ProtoMessage()    {}
func (*TLAccountGetContactSignUpNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{70}
}
func (m *TLAccountGetContactSignUpNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetContactSignUpNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetContactSignUpNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetContactSignUpNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetContactSignUpNotification.Merge(dst, src)
}
func (m *TLAccountGetContactSignUpNotification) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetContactSignUpNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetContactSignUpNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetContactSignUpNotification proto.InternalMessageInfo

func (m *TLAccountGetContactSignUpNotification) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.setContactSignUpNotification#cff43f61 silent:Bool = Bool;
type TLAccountSetContactSignUpNotification struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               *Bool         `protobuf:"bytes,2,opt,name=silent,proto3" json:"silent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSetContactSignUpNotification) Reset()         { *m = TLAccountSetContactSignUpNotification{} }
func (m *TLAccountSetContactSignUpNotification) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetContactSignUpNotification) ProtoMessage()    {}
func (*TLAccountSetContactSignUpNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{71}
}
func (m *TLAccountSetContactSignUpNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetContactSignUpNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetContactSignUpNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSetContactSignUpNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetContactSignUpNotification.Merge(dst, src)
}
func (m *TLAccountSetContactSignUpNotification) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetContactSignUpNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetContactSignUpNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetContactSignUpNotification proto.InternalMessageInfo

func (m *TLAccountSetContactSignUpNotification) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetContactSignUpNotification) GetSilent() *Bool {
	if m != nil {
		return m.Silent
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.getNotifyExceptions#53577479 flags:# compare_sound:flags.1?true peer:flags.0?InputNotifyPeer = Updates;
type TLAccountGetNotifyExceptions struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	CompareSound         bool             `protobuf:"varint,2,opt,name=compare_sound,json=compareSound,proto3" json:"compare_sound,omitempty"`
	Peer                 *InputNotifyPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLAccountGetNotifyExceptions) Reset()         { *m = TLAccountGetNotifyExceptions{} }
func (m *TLAccountGetNotifyExceptions) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetNotifyExceptions) ProtoMessage()    {}
func (*TLAccountGetNotifyExceptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{72}
}
func (m *TLAccountGetNotifyExceptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetNotifyExceptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetNotifyExceptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetNotifyExceptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetNotifyExceptions.Merge(dst, src)
}
func (m *TLAccountGetNotifyExceptions) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetNotifyExceptions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetNotifyExceptions.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetNotifyExceptions proto.InternalMessageInfo

func (m *TLAccountGetNotifyExceptions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetNotifyExceptions) GetCompareSound() bool {
	if m != nil {
		return m.CompareSound
	}
	return false
}

func (m *TLAccountGetNotifyExceptions) GetPeer() *InputNotifyPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.getWallPaper#fc8ddbea wallpaper:InputWallPaper = WallPaper;
type TLAccountGetWallPaper struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Wallpaper            *InputWallPaper `protobuf:"bytes,2,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLAccountGetWallPaper) Reset()         { *m = TLAccountGetWallPaper{} }
func (m *TLAccountGetWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetWallPaper) ProtoMessage()    {}
func (*TLAccountGetWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{73}
}
func (m *TLAccountGetWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetWallPaper.Merge(dst, src)
}
func (m *TLAccountGetWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetWallPaper proto.InternalMessageInfo

func (m *TLAccountGetWallPaper) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetWallPaper) GetWallpaper() *InputWallPaper {
	if m != nil {
		return m.Wallpaper
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.uploadWallPaper#dd853661 file:InputFile mime_type:string settings:WallPaperSettings = WallPaper;
type TLAccountUploadWallPaper struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	File                 *InputFile         `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	MimeType             string             `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Settings             *WallPaperSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountUploadWallPaper) Reset()         { *m = TLAccountUploadWallPaper{} }
func (m *TLAccountUploadWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountUploadWallPaper) ProtoMessage()    {}
func (*TLAccountUploadWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{74}
}
func (m *TLAccountUploadWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUploadWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUploadWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUploadWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUploadWallPaper.Merge(dst, src)
}
func (m *TLAccountUploadWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUploadWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUploadWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUploadWallPaper proto.InternalMessageInfo

func (m *TLAccountUploadWallPaper) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUploadWallPaper) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLAccountUploadWallPaper) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *TLAccountUploadWallPaper) GetSettings() *WallPaperSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.saveWallPaper#6c5a5b37 wallpaper:InputWallPaper unsave:Bool settings:WallPaperSettings = Bool;
type TLAccountSaveWallPaper struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Wallpaper            *InputWallPaper    `protobuf:"bytes,2,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	Unsave               *Bool              `protobuf:"bytes,3,opt,name=unsave,proto3" json:"unsave,omitempty"`
	Settings             *WallPaperSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountSaveWallPaper) Reset()         { *m = TLAccountSaveWallPaper{} }
func (m *TLAccountSaveWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveWallPaper) ProtoMessage()    {}
func (*TLAccountSaveWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{75}
}
func (m *TLAccountSaveWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSaveWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveWallPaper.Merge(dst, src)
}
func (m *TLAccountSaveWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveWallPaper proto.InternalMessageInfo

func (m *TLAccountSaveWallPaper) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSaveWallPaper) GetWallpaper() *InputWallPaper {
	if m != nil {
		return m.Wallpaper
	}
	return nil
}

func (m *TLAccountSaveWallPaper) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

func (m *TLAccountSaveWallPaper) GetSettings() *WallPaperSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.installWallPaper#feed5769 wallpaper:InputWallPaper settings:WallPaperSettings = Bool;
type TLAccountInstallWallPaper struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Wallpaper            *InputWallPaper    `protobuf:"bytes,2,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	Settings             *WallPaperSettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountInstallWallPaper) Reset()         { *m = TLAccountInstallWallPaper{} }
func (m *TLAccountInstallWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountInstallWallPaper) ProtoMessage()    {}
func (*TLAccountInstallWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{76}
}
func (m *TLAccountInstallWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountInstallWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountInstallWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountInstallWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountInstallWallPaper.Merge(dst, src)
}
func (m *TLAccountInstallWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountInstallWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountInstallWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountInstallWallPaper proto.InternalMessageInfo

func (m *TLAccountInstallWallPaper) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountInstallWallPaper) GetWallpaper() *InputWallPaper {
	if m != nil {
		return m.Wallpaper
	}
	return nil
}

func (m *TLAccountInstallWallPaper) GetSettings() *WallPaperSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.resetWallPapers#bb3b9804 = Bool;
type TLAccountResetWallPapers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetWallPapers) Reset()         { *m = TLAccountResetWallPapers{} }
func (m *TLAccountResetWallPapers) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetWallPapers) ProtoMessage()    {}
func (*TLAccountResetWallPapers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{77}
}
func (m *TLAccountResetWallPapers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetWallPapers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetWallPapers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountResetWallPapers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetWallPapers.Merge(dst, src)
}
func (m *TLAccountResetWallPapers) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetWallPapers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetWallPapers.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetWallPapers proto.InternalMessageInfo

func (m *TLAccountResetWallPapers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.getAutoDownloadSettings#56da0b3f = account.AutoDownloadSettings;
type TLAccountGetAutoDownloadSettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetAutoDownloadSettings) Reset()         { *m = TLAccountGetAutoDownloadSettings{} }
func (m *TLAccountGetAutoDownloadSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAutoDownloadSettings) ProtoMessage()    {}
func (*TLAccountGetAutoDownloadSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{78}
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAutoDownloadSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetAutoDownloadSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAutoDownloadSettings.Merge(dst, src)
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAutoDownloadSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAutoDownloadSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAutoDownloadSettings proto.InternalMessageInfo

func (m *TLAccountGetAutoDownloadSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.saveAutoDownloadSettings#76f36233 flags:# low:flags.0?true high:flags.1?true settings:AutoDownloadSettings = Bool;
type TLAccountSaveAutoDownloadSettings struct {
	Constructor          TLConstructor         `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Low                  bool                  `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
	High                 bool                  `protobuf:"varint,3,opt,name=high,proto3" json:"high,omitempty"`
	Settings             *AutoDownloadSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TLAccountSaveAutoDownloadSettings) Reset()         { *m = TLAccountSaveAutoDownloadSettings{} }
func (m *TLAccountSaveAutoDownloadSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveAutoDownloadSettings) ProtoMessage()    {}
func (*TLAccountSaveAutoDownloadSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{79}
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveAutoDownloadSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSaveAutoDownloadSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveAutoDownloadSettings.Merge(dst, src)
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveAutoDownloadSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveAutoDownloadSettings proto.InternalMessageInfo

func (m *TLAccountSaveAutoDownloadSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSaveAutoDownloadSettings) GetLow() bool {
	if m != nil {
		return m.Low
	}
	return false
}

func (m *TLAccountSaveAutoDownloadSettings) GetHigh() bool {
	if m != nil {
		return m.High
	}
	return false
}

func (m *TLAccountSaveAutoDownloadSettings) GetSettings() *AutoDownloadSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.uploadTheme#1c3db333 flags:# file:InputFile thumb:flags.0?InputFile file_name:string mime_type:string = Document;
type TLAccountUploadTheme struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	File                 *InputFile    `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Thumb                *InputFile    `protobuf:"bytes,3,opt,name=thumb,proto3" json:"thumb,omitempty"`
	FileName             string        `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	MimeType             string        `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUploadTheme) Reset()         { *m = TLAccountUploadTheme{} }
func (m *TLAccountUploadTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountUploadTheme) ProtoMessage()    {}
func (*TLAccountUploadTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{80}
}
func (m *TLAccountUploadTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUploadTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUploadTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUploadTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUploadTheme.Merge(dst, src)
}
func (m *TLAccountUploadTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUploadTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUploadTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUploadTheme proto.InternalMessageInfo

func (m *TLAccountUploadTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUploadTheme) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLAccountUploadTheme) GetThumb() *InputFile {
	if m != nil {
		return m.Thumb
	}
	return nil
}

func (m *TLAccountUploadTheme) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *TLAccountUploadTheme) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.createTheme#8432c21f flags:# slug:string title:string document:flags.2?InputDocument settings:flags.3?InputThemeSettings = Theme;
type TLAccountCreateTheme struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Slug                 string              `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Title                string              `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Document             *InputDocument      `protobuf:"bytes,4,opt,name=document,proto3" json:"document,omitempty"`
	Settings             *InputThemeSettings `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLAccountCreateTheme) Reset()         { *m = TLAccountCreateTheme{} }
func (m *TLAccountCreateTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountCreateTheme) ProtoMessage()    {}
func (*TLAccountCreateTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{81}
}
func (m *TLAccountCreateTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountCreateTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountCreateTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountCreateTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountCreateTheme.Merge(dst, src)
}
func (m *TLAccountCreateTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountCreateTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountCreateTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountCreateTheme proto.InternalMessageInfo

func (m *TLAccountCreateTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountCreateTheme) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *TLAccountCreateTheme) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLAccountCreateTheme) GetDocument() *InputDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *TLAccountCreateTheme) GetSettings() *InputThemeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.updateTheme#5cb367d5 flags:# format:string theme:InputTheme slug:flags.0?string title:flags.1?string document:flags.2?InputDocument settings:flags.3?InputThemeSettings = Theme;
type TLAccountUpdateTheme struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Format               string              `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Theme                *InputTheme         `protobuf:"bytes,3,opt,name=theme,proto3" json:"theme,omitempty"`
	Slug                 *types.StringValue  `protobuf:"bytes,4,opt,name=slug,proto3" json:"slug,omitempty"`
	Title                *types.StringValue  `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Document             *InputDocument      `protobuf:"bytes,6,opt,name=document,proto3" json:"document,omitempty"`
	Settings             *InputThemeSettings `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLAccountUpdateTheme) Reset()         { *m = TLAccountUpdateTheme{} }
func (m *TLAccountUpdateTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateTheme) ProtoMessage()    {}
func (*TLAccountUpdateTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{82}
}
func (m *TLAccountUpdateTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdateTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateTheme.Merge(dst, src)
}
func (m *TLAccountUpdateTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateTheme proto.InternalMessageInfo

func (m *TLAccountUpdateTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateTheme) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *TLAccountUpdateTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetSlug() *types.StringValue {
	if m != nil {
		return m.Slug
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetTitle() *types.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetDocument() *InputDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetSettings() *InputThemeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.saveTheme#f257106c theme:InputTheme unsave:Bool = Bool;
type TLAccountSaveTheme struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Theme                *InputTheme   `protobuf:"bytes,2,opt,name=theme,proto3" json:"theme,omitempty"`
	Unsave               *Bool         `protobuf:"bytes,3,opt,name=unsave,proto3" json:"unsave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSaveTheme) Reset()         { *m = TLAccountSaveTheme{} }
func (m *TLAccountSaveTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveTheme) ProtoMessage()    {}
func (*TLAccountSaveTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{83}
}
func (m *TLAccountSaveTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSaveTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveTheme.Merge(dst, src)
}
func (m *TLAccountSaveTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveTheme proto.InternalMessageInfo

func (m *TLAccountSaveTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSaveTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountSaveTheme) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.installTheme#7ae43737 flags:# dark:flags.0?true format:flags.1?string theme:flags.1?InputTheme = Bool;
type TLAccountInstallTheme struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Dark                 bool               `protobuf:"varint,2,opt,name=dark,proto3" json:"dark,omitempty"`
	Format               *types.StringValue `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Theme                *InputTheme        `protobuf:"bytes,4,opt,name=theme,proto3" json:"theme,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountInstallTheme) Reset()         { *m = TLAccountInstallTheme{} }
func (m *TLAccountInstallTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountInstallTheme) ProtoMessage()    {}
func (*TLAccountInstallTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{84}
}
func (m *TLAccountInstallTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountInstallTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountInstallTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountInstallTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountInstallTheme.Merge(dst, src)
}
func (m *TLAccountInstallTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountInstallTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountInstallTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountInstallTheme proto.InternalMessageInfo

func (m *TLAccountInstallTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountInstallTheme) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLAccountInstallTheme) GetFormat() *types.StringValue {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *TLAccountInstallTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.getTheme#8d9d742b format:string theme:InputTheme document_id:long = Theme;
type TLAccountGetTheme struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Format               string        `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Theme                *InputTheme   `protobuf:"bytes,3,opt,name=theme,proto3" json:"theme,omitempty"`
	DocumentId           int64         `protobuf:"varint,4,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetTheme) Reset()         { *m = TLAccountGetTheme{} }
func (m *TLAccountGetTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetTheme) ProtoMessage()    {}
func (*TLAccountGetTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{85}
}
func (m *TLAccountGetTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetTheme.Merge(dst, src)
}
func (m *TLAccountGetTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetTheme proto.InternalMessageInfo

func (m *TLAccountGetTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetTheme) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *TLAccountGetTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountGetTheme) GetDocumentId() int64 {
	if m != nil {
		return m.DocumentId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// account.getThemes#285946f8 format:string hash:int = account.Themes;
type TLAccountGetThemes struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Format               string        `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Hash                 int32         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetThemes) Reset()         { *m = TLAccountGetThemes{} }
func (m *TLAccountGetThemes) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetThemes) ProtoMessage()    {}
func (*TLAccountGetThemes) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{86}
}
func (m *TLAccountGetThemes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetThemes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetThemes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetThemes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetThemes.Merge(dst, src)
}
func (m *TLAccountGetThemes) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetThemes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetThemes.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetThemes proto.InternalMessageInfo

func (m *TLAccountGetThemes) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetThemes) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *TLAccountGetThemes) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// account.setContentSettings#b574b16b flags:# sensitive_enabled:flags.0?true = Bool;
type TLAccountSetContentSettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	SensitiveEnabled     bool          `protobuf:"varint,2,opt,name=sensitive_enabled,json=sensitiveEnabled,proto3" json:"sensitive_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSetContentSettings) Reset()         { *m = TLAccountSetContentSettings{} }
func (m *TLAccountSetContentSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetContentSettings) ProtoMessage()    {}
func (*TLAccountSetContentSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{87}
}
func (m *TLAccountSetContentSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetContentSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetContentSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSetContentSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetContentSettings.Merge(dst, src)
}
func (m *TLAccountSetContentSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetContentSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetContentSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetContentSettings proto.InternalMessageInfo

func (m *TLAccountSetContentSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetContentSettings) GetSensitiveEnabled() bool {
	if m != nil {
		return m.SensitiveEnabled
	}
	return false
}

// --------------------------------------------------------------------------------------------
// account.getContentSettings#8b9b4dae = account.ContentSettings;
type TLAccountGetContentSettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetContentSettings) Reset()         { *m = TLAccountGetContentSettings{} }
func (m *TLAccountGetContentSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetContentSettings) ProtoMessage()    {}
func (*TLAccountGetContentSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{88}
}
func (m *TLAccountGetContentSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetContentSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetContentSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetContentSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetContentSettings.Merge(dst, src)
}
func (m *TLAccountGetContentSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetContentSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetContentSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetContentSettings proto.InternalMessageInfo

func (m *TLAccountGetContentSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.getMultiWallPapers#65ad71dc wallpapers:Vector<InputWallPaper> = Vector<WallPaper>;
type TLAccountGetMultiWallPapers struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Wallpapers           []*InputWallPaper `protobuf:"bytes,2,rep,name=wallpapers,proto3" json:"wallpapers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLAccountGetMultiWallPapers) Reset()         { *m = TLAccountGetMultiWallPapers{} }
func (m *TLAccountGetMultiWallPapers) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetMultiWallPapers) ProtoMessage()    {}
func (*TLAccountGetMultiWallPapers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{89}
}
func (m *TLAccountGetMultiWallPapers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetMultiWallPapers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetMultiWallPapers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetMultiWallPapers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetMultiWallPapers.Merge(dst, src)
}
func (m *TLAccountGetMultiWallPapers) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetMultiWallPapers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetMultiWallPapers.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetMultiWallPapers proto.InternalMessageInfo

func (m *TLAccountGetMultiWallPapers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetMultiWallPapers) GetWallpapers() []*InputWallPaper {
	if m != nil {
		return m.Wallpapers
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.getGlobalPrivacySettings#eb2b4cf6 = GlobalPrivacySettings;
type TLAccountGetGlobalPrivacySettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetGlobalPrivacySettings) Reset()         { *m = TLAccountGetGlobalPrivacySettings{} }
func (m *TLAccountGetGlobalPrivacySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetGlobalPrivacySettings) ProtoMessage()    {}
func (*TLAccountGetGlobalPrivacySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{90}
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetGlobalPrivacySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetGlobalPrivacySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetGlobalPrivacySettings.Merge(dst, src)
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetGlobalPrivacySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetGlobalPrivacySettings proto.InternalMessageInfo

func (m *TLAccountGetGlobalPrivacySettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.setGlobalPrivacySettings#1edaaac2 settings:GlobalPrivacySettings = GlobalPrivacySettings;
type TLAccountSetGlobalPrivacySettings struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Settings             *GlobalPrivacySettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAccountSetGlobalPrivacySettings) Reset()         { *m = TLAccountSetGlobalPrivacySettings{} }
func (m *TLAccountSetGlobalPrivacySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetGlobalPrivacySettings) ProtoMessage()    {}
func (*TLAccountSetGlobalPrivacySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{91}
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetGlobalPrivacySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountSetGlobalPrivacySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetGlobalPrivacySettings.Merge(dst, src)
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetGlobalPrivacySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetGlobalPrivacySettings proto.InternalMessageInfo

func (m *TLAccountSetGlobalPrivacySettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetGlobalPrivacySettings) GetSettings() *GlobalPrivacySettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// users.getUsers#d91a548 id:Vector<InputUser> = Vector<User>;
type TLUsersGetUsers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []*InputUser  `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUsersGetUsers) Reset()         { *m = TLUsersGetUsers{} }
func (m *TLUsersGetUsers) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetUsers) ProtoMessage()    {}
func (*TLUsersGetUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{92}
}
func (m *TLUsersGetUsers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetUsers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUsersGetUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetUsers.Merge(dst, src)
}
func (m *TLUsersGetUsers) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetUsers.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetUsers proto.InternalMessageInfo

func (m *TLUsersGetUsers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUsersGetUsers) GetId() []*InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// users.getFullUser#ca30a5b1 id:InputUser = UserFull;
type TLUsersGetFullUser struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputUser    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUsersGetFullUser) Reset()         { *m = TLUsersGetFullUser{} }
func (m *TLUsersGetFullUser) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetFullUser) ProtoMessage()    {}
func (*TLUsersGetFullUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{93}
}
func (m *TLUsersGetFullUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetFullUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetFullUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUsersGetFullUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetFullUser.Merge(dst, src)
}
func (m *TLUsersGetFullUser) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetFullUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetFullUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetFullUser proto.InternalMessageInfo

func (m *TLUsersGetFullUser) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUsersGetFullUser) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// users.setSecureValueErrors#90c894b5 id:InputUser errors:Vector<SecureValueError> = Bool;
type TLUsersSetSecureValueErrors struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputUser          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Errors               []*SecureValueError `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLUsersSetSecureValueErrors) Reset()         { *m = TLUsersSetSecureValueErrors{} }
func (m *TLUsersSetSecureValueErrors) String() string { return proto.CompactTextString(m) }
func (*TLUsersSetSecureValueErrors) ProtoMessage()    {}
func (*TLUsersSetSecureValueErrors) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{94}
}
func (m *TLUsersSetSecureValueErrors) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersSetSecureValueErrors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersSetSecureValueErrors.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUsersSetSecureValueErrors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersSetSecureValueErrors.Merge(dst, src)
}
func (m *TLUsersSetSecureValueErrors) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersSetSecureValueErrors) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersSetSecureValueErrors.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersSetSecureValueErrors proto.InternalMessageInfo

func (m *TLUsersSetSecureValueErrors) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUsersSetSecureValueErrors) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLUsersSetSecureValueErrors) GetErrors() []*SecureValueError {
	if m != nil {
		return m.Errors
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.getContactIDs#2caa4a42 hash:int = Vector<int>;
type TLContactsGetContactIDs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetContactIDs) Reset()         { *m = TLContactsGetContactIDs{} }
func (m *TLContactsGetContactIDs) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetContactIDs) ProtoMessage()    {}
func (*TLContactsGetContactIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{95}
}
func (m *TLContactsGetContactIDs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetContactIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetContactIDs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsGetContactIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetContactIDs.Merge(dst, src)
}
func (m *TLContactsGetContactIDs) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetContactIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetContactIDs.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetContactIDs proto.InternalMessageInfo

func (m *TLContactsGetContactIDs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsGetContactIDs) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// contacts.getStatuses#c4a353ee = Vector<ContactStatus>;
type TLContactsGetStatuses struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetStatuses) Reset()         { *m = TLContactsGetStatuses{} }
func (m *TLContactsGetStatuses) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetStatuses) ProtoMessage()    {}
func (*TLContactsGetStatuses) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{96}
}
func (m *TLContactsGetStatuses) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetStatuses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetStatuses.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsGetStatuses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetStatuses.Merge(dst, src)
}
func (m *TLContactsGetStatuses) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetStatuses) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetStatuses.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetStatuses proto.InternalMessageInfo

func (m *TLContactsGetStatuses) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// contacts.getContacts#c023849f hash:int = contacts.Contacts;
type TLContactsGetContacts struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetContacts) Reset()         { *m = TLContactsGetContacts{} }
func (m *TLContactsGetContacts) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetContacts) ProtoMessage()    {}
func (*TLContactsGetContacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{97}
}
func (m *TLContactsGetContacts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetContacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetContacts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsGetContacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetContacts.Merge(dst, src)
}
func (m *TLContactsGetContacts) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetContacts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetContacts.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetContacts proto.InternalMessageInfo

func (m *TLContactsGetContacts) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsGetContacts) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// contacts.importContacts#2c800be5 contacts:Vector<InputContact> = contacts.ImportedContacts;
type TLContactsImportContacts struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Contacts             []*InputContact `protobuf:"bytes,2,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLContactsImportContacts) Reset()         { *m = TLContactsImportContacts{} }
func (m *TLContactsImportContacts) String() string { return proto.CompactTextString(m) }
func (*TLContactsImportContacts) ProtoMessage()    {}
func (*TLContactsImportContacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{98}
}
func (m *TLContactsImportContacts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsImportContacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsImportContacts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsImportContacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsImportContacts.Merge(dst, src)
}
func (m *TLContactsImportContacts) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsImportContacts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsImportContacts.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsImportContacts proto.InternalMessageInfo

func (m *TLContactsImportContacts) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsImportContacts) GetContacts() []*InputContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.deleteContacts#96a0e00 id:Vector<InputUser> = Updates;
type TLContactsDeleteContacts96A0E00 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []*InputUser  `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsDeleteContacts96A0E00) Reset()         { *m = TLContactsDeleteContacts96A0E00{} }
func (m *TLContactsDeleteContacts96A0E00) String() string { return proto.CompactTextString(m) }
func (*TLContactsDeleteContacts96A0E00) ProtoMessage()    {}
func (*TLContactsDeleteContacts96A0E00) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{99}
}
func (m *TLContactsDeleteContacts96A0E00) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsDeleteContacts96A0E00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsDeleteContacts96A0E00.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsDeleteContacts96A0E00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsDeleteContacts96A0E00.Merge(dst, src)
}
func (m *TLContactsDeleteContacts96A0E00) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsDeleteContacts96A0E00) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsDeleteContacts96A0E00.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsDeleteContacts96A0E00 proto.InternalMessageInfo

func (m *TLContactsDeleteContacts96A0E00) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsDeleteContacts96A0E00) GetId() []*InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.deleteByPhones#1013fd9e phones:Vector<string> = Bool;
type TLContactsDeleteByPhones struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phones               []string      `protobuf:"bytes,2,rep,name=phones,proto3" json:"phones,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsDeleteByPhones) Reset()         { *m = TLContactsDeleteByPhones{} }
func (m *TLContactsDeleteByPhones) String() string { return proto.CompactTextString(m) }
func (*TLContactsDeleteByPhones) ProtoMessage()    {}
func (*TLContactsDeleteByPhones) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{100}
}
func (m *TLContactsDeleteByPhones) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsDeleteByPhones) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsDeleteByPhones.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsDeleteByPhones) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsDeleteByPhones.Merge(dst, src)
}
func (m *TLContactsDeleteByPhones) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsDeleteByPhones) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsDeleteByPhones.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsDeleteByPhones proto.InternalMessageInfo

func (m *TLContactsDeleteByPhones) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsDeleteByPhones) GetPhones() []string {
	if m != nil {
		return m.Phones
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.block#68cc1411 id:InputPeer = Bool;
type TLContactsBlock struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id_INPUTPEER         *InputPeer    `protobuf:"bytes,2,opt,name=id_INPUTPEER,json=idINPUTPEER,proto3" json:"id_INPUTPEER,omitempty"`
	Id_INPUTUSER         *InputUser    `protobuf:"bytes,3,opt,name=id_INPUTUSER,json=idINPUTUSER,proto3" json:"id_INPUTUSER,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsBlock) Reset()         { *m = TLContactsBlock{} }
func (m *TLContactsBlock) String() string { return proto.CompactTextString(m) }
func (*TLContactsBlock) ProtoMessage()    {}
func (*TLContactsBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{101}
}
func (m *TLContactsBlock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsBlock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsBlock.Merge(dst, src)
}
func (m *TLContactsBlock) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsBlock.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsBlock proto.InternalMessageInfo

func (m *TLContactsBlock) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsBlock) GetId_INPUTPEER() *InputPeer {
	if m != nil {
		return m.Id_INPUTPEER
	}
	return nil
}

func (m *TLContactsBlock) GetId_INPUTUSER() *InputUser {
	if m != nil {
		return m.Id_INPUTUSER
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.unblock#bea65d50 id:InputPeer = Bool;
type TLContactsUnblock struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id_INPUTPEER         *InputPeer    `protobuf:"bytes,2,opt,name=id_INPUTPEER,json=idINPUTPEER,proto3" json:"id_INPUTPEER,omitempty"`
	Id_INPUTUSER         *InputUser    `protobuf:"bytes,3,opt,name=id_INPUTUSER,json=idINPUTUSER,proto3" json:"id_INPUTUSER,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsUnblock) Reset()         { *m = TLContactsUnblock{} }
func (m *TLContactsUnblock) String() string { return proto.CompactTextString(m) }
func (*TLContactsUnblock) ProtoMessage()    {}
func (*TLContactsUnblock) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{102}
}
func (m *TLContactsUnblock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsUnblock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsUnblock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsUnblock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsUnblock.Merge(dst, src)
}
func (m *TLContactsUnblock) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsUnblock) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsUnblock.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsUnblock proto.InternalMessageInfo

func (m *TLContactsUnblock) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsUnblock) GetId_INPUTPEER() *InputPeer {
	if m != nil {
		return m.Id_INPUTPEER
	}
	return nil
}

func (m *TLContactsUnblock) GetId_INPUTUSER() *InputUser {
	if m != nil {
		return m.Id_INPUTUSER
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.getBlocked#f57c350f offset:int limit:int = contacts.Blocked;
type TLContactsGetBlocked struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Offset               int32         `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetBlocked) Reset()         { *m = TLContactsGetBlocked{} }
func (m *TLContactsGetBlocked) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetBlocked) ProtoMessage()    {}
func (*TLContactsGetBlocked) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{103}
}
func (m *TLContactsGetBlocked) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetBlocked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetBlocked.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsGetBlocked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetBlocked.Merge(dst, src)
}
func (m *TLContactsGetBlocked) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetBlocked) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetBlocked.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetBlocked proto.InternalMessageInfo

func (m *TLContactsGetBlocked) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsGetBlocked) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLContactsGetBlocked) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// contacts.search#11f812d8 q:string limit:int = contacts.Found;
type TLContactsSearch struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Q                    string        `protobuf:"bytes,2,opt,name=q,proto3" json:"q,omitempty"`
	Limit                int32         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsSearch) Reset()         { *m = TLContactsSearch{} }
func (m *TLContactsSearch) String() string { return proto.CompactTextString(m) }
func (*TLContactsSearch) ProtoMessage()    {}
func (*TLContactsSearch) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{104}
}
func (m *TLContactsSearch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsSearch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsSearch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsSearch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsSearch.Merge(dst, src)
}
func (m *TLContactsSearch) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsSearch) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsSearch.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsSearch proto.InternalMessageInfo

func (m *TLContactsSearch) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsSearch) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLContactsSearch) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// contacts.resolveUsername#f93ccba3 username:string = contacts.ResolvedPeer;
type TLContactsResolveUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Username             string        `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsResolveUsername) Reset()         { *m = TLContactsResolveUsername{} }
func (m *TLContactsResolveUsername) String() string { return proto.CompactTextString(m) }
func (*TLContactsResolveUsername) ProtoMessage()    {}
func (*TLContactsResolveUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{105}
}
func (m *TLContactsResolveUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsResolveUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsResolveUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsResolveUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsResolveUsername.Merge(dst, src)
}
func (m *TLContactsResolveUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsResolveUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsResolveUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsResolveUsername proto.InternalMessageInfo

func (m *TLContactsResolveUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsResolveUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// contacts.getTopPeers#d4982db5 flags:# correspondents:flags.0?true bots_pm:flags.1?true bots_inline:flags.2?true phone_calls:flags.3?true forward_users:flags.4?true forward_chats:flags.5?true groups:flags.10?true channels:flags.15?true offset:int limit:int hash:int = contacts.TopPeers;
type TLContactsGetTopPeers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Correspondents       bool          `protobuf:"varint,2,opt,name=correspondents,proto3" json:"correspondents,omitempty"`
	BotsPm               bool          `protobuf:"varint,3,opt,name=bots_pm,json=botsPm,proto3" json:"bots_pm,omitempty"`
	BotsInline           bool          `protobuf:"varint,4,opt,name=bots_inline,json=botsInline,proto3" json:"bots_inline,omitempty"`
	PhoneCalls           bool          `protobuf:"varint,5,opt,name=phone_calls,json=phoneCalls,proto3" json:"phone_calls,omitempty"`
	ForwardUsers         bool          `protobuf:"varint,6,opt,name=forward_users,json=forwardUsers,proto3" json:"forward_users,omitempty"`
	ForwardChats         bool          `protobuf:"varint,7,opt,name=forward_chats,json=forwardChats,proto3" json:"forward_chats,omitempty"`
	Groups               bool          `protobuf:"varint,8,opt,name=groups,proto3" json:"groups,omitempty"`
	Channels             bool          `protobuf:"varint,9,opt,name=channels,proto3" json:"channels,omitempty"`
	Offset               int32         `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32         `protobuf:"varint,11,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32         `protobuf:"varint,12,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetTopPeers) Reset()         { *m = TLContactsGetTopPeers{} }
func (m *TLContactsGetTopPeers) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetTopPeers) ProtoMessage()    {}
func (*TLContactsGetTopPeers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{106}
}
func (m *TLContactsGetTopPeers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetTopPeers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetTopPeers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsGetTopPeers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetTopPeers.Merge(dst, src)
}
func (m *TLContactsGetTopPeers) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetTopPeers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetTopPeers.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetTopPeers proto.InternalMessageInfo

func (m *TLContactsGetTopPeers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsGetTopPeers) GetCorrespondents() bool {
	if m != nil {
		return m.Correspondents
	}
	return false
}

func (m *TLContactsGetTopPeers) GetBotsPm() bool {
	if m != nil {
		return m.BotsPm
	}
	return false
}

func (m *TLContactsGetTopPeers) GetBotsInline() bool {
	if m != nil {
		return m.BotsInline
	}
	return false
}

func (m *TLContactsGetTopPeers) GetPhoneCalls() bool {
	if m != nil {
		return m.PhoneCalls
	}
	return false
}

func (m *TLContactsGetTopPeers) GetForwardUsers() bool {
	if m != nil {
		return m.ForwardUsers
	}
	return false
}

func (m *TLContactsGetTopPeers) GetForwardChats() bool {
	if m != nil {
		return m.ForwardChats
	}
	return false
}

func (m *TLContactsGetTopPeers) GetGroups() bool {
	if m != nil {
		return m.Groups
	}
	return false
}

func (m *TLContactsGetTopPeers) GetChannels() bool {
	if m != nil {
		return m.Channels
	}
	return false
}

func (m *TLContactsGetTopPeers) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLContactsGetTopPeers) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLContactsGetTopPeers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// contacts.resetTopPeerRating#1ae373ac category:TopPeerCategory peer:InputPeer = Bool;
type TLContactsResetTopPeerRating struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Category             *TopPeerCategory `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Peer                 *InputPeer       `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLContactsResetTopPeerRating) Reset()         { *m = TLContactsResetTopPeerRating{} }
func (m *TLContactsResetTopPeerRating) String() string { return proto.CompactTextString(m) }
func (*TLContactsResetTopPeerRating) ProtoMessage()    {}
func (*TLContactsResetTopPeerRating) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{107}
}
func (m *TLContactsResetTopPeerRating) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsResetTopPeerRating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsResetTopPeerRating.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsResetTopPeerRating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsResetTopPeerRating.Merge(dst, src)
}
func (m *TLContactsResetTopPeerRating) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsResetTopPeerRating) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsResetTopPeerRating.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsResetTopPeerRating proto.InternalMessageInfo

func (m *TLContactsResetTopPeerRating) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsResetTopPeerRating) GetCategory() *TopPeerCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *TLContactsResetTopPeerRating) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.resetSaved#879537f1 = Bool;
type TLContactsResetSaved struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsResetSaved) Reset()         { *m = TLContactsResetSaved{} }
func (m *TLContactsResetSaved) String() string { return proto.CompactTextString(m) }
func (*TLContactsResetSaved) ProtoMessage()    {}
func (*TLContactsResetSaved) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{108}
}
func (m *TLContactsResetSaved) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsResetSaved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsResetSaved.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsResetSaved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsResetSaved.Merge(dst, src)
}
func (m *TLContactsResetSaved) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsResetSaved) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsResetSaved.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsResetSaved proto.InternalMessageInfo

func (m *TLContactsResetSaved) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// contacts.getSaved#82f1e39f = Vector<SavedContact>;
type TLContactsGetSaved struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetSaved) Reset()         { *m = TLContactsGetSaved{} }
func (m *TLContactsGetSaved) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetSaved) ProtoMessage()    {}
func (*TLContactsGetSaved) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{109}
}
func (m *TLContactsGetSaved) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetSaved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetSaved.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsGetSaved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetSaved.Merge(dst, src)
}
func (m *TLContactsGetSaved) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetSaved) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetSaved.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetSaved proto.InternalMessageInfo

func (m *TLContactsGetSaved) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// contacts.toggleTopPeers#8514bdda enabled:Bool = Bool;
type TLContactsToggleTopPeers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsToggleTopPeers) Reset()         { *m = TLContactsToggleTopPeers{} }
func (m *TLContactsToggleTopPeers) String() string { return proto.CompactTextString(m) }
func (*TLContactsToggleTopPeers) ProtoMessage()    {}
func (*TLContactsToggleTopPeers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{110}
}
func (m *TLContactsToggleTopPeers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsToggleTopPeers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsToggleTopPeers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsToggleTopPeers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsToggleTopPeers.Merge(dst, src)
}
func (m *TLContactsToggleTopPeers) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsToggleTopPeers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsToggleTopPeers.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsToggleTopPeers proto.InternalMessageInfo

func (m *TLContactsToggleTopPeers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsToggleTopPeers) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.addContact#e8f463d0 flags:# add_phone_privacy_exception:flags.0?true id:InputUser first_name:string last_name:string phone:string = Updates;
type TLContactsAddContact struct {
	Constructor              TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	AddPhonePrivacyException bool          `protobuf:"varint,2,opt,name=add_phone_privacy_exception,json=addPhonePrivacyException,proto3" json:"add_phone_privacy_exception,omitempty"`
	Id                       *InputUser    `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	FirstName                string        `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName                 string        `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Phone                    string        `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}      `json:"-"`
	XXX_unrecognized         []byte        `json:"-"`
	XXX_sizecache            int32         `json:"-"`
}

func (m *TLContactsAddContact) Reset()         { *m = TLContactsAddContact{} }
func (m *TLContactsAddContact) String() string { return proto.CompactTextString(m) }
func (*TLContactsAddContact) ProtoMessage()    {}
func (*TLContactsAddContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{111}
}
func (m *TLContactsAddContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsAddContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsAddContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsAddContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsAddContact.Merge(dst, src)
}
func (m *TLContactsAddContact) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsAddContact) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsAddContact.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsAddContact proto.InternalMessageInfo

func (m *TLContactsAddContact) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsAddContact) GetAddPhonePrivacyException() bool {
	if m != nil {
		return m.AddPhonePrivacyException
	}
	return false
}

func (m *TLContactsAddContact) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLContactsAddContact) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *TLContactsAddContact) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *TLContactsAddContact) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// contacts.acceptContact#f831a20f id:InputUser = Updates;
type TLContactsAcceptContact struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputUser    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsAcceptContact) Reset()         { *m = TLContactsAcceptContact{} }
func (m *TLContactsAcceptContact) String() string { return proto.CompactTextString(m) }
func (*TLContactsAcceptContact) ProtoMessage()    {}
func (*TLContactsAcceptContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{112}
}
func (m *TLContactsAcceptContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsAcceptContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsAcceptContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsAcceptContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsAcceptContact.Merge(dst, src)
}
func (m *TLContactsAcceptContact) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsAcceptContact) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsAcceptContact.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsAcceptContact proto.InternalMessageInfo

func (m *TLContactsAcceptContact) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsAcceptContact) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.getLocated#d348bc44 flags:# background:flags.1?true geo_point:InputGeoPoint self_expires:flags.0?int = Updates;
type TLContactsGetLocated struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Background           bool              `protobuf:"varint,2,opt,name=background,proto3" json:"background,omitempty"`
	GeoPoint             *InputGeoPoint    `protobuf:"bytes,3,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	SelfExpires          *types.Int32Value `protobuf:"bytes,4,opt,name=self_expires,json=selfExpires,proto3" json:"self_expires,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLContactsGetLocated) Reset()         { *m = TLContactsGetLocated{} }
func (m *TLContactsGetLocated) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetLocated) ProtoMessage()    {}
func (*TLContactsGetLocated) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{113}
}
func (m *TLContactsGetLocated) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetLocated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetLocated.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsGetLocated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetLocated.Merge(dst, src)
}
func (m *TLContactsGetLocated) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetLocated) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetLocated.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetLocated proto.InternalMessageInfo

func (m *TLContactsGetLocated) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsGetLocated) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLContactsGetLocated) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLContactsGetLocated) GetSelfExpires() *types.Int32Value {
	if m != nil {
		return m.SelfExpires
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.blockFromReplies#29a8962c flags:# delete_message:flags.0?true delete_history:flags.1?true report_spam:flags.2?true msg_id:int = Updates;
type TLContactsBlockFromReplies struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	DeleteMessage        bool          `protobuf:"varint,2,opt,name=delete_message,json=deleteMessage,proto3" json:"delete_message,omitempty"`
	DeleteHistory        bool          `protobuf:"varint,3,opt,name=delete_history,json=deleteHistory,proto3" json:"delete_history,omitempty"`
	ReportSpam           bool          `protobuf:"varint,4,opt,name=report_spam,json=reportSpam,proto3" json:"report_spam,omitempty"`
	MsgId                int32         `protobuf:"varint,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsBlockFromReplies) Reset()         { *m = TLContactsBlockFromReplies{} }
func (m *TLContactsBlockFromReplies) String() string { return proto.CompactTextString(m) }
func (*TLContactsBlockFromReplies) ProtoMessage()    {}
func (*TLContactsBlockFromReplies) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{114}
}
func (m *TLContactsBlockFromReplies) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsBlockFromReplies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsBlockFromReplies.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsBlockFromReplies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsBlockFromReplies.Merge(dst, src)
}
func (m *TLContactsBlockFromReplies) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsBlockFromReplies) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsBlockFromReplies.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsBlockFromReplies proto.InternalMessageInfo

func (m *TLContactsBlockFromReplies) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsBlockFromReplies) GetDeleteMessage() bool {
	if m != nil {
		return m.DeleteMessage
	}
	return false
}

func (m *TLContactsBlockFromReplies) GetDeleteHistory() bool {
	if m != nil {
		return m.DeleteHistory
	}
	return false
}

func (m *TLContactsBlockFromReplies) GetReportSpam() bool {
	if m != nil {
		return m.ReportSpam
	}
	return false
}

func (m *TLContactsBlockFromReplies) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getMessages#63c66506 id:Vector<InputMessage> = messages.Messages;
type TLMessagesGetMessages struct {
	Constructor           TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id_VECTORINPUTMESSAGE []*InputMessage `protobuf:"bytes,2,rep,name=id_VECTORINPUTMESSAGE,json=idVECTORINPUTMESSAGE,proto3" json:"id_VECTORINPUTMESSAGE,omitempty"`
	Id_VECTORINT32        []int32         `protobuf:"varint,3,rep,packed,name=id_VECTORINT32,json=idVECTORINT32,proto3" json:"id_VECTORINT32,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}        `json:"-"`
	XXX_unrecognized      []byte          `json:"-"`
	XXX_sizecache         int32           `json:"-"`
}

func (m *TLMessagesGetMessages) Reset()         { *m = TLMessagesGetMessages{} }
func (m *TLMessagesGetMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessages) ProtoMessage()    {}
func (*TLMessagesGetMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{115}
}
func (m *TLMessagesGetMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessages.Merge(dst, src)
}
func (m *TLMessagesGetMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessages proto.InternalMessageInfo

func (m *TLMessagesGetMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMessages) GetId_VECTORINPUTMESSAGE() []*InputMessage {
	if m != nil {
		return m.Id_VECTORINPUTMESSAGE
	}
	return nil
}

func (m *TLMessagesGetMessages) GetId_VECTORINT32() []int32 {
	if m != nil {
		return m.Id_VECTORINT32
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getDialogs#a0ee3b73 flags:# exclude_pinned:flags.0?true folder_id:flags.1?int offset_date:int offset_id:int offset_peer:InputPeer limit:int hash:int = messages.Dialogs;
type TLMessagesGetDialogs struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ExcludePinned        bool              `protobuf:"varint,2,opt,name=exclude_pinned,json=excludePinned,proto3" json:"exclude_pinned,omitempty"`
	FolderId             *types.Int32Value `protobuf:"bytes,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	OffsetDate           int32             `protobuf:"varint,4,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	OffsetId             int32             `protobuf:"varint,5,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetPeer           *InputPeer        `protobuf:"bytes,6,opt,name=offset_peer,json=offsetPeer,proto3" json:"offset_peer,omitempty"`
	Limit                int32             `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32             `protobuf:"varint,8,opt,name=hash,proto3" json:"hash,omitempty"`
	FeedId               *types.Int32Value `protobuf:"bytes,9,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesGetDialogs) Reset()         { *m = TLMessagesGetDialogs{} }
func (m *TLMessagesGetDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDialogs) ProtoMessage()    {}
func (*TLMessagesGetDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{116}
}
func (m *TLMessagesGetDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDialogs.Merge(dst, src)
}
func (m *TLMessagesGetDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDialogs proto.InternalMessageInfo

func (m *TLMessagesGetDialogs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetDialogs) GetExcludePinned() bool {
	if m != nil {
		return m.ExcludePinned
	}
	return false
}

func (m *TLMessagesGetDialogs) GetFolderId() *types.Int32Value {
	if m != nil {
		return m.FolderId
	}
	return nil
}

func (m *TLMessagesGetDialogs) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *TLMessagesGetDialogs) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetFeedId() *types.Int32Value {
	if m != nil {
		return m.FeedId
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getHistory#dcbb8260 peer:InputPeer offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
type TLMessagesGetHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	OffsetId             int32         `protobuf:"varint,3,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetDate           int32         `protobuf:"varint,4,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	AddOffset            int32         `protobuf:"varint,5,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32         `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32         `protobuf:"varint,7,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32         `protobuf:"varint,8,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Hash                 int32         `protobuf:"varint,9,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetHistory) Reset()         { *m = TLMessagesGetHistory{} }
func (m *TLMessagesGetHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetHistory) ProtoMessage()    {}
func (*TLMessagesGetHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{117}
}
func (m *TLMessagesGetHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetHistory.Merge(dst, src)
}
func (m *TLMessagesGetHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetHistory proto.InternalMessageInfo

func (m *TLMessagesGetHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetHistory) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetHistory) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesGetHistory) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesGetHistory) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetHistory) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLMessagesGetHistory) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.search#c352eec flags:# peer:InputPeer q:string from_id:flags.0?InputPeer top_msg_id:flags.1?int filter:MessagesFilter min_date:int max_date:int offset_id:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
type TLMessagesSearch struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Q                    string            `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	FromId_FLAGINPUTPEER *InputPeer        `protobuf:"bytes,4,opt,name=from_id_FLAGINPUTPEER,json=fromIdFLAGINPUTPEER,proto3" json:"from_id_FLAGINPUTPEER,omitempty"`
	TopMsgId             *types.Int32Value `protobuf:"bytes,5,opt,name=top_msg_id,json=topMsgId,proto3" json:"top_msg_id,omitempty"`
	Filter               *MessagesFilter   `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	MinDate              int32             `protobuf:"varint,7,opt,name=min_date,json=minDate,proto3" json:"min_date,omitempty"`
	MaxDate              int32             `protobuf:"varint,8,opt,name=max_date,json=maxDate,proto3" json:"max_date,omitempty"`
	OffsetId             int32             `protobuf:"varint,9,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	AddOffset            int32             `protobuf:"varint,10,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32             `protobuf:"varint,11,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32             `protobuf:"varint,12,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32             `protobuf:"varint,13,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Hash                 int32             `protobuf:"varint,14,opt,name=hash,proto3" json:"hash,omitempty"`
	FromId_FLAGINPUTUSER *InputUser        `protobuf:"bytes,15,opt,name=from_id_FLAGINPUTUSER,json=fromIdFLAGINPUTUSER,proto3" json:"from_id_FLAGINPUTUSER,omitempty"`
	Offset               int32             `protobuf:"varint,16,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSearch) Reset()         { *m = TLMessagesSearch{} }
func (m *TLMessagesSearch) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearch) ProtoMessage()    {}
func (*TLMessagesSearch) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{118}
}
func (m *TLMessagesSearch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSearch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearch.Merge(dst, src)
}
func (m *TLMessagesSearch) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearch) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearch.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearch proto.InternalMessageInfo

func (m *TLMessagesSearch) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSearch) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSearch) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearch) GetFromId_FLAGINPUTPEER() *InputPeer {
	if m != nil {
		return m.FromId_FLAGINPUTPEER
	}
	return nil
}

func (m *TLMessagesSearch) GetTopMsgId() *types.Int32Value {
	if m != nil {
		return m.TopMsgId
	}
	return nil
}

func (m *TLMessagesSearch) GetFilter() *MessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLMessagesSearch) GetMinDate() int32 {
	if m != nil {
		return m.MinDate
	}
	return 0
}

func (m *TLMessagesSearch) GetMaxDate() int32 {
	if m != nil {
		return m.MaxDate
	}
	return 0
}

func (m *TLMessagesSearch) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesSearch) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesSearch) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesSearch) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesSearch) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLMessagesSearch) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

func (m *TLMessagesSearch) GetFromId_FLAGINPUTUSER() *InputUser {
	if m != nil {
		return m.FromId_FLAGINPUTUSER
	}
	return nil
}

func (m *TLMessagesSearch) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.readHistory#e306d3a peer:InputPeer max_id:int = messages.AffectedMessages;
type TLMessagesReadHistoryE306D3A struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	MaxId                int32         `protobuf:"varint,3,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadHistoryE306D3A) Reset()         { *m = TLMessagesReadHistoryE306D3A{} }
func (m *TLMessagesReadHistoryE306D3A) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadHistoryE306D3A) ProtoMessage()    {}
func (*TLMessagesReadHistoryE306D3A) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{119}
}
func (m *TLMessagesReadHistoryE306D3A) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadHistoryE306D3A) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadHistoryE306D3A.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReadHistoryE306D3A) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadHistoryE306D3A.Merge(dst, src)
}
func (m *TLMessagesReadHistoryE306D3A) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadHistoryE306D3A) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadHistoryE306D3A.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadHistoryE306D3A proto.InternalMessageInfo

func (m *TLMessagesReadHistoryE306D3A) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadHistoryE306D3A) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReadHistoryE306D3A) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.deleteHistory#1c015b09 flags:# just_clear:flags.0?true revoke:flags.1?true peer:InputPeer max_id:int = messages.AffectedHistory;
type TLMessagesDeleteHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	JustClear            bool          `protobuf:"varint,2,opt,name=just_clear,json=justClear,proto3" json:"just_clear,omitempty"`
	Revoke               bool          `protobuf:"varint,3,opt,name=revoke,proto3" json:"revoke,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	MaxId                int32         `protobuf:"varint,5,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeleteHistory) Reset()         { *m = TLMessagesDeleteHistory{} }
func (m *TLMessagesDeleteHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteHistory) ProtoMessage()    {}
func (*TLMessagesDeleteHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{120}
}
func (m *TLMessagesDeleteHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesDeleteHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteHistory.Merge(dst, src)
}
func (m *TLMessagesDeleteHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteHistory proto.InternalMessageInfo

func (m *TLMessagesDeleteHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteHistory) GetJustClear() bool {
	if m != nil {
		return m.JustClear
	}
	return false
}

func (m *TLMessagesDeleteHistory) GetRevoke() bool {
	if m != nil {
		return m.Revoke
	}
	return false
}

func (m *TLMessagesDeleteHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesDeleteHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.deleteMessages#e58e95d2 flags:# revoke:flags.0?true id:Vector<int> = messages.AffectedMessages;
type TLMessagesDeleteMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Revoke               bool          `protobuf:"varint,2,opt,name=revoke,proto3" json:"revoke,omitempty"`
	Id                   []int32       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeleteMessages) Reset()         { *m = TLMessagesDeleteMessages{} }
func (m *TLMessagesDeleteMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteMessages) ProtoMessage()    {}
func (*TLMessagesDeleteMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{121}
}
func (m *TLMessagesDeleteMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesDeleteMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteMessages.Merge(dst, src)
}
func (m *TLMessagesDeleteMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteMessages proto.InternalMessageInfo

func (m *TLMessagesDeleteMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteMessages) GetRevoke() bool {
	if m != nil {
		return m.Revoke
	}
	return false
}

func (m *TLMessagesDeleteMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.receivedMessages#5a954c0 max_id:int = Vector<ReceivedNotifyMessage>;
type TLMessagesReceivedMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MaxId                int32         `protobuf:"varint,2,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReceivedMessages) Reset()         { *m = TLMessagesReceivedMessages{} }
func (m *TLMessagesReceivedMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReceivedMessages) ProtoMessage()    {}
func (*TLMessagesReceivedMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{122}
}
func (m *TLMessagesReceivedMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReceivedMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReceivedMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReceivedMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReceivedMessages.Merge(dst, src)
}
func (m *TLMessagesReceivedMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReceivedMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReceivedMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReceivedMessages proto.InternalMessageInfo

func (m *TLMessagesReceivedMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReceivedMessages) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.setTyping#58943ee2 flags:# peer:InputPeer top_msg_id:flags.0?int action:SendMessageAction = Bool;
type TLMessagesSetTyping struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	TopMsgId             *types.Int32Value  `protobuf:"bytes,3,opt,name=top_msg_id,json=topMsgId,proto3" json:"top_msg_id,omitempty"`
	Action               *SendMessageAction `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesSetTyping) Reset()         { *m = TLMessagesSetTyping{} }
func (m *TLMessagesSetTyping) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetTyping) ProtoMessage()    {}
func (*TLMessagesSetTyping) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{123}
}
func (m *TLMessagesSetTyping) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetTyping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetTyping.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSetTyping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetTyping.Merge(dst, src)
}
func (m *TLMessagesSetTyping) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetTyping) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetTyping.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetTyping proto.InternalMessageInfo

func (m *TLMessagesSetTyping) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetTyping) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetTyping) GetTopMsgId() *types.Int32Value {
	if m != nil {
		return m.TopMsgId
	}
	return nil
}

func (m *TLMessagesSetTyping) GetAction() *SendMessageAction {
	if m != nil {
		return m.Action
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.sendMessage#c4ea1590 flags:# no_webpage:flags.1?true silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.10?int ttl_seconds:flags.30?int = Updates;
type TLMessagesSendMessage struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	NoWebpage            bool              `protobuf:"varint,2,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	Silent               bool              `protobuf:"varint,3,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool              `protobuf:"varint,4,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool              `protobuf:"varint,5,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,6,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         *types.Int32Value `protobuf:"bytes,7,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	Message              string            `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	RandomId             int64             `protobuf:"varint,9,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ReplyMarkup          *ReplyMarkup      `protobuf:"bytes,10,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity  `protobuf:"bytes,11,rep,name=entities,proto3" json:"entities,omitempty"`
	ScheduleDate         *types.Int32Value `protobuf:"bytes,12,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	TtlSeconds           *types.Int32Value `protobuf:"bytes,13,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSendMessage) Reset()         { *m = TLMessagesSendMessage{} }
func (m *TLMessagesSendMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendMessage) ProtoMessage()    {}
func (*TLMessagesSendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{124}
}
func (m *TLMessagesSendMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendMessage.Merge(dst, src)
}
func (m *TLMessagesSendMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendMessage proto.InternalMessageInfo

func (m *TLMessagesSendMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendMessage) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesSendMessage) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendMessage) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendMessage) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendMessage) GetReplyToMsgId() *types.Int32Value {
	if m != nil {
		return m.ReplyToMsgId
	}
	return nil
}

func (m *TLMessagesSendMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSendMessage) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendMessage) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesSendMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesSendMessage) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

func (m *TLMessagesSendMessage) GetTtlSeconds() *types.Int32Value {
	if m != nil {
		return m.TtlSeconds
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.sendMedia#ee3a150e flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int media:InputMedia message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.10?int ttl_seconds:flags.30?int = Updates;
type TLMessagesSendMedia struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool              `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool              `protobuf:"varint,3,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool              `protobuf:"varint,4,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         *types.Int32Value `protobuf:"bytes,6,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	Media                *InputMedia       `protobuf:"bytes,7,opt,name=media,proto3" json:"media,omitempty"`
	Message              string            `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	RandomId             int64             `protobuf:"varint,9,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ReplyMarkup          *ReplyMarkup      `protobuf:"bytes,10,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity  `protobuf:"bytes,11,rep,name=entities,proto3" json:"entities,omitempty"`
	ScheduleDate         *types.Int32Value `protobuf:"bytes,12,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	TtlSeconds           *types.Int32Value `protobuf:"bytes,13,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSendMedia) Reset()         { *m = TLMessagesSendMedia{} }
func (m *TLMessagesSendMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendMedia) ProtoMessage()    {}
func (*TLMessagesSendMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{125}
}
func (m *TLMessagesSendMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSendMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendMedia.Merge(dst, src)
}
func (m *TLMessagesSendMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendMedia proto.InternalMessageInfo

func (m *TLMessagesSendMedia) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendMedia) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendMedia) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendMedia) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendMedia) GetReplyToMsgId() *types.Int32Value {
	if m != nil {
		return m.ReplyToMsgId
	}
	return nil
}

func (m *TLMessagesSendMedia) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *TLMessagesSendMedia) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSendMedia) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendMedia) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesSendMedia) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesSendMedia) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

func (m *TLMessagesSendMedia) GetTtlSeconds() *types.Int32Value {
	if m != nil {
		return m.TtlSeconds
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.forwardMessages#d9fee60e flags:# silent:flags.5?true background:flags.6?true with_my_score:flags.8?true from_peer:InputPeer id:Vector<int> random_id:Vector<long> to_peer:InputPeer schedule_date:flags.10?int = Updates;
type TLMessagesForwardMessages struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool              `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool              `protobuf:"varint,3,opt,name=background,proto3" json:"background,omitempty"`
	WithMyScore          bool              `protobuf:"varint,4,opt,name=with_my_score,json=withMyScore,proto3" json:"with_my_score,omitempty"`
	FromPeer             *InputPeer        `protobuf:"bytes,5,opt,name=from_peer,json=fromPeer,proto3" json:"from_peer,omitempty"`
	Id                   []int32           `protobuf:"varint,6,rep,packed,name=id,proto3" json:"id,omitempty"`
	RandomId             []int64           `protobuf:"varint,7,rep,packed,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ToPeer               *InputPeer        `protobuf:"bytes,8,opt,name=to_peer,json=toPeer,proto3" json:"to_peer,omitempty"`
	ScheduleDate         *types.Int32Value `protobuf:"bytes,9,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	Grouped              bool              `protobuf:"varint,10,opt,name=grouped,proto3" json:"grouped,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesForwardMessages) Reset()         { *m = TLMessagesForwardMessages{} }
func (m *TLMessagesForwardMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesForwardMessages) ProtoMessage()    {}
func (*TLMessagesForwardMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{126}
}
func (m *TLMessagesForwardMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesForwardMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesForwardMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesForwardMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesForwardMessages.Merge(dst, src)
}
func (m *TLMessagesForwardMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesForwardMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesForwardMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesForwardMessages proto.InternalMessageInfo

func (m *TLMessagesForwardMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesForwardMessages) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesForwardMessages) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesForwardMessages) GetWithMyScore() bool {
	if m != nil {
		return m.WithMyScore
	}
	return false
}

func (m *TLMessagesForwardMessages) GetFromPeer() *InputPeer {
	if m != nil {
		return m.FromPeer
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetRandomId() []int64 {
	if m != nil {
		return m.RandomId
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetToPeer() *InputPeer {
	if m != nil {
		return m.ToPeer
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetGrouped() bool {
	if m != nil {
		return m.Grouped
	}
	return false
}

// --------------------------------------------------------------------------------------------
// messages.reportSpam#cf1592db peer:InputPeer = Bool;
type TLMessagesReportSpam struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReportSpam) Reset()         { *m = TLMessagesReportSpam{} }
func (m *TLMessagesReportSpam) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReportSpam) ProtoMessage()    {}
func (*TLMessagesReportSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{127}
}
func (m *TLMessagesReportSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReportSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReportSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReportSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReportSpam.Merge(dst, src)
}
func (m *TLMessagesReportSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReportSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReportSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReportSpam proto.InternalMessageInfo

func (m *TLMessagesReportSpam) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReportSpam) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getPeerSettings#3672e09c peer:InputPeer = PeerSettings;
type TLMessagesGetPeerSettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetPeerSettings) Reset()         { *m = TLMessagesGetPeerSettings{} }
func (m *TLMessagesGetPeerSettings) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPeerSettings) ProtoMessage()    {}
func (*TLMessagesGetPeerSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{128}
}
func (m *TLMessagesGetPeerSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPeerSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPeerSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetPeerSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPeerSettings.Merge(dst, src)
}
func (m *TLMessagesGetPeerSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPeerSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPeerSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPeerSettings proto.InternalMessageInfo

func (m *TLMessagesGetPeerSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPeerSettings) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.report#bd82b658 peer:InputPeer id:Vector<int> reason:ReportReason = Bool;
type TLMessagesReport struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	Reason               *ReportReason `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReport) Reset()         { *m = TLMessagesReport{} }
func (m *TLMessagesReport) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReport) ProtoMessage()    {}
func (*TLMessagesReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{129}
}
func (m *TLMessagesReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReport.Merge(dst, src)
}
func (m *TLMessagesReport) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReport) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReport.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReport proto.InternalMessageInfo

func (m *TLMessagesReport) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReport) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReport) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesReport) GetReason() *ReportReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getChats#3c6aa187 id:Vector<int> = messages.Chats;
type TLMessagesGetChats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []int32       `protobuf:"varint,2,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetChats) Reset()         { *m = TLMessagesGetChats{} }
func (m *TLMessagesGetChats) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetChats) ProtoMessage()    {}
func (*TLMessagesGetChats) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{130}
}
func (m *TLMessagesGetChats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetChats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetChats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetChats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetChats.Merge(dst, src)
}
func (m *TLMessagesGetChats) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetChats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetChats.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetChats proto.InternalMessageInfo

func (m *TLMessagesGetChats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetChats) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getFullChat#3b831c66 chat_id:int = messages.ChatFull;
type TLMessagesGetFullChat struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int32         `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetFullChat) Reset()         { *m = TLMessagesGetFullChat{} }
func (m *TLMessagesGetFullChat) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetFullChat) ProtoMessage()    {}
func (*TLMessagesGetFullChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{131}
}
func (m *TLMessagesGetFullChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetFullChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetFullChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetFullChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetFullChat.Merge(dst, src)
}
func (m *TLMessagesGetFullChat) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetFullChat) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetFullChat.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetFullChat proto.InternalMessageInfo

func (m *TLMessagesGetFullChat) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetFullChat) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.editChatTitle#dc452855 chat_id:int title:string = Updates;
type TLMessagesEditChatTitle struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int32         `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Title                string        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesEditChatTitle) Reset()         { *m = TLMessagesEditChatTitle{} }
func (m *TLMessagesEditChatTitle) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatTitle) ProtoMessage()    {}
func (*TLMessagesEditChatTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{132}
}
func (m *TLMessagesEditChatTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesEditChatTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatTitle.Merge(dst, src)
}
func (m *TLMessagesEditChatTitle) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatTitle.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatTitle proto.InternalMessageInfo

func (m *TLMessagesEditChatTitle) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatTitle) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesEditChatTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.editChatPhoto#ca4c79d8 chat_id:int photo:InputChatPhoto = Updates;
type TLMessagesEditChatPhoto struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int32           `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Photo                *InputChatPhoto `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLMessagesEditChatPhoto) Reset()         { *m = TLMessagesEditChatPhoto{} }
func (m *TLMessagesEditChatPhoto) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatPhoto) ProtoMessage()    {}
func (*TLMessagesEditChatPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{133}
}
func (m *TLMessagesEditChatPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesEditChatPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatPhoto.Merge(dst, src)
}
func (m *TLMessagesEditChatPhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatPhoto proto.InternalMessageInfo

func (m *TLMessagesEditChatPhoto) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatPhoto) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesEditChatPhoto) GetPhoto() *InputChatPhoto {
	if m != nil {
		return m.Photo
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.addChatUser#f9a0aa09 chat_id:int user_id:InputUser fwd_limit:int = Updates;
type TLMessagesAddChatUser struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int32         `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FwdLimit             int32         `protobuf:"varint,4,opt,name=fwd_limit,json=fwdLimit,proto3" json:"fwd_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesAddChatUser) Reset()         { *m = TLMessagesAddChatUser{} }
func (m *TLMessagesAddChatUser) String() string { return proto.CompactTextString(m) }
func (*TLMessagesAddChatUser) ProtoMessage()    {}
func (*TLMessagesAddChatUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{134}
}
func (m *TLMessagesAddChatUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesAddChatUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesAddChatUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesAddChatUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesAddChatUser.Merge(dst, src)
}
func (m *TLMessagesAddChatUser) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesAddChatUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesAddChatUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesAddChatUser proto.InternalMessageInfo

func (m *TLMessagesAddChatUser) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesAddChatUser) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesAddChatUser) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesAddChatUser) GetFwdLimit() int32 {
	if m != nil {
		return m.FwdLimit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.deleteChatUser#e0611f16 chat_id:int user_id:InputUser = Updates;
type TLMessagesDeleteChatUser struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int32         `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeleteChatUser) Reset()         { *m = TLMessagesDeleteChatUser{} }
func (m *TLMessagesDeleteChatUser) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteChatUser) ProtoMessage()    {}
func (*TLMessagesDeleteChatUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{135}
}
func (m *TLMessagesDeleteChatUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteChatUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteChatUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesDeleteChatUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteChatUser.Merge(dst, src)
}
func (m *TLMessagesDeleteChatUser) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteChatUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteChatUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteChatUser proto.InternalMessageInfo

func (m *TLMessagesDeleteChatUser) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteChatUser) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesDeleteChatUser) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.createChat#9cb126e users:Vector<InputUser> title:string = Updates;
type TLMessagesCreateChat struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Users                []*InputUser  `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	Title                string        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesCreateChat) Reset()         { *m = TLMessagesCreateChat{} }
func (m *TLMessagesCreateChat) String() string { return proto.CompactTextString(m) }
func (*TLMessagesCreateChat) ProtoMessage()    {}
func (*TLMessagesCreateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{136}
}
func (m *TLMessagesCreateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesCreateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesCreateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesCreateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesCreateChat.Merge(dst, src)
}
func (m *TLMessagesCreateChat) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesCreateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesCreateChat.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesCreateChat proto.InternalMessageInfo

func (m *TLMessagesCreateChat) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesCreateChat) GetUsers() []*InputUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *TLMessagesCreateChat) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.getDhConfig#26cf8950 version:int random_length:int = messages.DhConfig;
type TLMessagesGetDhConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Version              int32         `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	RandomLength         int32         `protobuf:"varint,3,opt,name=random_length,json=randomLength,proto3" json:"random_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetDhConfig) Reset()         { *m = TLMessagesGetDhConfig{} }
func (m *TLMessagesGetDhConfig) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDhConfig) ProtoMessage()    {}
func (*TLMessagesGetDhConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{137}
}
func (m *TLMessagesGetDhConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDhConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDhConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetDhConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDhConfig.Merge(dst, src)
}
func (m *TLMessagesGetDhConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDhConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDhConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDhConfig proto.InternalMessageInfo

func (m *TLMessagesGetDhConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetDhConfig) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TLMessagesGetDhConfig) GetRandomLength() int32 {
	if m != nil {
		return m.RandomLength
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.requestEncryption#f64daf43 user_id:InputUser random_id:int g_a:bytes = EncryptedChat;
type TLMessagesRequestEncryption struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RandomId             int32         `protobuf:"varint,3,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	GA                   []byte        `protobuf:"bytes,4,opt,name=g_a,json=gA,proto3" json:"g_a,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesRequestEncryption) Reset()         { *m = TLMessagesRequestEncryption{} }
func (m *TLMessagesRequestEncryption) String() string { return proto.CompactTextString(m) }
func (*TLMessagesRequestEncryption) ProtoMessage()    {}
func (*TLMessagesRequestEncryption) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{138}
}
func (m *TLMessagesRequestEncryption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesRequestEncryption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesRequestEncryption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesRequestEncryption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesRequestEncryption.Merge(dst, src)
}
func (m *TLMessagesRequestEncryption) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesRequestEncryption) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesRequestEncryption.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesRequestEncryption proto.InternalMessageInfo

func (m *TLMessagesRequestEncryption) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesRequestEncryption) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesRequestEncryption) GetRandomId() int32 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesRequestEncryption) GetGA() []byte {
	if m != nil {
		return m.GA
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.acceptEncryption#3dbc0415 peer:InputEncryptedChat g_b:bytes key_fingerprint:long = EncryptedChat;
type TLMessagesAcceptEncryption struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	GB                   []byte              `protobuf:"bytes,3,opt,name=g_b,json=gB,proto3" json:"g_b,omitempty"`
	KeyFingerprint       int64               `protobuf:"varint,4,opt,name=key_fingerprint,json=keyFingerprint,proto3" json:"key_fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesAcceptEncryption) Reset()         { *m = TLMessagesAcceptEncryption{} }
func (m *TLMessagesAcceptEncryption) String() string { return proto.CompactTextString(m) }
func (*TLMessagesAcceptEncryption) ProtoMessage()    {}
func (*TLMessagesAcceptEncryption) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{139}
}
func (m *TLMessagesAcceptEncryption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesAcceptEncryption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesAcceptEncryption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesAcceptEncryption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesAcceptEncryption.Merge(dst, src)
}
func (m *TLMessagesAcceptEncryption) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesAcceptEncryption) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesAcceptEncryption.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesAcceptEncryption proto.InternalMessageInfo

func (m *TLMessagesAcceptEncryption) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesAcceptEncryption) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesAcceptEncryption) GetGB() []byte {
	if m != nil {
		return m.GB
	}
	return nil
}

func (m *TLMessagesAcceptEncryption) GetKeyFingerprint() int64 {
	if m != nil {
		return m.KeyFingerprint
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.discardEncryption#edd923c5 chat_id:int = Bool;
type TLMessagesDiscardEncryption struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int32         `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDiscardEncryption) Reset()         { *m = TLMessagesDiscardEncryption{} }
func (m *TLMessagesDiscardEncryption) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDiscardEncryption) ProtoMessage()    {}
func (*TLMessagesDiscardEncryption) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{140}
}
func (m *TLMessagesDiscardEncryption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDiscardEncryption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDiscardEncryption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesDiscardEncryption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDiscardEncryption.Merge(dst, src)
}
func (m *TLMessagesDiscardEncryption) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDiscardEncryption) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDiscardEncryption.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDiscardEncryption proto.InternalMessageInfo

func (m *TLMessagesDiscardEncryption) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDiscardEncryption) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.setEncryptedTyping#791451ed peer:InputEncryptedChat typing:Bool = Bool;
type TLMessagesSetEncryptedTyping struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Typing               *Bool               `protobuf:"bytes,3,opt,name=typing,proto3" json:"typing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSetEncryptedTyping) Reset()         { *m = TLMessagesSetEncryptedTyping{} }
func (m *TLMessagesSetEncryptedTyping) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetEncryptedTyping) ProtoMessage()    {}
func (*TLMessagesSetEncryptedTyping) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{141}
}
func (m *TLMessagesSetEncryptedTyping) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetEncryptedTyping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetEncryptedTyping.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSetEncryptedTyping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetEncryptedTyping.Merge(dst, src)
}
func (m *TLMessagesSetEncryptedTyping) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetEncryptedTyping) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetEncryptedTyping.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetEncryptedTyping proto.InternalMessageInfo

func (m *TLMessagesSetEncryptedTyping) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetEncryptedTyping) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetEncryptedTyping) GetTyping() *Bool {
	if m != nil {
		return m.Typing
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.readEncryptedHistory#7f4b690a peer:InputEncryptedChat max_date:int = Bool;
type TLMessagesReadEncryptedHistory struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	MaxDate              int32               `protobuf:"varint,3,opt,name=max_date,json=maxDate,proto3" json:"max_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesReadEncryptedHistory) Reset()         { *m = TLMessagesReadEncryptedHistory{} }
func (m *TLMessagesReadEncryptedHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadEncryptedHistory) ProtoMessage()    {}
func (*TLMessagesReadEncryptedHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{142}
}
func (m *TLMessagesReadEncryptedHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadEncryptedHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadEncryptedHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReadEncryptedHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadEncryptedHistory.Merge(dst, src)
}
func (m *TLMessagesReadEncryptedHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadEncryptedHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadEncryptedHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadEncryptedHistory proto.InternalMessageInfo

func (m *TLMessagesReadEncryptedHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadEncryptedHistory) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReadEncryptedHistory) GetMaxDate() int32 {
	if m != nil {
		return m.MaxDate
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.sendEncrypted#44fa7a15 flags:# silent:flags.0?true peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
type TLMessagesSendEncrypted struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool                `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64               `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Data                 []byte              `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendEncrypted) Reset()         { *m = TLMessagesSendEncrypted{} }
func (m *TLMessagesSendEncrypted) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendEncrypted) ProtoMessage()    {}
func (*TLMessagesSendEncrypted) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{143}
}
func (m *TLMessagesSendEncrypted) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendEncrypted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendEncrypted.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSendEncrypted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendEncrypted.Merge(dst, src)
}
func (m *TLMessagesSendEncrypted) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendEncrypted) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendEncrypted.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendEncrypted proto.InternalMessageInfo

func (m *TLMessagesSendEncrypted) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendEncrypted) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendEncrypted) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendEncrypted) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendEncrypted) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.sendEncryptedFile#5559481d flags:# silent:flags.0?true peer:InputEncryptedChat random_id:long data:bytes file:InputEncryptedFile = messages.SentEncryptedMessage;
type TLMessagesSendEncryptedFile struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool                `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64               `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Data                 []byte              `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	File                 *InputEncryptedFile `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendEncryptedFile) Reset()         { *m = TLMessagesSendEncryptedFile{} }
func (m *TLMessagesSendEncryptedFile) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendEncryptedFile) ProtoMessage()    {}
func (*TLMessagesSendEncryptedFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{144}
}
func (m *TLMessagesSendEncryptedFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendEncryptedFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendEncryptedFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSendEncryptedFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendEncryptedFile.Merge(dst, src)
}
func (m *TLMessagesSendEncryptedFile) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendEncryptedFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendEncryptedFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendEncryptedFile proto.InternalMessageInfo

func (m *TLMessagesSendEncryptedFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendEncryptedFile) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendEncryptedFile) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendEncryptedFile) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendEncryptedFile) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TLMessagesSendEncryptedFile) GetFile() *InputEncryptedFile {
	if m != nil {
		return m.File
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.sendEncryptedService#32d439a4 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
type TLMessagesSendEncryptedService struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64               `protobuf:"varint,3,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Data                 []byte              `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendEncryptedService) Reset()         { *m = TLMessagesSendEncryptedService{} }
func (m *TLMessagesSendEncryptedService) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendEncryptedService) ProtoMessage()    {}
func (*TLMessagesSendEncryptedService) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{145}
}
func (m *TLMessagesSendEncryptedService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendEncryptedService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendEncryptedService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSendEncryptedService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendEncryptedService.Merge(dst, src)
}
func (m *TLMessagesSendEncryptedService) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendEncryptedService) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendEncryptedService.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendEncryptedService proto.InternalMessageInfo

func (m *TLMessagesSendEncryptedService) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendEncryptedService) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendEncryptedService) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendEncryptedService) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.receivedQueue#55a5bb66 max_qts:int = Vector<long>;
type TLMessagesReceivedQueue struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MaxQts               int32         `protobuf:"varint,2,opt,name=max_qts,json=maxQts,proto3" json:"max_qts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReceivedQueue) Reset()         { *m = TLMessagesReceivedQueue{} }
func (m *TLMessagesReceivedQueue) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReceivedQueue) ProtoMessage()    {}
func (*TLMessagesReceivedQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{146}
}
func (m *TLMessagesReceivedQueue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReceivedQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReceivedQueue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReceivedQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReceivedQueue.Merge(dst, src)
}
func (m *TLMessagesReceivedQueue) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReceivedQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReceivedQueue.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReceivedQueue proto.InternalMessageInfo

func (m *TLMessagesReceivedQueue) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReceivedQueue) GetMaxQts() int32 {
	if m != nil {
		return m.MaxQts
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.reportEncryptedSpam#4b0c8c0f peer:InputEncryptedChat = Bool;
type TLMessagesReportEncryptedSpam struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesReportEncryptedSpam) Reset()         { *m = TLMessagesReportEncryptedSpam{} }
func (m *TLMessagesReportEncryptedSpam) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReportEncryptedSpam) ProtoMessage()    {}
func (*TLMessagesReportEncryptedSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{147}
}
func (m *TLMessagesReportEncryptedSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReportEncryptedSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReportEncryptedSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReportEncryptedSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReportEncryptedSpam.Merge(dst, src)
}
func (m *TLMessagesReportEncryptedSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReportEncryptedSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReportEncryptedSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReportEncryptedSpam proto.InternalMessageInfo

func (m *TLMessagesReportEncryptedSpam) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReportEncryptedSpam) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.readMessageContents#36a73f77 id:Vector<int> = messages.AffectedMessages;
type TLMessagesReadMessageContents struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []int32       `protobuf:"varint,2,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadMessageContents) Reset()         { *m = TLMessagesReadMessageContents{} }
func (m *TLMessagesReadMessageContents) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadMessageContents) ProtoMessage()    {}
func (*TLMessagesReadMessageContents) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{148}
}
func (m *TLMessagesReadMessageContents) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadMessageContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadMessageContents.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReadMessageContents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadMessageContents.Merge(dst, src)
}
func (m *TLMessagesReadMessageContents) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadMessageContents) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadMessageContents.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadMessageContents proto.InternalMessageInfo

func (m *TLMessagesReadMessageContents) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadMessageContents) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getStickers#43d4f2c emoticon:string hash:int = messages.Stickers;
type TLMessagesGetStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Emoticon             string        `protobuf:"bytes,2,opt,name=emoticon,proto3" json:"emoticon,omitempty"`
	Hash_INT32           int32         `protobuf:"varint,3,opt,name=hash_INT32,json=hashINT32,proto3" json:"hash_INT32,omitempty"`
	ExcludeFeatured      bool          `protobuf:"varint,4,opt,name=exclude_featured,json=excludeFeatured,proto3" json:"exclude_featured,omitempty"`
	Hash_STRING          string        `protobuf:"bytes,5,opt,name=hash_STRING,json=hashSTRING,proto3" json:"hash_STRING,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetStickers) Reset()         { *m = TLMessagesGetStickers{} }
func (m *TLMessagesGetStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetStickers) ProtoMessage()    {}
func (*TLMessagesGetStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{149}
}
func (m *TLMessagesGetStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetStickers.Merge(dst, src)
}
func (m *TLMessagesGetStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetStickers proto.InternalMessageInfo

func (m *TLMessagesGetStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetStickers) GetEmoticon() string {
	if m != nil {
		return m.Emoticon
	}
	return ""
}

func (m *TLMessagesGetStickers) GetHash_INT32() int32 {
	if m != nil {
		return m.Hash_INT32
	}
	return 0
}

func (m *TLMessagesGetStickers) GetExcludeFeatured() bool {
	if m != nil {
		return m.ExcludeFeatured
	}
	return false
}

func (m *TLMessagesGetStickers) GetHash_STRING() string {
	if m != nil {
		return m.Hash_STRING
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.getAllStickers#1c9618b1 hash:int = messages.AllStickers;
type TLMessagesGetAllStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetAllStickers) Reset()         { *m = TLMessagesGetAllStickers{} }
func (m *TLMessagesGetAllStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAllStickers) ProtoMessage()    {}
func (*TLMessagesGetAllStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{150}
}
func (m *TLMessagesGetAllStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAllStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAllStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetAllStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAllStickers.Merge(dst, src)
}
func (m *TLMessagesGetAllStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAllStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAllStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAllStickers proto.InternalMessageInfo

func (m *TLMessagesGetAllStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetAllStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getWebPagePreview#8b68b0cc flags:# message:string entities:flags.3?Vector<MessageEntity> = MessageMedia;
type TLMessagesGetWebPagePreview struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Entities             []*MessageEntity `protobuf:"bytes,3,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesGetWebPagePreview) Reset()         { *m = TLMessagesGetWebPagePreview{} }
func (m *TLMessagesGetWebPagePreview) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetWebPagePreview) ProtoMessage()    {}
func (*TLMessagesGetWebPagePreview) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{151}
}
func (m *TLMessagesGetWebPagePreview) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetWebPagePreview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetWebPagePreview.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetWebPagePreview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetWebPagePreview.Merge(dst, src)
}
func (m *TLMessagesGetWebPagePreview) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetWebPagePreview) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetWebPagePreview.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetWebPagePreview proto.InternalMessageInfo

func (m *TLMessagesGetWebPagePreview) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetWebPagePreview) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesGetWebPagePreview) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.exportChatInvite#df7534c peer:InputPeer = ExportedChatInvite;
type TLMessagesExportChatInvite struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	ChatId               int32         `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesExportChatInvite) Reset()         { *m = TLMessagesExportChatInvite{} }
func (m *TLMessagesExportChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesExportChatInvite) ProtoMessage()    {}
func (*TLMessagesExportChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{152}
}
func (m *TLMessagesExportChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesExportChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesExportChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesExportChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesExportChatInvite.Merge(dst, src)
}
func (m *TLMessagesExportChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesExportChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesExportChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesExportChatInvite proto.InternalMessageInfo

func (m *TLMessagesExportChatInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesExportChatInvite) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesExportChatInvite) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.checkChatInvite#3eadb1bb hash:string = ChatInvite;
type TLMessagesCheckChatInvite struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 string        `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesCheckChatInvite) Reset()         { *m = TLMessagesCheckChatInvite{} }
func (m *TLMessagesCheckChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesCheckChatInvite) ProtoMessage()    {}
func (*TLMessagesCheckChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{153}
}
func (m *TLMessagesCheckChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesCheckChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesCheckChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesCheckChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesCheckChatInvite.Merge(dst, src)
}
func (m *TLMessagesCheckChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesCheckChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesCheckChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesCheckChatInvite proto.InternalMessageInfo

func (m *TLMessagesCheckChatInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesCheckChatInvite) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.importChatInvite#6c50051c hash:string = Updates;
type TLMessagesImportChatInvite struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 string        `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesImportChatInvite) Reset()         { *m = TLMessagesImportChatInvite{} }
func (m *TLMessagesImportChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesImportChatInvite) ProtoMessage()    {}
func (*TLMessagesImportChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{154}
}
func (m *TLMessagesImportChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesImportChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesImportChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesImportChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesImportChatInvite.Merge(dst, src)
}
func (m *TLMessagesImportChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesImportChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesImportChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesImportChatInvite proto.InternalMessageInfo

func (m *TLMessagesImportChatInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesImportChatInvite) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.getStickerSet#2619a90e stickerset:InputStickerSet = messages.StickerSet;
type TLMessagesGetStickerSet struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,2,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesGetStickerSet) Reset()         { *m = TLMessagesGetStickerSet{} }
func (m *TLMessagesGetStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetStickerSet) ProtoMessage()    {}
func (*TLMessagesGetStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{155}
}
func (m *TLMessagesGetStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetStickerSet.Merge(dst, src)
}
func (m *TLMessagesGetStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetStickerSet proto.InternalMessageInfo

func (m *TLMessagesGetStickerSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetStickerSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.installStickerSet#c78fe460 stickerset:InputStickerSet archived:Bool = messages.StickerSetInstallResult;
type TLMessagesInstallStickerSet struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,2,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	Archived             *Bool            `protobuf:"bytes,3,opt,name=archived,proto3" json:"archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesInstallStickerSet) Reset()         { *m = TLMessagesInstallStickerSet{} }
func (m *TLMessagesInstallStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLMessagesInstallStickerSet) ProtoMessage()    {}
func (*TLMessagesInstallStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{156}
}
func (m *TLMessagesInstallStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesInstallStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesInstallStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesInstallStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesInstallStickerSet.Merge(dst, src)
}
func (m *TLMessagesInstallStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesInstallStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesInstallStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesInstallStickerSet proto.InternalMessageInfo

func (m *TLMessagesInstallStickerSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesInstallStickerSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

func (m *TLMessagesInstallStickerSet) GetArchived() *Bool {
	if m != nil {
		return m.Archived
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.uninstallStickerSet#f96e55de stickerset:InputStickerSet = Bool;
type TLMessagesUninstallStickerSet struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,2,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesUninstallStickerSet) Reset()         { *m = TLMessagesUninstallStickerSet{} }
func (m *TLMessagesUninstallStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUninstallStickerSet) ProtoMessage()    {}
func (*TLMessagesUninstallStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{157}
}
func (m *TLMessagesUninstallStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUninstallStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUninstallStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesUninstallStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUninstallStickerSet.Merge(dst, src)
}
func (m *TLMessagesUninstallStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUninstallStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUninstallStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUninstallStickerSet proto.InternalMessageInfo

func (m *TLMessagesUninstallStickerSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUninstallStickerSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.startBot#e6df7378 bot:InputUser peer:InputPeer random_id:long start_param:string = Updates;
type TLMessagesStartBot struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Bot                  *InputUser    `protobuf:"bytes,2,opt,name=bot,proto3" json:"bot,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64         `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	StartParam           string        `protobuf:"bytes,5,opt,name=start_param,json=startParam,proto3" json:"start_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesStartBot) Reset()         { *m = TLMessagesStartBot{} }
func (m *TLMessagesStartBot) String() string { return proto.CompactTextString(m) }
func (*TLMessagesStartBot) ProtoMessage()    {}
func (*TLMessagesStartBot) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{158}
}
func (m *TLMessagesStartBot) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesStartBot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesStartBot.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesStartBot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesStartBot.Merge(dst, src)
}
func (m *TLMessagesStartBot) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesStartBot) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesStartBot.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesStartBot proto.InternalMessageInfo

func (m *TLMessagesStartBot) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesStartBot) GetBot() *InputUser {
	if m != nil {
		return m.Bot
	}
	return nil
}

func (m *TLMessagesStartBot) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesStartBot) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesStartBot) GetStartParam() string {
	if m != nil {
		return m.StartParam
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.getMessagesViews#5784d3e1 peer:InputPeer id:Vector<int> increment:Bool = messages.MessageViews;
type TLMessagesGetMessagesViews5784D3E1 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	Increment            *Bool         `protobuf:"bytes,4,opt,name=increment,proto3" json:"increment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetMessagesViews5784D3E1) Reset()         { *m = TLMessagesGetMessagesViews5784D3E1{} }
func (m *TLMessagesGetMessagesViews5784D3E1) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessagesViews5784D3E1) ProtoMessage()    {}
func (*TLMessagesGetMessagesViews5784D3E1) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{159}
}
func (m *TLMessagesGetMessagesViews5784D3E1) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessagesViews5784D3E1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessagesViews5784D3E1.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetMessagesViews5784D3E1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessagesViews5784D3E1.Merge(dst, src)
}
func (m *TLMessagesGetMessagesViews5784D3E1) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessagesViews5784D3E1) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessagesViews5784D3E1.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessagesViews5784D3E1 proto.InternalMessageInfo

func (m *TLMessagesGetMessagesViews5784D3E1) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMessagesViews5784D3E1) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetMessagesViews5784D3E1) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesGetMessagesViews5784D3E1) GetIncrement() *Bool {
	if m != nil {
		return m.Increment
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.editChatAdmin#a9e69f2e chat_id:int user_id:InputUser is_admin:Bool = Bool;
type TLMessagesEditChatAdmin struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int32         `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsAdmin              *Bool         `protobuf:"bytes,4,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesEditChatAdmin) Reset()         { *m = TLMessagesEditChatAdmin{} }
func (m *TLMessagesEditChatAdmin) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatAdmin) ProtoMessage()    {}
func (*TLMessagesEditChatAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{160}
}
func (m *TLMessagesEditChatAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesEditChatAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatAdmin.Merge(dst, src)
}
func (m *TLMessagesEditChatAdmin) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatAdmin proto.InternalMessageInfo

func (m *TLMessagesEditChatAdmin) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatAdmin) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesEditChatAdmin) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesEditChatAdmin) GetIsAdmin() *Bool {
	if m != nil {
		return m.IsAdmin
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.migrateChat#15a3b8e3 chat_id:int = Updates;
type TLMessagesMigrateChat struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int32         `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesMigrateChat) Reset()         { *m = TLMessagesMigrateChat{} }
func (m *TLMessagesMigrateChat) String() string { return proto.CompactTextString(m) }
func (*TLMessagesMigrateChat) ProtoMessage()    {}
func (*TLMessagesMigrateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{161}
}
func (m *TLMessagesMigrateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesMigrateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesMigrateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesMigrateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesMigrateChat.Merge(dst, src)
}
func (m *TLMessagesMigrateChat) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesMigrateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesMigrateChat.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesMigrateChat proto.InternalMessageInfo

func (m *TLMessagesMigrateChat) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesMigrateChat) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.searchGlobal#4bc6589a flags:# folder_id:flags.0?int q:string filter:MessagesFilter min_date:int max_date:int offset_rate:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
type TLMessagesSearchGlobal struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FolderId             *types.Int32Value `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	Q                    string            `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Filter               *MessagesFilter   `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	MinDate              int32             `protobuf:"varint,5,opt,name=min_date,json=minDate,proto3" json:"min_date,omitempty"`
	MaxDate              int32             `protobuf:"varint,6,opt,name=max_date,json=maxDate,proto3" json:"max_date,omitempty"`
	OffsetRate           int32             `protobuf:"varint,7,opt,name=offset_rate,json=offsetRate,proto3" json:"offset_rate,omitempty"`
	OffsetPeer           *InputPeer        `protobuf:"bytes,8,opt,name=offset_peer,json=offsetPeer,proto3" json:"offset_peer,omitempty"`
	OffsetId             int32             `protobuf:"varint,9,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32             `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	OffsetDate           int32             `protobuf:"varint,11,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSearchGlobal) Reset()         { *m = TLMessagesSearchGlobal{} }
func (m *TLMessagesSearchGlobal) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearchGlobal) ProtoMessage()    {}
func (*TLMessagesSearchGlobal) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{162}
}
func (m *TLMessagesSearchGlobal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearchGlobal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearchGlobal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSearchGlobal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearchGlobal.Merge(dst, src)
}
func (m *TLMessagesSearchGlobal) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearchGlobal) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearchGlobal.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearchGlobal proto.InternalMessageInfo

func (m *TLMessagesSearchGlobal) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSearchGlobal) GetFolderId() *types.Int32Value {
	if m != nil {
		return m.FolderId
	}
	return nil
}

func (m *TLMessagesSearchGlobal) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearchGlobal) GetFilter() *MessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLMessagesSearchGlobal) GetMinDate() int32 {
	if m != nil {
		return m.MinDate
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetMaxDate() int32 {
	if m != nil {
		return m.MaxDate
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetOffsetRate() int32 {
	if m != nil {
		return m.OffsetRate
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *TLMessagesSearchGlobal) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.reorderStickerSets#78337739 flags:# masks:flags.0?true order:Vector<long> = Bool;
type TLMessagesReorderStickerSets struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Masks                bool          `protobuf:"varint,2,opt,name=masks,proto3" json:"masks,omitempty"`
	Order                []int64       `protobuf:"varint,3,rep,packed,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReorderStickerSets) Reset()         { *m = TLMessagesReorderStickerSets{} }
func (m *TLMessagesReorderStickerSets) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReorderStickerSets) ProtoMessage()    {}
func (*TLMessagesReorderStickerSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{163}
}
func (m *TLMessagesReorderStickerSets) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReorderStickerSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReorderStickerSets.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReorderStickerSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReorderStickerSets.Merge(dst, src)
}
func (m *TLMessagesReorderStickerSets) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReorderStickerSets) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReorderStickerSets.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReorderStickerSets proto.InternalMessageInfo

func (m *TLMessagesReorderStickerSets) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReorderStickerSets) GetMasks() bool {
	if m != nil {
		return m.Masks
	}
	return false
}

func (m *TLMessagesReorderStickerSets) GetOrder() []int64 {
	if m != nil {
		return m.Order
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getDocumentByHash#338e2464 sha256:bytes size:int mime_type:string = Document;
type TLMessagesGetDocumentByHash struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Sha256               []byte        `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Size2                int32         `protobuf:"varint,3,opt,name=size2,proto3" json:"size2,omitempty"`
	MimeType             string        `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetDocumentByHash) Reset()         { *m = TLMessagesGetDocumentByHash{} }
func (m *TLMessagesGetDocumentByHash) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDocumentByHash) ProtoMessage()    {}
func (*TLMessagesGetDocumentByHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{164}
}
func (m *TLMessagesGetDocumentByHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDocumentByHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDocumentByHash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetDocumentByHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDocumentByHash.Merge(dst, src)
}
func (m *TLMessagesGetDocumentByHash) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDocumentByHash) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDocumentByHash.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDocumentByHash proto.InternalMessageInfo

func (m *TLMessagesGetDocumentByHash) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetDocumentByHash) GetSha256() []byte {
	if m != nil {
		return m.Sha256
	}
	return nil
}

func (m *TLMessagesGetDocumentByHash) GetSize2() int32 {
	if m != nil {
		return m.Size2
	}
	return 0
}

func (m *TLMessagesGetDocumentByHash) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.getSavedGifs#83bf3d52 hash:int = messages.SavedGifs;
type TLMessagesGetSavedGifs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetSavedGifs) Reset()         { *m = TLMessagesGetSavedGifs{} }
func (m *TLMessagesGetSavedGifs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSavedGifs) ProtoMessage()    {}
func (*TLMessagesGetSavedGifs) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{165}
}
func (m *TLMessagesGetSavedGifs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSavedGifs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSavedGifs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetSavedGifs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSavedGifs.Merge(dst, src)
}
func (m *TLMessagesGetSavedGifs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSavedGifs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSavedGifs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSavedGifs proto.InternalMessageInfo

func (m *TLMessagesGetSavedGifs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetSavedGifs) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.saveGif#327a30cb id:InputDocument unsave:Bool = Bool;
type TLMessagesSaveGif struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputDocument `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Unsave               *Bool          `protobuf:"bytes,3,opt,name=unsave,proto3" json:"unsave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesSaveGif) Reset()         { *m = TLMessagesSaveGif{} }
func (m *TLMessagesSaveGif) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSaveGif) ProtoMessage()    {}
func (*TLMessagesSaveGif) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{166}
}
func (m *TLMessagesSaveGif) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSaveGif) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSaveGif.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSaveGif) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSaveGif.Merge(dst, src)
}
func (m *TLMessagesSaveGif) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSaveGif) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSaveGif.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSaveGif proto.InternalMessageInfo

func (m *TLMessagesSaveGif) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSaveGif) GetId() *InputDocument {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesSaveGif) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getInlineBotResults#514e999d flags:# bot:InputUser peer:InputPeer geo_point:flags.0?InputGeoPoint query:string offset:string = messages.BotResults;
type TLMessagesGetInlineBotResults struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Bot                  *InputUser     `protobuf:"bytes,2,opt,name=bot,proto3" json:"bot,omitempty"`
	Peer                 *InputPeer     `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	GeoPoint             *InputGeoPoint `protobuf:"bytes,4,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Query                string         `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Offset               string         `protobuf:"bytes,6,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesGetInlineBotResults) Reset()         { *m = TLMessagesGetInlineBotResults{} }
func (m *TLMessagesGetInlineBotResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetInlineBotResults) ProtoMessage()    {}
func (*TLMessagesGetInlineBotResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{167}
}
func (m *TLMessagesGetInlineBotResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetInlineBotResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetInlineBotResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetInlineBotResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetInlineBotResults.Merge(dst, src)
}
func (m *TLMessagesGetInlineBotResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetInlineBotResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetInlineBotResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetInlineBotResults proto.InternalMessageInfo

func (m *TLMessagesGetInlineBotResults) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetInlineBotResults) GetBot() *InputUser {
	if m != nil {
		return m.Bot
	}
	return nil
}

func (m *TLMessagesGetInlineBotResults) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetInlineBotResults) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLMessagesGetInlineBotResults) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *TLMessagesGetInlineBotResults) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.setInlineBotResults#eb5ea206 flags:# gallery:flags.0?true private:flags.1?true query_id:long results:Vector<InputBotInlineResult> cache_time:int next_offset:flags.2?string switch_pm:flags.3?InlineBotSwitchPM = Bool;
type TLMessagesSetInlineBotResults struct {
	Constructor          TLConstructor           `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Gallery              bool                    `protobuf:"varint,2,opt,name=gallery,proto3" json:"gallery,omitempty"`
	Private              bool                    `protobuf:"varint,3,opt,name=private,proto3" json:"private,omitempty"`
	QueryId              int64                   `protobuf:"varint,4,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Results              []*InputBotInlineResult `protobuf:"bytes,5,rep,name=results,proto3" json:"results,omitempty"`
	CacheTime            int32                   `protobuf:"varint,6,opt,name=cache_time,json=cacheTime,proto3" json:"cache_time,omitempty"`
	NextOffset           *types.StringValue      `protobuf:"bytes,7,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	SwitchPm             *InlineBotSwitchPM      `protobuf:"bytes,8,opt,name=switch_pm,json=switchPm,proto3" json:"switch_pm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TLMessagesSetInlineBotResults) Reset()         { *m = TLMessagesSetInlineBotResults{} }
func (m *TLMessagesSetInlineBotResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetInlineBotResults) ProtoMessage()    {}
func (*TLMessagesSetInlineBotResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{168}
}
func (m *TLMessagesSetInlineBotResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetInlineBotResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetInlineBotResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSetInlineBotResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetInlineBotResults.Merge(dst, src)
}
func (m *TLMessagesSetInlineBotResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetInlineBotResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetInlineBotResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetInlineBotResults proto.InternalMessageInfo

func (m *TLMessagesSetInlineBotResults) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetInlineBotResults) GetGallery() bool {
	if m != nil {
		return m.Gallery
	}
	return false
}

func (m *TLMessagesSetInlineBotResults) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *TLMessagesSetInlineBotResults) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetInlineBotResults) GetResults() []*InputBotInlineResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *TLMessagesSetInlineBotResults) GetCacheTime() int32 {
	if m != nil {
		return m.CacheTime
	}
	return 0
}

func (m *TLMessagesSetInlineBotResults) GetNextOffset() *types.StringValue {
	if m != nil {
		return m.NextOffset
	}
	return nil
}

func (m *TLMessagesSetInlineBotResults) GetSwitchPm() *InlineBotSwitchPM {
	if m != nil {
		return m.SwitchPm
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.sendInlineBotResult#220815b0 flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true hide_via:flags.11?true peer:InputPeer reply_to_msg_id:flags.0?int random_id:long query_id:long id:string schedule_date:flags.10?int = Updates;
type TLMessagesSendInlineBotResult struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool              `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool              `protobuf:"varint,3,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool              `protobuf:"varint,4,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	HideVia              bool              `protobuf:"varint,5,opt,name=hide_via,json=hideVia,proto3" json:"hide_via,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,6,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         *types.Int32Value `protobuf:"bytes,7,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	RandomId             int64             `protobuf:"varint,8,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	QueryId              int64             `protobuf:"varint,9,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Id                   string            `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	ScheduleDate         *types.Int32Value `protobuf:"bytes,11,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSendInlineBotResult) Reset()         { *m = TLMessagesSendInlineBotResult{} }
func (m *TLMessagesSendInlineBotResult) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendInlineBotResult) ProtoMessage()    {}
func (*TLMessagesSendInlineBotResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{169}
}
func (m *TLMessagesSendInlineBotResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendInlineBotResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendInlineBotResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSendInlineBotResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendInlineBotResult.Merge(dst, src)
}
func (m *TLMessagesSendInlineBotResult) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendInlineBotResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendInlineBotResult.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendInlineBotResult proto.InternalMessageInfo

func (m *TLMessagesSendInlineBotResult) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendInlineBotResult) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetHideVia() bool {
	if m != nil {
		return m.HideVia
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendInlineBotResult) GetReplyToMsgId() *types.Int32Value {
	if m != nil {
		return m.ReplyToMsgId
	}
	return nil
}

func (m *TLMessagesSendInlineBotResult) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendInlineBotResult) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSendInlineBotResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TLMessagesSendInlineBotResult) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getMessageEditData#fda68d36 peer:InputPeer id:int = messages.MessageEditData;
type TLMessagesGetMessageEditData struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32         `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetMessageEditData) Reset()         { *m = TLMessagesGetMessageEditData{} }
func (m *TLMessagesGetMessageEditData) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessageEditData) ProtoMessage()    {}
func (*TLMessagesGetMessageEditData) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{170}
}
func (m *TLMessagesGetMessageEditData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessageEditData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessageEditData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetMessageEditData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessageEditData.Merge(dst, src)
}
func (m *TLMessagesGetMessageEditData) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessageEditData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessageEditData.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessageEditData proto.InternalMessageInfo

func (m *TLMessagesGetMessageEditData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMessageEditData) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetMessageEditData) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.editMessage#48f71778 flags:# no_webpage:flags.1?true peer:InputPeer id:int message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.15?int = Updates;
type TLMessagesEditMessage struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	NoWebpage            bool               `protobuf:"varint,2,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32              `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Message              *types.StringValue `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Media                *InputMedia        `protobuf:"bytes,6,opt,name=media,proto3" json:"media,omitempty"`
	ReplyMarkup          *ReplyMarkup       `protobuf:"bytes,7,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity   `protobuf:"bytes,8,rep,name=entities,proto3" json:"entities,omitempty"`
	ScheduleDate         *types.Int32Value  `protobuf:"bytes,9,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	StopGeoLive          bool               `protobuf:"varint,10,opt,name=stop_geo_live,json=stopGeoLive,proto3" json:"stop_geo_live,omitempty"`
	GeoPoint             *InputGeoPoint     `protobuf:"bytes,11,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesEditMessage) Reset()         { *m = TLMessagesEditMessage{} }
func (m *TLMessagesEditMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditMessage) ProtoMessage()    {}
func (*TLMessagesEditMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{171}
}
func (m *TLMessagesEditMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesEditMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditMessage.Merge(dst, src)
}
func (m *TLMessagesEditMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditMessage proto.InternalMessageInfo

func (m *TLMessagesEditMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditMessage) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesEditMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesEditMessage) GetMessage() *types.StringValue {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TLMessagesEditMessage) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *TLMessagesEditMessage) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesEditMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesEditMessage) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

func (m *TLMessagesEditMessage) GetStopGeoLive() bool {
	if m != nil {
		return m.StopGeoLive
	}
	return false
}

func (m *TLMessagesEditMessage) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.editInlineBotMessage#83557dba flags:# no_webpage:flags.1?true id:InputBotInlineMessageID message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Bool;
type TLMessagesEditInlineBotMessage struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	NoWebpage            bool                     `protobuf:"varint,2,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	Id                   *InputBotInlineMessageID `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Message              *types.StringValue       `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Media                *InputMedia              `protobuf:"bytes,5,opt,name=media,proto3" json:"media,omitempty"`
	ReplyMarkup          *ReplyMarkup             `protobuf:"bytes,6,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity         `protobuf:"bytes,7,rep,name=entities,proto3" json:"entities,omitempty"`
	StopGeoLive          bool                     `protobuf:"varint,8,opt,name=stop_geo_live,json=stopGeoLive,proto3" json:"stop_geo_live,omitempty"`
	GeoPoint             *InputGeoPoint           `protobuf:"bytes,9,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLMessagesEditInlineBotMessage) Reset()         { *m = TLMessagesEditInlineBotMessage{} }
func (m *TLMessagesEditInlineBotMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditInlineBotMessage) ProtoMessage()    {}
func (*TLMessagesEditInlineBotMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{172}
}
func (m *TLMessagesEditInlineBotMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditInlineBotMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditInlineBotMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesEditInlineBotMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditInlineBotMessage.Merge(dst, src)
}
func (m *TLMessagesEditInlineBotMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditInlineBotMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditInlineBotMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditInlineBotMessage proto.InternalMessageInfo

func (m *TLMessagesEditInlineBotMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditInlineBotMessage) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesEditInlineBotMessage) GetId() *InputBotInlineMessageID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetMessage() *types.StringValue {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetStopGeoLive() bool {
	if m != nil {
		return m.StopGeoLive
	}
	return false
}

func (m *TLMessagesEditInlineBotMessage) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getBotCallbackAnswer#9342ca07 flags:# game:flags.1?true peer:InputPeer msg_id:int data:flags.0?bytes password:flags.2?InputCheckPasswordSRP = messages.BotCallbackAnswer;
type TLMessagesGetBotCallbackAnswer struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Game                 bool                   `protobuf:"varint,2,opt,name=game,proto3" json:"game,omitempty"`
	Peer                 *InputPeer             `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32                  `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Data                 []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLMessagesGetBotCallbackAnswer) Reset()         { *m = TLMessagesGetBotCallbackAnswer{} }
func (m *TLMessagesGetBotCallbackAnswer) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetBotCallbackAnswer) ProtoMessage()    {}
func (*TLMessagesGetBotCallbackAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{173}
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetBotCallbackAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetBotCallbackAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetBotCallbackAnswer.Merge(dst, src)
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetBotCallbackAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetBotCallbackAnswer proto.InternalMessageInfo

func (m *TLMessagesGetBotCallbackAnswer) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetBotCallbackAnswer) GetGame() bool {
	if m != nil {
		return m.Game
	}
	return false
}

func (m *TLMessagesGetBotCallbackAnswer) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetBotCallbackAnswer) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesGetBotCallbackAnswer) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TLMessagesGetBotCallbackAnswer) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.setBotCallbackAnswer#d58f130a flags:# alert:flags.1?true query_id:long message:flags.0?string url:flags.2?string cache_time:int = Bool;
type TLMessagesSetBotCallbackAnswer struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Alert                bool               `protobuf:"varint,2,opt,name=alert,proto3" json:"alert,omitempty"`
	QueryId              int64              `protobuf:"varint,3,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Message              *types.StringValue `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Url                  *types.StringValue `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	CacheTime            int32              `protobuf:"varint,6,opt,name=cache_time,json=cacheTime,proto3" json:"cache_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesSetBotCallbackAnswer) Reset()         { *m = TLMessagesSetBotCallbackAnswer{} }
func (m *TLMessagesSetBotCallbackAnswer) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetBotCallbackAnswer) ProtoMessage()    {}
func (*TLMessagesSetBotCallbackAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{174}
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetBotCallbackAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSetBotCallbackAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetBotCallbackAnswer.Merge(dst, src)
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetBotCallbackAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetBotCallbackAnswer proto.InternalMessageInfo

func (m *TLMessagesSetBotCallbackAnswer) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetBotCallbackAnswer) GetAlert() bool {
	if m != nil {
		return m.Alert
	}
	return false
}

func (m *TLMessagesSetBotCallbackAnswer) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetBotCallbackAnswer) GetMessage() *types.StringValue {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TLMessagesSetBotCallbackAnswer) GetUrl() *types.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *TLMessagesSetBotCallbackAnswer) GetCacheTime() int32 {
	if m != nil {
		return m.CacheTime
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getPeerDialogs#e470bcfd peers:Vector<InputDialogPeer> = messages.PeerDialogs;
type TLMessagesGetPeerDialogs struct {
	Constructor                 TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peers_VECTORINPUTDIALOGPEER []*InputDialogPeer `protobuf:"bytes,2,rep,name=peers_VECTORINPUTDIALOGPEER,json=peersVECTORINPUTDIALOGPEER,proto3" json:"peers_VECTORINPUTDIALOGPEER,omitempty"`
	Peers_VECTORINPUTPEER       []*InputPeer       `protobuf:"bytes,3,rep,name=peers_VECTORINPUTPEER,json=peersVECTORINPUTPEER,proto3" json:"peers_VECTORINPUTPEER,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}           `json:"-"`
	XXX_unrecognized            []byte             `json:"-"`
	XXX_sizecache               int32              `json:"-"`
}

func (m *TLMessagesGetPeerDialogs) Reset()         { *m = TLMessagesGetPeerDialogs{} }
func (m *TLMessagesGetPeerDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPeerDialogs) ProtoMessage()    {}
func (*TLMessagesGetPeerDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{175}
}
func (m *TLMessagesGetPeerDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPeerDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPeerDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetPeerDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPeerDialogs.Merge(dst, src)
}
func (m *TLMessagesGetPeerDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPeerDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPeerDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPeerDialogs proto.InternalMessageInfo

func (m *TLMessagesGetPeerDialogs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPeerDialogs) GetPeers_VECTORINPUTDIALOGPEER() []*InputDialogPeer {
	if m != nil {
		return m.Peers_VECTORINPUTDIALOGPEER
	}
	return nil
}

func (m *TLMessagesGetPeerDialogs) GetPeers_VECTORINPUTPEER() []*InputPeer {
	if m != nil {
		return m.Peers_VECTORINPUTPEER
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.saveDraft#bc39e14b flags:# no_webpage:flags.1?true reply_to_msg_id:flags.0?int peer:InputPeer message:string entities:flags.3?Vector<MessageEntity> = Bool;
type TLMessagesSaveDraft struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	NoWebpage            bool              `protobuf:"varint,2,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	ReplyToMsgId         *types.Int32Value `protobuf:"bytes,3,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Message              string            `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Entities             []*MessageEntity  `protobuf:"bytes,6,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSaveDraft) Reset()         { *m = TLMessagesSaveDraft{} }
func (m *TLMessagesSaveDraft) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSaveDraft) ProtoMessage()    {}
func (*TLMessagesSaveDraft) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{176}
}
func (m *TLMessagesSaveDraft) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSaveDraft) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSaveDraft.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSaveDraft) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSaveDraft.Merge(dst, src)
}
func (m *TLMessagesSaveDraft) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSaveDraft) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSaveDraft.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSaveDraft proto.InternalMessageInfo

func (m *TLMessagesSaveDraft) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSaveDraft) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesSaveDraft) GetReplyToMsgId() *types.Int32Value {
	if m != nil {
		return m.ReplyToMsgId
	}
	return nil
}

func (m *TLMessagesSaveDraft) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSaveDraft) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSaveDraft) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getAllDrafts#6a3f8d65 = Updates;
type TLMessagesGetAllDrafts struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetAllDrafts) Reset()         { *m = TLMessagesGetAllDrafts{} }
func (m *TLMessagesGetAllDrafts) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAllDrafts) ProtoMessage()    {}
func (*TLMessagesGetAllDrafts) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{177}
}
func (m *TLMessagesGetAllDrafts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAllDrafts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAllDrafts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetAllDrafts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAllDrafts.Merge(dst, src)
}
func (m *TLMessagesGetAllDrafts) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAllDrafts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAllDrafts.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAllDrafts proto.InternalMessageInfo

func (m *TLMessagesGetAllDrafts) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// messages.getFeaturedStickers#2dacca4f hash:int = messages.FeaturedStickers;
type TLMessagesGetFeaturedStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetFeaturedStickers) Reset()         { *m = TLMessagesGetFeaturedStickers{} }
func (m *TLMessagesGetFeaturedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetFeaturedStickers) ProtoMessage()    {}
func (*TLMessagesGetFeaturedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{178}
}
func (m *TLMessagesGetFeaturedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetFeaturedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetFeaturedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetFeaturedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetFeaturedStickers.Merge(dst, src)
}
func (m *TLMessagesGetFeaturedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetFeaturedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetFeaturedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetFeaturedStickers proto.InternalMessageInfo

func (m *TLMessagesGetFeaturedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetFeaturedStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.readFeaturedStickers#5b118126 id:Vector<long> = Bool;
type TLMessagesReadFeaturedStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []int64       `protobuf:"varint,2,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadFeaturedStickers) Reset()         { *m = TLMessagesReadFeaturedStickers{} }
func (m *TLMessagesReadFeaturedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadFeaturedStickers) ProtoMessage()    {}
func (*TLMessagesReadFeaturedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{179}
}
func (m *TLMessagesReadFeaturedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadFeaturedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadFeaturedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReadFeaturedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadFeaturedStickers.Merge(dst, src)
}
func (m *TLMessagesReadFeaturedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadFeaturedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadFeaturedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadFeaturedStickers proto.InternalMessageInfo

func (m *TLMessagesReadFeaturedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadFeaturedStickers) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getRecentStickers#5ea192c9 flags:# attached:flags.0?true hash:int = messages.RecentStickers;
type TLMessagesGetRecentStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Attached             bool          `protobuf:"varint,2,opt,name=attached,proto3" json:"attached,omitempty"`
	Hash                 int32         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetRecentStickers) Reset()         { *m = TLMessagesGetRecentStickers{} }
func (m *TLMessagesGetRecentStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetRecentStickers) ProtoMessage()    {}
func (*TLMessagesGetRecentStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{180}
}
func (m *TLMessagesGetRecentStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetRecentStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetRecentStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetRecentStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetRecentStickers.Merge(dst, src)
}
func (m *TLMessagesGetRecentStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetRecentStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetRecentStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetRecentStickers proto.InternalMessageInfo

func (m *TLMessagesGetRecentStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetRecentStickers) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

func (m *TLMessagesGetRecentStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.saveRecentSticker#392718f8 flags:# attached:flags.0?true id:InputDocument unsave:Bool = Bool;
type TLMessagesSaveRecentSticker struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Attached             bool           `protobuf:"varint,2,opt,name=attached,proto3" json:"attached,omitempty"`
	Id                   *InputDocument `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Unsave               *Bool          `protobuf:"bytes,4,opt,name=unsave,proto3" json:"unsave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesSaveRecentSticker) Reset()         { *m = TLMessagesSaveRecentSticker{} }
func (m *TLMessagesSaveRecentSticker) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSaveRecentSticker) ProtoMessage()    {}
func (*TLMessagesSaveRecentSticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{181}
}
func (m *TLMessagesSaveRecentSticker) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSaveRecentSticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSaveRecentSticker.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSaveRecentSticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSaveRecentSticker.Merge(dst, src)
}
func (m *TLMessagesSaveRecentSticker) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSaveRecentSticker) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSaveRecentSticker.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSaveRecentSticker proto.InternalMessageInfo

func (m *TLMessagesSaveRecentSticker) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSaveRecentSticker) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

func (m *TLMessagesSaveRecentSticker) GetId() *InputDocument {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesSaveRecentSticker) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.clearRecentStickers#8999602d flags:# attached:flags.0?true = Bool;
type TLMessagesClearRecentStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Attached             bool          `protobuf:"varint,2,opt,name=attached,proto3" json:"attached,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesClearRecentStickers) Reset()         { *m = TLMessagesClearRecentStickers{} }
func (m *TLMessagesClearRecentStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesClearRecentStickers) ProtoMessage()    {}
func (*TLMessagesClearRecentStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{182}
}
func (m *TLMessagesClearRecentStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesClearRecentStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesClearRecentStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesClearRecentStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesClearRecentStickers.Merge(dst, src)
}
func (m *TLMessagesClearRecentStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesClearRecentStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesClearRecentStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesClearRecentStickers proto.InternalMessageInfo

func (m *TLMessagesClearRecentStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesClearRecentStickers) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

// --------------------------------------------------------------------------------------------
// messages.getArchivedStickers#57f17692 flags:# masks:flags.0?true offset_id:long limit:int = messages.ArchivedStickers;
type TLMessagesGetArchivedStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Masks                bool          `protobuf:"varint,2,opt,name=masks,proto3" json:"masks,omitempty"`
	OffsetId             int64         `protobuf:"varint,3,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetArchivedStickers) Reset()         { *m = TLMessagesGetArchivedStickers{} }
func (m *TLMessagesGetArchivedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetArchivedStickers) ProtoMessage()    {}
func (*TLMessagesGetArchivedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{183}
}
func (m *TLMessagesGetArchivedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetArchivedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetArchivedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetArchivedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetArchivedStickers.Merge(dst, src)
}
func (m *TLMessagesGetArchivedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetArchivedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetArchivedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetArchivedStickers proto.InternalMessageInfo

func (m *TLMessagesGetArchivedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetArchivedStickers) GetMasks() bool {
	if m != nil {
		return m.Masks
	}
	return false
}

func (m *TLMessagesGetArchivedStickers) GetOffsetId() int64 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetArchivedStickers) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getMaskStickers#65b8c79f hash:int = messages.AllStickers;
type TLMessagesGetMaskStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetMaskStickers) Reset()         { *m = TLMessagesGetMaskStickers{} }
func (m *TLMessagesGetMaskStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMaskStickers) ProtoMessage()    {}
func (*TLMessagesGetMaskStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{184}
}
func (m *TLMessagesGetMaskStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMaskStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMaskStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetMaskStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMaskStickers.Merge(dst, src)
}
func (m *TLMessagesGetMaskStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMaskStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMaskStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMaskStickers proto.InternalMessageInfo

func (m *TLMessagesGetMaskStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMaskStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getAttachedStickers#cc5b67cc media:InputStickeredMedia = Vector<StickerSetCovered>;
type TLMessagesGetAttachedStickers struct {
	Constructor          TLConstructor        `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Media                *InputStickeredMedia `protobuf:"bytes,2,opt,name=media,proto3" json:"media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TLMessagesGetAttachedStickers) Reset()         { *m = TLMessagesGetAttachedStickers{} }
func (m *TLMessagesGetAttachedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAttachedStickers) ProtoMessage()    {}
func (*TLMessagesGetAttachedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{185}
}
func (m *TLMessagesGetAttachedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAttachedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAttachedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetAttachedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAttachedStickers.Merge(dst, src)
}
func (m *TLMessagesGetAttachedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAttachedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAttachedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAttachedStickers proto.InternalMessageInfo

func (m *TLMessagesGetAttachedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetAttachedStickers) GetMedia() *InputStickeredMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.setGameScore#8ef8ecc0 flags:# edit_message:flags.0?true force:flags.1?true peer:InputPeer id:int user_id:InputUser score:int = Updates;
type TLMessagesSetGameScore struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	EditMessage          bool          `protobuf:"varint,2,opt,name=edit_message,json=editMessage,proto3" json:"edit_message,omitempty"`
	Force                bool          `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32         `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Score                int32         `protobuf:"varint,7,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSetGameScore) Reset()         { *m = TLMessagesSetGameScore{} }
func (m *TLMessagesSetGameScore) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetGameScore) ProtoMessage()    {}
func (*TLMessagesSetGameScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{186}
}
func (m *TLMessagesSetGameScore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetGameScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetGameScore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSetGameScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetGameScore.Merge(dst, src)
}
func (m *TLMessagesSetGameScore) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetGameScore) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetGameScore.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetGameScore proto.InternalMessageInfo

func (m *TLMessagesSetGameScore) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetGameScore) GetEditMessage() bool {
	if m != nil {
		return m.EditMessage
	}
	return false
}

func (m *TLMessagesSetGameScore) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLMessagesSetGameScore) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetGameScore) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesSetGameScore) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesSetGameScore) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.setInlineGameScore#15ad9f64 flags:# edit_message:flags.0?true force:flags.1?true id:InputBotInlineMessageID user_id:InputUser score:int = Bool;
type TLMessagesSetInlineGameScore struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	EditMessage          bool                     `protobuf:"varint,2,opt,name=edit_message,json=editMessage,proto3" json:"edit_message,omitempty"`
	Force                bool                     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	Id                   *InputBotInlineMessageID `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser               `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Score                int32                    `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLMessagesSetInlineGameScore) Reset()         { *m = TLMessagesSetInlineGameScore{} }
func (m *TLMessagesSetInlineGameScore) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetInlineGameScore) ProtoMessage()    {}
func (*TLMessagesSetInlineGameScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{187}
}
func (m *TLMessagesSetInlineGameScore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetInlineGameScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetInlineGameScore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSetInlineGameScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetInlineGameScore.Merge(dst, src)
}
func (m *TLMessagesSetInlineGameScore) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetInlineGameScore) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetInlineGameScore.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetInlineGameScore proto.InternalMessageInfo

func (m *TLMessagesSetInlineGameScore) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetInlineGameScore) GetEditMessage() bool {
	if m != nil {
		return m.EditMessage
	}
	return false
}

func (m *TLMessagesSetInlineGameScore) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLMessagesSetInlineGameScore) GetId() *InputBotInlineMessageID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesSetInlineGameScore) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesSetInlineGameScore) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getGameHighScores#e822649d peer:InputPeer id:int user_id:InputUser = messages.HighScores;
type TLMessagesGetGameHighScores struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32         `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetGameHighScores) Reset()         { *m = TLMessagesGetGameHighScores{} }
func (m *TLMessagesGetGameHighScores) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetGameHighScores) ProtoMessage()    {}
func (*TLMessagesGetGameHighScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{188}
}
func (m *TLMessagesGetGameHighScores) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetGameHighScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetGameHighScores.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetGameHighScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetGameHighScores.Merge(dst, src)
}
func (m *TLMessagesGetGameHighScores) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetGameHighScores) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetGameHighScores.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetGameHighScores proto.InternalMessageInfo

func (m *TLMessagesGetGameHighScores) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetGameHighScores) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetGameHighScores) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesGetGameHighScores) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getInlineGameHighScores#f635e1b id:InputBotInlineMessageID user_id:InputUser = messages.HighScores;
type TLMessagesGetInlineGameHighScores struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputBotInlineMessageID `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser               `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLMessagesGetInlineGameHighScores) Reset()         { *m = TLMessagesGetInlineGameHighScores{} }
func (m *TLMessagesGetInlineGameHighScores) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetInlineGameHighScores) ProtoMessage()    {}
func (*TLMessagesGetInlineGameHighScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{189}
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetInlineGameHighScores.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetInlineGameHighScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetInlineGameHighScores.Merge(dst, src)
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetInlineGameHighScores) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetInlineGameHighScores.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetInlineGameHighScores proto.InternalMessageInfo

func (m *TLMessagesGetInlineGameHighScores) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetInlineGameHighScores) GetId() *InputBotInlineMessageID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesGetInlineGameHighScores) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getCommonChats#d0a48c4 user_id:InputUser max_id:int limit:int = messages.Chats;
type TLMessagesGetCommonChats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MaxId                int32         `protobuf:"varint,3,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetCommonChats) Reset()         { *m = TLMessagesGetCommonChats{} }
func (m *TLMessagesGetCommonChats) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetCommonChats) ProtoMessage()    {}
func (*TLMessagesGetCommonChats) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{190}
}
func (m *TLMessagesGetCommonChats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetCommonChats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetCommonChats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetCommonChats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetCommonChats.Merge(dst, src)
}
func (m *TLMessagesGetCommonChats) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetCommonChats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetCommonChats.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetCommonChats proto.InternalMessageInfo

func (m *TLMessagesGetCommonChats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetCommonChats) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesGetCommonChats) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetCommonChats) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getAllChats#eba80ff0 except_ids:Vector<int> = messages.Chats;
type TLMessagesGetAllChats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ExceptIds            []int32       `protobuf:"varint,2,rep,packed,name=except_ids,json=exceptIds,proto3" json:"except_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetAllChats) Reset()         { *m = TLMessagesGetAllChats{} }
func (m *TLMessagesGetAllChats) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAllChats) ProtoMessage()    {}
func (*TLMessagesGetAllChats) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{191}
}
func (m *TLMessagesGetAllChats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAllChats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAllChats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetAllChats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAllChats.Merge(dst, src)
}
func (m *TLMessagesGetAllChats) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAllChats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAllChats.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAllChats proto.InternalMessageInfo

func (m *TLMessagesGetAllChats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetAllChats) GetExceptIds() []int32 {
	if m != nil {
		return m.ExceptIds
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getWebPage#32ca8f91 url:string hash:int = WebPage;
type TLMessagesGetWebPage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Url                  string        `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Hash                 int32         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetWebPage) Reset()         { *m = TLMessagesGetWebPage{} }
func (m *TLMessagesGetWebPage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetWebPage) ProtoMessage()    {}
func (*TLMessagesGetWebPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{192}
}
func (m *TLMessagesGetWebPage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetWebPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetWebPage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetWebPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetWebPage.Merge(dst, src)
}
func (m *TLMessagesGetWebPage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetWebPage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetWebPage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetWebPage proto.InternalMessageInfo

func (m *TLMessagesGetWebPage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetWebPage) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TLMessagesGetWebPage) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.toggleDialogPin#a731e257 flags:# pinned:flags.0?true peer:InputDialogPeer = Bool;
type TLMessagesToggleDialogPin struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Pinned               bool             `protobuf:"varint,2,opt,name=pinned,proto3" json:"pinned,omitempty"`
	Peer_INPUTDIALOGPEER *InputDialogPeer `protobuf:"bytes,3,opt,name=peer_INPUTDIALOGPEER,json=peerINPUTDIALOGPEER,proto3" json:"peer_INPUTDIALOGPEER,omitempty"`
	Peer_INPUTPEER       *InputPeer       `protobuf:"bytes,4,opt,name=peer_INPUTPEER,json=peerINPUTPEER,proto3" json:"peer_INPUTPEER,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesToggleDialogPin) Reset()         { *m = TLMessagesToggleDialogPin{} }
func (m *TLMessagesToggleDialogPin) String() string { return proto.CompactTextString(m) }
func (*TLMessagesToggleDialogPin) ProtoMessage()    {}
func (*TLMessagesToggleDialogPin) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{193}
}
func (m *TLMessagesToggleDialogPin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesToggleDialogPin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesToggleDialogPin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesToggleDialogPin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesToggleDialogPin.Merge(dst, src)
}
func (m *TLMessagesToggleDialogPin) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesToggleDialogPin) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesToggleDialogPin.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesToggleDialogPin proto.InternalMessageInfo

func (m *TLMessagesToggleDialogPin) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesToggleDialogPin) GetPinned() bool {
	if m != nil {
		return m.Pinned
	}
	return false
}

func (m *TLMessagesToggleDialogPin) GetPeer_INPUTDIALOGPEER() *InputDialogPeer {
	if m != nil {
		return m.Peer_INPUTDIALOGPEER
	}
	return nil
}

func (m *TLMessagesToggleDialogPin) GetPeer_INPUTPEER() *InputPeer {
	if m != nil {
		return m.Peer_INPUTPEER
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.reorderPinnedDialogs#3b1adf37 flags:# force:flags.0?true folder_id:int order:Vector<InputDialogPeer> = Bool;
type TLMessagesReorderPinnedDialogs struct {
	Constructor                 TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Force                       bool               `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	FolderId                    int32              `protobuf:"varint,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	Order_VECTORINPUTDIALOGPEER []*InputDialogPeer `protobuf:"bytes,4,rep,name=order_VECTORINPUTDIALOGPEER,json=orderVECTORINPUTDIALOGPEER,proto3" json:"order_VECTORINPUTDIALOGPEER,omitempty"`
	Order_VECTORINPUTPEER       []*InputPeer       `protobuf:"bytes,5,rep,name=order_VECTORINPUTPEER,json=orderVECTORINPUTPEER,proto3" json:"order_VECTORINPUTPEER,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}           `json:"-"`
	XXX_unrecognized            []byte             `json:"-"`
	XXX_sizecache               int32              `json:"-"`
}

func (m *TLMessagesReorderPinnedDialogs) Reset()         { *m = TLMessagesReorderPinnedDialogs{} }
func (m *TLMessagesReorderPinnedDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReorderPinnedDialogs) ProtoMessage()    {}
func (*TLMessagesReorderPinnedDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{194}
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReorderPinnedDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReorderPinnedDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReorderPinnedDialogs.Merge(dst, src)
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReorderPinnedDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReorderPinnedDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReorderPinnedDialogs proto.InternalMessageInfo

func (m *TLMessagesReorderPinnedDialogs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReorderPinnedDialogs) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLMessagesReorderPinnedDialogs) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

func (m *TLMessagesReorderPinnedDialogs) GetOrder_VECTORINPUTDIALOGPEER() []*InputDialogPeer {
	if m != nil {
		return m.Order_VECTORINPUTDIALOGPEER
	}
	return nil
}

func (m *TLMessagesReorderPinnedDialogs) GetOrder_VECTORINPUTPEER() []*InputPeer {
	if m != nil {
		return m.Order_VECTORINPUTPEER
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getPinnedDialogs#d6b94df2 folder_id:int = messages.PeerDialogs;
type TLMessagesGetPinnedDialogs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FolderId             int32         `protobuf:"varint,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetPinnedDialogs) Reset()         { *m = TLMessagesGetPinnedDialogs{} }
func (m *TLMessagesGetPinnedDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPinnedDialogs) ProtoMessage()    {}
func (*TLMessagesGetPinnedDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{195}
}
func (m *TLMessagesGetPinnedDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPinnedDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPinnedDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetPinnedDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPinnedDialogs.Merge(dst, src)
}
func (m *TLMessagesGetPinnedDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPinnedDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPinnedDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPinnedDialogs proto.InternalMessageInfo

func (m *TLMessagesGetPinnedDialogs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPinnedDialogs) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.setBotShippingResults#e5f672fa flags:# query_id:long error:flags.0?string shipping_options:flags.1?Vector<ShippingOption> = Bool;
type TLMessagesSetBotShippingResults struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	QueryId              int64              `protobuf:"varint,2,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Error                *types.StringValue `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	ShippingOptions      []*ShippingOption  `protobuf:"bytes,4,rep,name=shipping_options,json=shippingOptions,proto3" json:"shipping_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesSetBotShippingResults) Reset()         { *m = TLMessagesSetBotShippingResults{} }
func (m *TLMessagesSetBotShippingResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetBotShippingResults) ProtoMessage()    {}
func (*TLMessagesSetBotShippingResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{196}
}
func (m *TLMessagesSetBotShippingResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetBotShippingResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetBotShippingResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSetBotShippingResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetBotShippingResults.Merge(dst, src)
}
func (m *TLMessagesSetBotShippingResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetBotShippingResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetBotShippingResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetBotShippingResults proto.InternalMessageInfo

func (m *TLMessagesSetBotShippingResults) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetBotShippingResults) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetBotShippingResults) GetError() *types.StringValue {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *TLMessagesSetBotShippingResults) GetShippingOptions() []*ShippingOption {
	if m != nil {
		return m.ShippingOptions
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.setBotPrecheckoutResults#9c2dd95 flags:# success:flags.1?true query_id:long error:flags.0?string = Bool;
type TLMessagesSetBotPrecheckoutResults struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Success              bool               `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	QueryId              int64              `protobuf:"varint,3,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Error                *types.StringValue `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesSetBotPrecheckoutResults) Reset()         { *m = TLMessagesSetBotPrecheckoutResults{} }
func (m *TLMessagesSetBotPrecheckoutResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetBotPrecheckoutResults) ProtoMessage()    {}
func (*TLMessagesSetBotPrecheckoutResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{197}
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetBotPrecheckoutResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSetBotPrecheckoutResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetBotPrecheckoutResults.Merge(dst, src)
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetBotPrecheckoutResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetBotPrecheckoutResults proto.InternalMessageInfo

func (m *TLMessagesSetBotPrecheckoutResults) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetBotPrecheckoutResults) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *TLMessagesSetBotPrecheckoutResults) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetBotPrecheckoutResults) GetError() *types.StringValue {
	if m != nil {
		return m.Error
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.uploadMedia#519bc2b1 peer:InputPeer media:InputMedia = MessageMedia;
type TLMessagesUploadMedia struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Media                *InputMedia   `protobuf:"bytes,3,opt,name=media,proto3" json:"media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUploadMedia) Reset()         { *m = TLMessagesUploadMedia{} }
func (m *TLMessagesUploadMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUploadMedia) ProtoMessage()    {}
func (*TLMessagesUploadMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{198}
}
func (m *TLMessagesUploadMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUploadMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUploadMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesUploadMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUploadMedia.Merge(dst, src)
}
func (m *TLMessagesUploadMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUploadMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUploadMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUploadMedia proto.InternalMessageInfo

func (m *TLMessagesUploadMedia) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUploadMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesUploadMedia) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.sendScreenshotNotification#c97df020 peer:InputPeer reply_to_msg_id:int random_id:long = Updates;
type TLMessagesSendScreenshotNotification struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         int32         `protobuf:"varint,3,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	RandomId             int64         `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSendScreenshotNotification) Reset()         { *m = TLMessagesSendScreenshotNotification{} }
func (m *TLMessagesSendScreenshotNotification) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendScreenshotNotification) ProtoMessage()    {}
func (*TLMessagesSendScreenshotNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{199}
}
func (m *TLMessagesSendScreenshotNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendScreenshotNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendScreenshotNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSendScreenshotNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendScreenshotNotification.Merge(dst, src)
}
func (m *TLMessagesSendScreenshotNotification) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendScreenshotNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendScreenshotNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendScreenshotNotification proto.InternalMessageInfo

func (m *TLMessagesSendScreenshotNotification) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendScreenshotNotification) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendScreenshotNotification) GetReplyToMsgId() int32 {
	if m != nil {
		return m.ReplyToMsgId
	}
	return 0
}

func (m *TLMessagesSendScreenshotNotification) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getFavedStickers#21ce0b0e hash:int = messages.FavedStickers;
type TLMessagesGetFavedStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetFavedStickers) Reset()         { *m = TLMessagesGetFavedStickers{} }
func (m *TLMessagesGetFavedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetFavedStickers) ProtoMessage()    {}
func (*TLMessagesGetFavedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{200}
}
func (m *TLMessagesGetFavedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetFavedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetFavedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetFavedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetFavedStickers.Merge(dst, src)
}
func (m *TLMessagesGetFavedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetFavedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetFavedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetFavedStickers proto.InternalMessageInfo

func (m *TLMessagesGetFavedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetFavedStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.faveSticker#b9ffc55b id:InputDocument unfave:Bool = Bool;
type TLMessagesFaveSticker struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputDocument `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Unfave               *Bool          `protobuf:"bytes,3,opt,name=unfave,proto3" json:"unfave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesFaveSticker) Reset()         { *m = TLMessagesFaveSticker{} }
func (m *TLMessagesFaveSticker) String() string { return proto.CompactTextString(m) }
func (*TLMessagesFaveSticker) ProtoMessage()    {}
func (*TLMessagesFaveSticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{201}
}
func (m *TLMessagesFaveSticker) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesFaveSticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesFaveSticker.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesFaveSticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesFaveSticker.Merge(dst, src)
}
func (m *TLMessagesFaveSticker) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesFaveSticker) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesFaveSticker.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesFaveSticker proto.InternalMessageInfo

func (m *TLMessagesFaveSticker) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesFaveSticker) GetId() *InputDocument {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesFaveSticker) GetUnfave() *Bool {
	if m != nil {
		return m.Unfave
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getUnreadMentions#46578472 peer:InputPeer offset_id:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
type TLMessagesGetUnreadMentions struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	OffsetId             int32         `protobuf:"varint,3,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	AddOffset            int32         `protobuf:"varint,4,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32         `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32         `protobuf:"varint,6,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32         `protobuf:"varint,7,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetUnreadMentions) Reset()         { *m = TLMessagesGetUnreadMentions{} }
func (m *TLMessagesGetUnreadMentions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetUnreadMentions) ProtoMessage()    {}
func (*TLMessagesGetUnreadMentions) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{202}
}
func (m *TLMessagesGetUnreadMentions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetUnreadMentions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetUnreadMentions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetUnreadMentions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetUnreadMentions.Merge(dst, src)
}
func (m *TLMessagesGetUnreadMentions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetUnreadMentions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetUnreadMentions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetUnreadMentions proto.InternalMessageInfo

func (m *TLMessagesGetUnreadMentions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetUnreadMentions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetUnreadMentions) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.readMentions#f0189d3 peer:InputPeer = messages.AffectedHistory;
type TLMessagesReadMentions struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadMentions) Reset()         { *m = TLMessagesReadMentions{} }
func (m *TLMessagesReadMentions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadMentions) ProtoMessage()    {}
func (*TLMessagesReadMentions) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{203}
}
func (m *TLMessagesReadMentions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadMentions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadMentions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReadMentions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadMentions.Merge(dst, src)
}
func (m *TLMessagesReadMentions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadMentions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadMentions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadMentions proto.InternalMessageInfo

func (m *TLMessagesReadMentions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadMentions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getRecentLocations#bbc45b09 peer:InputPeer limit:int hash:int = messages.Messages;
type TLMessagesGetRecentLocations struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Limit                int32         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32         `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetRecentLocations) Reset()         { *m = TLMessagesGetRecentLocations{} }
func (m *TLMessagesGetRecentLocations) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetRecentLocations) ProtoMessage()    {}
func (*TLMessagesGetRecentLocations) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{204}
}
func (m *TLMessagesGetRecentLocations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetRecentLocations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetRecentLocations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetRecentLocations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetRecentLocations.Merge(dst, src)
}
func (m *TLMessagesGetRecentLocations) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetRecentLocations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetRecentLocations.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetRecentLocations proto.InternalMessageInfo

func (m *TLMessagesGetRecentLocations) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetRecentLocations) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetRecentLocations) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetRecentLocations) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.sendMultiMedia#2fad5de flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int multi_media:Vector<InputSingleMedia> schedule_date:flags.10?int ttl_seconds:flags.30?int = Updates;
type TLMessagesSendMultiMedia struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool                `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool                `protobuf:"varint,3,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool                `protobuf:"varint,4,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	Peer                 *InputPeer          `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         *types.Int32Value   `protobuf:"bytes,6,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	MultiMedia           []*InputSingleMedia `protobuf:"bytes,7,rep,name=multi_media,json=multiMedia,proto3" json:"multi_media,omitempty"`
	ScheduleDate         *types.Int32Value   `protobuf:"bytes,8,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	TtlSeconds           *types.Int32Value   `protobuf:"bytes,9,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendMultiMedia) Reset()         { *m = TLMessagesSendMultiMedia{} }
func (m *TLMessagesSendMultiMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendMultiMedia) ProtoMessage()    {}
func (*TLMessagesSendMultiMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{205}
}
func (m *TLMessagesSendMultiMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendMultiMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendMultiMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSendMultiMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendMultiMedia.Merge(dst, src)
}
func (m *TLMessagesSendMultiMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendMultiMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendMultiMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendMultiMedia proto.InternalMessageInfo

func (m *TLMessagesSendMultiMedia) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendMultiMedia) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendMultiMedia) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendMultiMedia) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendMultiMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendMultiMedia) GetReplyToMsgId() *types.Int32Value {
	if m != nil {
		return m.ReplyToMsgId
	}
	return nil
}

func (m *TLMessagesSendMultiMedia) GetMultiMedia() []*InputSingleMedia {
	if m != nil {
		return m.MultiMedia
	}
	return nil
}

func (m *TLMessagesSendMultiMedia) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

func (m *TLMessagesSendMultiMedia) GetTtlSeconds() *types.Int32Value {
	if m != nil {
		return m.TtlSeconds
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.uploadEncryptedFile#5057c497 peer:InputEncryptedChat file:InputEncryptedFile = EncryptedFile;
type TLMessagesUploadEncryptedFile struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	File                 *InputEncryptedFile `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesUploadEncryptedFile) Reset()         { *m = TLMessagesUploadEncryptedFile{} }
func (m *TLMessagesUploadEncryptedFile) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUploadEncryptedFile) ProtoMessage()    {}
func (*TLMessagesUploadEncryptedFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{206}
}
func (m *TLMessagesUploadEncryptedFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUploadEncryptedFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUploadEncryptedFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesUploadEncryptedFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUploadEncryptedFile.Merge(dst, src)
}
func (m *TLMessagesUploadEncryptedFile) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUploadEncryptedFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUploadEncryptedFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUploadEncryptedFile proto.InternalMessageInfo

func (m *TLMessagesUploadEncryptedFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUploadEncryptedFile) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesUploadEncryptedFile) GetFile() *InputEncryptedFile {
	if m != nil {
		return m.File
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.searchStickerSets#c2b7d08b flags:# exclude_featured:flags.0?true q:string hash:int = messages.FoundStickerSets;
type TLMessagesSearchStickerSets struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ExcludeFeatured      bool          `protobuf:"varint,2,opt,name=exclude_featured,json=excludeFeatured,proto3" json:"exclude_featured,omitempty"`
	Q                    string        `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Hash                 int32         `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSearchStickerSets) Reset()         { *m = TLMessagesSearchStickerSets{} }
func (m *TLMessagesSearchStickerSets) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearchStickerSets) ProtoMessage()    {}
func (*TLMessagesSearchStickerSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{207}
}
func (m *TLMessagesSearchStickerSets) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearchStickerSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearchStickerSets.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSearchStickerSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearchStickerSets.Merge(dst, src)
}
func (m *TLMessagesSearchStickerSets) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearchStickerSets) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearchStickerSets.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearchStickerSets proto.InternalMessageInfo

func (m *TLMessagesSearchStickerSets) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSearchStickerSets) GetExcludeFeatured() bool {
	if m != nil {
		return m.ExcludeFeatured
	}
	return false
}

func (m *TLMessagesSearchStickerSets) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearchStickerSets) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getSplitRanges#1cff7e08 = Vector<MessageRange>;
type TLMessagesGetSplitRanges struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetSplitRanges) Reset()         { *m = TLMessagesGetSplitRanges{} }
func (m *TLMessagesGetSplitRanges) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSplitRanges) ProtoMessage()    {}
func (*TLMessagesGetSplitRanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{208}
}
func (m *TLMessagesGetSplitRanges) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSplitRanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSplitRanges.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetSplitRanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSplitRanges.Merge(dst, src)
}
func (m *TLMessagesGetSplitRanges) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSplitRanges) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSplitRanges.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSplitRanges proto.InternalMessageInfo

func (m *TLMessagesGetSplitRanges) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// messages.markDialogUnread#c286d98f flags:# unread:flags.0?true peer:InputDialogPeer = Bool;
type TLMessagesMarkDialogUnread struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Unread               bool             `protobuf:"varint,2,opt,name=unread,proto3" json:"unread,omitempty"`
	Peer                 *InputDialogPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesMarkDialogUnread) Reset()         { *m = TLMessagesMarkDialogUnread{} }
func (m *TLMessagesMarkDialogUnread) String() string { return proto.CompactTextString(m) }
func (*TLMessagesMarkDialogUnread) ProtoMessage()    {}
func (*TLMessagesMarkDialogUnread) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{209}
}
func (m *TLMessagesMarkDialogUnread) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesMarkDialogUnread) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesMarkDialogUnread.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesMarkDialogUnread) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesMarkDialogUnread.Merge(dst, src)
}
func (m *TLMessagesMarkDialogUnread) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesMarkDialogUnread) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesMarkDialogUnread.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesMarkDialogUnread proto.InternalMessageInfo

func (m *TLMessagesMarkDialogUnread) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesMarkDialogUnread) GetUnread() bool {
	if m != nil {
		return m.Unread
	}
	return false
}

func (m *TLMessagesMarkDialogUnread) GetPeer() *InputDialogPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getDialogUnreadMarks#22e24e22 = Vector<DialogPeer>;
type TLMessagesGetDialogUnreadMarks struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetDialogUnreadMarks) Reset()         { *m = TLMessagesGetDialogUnreadMarks{} }
func (m *TLMessagesGetDialogUnreadMarks) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDialogUnreadMarks) ProtoMessage()    {}
func (*TLMessagesGetDialogUnreadMarks) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{210}
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDialogUnreadMarks.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetDialogUnreadMarks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDialogUnreadMarks.Merge(dst, src)
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDialogUnreadMarks.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDialogUnreadMarks proto.InternalMessageInfo

func (m *TLMessagesGetDialogUnreadMarks) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// messages.clearAllDrafts#7e58ee9c = Bool;
type TLMessagesClearAllDrafts struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesClearAllDrafts) Reset()         { *m = TLMessagesClearAllDrafts{} }
func (m *TLMessagesClearAllDrafts) String() string { return proto.CompactTextString(m) }
func (*TLMessagesClearAllDrafts) ProtoMessage()    {}
func (*TLMessagesClearAllDrafts) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{211}
}
func (m *TLMessagesClearAllDrafts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesClearAllDrafts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesClearAllDrafts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesClearAllDrafts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesClearAllDrafts.Merge(dst, src)
}
func (m *TLMessagesClearAllDrafts) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesClearAllDrafts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesClearAllDrafts.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesClearAllDrafts proto.InternalMessageInfo

func (m *TLMessagesClearAllDrafts) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// messages.updatePinnedMessage#d2aaf7ec flags:# silent:flags.0?true unpin:flags.1?true pm_oneside:flags.2?true peer:InputPeer id:int = Updates;
type TLMessagesUpdatePinnedMessage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool          `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	Unpin                bool          `protobuf:"varint,3,opt,name=unpin,proto3" json:"unpin,omitempty"`
	PmOneside            bool          `protobuf:"varint,4,opt,name=pm_oneside,json=pmOneside,proto3" json:"pm_oneside,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32         `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUpdatePinnedMessage) Reset()         { *m = TLMessagesUpdatePinnedMessage{} }
func (m *TLMessagesUpdatePinnedMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUpdatePinnedMessage) ProtoMessage()    {}
func (*TLMessagesUpdatePinnedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{212}
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUpdatePinnedMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesUpdatePinnedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUpdatePinnedMessage.Merge(dst, src)
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUpdatePinnedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUpdatePinnedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUpdatePinnedMessage proto.InternalMessageInfo

func (m *TLMessagesUpdatePinnedMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUpdatePinnedMessage) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesUpdatePinnedMessage) GetUnpin() bool {
	if m != nil {
		return m.Unpin
	}
	return false
}

func (m *TLMessagesUpdatePinnedMessage) GetPmOneside() bool {
	if m != nil {
		return m.PmOneside
	}
	return false
}

func (m *TLMessagesUpdatePinnedMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesUpdatePinnedMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.sendVote#10ea6184 peer:InputPeer msg_id:int options:Vector<bytes> = Updates;
type TLMessagesSendVote struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Options              [][]byte      `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSendVote) Reset()         { *m = TLMessagesSendVote{} }
func (m *TLMessagesSendVote) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendVote) ProtoMessage()    {}
func (*TLMessagesSendVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{213}
}
func (m *TLMessagesSendVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSendVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendVote.Merge(dst, src)
}
func (m *TLMessagesSendVote) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendVote) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendVote.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendVote proto.InternalMessageInfo

func (m *TLMessagesSendVote) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendVote) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendVote) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesSendVote) GetOptions() [][]byte {
	if m != nil {
		return m.Options
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getPollResults#73bb643b peer:InputPeer msg_id:int = Updates;
type TLMessagesGetPollResults struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetPollResults) Reset()         { *m = TLMessagesGetPollResults{} }
func (m *TLMessagesGetPollResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPollResults) ProtoMessage()    {}
func (*TLMessagesGetPollResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{214}
}
func (m *TLMessagesGetPollResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPollResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPollResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetPollResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPollResults.Merge(dst, src)
}
func (m *TLMessagesGetPollResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPollResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPollResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPollResults proto.InternalMessageInfo

func (m *TLMessagesGetPollResults) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPollResults) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetPollResults) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getOnlines#6e2be050 peer:InputPeer = ChatOnlines;
type TLMessagesGetOnlines struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetOnlines) Reset()         { *m = TLMessagesGetOnlines{} }
func (m *TLMessagesGetOnlines) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetOnlines) ProtoMessage()    {}
func (*TLMessagesGetOnlines) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{215}
}
func (m *TLMessagesGetOnlines) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetOnlines) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetOnlines.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetOnlines) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetOnlines.Merge(dst, src)
}
func (m *TLMessagesGetOnlines) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetOnlines) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetOnlines.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetOnlines proto.InternalMessageInfo

func (m *TLMessagesGetOnlines) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetOnlines) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getStatsURL#812c2ae6 flags:# dark:flags.0?true peer:InputPeer params:string = StatsURL;
type TLMessagesGetStatsURL struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Dark                 bool          `protobuf:"varint,2,opt,name=dark,proto3" json:"dark,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Params               string        `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetStatsURL) Reset()         { *m = TLMessagesGetStatsURL{} }
func (m *TLMessagesGetStatsURL) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetStatsURL) ProtoMessage()    {}
func (*TLMessagesGetStatsURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{216}
}
func (m *TLMessagesGetStatsURL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetStatsURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetStatsURL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetStatsURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetStatsURL.Merge(dst, src)
}
func (m *TLMessagesGetStatsURL) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetStatsURL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetStatsURL.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetStatsURL proto.InternalMessageInfo

func (m *TLMessagesGetStatsURL) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetStatsURL) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLMessagesGetStatsURL) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetStatsURL) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.editChatAbout#def60797 peer:InputPeer about:string = Bool;
type TLMessagesEditChatAbout struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	About                string        `protobuf:"bytes,3,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesEditChatAbout) Reset()         { *m = TLMessagesEditChatAbout{} }
func (m *TLMessagesEditChatAbout) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatAbout) ProtoMessage()    {}
func (*TLMessagesEditChatAbout) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{217}
}
func (m *TLMessagesEditChatAbout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatAbout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatAbout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesEditChatAbout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatAbout.Merge(dst, src)
}
func (m *TLMessagesEditChatAbout) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatAbout) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatAbout.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatAbout proto.InternalMessageInfo

func (m *TLMessagesEditChatAbout) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatAbout) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditChatAbout) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.editChatNotice#8ca0d616 peer:InputPeer notice:string = Bool;
type TLMessagesEditChatNotice struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Notice               string        `protobuf:"bytes,3,opt,name=notice,proto3" json:"notice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesEditChatNotice) Reset()         { *m = TLMessagesEditChatNotice{} }
func (m *TLMessagesEditChatNotice) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatNotice) ProtoMessage()    {}
func (*TLMessagesEditChatNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{218}
}
func (m *TLMessagesEditChatNotice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatNotice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesEditChatNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatNotice.Merge(dst, src)
}
func (m *TLMessagesEditChatNotice) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatNotice.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatNotice proto.InternalMessageInfo

func (m *TLMessagesEditChatNotice) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatNotice) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditChatNotice) GetNotice() string {
	if m != nil {
		return m.Notice
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.editChatDefaultBannedRights#a5866b41 peer:InputPeer banned_rights:ChatBannedRights = Updates;
type TLMessagesEditChatDefaultBannedRights struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	BannedRights         *ChatBannedRights `protobuf:"bytes,3,opt,name=banned_rights,json=bannedRights,proto3" json:"banned_rights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesEditChatDefaultBannedRights) Reset()         { *m = TLMessagesEditChatDefaultBannedRights{} }
func (m *TLMessagesEditChatDefaultBannedRights) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatDefaultBannedRights) ProtoMessage()    {}
func (*TLMessagesEditChatDefaultBannedRights) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{219}
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatDefaultBannedRights.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesEditChatDefaultBannedRights) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatDefaultBannedRights.Merge(dst, src)
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatDefaultBannedRights.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatDefaultBannedRights proto.InternalMessageInfo

func (m *TLMessagesEditChatDefaultBannedRights) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatDefaultBannedRights) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditChatDefaultBannedRights) GetBannedRights() *ChatBannedRights {
	if m != nil {
		return m.BannedRights
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getEmojiKeywords#35a0e062 lang_code:string = EmojiKeywordsDifference;
type TLMessagesGetEmojiKeywords struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCode             string        `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetEmojiKeywords) Reset()         { *m = TLMessagesGetEmojiKeywords{} }
func (m *TLMessagesGetEmojiKeywords) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiKeywords) ProtoMessage()    {}
func (*TLMessagesGetEmojiKeywords) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{220}
}
func (m *TLMessagesGetEmojiKeywords) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiKeywords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiKeywords.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetEmojiKeywords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiKeywords.Merge(dst, src)
}
func (m *TLMessagesGetEmojiKeywords) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiKeywords) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiKeywords.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiKeywords proto.InternalMessageInfo

func (m *TLMessagesGetEmojiKeywords) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetEmojiKeywords) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.getEmojiKeywordsDifference#1508b6af lang_code:string from_version:int = EmojiKeywordsDifference;
type TLMessagesGetEmojiKeywordsDifference struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCode             string        `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	FromVersion          int32         `protobuf:"varint,3,opt,name=from_version,json=fromVersion,proto3" json:"from_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetEmojiKeywordsDifference) Reset()         { *m = TLMessagesGetEmojiKeywordsDifference{} }
func (m *TLMessagesGetEmojiKeywordsDifference) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiKeywordsDifference) ProtoMessage()    {}
func (*TLMessagesGetEmojiKeywordsDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{221}
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetEmojiKeywordsDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference.Merge(dst, src)
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference proto.InternalMessageInfo

func (m *TLMessagesGetEmojiKeywordsDifference) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetEmojiKeywordsDifference) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLMessagesGetEmojiKeywordsDifference) GetFromVersion() int32 {
	if m != nil {
		return m.FromVersion
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getEmojiKeywordsLanguages#4e9963b2 lang_codes:Vector<string> = Vector<EmojiLanguage>;
type TLMessagesGetEmojiKeywordsLanguages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCodes            []string      `protobuf:"bytes,2,rep,name=lang_codes,json=langCodes,proto3" json:"lang_codes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetEmojiKeywordsLanguages) Reset()         { *m = TLMessagesGetEmojiKeywordsLanguages{} }
func (m *TLMessagesGetEmojiKeywordsLanguages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiKeywordsLanguages) ProtoMessage()    {}
func (*TLMessagesGetEmojiKeywordsLanguages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{222}
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetEmojiKeywordsLanguages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages.Merge(dst, src)
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages proto.InternalMessageInfo

func (m *TLMessagesGetEmojiKeywordsLanguages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetEmojiKeywordsLanguages) GetLangCodes() []string {
	if m != nil {
		return m.LangCodes
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getEmojiURL#d5b10c26 lang_code:string = EmojiURL;
type TLMessagesGetEmojiURL struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCode             string        `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetEmojiURL) Reset()         { *m = TLMessagesGetEmojiURL{} }
func (m *TLMessagesGetEmojiURL) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiURL) ProtoMessage()    {}
func (*TLMessagesGetEmojiURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{223}
}
func (m *TLMessagesGetEmojiURL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiURL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetEmojiURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiURL.Merge(dst, src)
}
func (m *TLMessagesGetEmojiURL) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiURL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiURL.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiURL proto.InternalMessageInfo

func (m *TLMessagesGetEmojiURL) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetEmojiURL) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// messages.getSearchCounters#732eef00 peer:InputPeer filters:Vector<MessagesFilter> = Vector<messages.SearchCounter>;
type TLMessagesGetSearchCounters struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Filters              []*MessagesFilter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesGetSearchCounters) Reset()         { *m = TLMessagesGetSearchCounters{} }
func (m *TLMessagesGetSearchCounters) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSearchCounters) ProtoMessage()    {}
func (*TLMessagesGetSearchCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{224}
}
func (m *TLMessagesGetSearchCounters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSearchCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSearchCounters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetSearchCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSearchCounters.Merge(dst, src)
}
func (m *TLMessagesGetSearchCounters) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSearchCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSearchCounters.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSearchCounters proto.InternalMessageInfo

func (m *TLMessagesGetSearchCounters) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetSearchCounters) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetSearchCounters) GetFilters() []*MessagesFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.requestUrlAuth#e33f5613 peer:InputPeer msg_id:int button_id:int = UrlAuthResult;
type TLMessagesRequestUrlAuth struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ButtonId             int32         `protobuf:"varint,4,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesRequestUrlAuth) Reset()         { *m = TLMessagesRequestUrlAuth{} }
func (m *TLMessagesRequestUrlAuth) String() string { return proto.CompactTextString(m) }
func (*TLMessagesRequestUrlAuth) ProtoMessage()    {}
func (*TLMessagesRequestUrlAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{225}
}
func (m *TLMessagesRequestUrlAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesRequestUrlAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesRequestUrlAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesRequestUrlAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesRequestUrlAuth.Merge(dst, src)
}
func (m *TLMessagesRequestUrlAuth) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesRequestUrlAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesRequestUrlAuth.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesRequestUrlAuth proto.InternalMessageInfo

func (m *TLMessagesRequestUrlAuth) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesRequestUrlAuth) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesRequestUrlAuth) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesRequestUrlAuth) GetButtonId() int32 {
	if m != nil {
		return m.ButtonId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.acceptUrlAuth#f729ea98 flags:# write_allowed:flags.0?true peer:InputPeer msg_id:int button_id:int = UrlAuthResult;
type TLMessagesAcceptUrlAuth struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	WriteAllowed         bool          `protobuf:"varint,2,opt,name=write_allowed,json=writeAllowed,proto3" json:"write_allowed,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ButtonId             int32         `protobuf:"varint,5,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesAcceptUrlAuth) Reset()         { *m = TLMessagesAcceptUrlAuth{} }
func (m *TLMessagesAcceptUrlAuth) String() string { return proto.CompactTextString(m) }
func (*TLMessagesAcceptUrlAuth) ProtoMessage()    {}
func (*TLMessagesAcceptUrlAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{226}
}
func (m *TLMessagesAcceptUrlAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesAcceptUrlAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesAcceptUrlAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesAcceptUrlAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesAcceptUrlAuth.Merge(dst, src)
}
func (m *TLMessagesAcceptUrlAuth) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesAcceptUrlAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesAcceptUrlAuth.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesAcceptUrlAuth proto.InternalMessageInfo

func (m *TLMessagesAcceptUrlAuth) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesAcceptUrlAuth) GetWriteAllowed() bool {
	if m != nil {
		return m.WriteAllowed
	}
	return false
}

func (m *TLMessagesAcceptUrlAuth) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesAcceptUrlAuth) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesAcceptUrlAuth) GetButtonId() int32 {
	if m != nil {
		return m.ButtonId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.hidePeerSettingsBar#4facb138 peer:InputPeer = Bool;
type TLMessagesHidePeerSettingsBar struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesHidePeerSettingsBar) Reset()         { *m = TLMessagesHidePeerSettingsBar{} }
func (m *TLMessagesHidePeerSettingsBar) String() string { return proto.CompactTextString(m) }
func (*TLMessagesHidePeerSettingsBar) ProtoMessage()    {}
func (*TLMessagesHidePeerSettingsBar) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{227}
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesHidePeerSettingsBar.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesHidePeerSettingsBar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesHidePeerSettingsBar.Merge(dst, src)
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesHidePeerSettingsBar) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesHidePeerSettingsBar.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesHidePeerSettingsBar proto.InternalMessageInfo

func (m *TLMessagesHidePeerSettingsBar) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesHidePeerSettingsBar) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getScheduledHistory#e2c2685b peer:InputPeer hash:int = messages.Messages;
type TLMessagesGetScheduledHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Hash                 int32         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetScheduledHistory) Reset()         { *m = TLMessagesGetScheduledHistory{} }
func (m *TLMessagesGetScheduledHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetScheduledHistory) ProtoMessage()    {}
func (*TLMessagesGetScheduledHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{228}
}
func (m *TLMessagesGetScheduledHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetScheduledHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetScheduledHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetScheduledHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetScheduledHistory.Merge(dst, src)
}
func (m *TLMessagesGetScheduledHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetScheduledHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetScheduledHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetScheduledHistory proto.InternalMessageInfo

func (m *TLMessagesGetScheduledHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetScheduledHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetScheduledHistory) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getScheduledMessages#bdbb0464 peer:InputPeer id:Vector<int> = messages.Messages;
type TLMessagesGetScheduledMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetScheduledMessages) Reset()         { *m = TLMessagesGetScheduledMessages{} }
func (m *TLMessagesGetScheduledMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetScheduledMessages) ProtoMessage()    {}
func (*TLMessagesGetScheduledMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{229}
}
func (m *TLMessagesGetScheduledMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetScheduledMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetScheduledMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetScheduledMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetScheduledMessages.Merge(dst, src)
}
func (m *TLMessagesGetScheduledMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetScheduledMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetScheduledMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetScheduledMessages proto.InternalMessageInfo

func (m *TLMessagesGetScheduledMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetScheduledMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetScheduledMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.sendScheduledMessages#bd38850a peer:InputPeer id:Vector<int> = Updates;
type TLMessagesSendScheduledMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSendScheduledMessages) Reset()         { *m = TLMessagesSendScheduledMessages{} }
func (m *TLMessagesSendScheduledMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendScheduledMessages) ProtoMessage()    {}
func (*TLMessagesSendScheduledMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{230}
}
func (m *TLMessagesSendScheduledMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendScheduledMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendScheduledMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSendScheduledMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendScheduledMessages.Merge(dst, src)
}
func (m *TLMessagesSendScheduledMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendScheduledMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendScheduledMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendScheduledMessages proto.InternalMessageInfo

func (m *TLMessagesSendScheduledMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendScheduledMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendScheduledMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.deleteScheduledMessages#59ae2b16 peer:InputPeer id:Vector<int> = Updates;
type TLMessagesDeleteScheduledMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeleteScheduledMessages) Reset()         { *m = TLMessagesDeleteScheduledMessages{} }
func (m *TLMessagesDeleteScheduledMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteScheduledMessages) ProtoMessage()    {}
func (*TLMessagesDeleteScheduledMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{231}
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteScheduledMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesDeleteScheduledMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteScheduledMessages.Merge(dst, src)
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteScheduledMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteScheduledMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteScheduledMessages proto.InternalMessageInfo

func (m *TLMessagesDeleteScheduledMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteScheduledMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesDeleteScheduledMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getPollVotes#b86e380e flags:# peer:InputPeer id:int option:flags.0?bytes offset:flags.1?string limit:int = messages.VotesList;
type TLMessagesGetPollVotes struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32              `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Option               []byte             `protobuf:"bytes,4,opt,name=option,proto3" json:"option,omitempty"`
	Offset               *types.StringValue `protobuf:"bytes,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32              `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesGetPollVotes) Reset()         { *m = TLMessagesGetPollVotes{} }
func (m *TLMessagesGetPollVotes) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPollVotes) ProtoMessage()    {}
func (*TLMessagesGetPollVotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{232}
}
func (m *TLMessagesGetPollVotes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPollVotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPollVotes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetPollVotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPollVotes.Merge(dst, src)
}
func (m *TLMessagesGetPollVotes) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPollVotes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPollVotes.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPollVotes proto.InternalMessageInfo

func (m *TLMessagesGetPollVotes) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPollVotes) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetPollVotes) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesGetPollVotes) GetOption() []byte {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *TLMessagesGetPollVotes) GetOffset() *types.StringValue {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *TLMessagesGetPollVotes) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.toggleStickerSets#b5052fea flags:# uninstall:flags.0?true archive:flags.1?true unarchive:flags.2?true stickersets:Vector<InputStickerSet> = Bool;
type TLMessagesToggleStickerSets struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Uninstall            bool               `protobuf:"varint,2,opt,name=uninstall,proto3" json:"uninstall,omitempty"`
	Archive              bool               `protobuf:"varint,3,opt,name=archive,proto3" json:"archive,omitempty"`
	Unarchive            bool               `protobuf:"varint,4,opt,name=unarchive,proto3" json:"unarchive,omitempty"`
	Stickersets          []*InputStickerSet `protobuf:"bytes,5,rep,name=stickersets,proto3" json:"stickersets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesToggleStickerSets) Reset()         { *m = TLMessagesToggleStickerSets{} }
func (m *TLMessagesToggleStickerSets) String() string { return proto.CompactTextString(m) }
func (*TLMessagesToggleStickerSets) ProtoMessage()    {}
func (*TLMessagesToggleStickerSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{233}
}
func (m *TLMessagesToggleStickerSets) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesToggleStickerSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesToggleStickerSets.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesToggleStickerSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesToggleStickerSets.Merge(dst, src)
}
func (m *TLMessagesToggleStickerSets) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesToggleStickerSets) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesToggleStickerSets.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesToggleStickerSets proto.InternalMessageInfo

func (m *TLMessagesToggleStickerSets) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesToggleStickerSets) GetUninstall() bool {
	if m != nil {
		return m.Uninstall
	}
	return false
}

func (m *TLMessagesToggleStickerSets) GetArchive() bool {
	if m != nil {
		return m.Archive
	}
	return false
}

func (m *TLMessagesToggleStickerSets) GetUnarchive() bool {
	if m != nil {
		return m.Unarchive
	}
	return false
}

func (m *TLMessagesToggleStickerSets) GetStickersets() []*InputStickerSet {
	if m != nil {
		return m.Stickersets
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getDialogFilters#f19ed96d = Vector<DialogFilter>;
type TLMessagesGetDialogFilters struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetDialogFilters) Reset()         { *m = TLMessagesGetDialogFilters{} }
func (m *TLMessagesGetDialogFilters) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDialogFilters) ProtoMessage()    {}
func (*TLMessagesGetDialogFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{234}
}
func (m *TLMessagesGetDialogFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDialogFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDialogFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetDialogFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDialogFilters.Merge(dst, src)
}
func (m *TLMessagesGetDialogFilters) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDialogFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDialogFilters.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDialogFilters proto.InternalMessageInfo

func (m *TLMessagesGetDialogFilters) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// messages.getSuggestedDialogFilters#a29cd42c = Vector<DialogFilterSuggested>;
type TLMessagesGetSuggestedDialogFilters struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetSuggestedDialogFilters) Reset()         { *m = TLMessagesGetSuggestedDialogFilters{} }
func (m *TLMessagesGetSuggestedDialogFilters) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSuggestedDialogFilters) ProtoMessage()    {}
func (*TLMessagesGetSuggestedDialogFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{235}
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSuggestedDialogFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetSuggestedDialogFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSuggestedDialogFilters.Merge(dst, src)
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSuggestedDialogFilters.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSuggestedDialogFilters proto.InternalMessageInfo

func (m *TLMessagesGetSuggestedDialogFilters) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// messages.updateDialogFilter#1ad4a04a flags:# id:int filter:flags.0?DialogFilter = Bool;
type TLMessagesUpdateDialogFilter struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   int32         `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Filter               *DialogFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUpdateDialogFilter) Reset()         { *m = TLMessagesUpdateDialogFilter{} }
func (m *TLMessagesUpdateDialogFilter) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUpdateDialogFilter) ProtoMessage()    {}
func (*TLMessagesUpdateDialogFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{236}
}
func (m *TLMessagesUpdateDialogFilter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUpdateDialogFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUpdateDialogFilter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesUpdateDialogFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUpdateDialogFilter.Merge(dst, src)
}
func (m *TLMessagesUpdateDialogFilter) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUpdateDialogFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUpdateDialogFilter.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUpdateDialogFilter proto.InternalMessageInfo

func (m *TLMessagesUpdateDialogFilter) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUpdateDialogFilter) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesUpdateDialogFilter) GetFilter() *DialogFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.updateDialogFiltersOrder#c563c1e4 order:Vector<int> = Bool;
type TLMessagesUpdateDialogFiltersOrder struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Order                []int32       `protobuf:"varint,2,rep,packed,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUpdateDialogFiltersOrder) Reset()         { *m = TLMessagesUpdateDialogFiltersOrder{} }
func (m *TLMessagesUpdateDialogFiltersOrder) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUpdateDialogFiltersOrder) ProtoMessage()    {}
func (*TLMessagesUpdateDialogFiltersOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{237}
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesUpdateDialogFiltersOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder.Merge(dst, src)
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder proto.InternalMessageInfo

func (m *TLMessagesUpdateDialogFiltersOrder) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUpdateDialogFiltersOrder) GetOrder() []int32 {
	if m != nil {
		return m.Order
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.getOldFeaturedStickers#5fe7025b offset:int limit:int hash:int = messages.FeaturedStickers;
type TLMessagesGetOldFeaturedStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Offset               int32         `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32         `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetOldFeaturedStickers) Reset()         { *m = TLMessagesGetOldFeaturedStickers{} }
func (m *TLMessagesGetOldFeaturedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetOldFeaturedStickers) ProtoMessage()    {}
func (*TLMessagesGetOldFeaturedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{238}
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetOldFeaturedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetOldFeaturedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetOldFeaturedStickers.Merge(dst, src)
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetOldFeaturedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetOldFeaturedStickers proto.InternalMessageInfo

func (m *TLMessagesGetOldFeaturedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetOldFeaturedStickers) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLMessagesGetOldFeaturedStickers) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetOldFeaturedStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getReplies#24b581ba peer:InputPeer msg_id:int offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
type TLMessagesGetReplies struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	OffsetId             int32         `protobuf:"varint,4,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetDate           int32         `protobuf:"varint,5,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	AddOffset            int32         `protobuf:"varint,6,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32         `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32         `protobuf:"varint,8,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32         `protobuf:"varint,9,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Hash                 int32         `protobuf:"varint,10,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetReplies) Reset()         { *m = TLMessagesGetReplies{} }
func (m *TLMessagesGetReplies) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetReplies) ProtoMessage()    {}
func (*TLMessagesGetReplies) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{239}
}
func (m *TLMessagesGetReplies) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetReplies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetReplies.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetReplies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetReplies.Merge(dst, src)
}
func (m *TLMessagesGetReplies) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetReplies) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetReplies.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetReplies proto.InternalMessageInfo

func (m *TLMessagesGetReplies) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetReplies) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetReplies) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesGetReplies) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesGetReplies) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetReplies) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getDiscussionMessage#446972fd peer:InputPeer msg_id:int = messages.DiscussionMessage;
type TLMessagesGetDiscussionMessage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetDiscussionMessage) Reset()         { *m = TLMessagesGetDiscussionMessage{} }
func (m *TLMessagesGetDiscussionMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDiscussionMessage) ProtoMessage()    {}
func (*TLMessagesGetDiscussionMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{240}
}
func (m *TLMessagesGetDiscussionMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDiscussionMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDiscussionMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetDiscussionMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDiscussionMessage.Merge(dst, src)
}
func (m *TLMessagesGetDiscussionMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDiscussionMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDiscussionMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDiscussionMessage proto.InternalMessageInfo

func (m *TLMessagesGetDiscussionMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetDiscussionMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetDiscussionMessage) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.readDiscussion#f731a9f4 peer:InputPeer msg_id:int read_max_id:int = Bool;
type TLMessagesReadDiscussion struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ReadMaxId            int32         `protobuf:"varint,4,opt,name=read_max_id,json=readMaxId,proto3" json:"read_max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadDiscussion) Reset()         { *m = TLMessagesReadDiscussion{} }
func (m *TLMessagesReadDiscussion) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadDiscussion) ProtoMessage()    {}
func (*TLMessagesReadDiscussion) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{241}
}
func (m *TLMessagesReadDiscussion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadDiscussion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadDiscussion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReadDiscussion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadDiscussion.Merge(dst, src)
}
func (m *TLMessagesReadDiscussion) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadDiscussion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadDiscussion.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadDiscussion proto.InternalMessageInfo

func (m *TLMessagesReadDiscussion) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadDiscussion) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReadDiscussion) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesReadDiscussion) GetReadMaxId() int32 {
	if m != nil {
		return m.ReadMaxId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.unpinAllMessages#f025bc8b peer:InputPeer = messages.AffectedHistory;
type TLMessagesUnpinAllMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUnpinAllMessages) Reset()         { *m = TLMessagesUnpinAllMessages{} }
func (m *TLMessagesUnpinAllMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUnpinAllMessages) ProtoMessage()    {}
func (*TLMessagesUnpinAllMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{242}
}
func (m *TLMessagesUnpinAllMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUnpinAllMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUnpinAllMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesUnpinAllMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUnpinAllMessages.Merge(dst, src)
}
func (m *TLMessagesUnpinAllMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUnpinAllMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUnpinAllMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUnpinAllMessages proto.InternalMessageInfo

func (m *TLMessagesUnpinAllMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUnpinAllMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// updates.getState#edd4882a = updates.State;
type TLUpdatesGetState struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUpdatesGetState) Reset()         { *m = TLUpdatesGetState{} }
func (m *TLUpdatesGetState) String() string { return proto.CompactTextString(m) }
func (*TLUpdatesGetState) ProtoMessage()    {}
func (*TLUpdatesGetState) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{243}
}
func (m *TLUpdatesGetState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUpdatesGetState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUpdatesGetState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUpdatesGetState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUpdatesGetState.Merge(dst, src)
}
func (m *TLUpdatesGetState) XXX_Size() int {
	return m.Size()
}
func (m *TLUpdatesGetState) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUpdatesGetState.DiscardUnknown(m)
}

var xxx_messageInfo_TLUpdatesGetState proto.InternalMessageInfo

func (m *TLUpdatesGetState) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// updates.getDifference#25939651 flags:# pts:int pts_total_limit:flags.0?int date:int qts:int = updates.Difference;
type TLUpdatesGetDifference struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Pts                  int32             `protobuf:"varint,2,opt,name=pts,proto3" json:"pts,omitempty"`
	PtsTotalLimit        *types.Int32Value `protobuf:"bytes,3,opt,name=pts_total_limit,json=ptsTotalLimit,proto3" json:"pts_total_limit,omitempty"`
	Date                 int32             `protobuf:"varint,4,opt,name=date,proto3" json:"date,omitempty"`
	Qts                  int32             `protobuf:"varint,5,opt,name=qts,proto3" json:"qts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLUpdatesGetDifference) Reset()         { *m = TLUpdatesGetDifference{} }
func (m *TLUpdatesGetDifference) String() string { return proto.CompactTextString(m) }
func (*TLUpdatesGetDifference) ProtoMessage()    {}
func (*TLUpdatesGetDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{244}
}
func (m *TLUpdatesGetDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUpdatesGetDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUpdatesGetDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUpdatesGetDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUpdatesGetDifference.Merge(dst, src)
}
func (m *TLUpdatesGetDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLUpdatesGetDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUpdatesGetDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLUpdatesGetDifference proto.InternalMessageInfo

func (m *TLUpdatesGetDifference) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUpdatesGetDifference) GetPts() int32 {
	if m != nil {
		return m.Pts
	}
	return 0
}

func (m *TLUpdatesGetDifference) GetPtsTotalLimit() *types.Int32Value {
	if m != nil {
		return m.PtsTotalLimit
	}
	return nil
}

func (m *TLUpdatesGetDifference) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *TLUpdatesGetDifference) GetQts() int32 {
	if m != nil {
		return m.Qts
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// updates.getChannelDifference#3173d78 flags:# force:flags.0?true channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
type TLUpdatesGetChannelDifference struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Force                bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	Channel              *InputChannel          `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Filter               *ChannelMessagesFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Pts                  int32                  `protobuf:"varint,5,opt,name=pts,proto3" json:"pts,omitempty"`
	Limit                int32                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLUpdatesGetChannelDifference) Reset()         { *m = TLUpdatesGetChannelDifference{} }
func (m *TLUpdatesGetChannelDifference) String() string { return proto.CompactTextString(m) }
func (*TLUpdatesGetChannelDifference) ProtoMessage()    {}
func (*TLUpdatesGetChannelDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{245}
}
func (m *TLUpdatesGetChannelDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUpdatesGetChannelDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUpdatesGetChannelDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUpdatesGetChannelDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUpdatesGetChannelDifference.Merge(dst, src)
}
func (m *TLUpdatesGetChannelDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLUpdatesGetChannelDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUpdatesGetChannelDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLUpdatesGetChannelDifference proto.InternalMessageInfo

func (m *TLUpdatesGetChannelDifference) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUpdatesGetChannelDifference) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLUpdatesGetChannelDifference) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLUpdatesGetChannelDifference) GetFilter() *ChannelMessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLUpdatesGetChannelDifference) GetPts() int32 {
	if m != nil {
		return m.Pts
	}
	return 0
}

func (m *TLUpdatesGetChannelDifference) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// photos.updateProfilePhoto#72d4742c id:InputPhoto = photos.Photo;
type TLPhotosUpdateProfilePhoto72D4742C struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputPhoto   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhotosUpdateProfilePhoto72D4742C) Reset()         { *m = TLPhotosUpdateProfilePhoto72D4742C{} }
func (m *TLPhotosUpdateProfilePhoto72D4742C) String() string { return proto.CompactTextString(m) }
func (*TLPhotosUpdateProfilePhoto72D4742C) ProtoMessage()    {}
func (*TLPhotosUpdateProfilePhoto72D4742C) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{246}
}
func (m *TLPhotosUpdateProfilePhoto72D4742C) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosUpdateProfilePhoto72D4742C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosUpdateProfilePhoto72D4742C.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhotosUpdateProfilePhoto72D4742C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosUpdateProfilePhoto72D4742C.Merge(dst, src)
}
func (m *TLPhotosUpdateProfilePhoto72D4742C) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosUpdateProfilePhoto72D4742C) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosUpdateProfilePhoto72D4742C.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosUpdateProfilePhoto72D4742C proto.InternalMessageInfo

func (m *TLPhotosUpdateProfilePhoto72D4742C) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhotosUpdateProfilePhoto72D4742C) GetId() *InputPhoto {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// photos.uploadProfilePhoto#89f30f69 flags:# file:flags.0?InputFile video:flags.1?InputFile video_start_ts:flags.2?double = photos.Photo;
type TLPhotosUploadProfilePhoto struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	File                 *InputFile         `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Video                *InputFile         `protobuf:"bytes,3,opt,name=video,proto3" json:"video,omitempty"`
	VideoStartTs         *types.DoubleValue `protobuf:"bytes,4,opt,name=video_start_ts,json=videoStartTs,proto3" json:"video_start_ts,omitempty"`
	Caption              string             `protobuf:"bytes,5,opt,name=caption,proto3" json:"caption,omitempty"`
	GeoPoint             *InputGeoPoint     `protobuf:"bytes,6,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Crop                 *InputPhotoCrop    `protobuf:"bytes,7,opt,name=crop,proto3" json:"crop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhotosUploadProfilePhoto) Reset()         { *m = TLPhotosUploadProfilePhoto{} }
func (m *TLPhotosUploadProfilePhoto) String() string { return proto.CompactTextString(m) }
func (*TLPhotosUploadProfilePhoto) ProtoMessage()    {}
func (*TLPhotosUploadProfilePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{247}
}
func (m *TLPhotosUploadProfilePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosUploadProfilePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosUploadProfilePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhotosUploadProfilePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosUploadProfilePhoto.Merge(dst, src)
}
func (m *TLPhotosUploadProfilePhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosUploadProfilePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosUploadProfilePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosUploadProfilePhoto proto.InternalMessageInfo

func (m *TLPhotosUploadProfilePhoto) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhotosUploadProfilePhoto) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLPhotosUploadProfilePhoto) GetVideo() *InputFile {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *TLPhotosUploadProfilePhoto) GetVideoStartTs() *types.DoubleValue {
	if m != nil {
		return m.VideoStartTs
	}
	return nil
}

func (m *TLPhotosUploadProfilePhoto) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *TLPhotosUploadProfilePhoto) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLPhotosUploadProfilePhoto) GetCrop() *InputPhotoCrop {
	if m != nil {
		return m.Crop
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// photos.deletePhotos#87cf7f2f id:Vector<InputPhoto> = Vector<long>;
type TLPhotosDeletePhotos struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []*InputPhoto `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhotosDeletePhotos) Reset()         { *m = TLPhotosDeletePhotos{} }
func (m *TLPhotosDeletePhotos) String() string { return proto.CompactTextString(m) }
func (*TLPhotosDeletePhotos) ProtoMessage()    {}
func (*TLPhotosDeletePhotos) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{248}
}
func (m *TLPhotosDeletePhotos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosDeletePhotos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosDeletePhotos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhotosDeletePhotos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosDeletePhotos.Merge(dst, src)
}
func (m *TLPhotosDeletePhotos) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosDeletePhotos) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosDeletePhotos.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosDeletePhotos proto.InternalMessageInfo

func (m *TLPhotosDeletePhotos) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhotosDeletePhotos) GetId() []*InputPhoto {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// photos.getUserPhotos#91cd32a8 user_id:InputUser offset:int max_id:long limit:int = photos.Photos;
type TLPhotosGetUserPhotos struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Offset               int32         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	MaxId                int64         `protobuf:"varint,4,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	Limit                int32         `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhotosGetUserPhotos) Reset()         { *m = TLPhotosGetUserPhotos{} }
func (m *TLPhotosGetUserPhotos) String() string { return proto.CompactTextString(m) }
func (*TLPhotosGetUserPhotos) ProtoMessage()    {}
func (*TLPhotosGetUserPhotos) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{249}
}
func (m *TLPhotosGetUserPhotos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosGetUserPhotos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosGetUserPhotos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhotosGetUserPhotos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosGetUserPhotos.Merge(dst, src)
}
func (m *TLPhotosGetUserPhotos) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosGetUserPhotos) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosGetUserPhotos.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosGetUserPhotos proto.InternalMessageInfo

func (m *TLPhotosGetUserPhotos) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhotosGetUserPhotos) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLPhotosGetUserPhotos) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLPhotosGetUserPhotos) GetMaxId() int64 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLPhotosGetUserPhotos) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// upload.saveFilePart#b304a621 file_id:long file_part:int bytes:bytes = Bool;
type TLUploadSaveFilePart struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileId               int64         `protobuf:"varint,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FilePart             int32         `protobuf:"varint,3,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"`
	Bytes                []byte        `protobuf:"bytes,4,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadSaveFilePart) Reset()         { *m = TLUploadSaveFilePart{} }
func (m *TLUploadSaveFilePart) String() string { return proto.CompactTextString(m) }
func (*TLUploadSaveFilePart) ProtoMessage()    {}
func (*TLUploadSaveFilePart) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{250}
}
func (m *TLUploadSaveFilePart) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadSaveFilePart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadSaveFilePart.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUploadSaveFilePart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadSaveFilePart.Merge(dst, src)
}
func (m *TLUploadSaveFilePart) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadSaveFilePart) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadSaveFilePart.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadSaveFilePart proto.InternalMessageInfo

func (m *TLUploadSaveFilePart) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadSaveFilePart) GetFileId() int64 {
	if m != nil {
		return m.FileId
	}
	return 0
}

func (m *TLUploadSaveFilePart) GetFilePart() int32 {
	if m != nil {
		return m.FilePart
	}
	return 0
}

func (m *TLUploadSaveFilePart) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// upload.getFile#b15a9afc flags:# precise:flags.0?true cdn_supported:flags.1?true location:InputFileLocation offset:int limit:int = upload.File;
type TLUploadGetFile struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Precise              bool               `protobuf:"varint,2,opt,name=precise,proto3" json:"precise,omitempty"`
	CdnSupported         bool               `protobuf:"varint,3,opt,name=cdn_supported,json=cdnSupported,proto3" json:"cdn_supported,omitempty"`
	Location             *InputFileLocation `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Offset               int32              `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32              `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLUploadGetFile) Reset()         { *m = TLUploadGetFile{} }
func (m *TLUploadGetFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetFile) ProtoMessage()    {}
func (*TLUploadGetFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{251}
}
func (m *TLUploadGetFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUploadGetFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetFile.Merge(dst, src)
}
func (m *TLUploadGetFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetFile proto.InternalMessageInfo

func (m *TLUploadGetFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetFile) GetPrecise() bool {
	if m != nil {
		return m.Precise
	}
	return false
}

func (m *TLUploadGetFile) GetCdnSupported() bool {
	if m != nil {
		return m.CdnSupported
	}
	return false
}

func (m *TLUploadGetFile) GetLocation() *InputFileLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *TLUploadGetFile) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLUploadGetFile) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// upload.saveBigFilePart#de7b673d file_id:long file_part:int file_total_parts:int bytes:bytes = Bool;
type TLUploadSaveBigFilePart struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileId               int64         `protobuf:"varint,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FilePart             int32         `protobuf:"varint,3,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"`
	FileTotalParts       int32         `protobuf:"varint,4,opt,name=file_total_parts,json=fileTotalParts,proto3" json:"file_total_parts,omitempty"`
	Bytes                []byte        `protobuf:"bytes,5,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadSaveBigFilePart) Reset()         { *m = TLUploadSaveBigFilePart{} }
func (m *TLUploadSaveBigFilePart) String() string { return proto.CompactTextString(m) }
func (*TLUploadSaveBigFilePart) ProtoMessage()    {}
func (*TLUploadSaveBigFilePart) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{252}
}
func (m *TLUploadSaveBigFilePart) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadSaveBigFilePart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadSaveBigFilePart.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUploadSaveBigFilePart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadSaveBigFilePart.Merge(dst, src)
}
func (m *TLUploadSaveBigFilePart) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadSaveBigFilePart) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadSaveBigFilePart.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadSaveBigFilePart proto.InternalMessageInfo

func (m *TLUploadSaveBigFilePart) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadSaveBigFilePart) GetFileId() int64 {
	if m != nil {
		return m.FileId
	}
	return 0
}

func (m *TLUploadSaveBigFilePart) GetFilePart() int32 {
	if m != nil {
		return m.FilePart
	}
	return 0
}

func (m *TLUploadSaveBigFilePart) GetFileTotalParts() int32 {
	if m != nil {
		return m.FileTotalParts
	}
	return 0
}

func (m *TLUploadSaveBigFilePart) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// upload.getWebFile#24e6818d location:InputWebFileLocation offset:int limit:int = upload.WebFile;
type TLUploadGetWebFile struct {
	Constructor          TLConstructor         `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Location             *InputWebFileLocation `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Offset               int32                 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32                 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TLUploadGetWebFile) Reset()         { *m = TLUploadGetWebFile{} }
func (m *TLUploadGetWebFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetWebFile) ProtoMessage()    {}
func (*TLUploadGetWebFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{253}
}
func (m *TLUploadGetWebFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetWebFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetWebFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUploadGetWebFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetWebFile.Merge(dst, src)
}
func (m *TLUploadGetWebFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetWebFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetWebFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetWebFile proto.InternalMessageInfo

func (m *TLUploadGetWebFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetWebFile) GetLocation() *InputWebFileLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *TLUploadGetWebFile) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLUploadGetWebFile) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// upload.getCdnFile#2000bcc3 file_token:bytes offset:int limit:int = upload.CdnFile;
type TLUploadGetCdnFile struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileToken            []byte        `protobuf:"bytes,2,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	Offset               int32         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadGetCdnFile) Reset()         { *m = TLUploadGetCdnFile{} }
func (m *TLUploadGetCdnFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetCdnFile) ProtoMessage()    {}
func (*TLUploadGetCdnFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{254}
}
func (m *TLUploadGetCdnFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetCdnFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetCdnFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUploadGetCdnFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetCdnFile.Merge(dst, src)
}
func (m *TLUploadGetCdnFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetCdnFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetCdnFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetCdnFile proto.InternalMessageInfo

func (m *TLUploadGetCdnFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetCdnFile) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadGetCdnFile) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLUploadGetCdnFile) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// upload.reuploadCdnFile#9b2754a8 file_token:bytes request_token:bytes = Vector<FileHash>;
type TLUploadReuploadCdnFile9B2754A8 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileToken            []byte        `protobuf:"bytes,2,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	RequestToken         []byte        `protobuf:"bytes,3,opt,name=request_token,json=requestToken,proto3" json:"request_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadReuploadCdnFile9B2754A8) Reset()         { *m = TLUploadReuploadCdnFile9B2754A8{} }
func (m *TLUploadReuploadCdnFile9B2754A8) String() string { return proto.CompactTextString(m) }
func (*TLUploadReuploadCdnFile9B2754A8) ProtoMessage()    {}
func (*TLUploadReuploadCdnFile9B2754A8) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{255}
}
func (m *TLUploadReuploadCdnFile9B2754A8) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadReuploadCdnFile9B2754A8) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadReuploadCdnFile9B2754A8.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUploadReuploadCdnFile9B2754A8) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadReuploadCdnFile9B2754A8.Merge(dst, src)
}
func (m *TLUploadReuploadCdnFile9B2754A8) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadReuploadCdnFile9B2754A8) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadReuploadCdnFile9B2754A8.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadReuploadCdnFile9B2754A8 proto.InternalMessageInfo

func (m *TLUploadReuploadCdnFile9B2754A8) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadReuploadCdnFile9B2754A8) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadReuploadCdnFile9B2754A8) GetRequestToken() []byte {
	if m != nil {
		return m.RequestToken
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// upload.getCdnFileHashes#4da54231 file_token:bytes offset:int = Vector<FileHash>;
type TLUploadGetCdnFileHashes4DA54231 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileToken            []byte        `protobuf:"bytes,2,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	Offset               int32         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadGetCdnFileHashes4DA54231) Reset()         { *m = TLUploadGetCdnFileHashes4DA54231{} }
func (m *TLUploadGetCdnFileHashes4DA54231) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetCdnFileHashes4DA54231) ProtoMessage()    {}
func (*TLUploadGetCdnFileHashes4DA54231) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{256}
}
func (m *TLUploadGetCdnFileHashes4DA54231) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetCdnFileHashes4DA54231) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetCdnFileHashes4DA54231.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUploadGetCdnFileHashes4DA54231) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetCdnFileHashes4DA54231.Merge(dst, src)
}
func (m *TLUploadGetCdnFileHashes4DA54231) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetCdnFileHashes4DA54231) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetCdnFileHashes4DA54231.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetCdnFileHashes4DA54231 proto.InternalMessageInfo

func (m *TLUploadGetCdnFileHashes4DA54231) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetCdnFileHashes4DA54231) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadGetCdnFileHashes4DA54231) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// upload.getFileHashes#c7025931 location:InputFileLocation offset:int = Vector<FileHash>;
type TLUploadGetFileHashes struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Location             *InputFileLocation `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Offset               int32              `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLUploadGetFileHashes) Reset()         { *m = TLUploadGetFileHashes{} }
func (m *TLUploadGetFileHashes) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetFileHashes) ProtoMessage()    {}
func (*TLUploadGetFileHashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{257}
}
func (m *TLUploadGetFileHashes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetFileHashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetFileHashes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUploadGetFileHashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetFileHashes.Merge(dst, src)
}
func (m *TLUploadGetFileHashes) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetFileHashes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetFileHashes.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetFileHashes proto.InternalMessageInfo

func (m *TLUploadGetFileHashes) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetFileHashes) GetLocation() *InputFileLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *TLUploadGetFileHashes) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// help.getConfig#c4f9186b = Config;
type TLHelpGetConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetConfig) Reset()         { *m = TLHelpGetConfig{} }
func (m *TLHelpGetConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetConfig) ProtoMessage()    {}
func (*TLHelpGetConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{258}
}
func (m *TLHelpGetConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetConfig.Merge(dst, src)
}
func (m *TLHelpGetConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetConfig proto.InternalMessageInfo

func (m *TLHelpGetConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// help.getNearestDc#1fb33026 = NearestDc;
type TLHelpGetNearestDc struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetNearestDc) Reset()         { *m = TLHelpGetNearestDc{} }
func (m *TLHelpGetNearestDc) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetNearestDc) ProtoMessage()    {}
func (*TLHelpGetNearestDc) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{259}
}
func (m *TLHelpGetNearestDc) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetNearestDc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetNearestDc.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetNearestDc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetNearestDc.Merge(dst, src)
}
func (m *TLHelpGetNearestDc) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetNearestDc) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetNearestDc.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetNearestDc proto.InternalMessageInfo

func (m *TLHelpGetNearestDc) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// help.getAppUpdate#522d5a7d source:string = help.AppUpdate;
type TLHelpGetAppUpdate struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Source               string        `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	DeviceModel          string        `protobuf:"bytes,3,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	SystemVersion        string        `protobuf:"bytes,4,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	AppVersion           string        `protobuf:"bytes,5,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	LangCode             string        `protobuf:"bytes,6,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetAppUpdate) Reset()         { *m = TLHelpGetAppUpdate{} }
func (m *TLHelpGetAppUpdate) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetAppUpdate) ProtoMessage()    {}
func (*TLHelpGetAppUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{260}
}
func (m *TLHelpGetAppUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetAppUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetAppUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetAppUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetAppUpdate.Merge(dst, src)
}
func (m *TLHelpGetAppUpdate) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetAppUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetAppUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetAppUpdate proto.InternalMessageInfo

func (m *TLHelpGetAppUpdate) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetAppUpdate) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *TLHelpGetAppUpdate) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *TLHelpGetAppUpdate) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *TLHelpGetAppUpdate) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *TLHelpGetAppUpdate) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// help.getInviteText#4d392343 = help.InviteText;
type TLHelpGetInviteText struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCode             string        `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetInviteText) Reset()         { *m = TLHelpGetInviteText{} }
func (m *TLHelpGetInviteText) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetInviteText) ProtoMessage()    {}
func (*TLHelpGetInviteText) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{261}
}
func (m *TLHelpGetInviteText) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetInviteText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetInviteText.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetInviteText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetInviteText.Merge(dst, src)
}
func (m *TLHelpGetInviteText) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetInviteText) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetInviteText.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetInviteText proto.InternalMessageInfo

func (m *TLHelpGetInviteText) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetInviteText) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// help.getSupport#9cdf08cd = help.Support;
type TLHelpGetSupport struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetSupport) Reset()         { *m = TLHelpGetSupport{} }
func (m *TLHelpGetSupport) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetSupport) ProtoMessage()    {}
func (*TLHelpGetSupport) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{262}
}
func (m *TLHelpGetSupport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetSupport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetSupport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetSupport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetSupport.Merge(dst, src)
}
func (m *TLHelpGetSupport) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetSupport) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetSupport.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetSupport proto.InternalMessageInfo

func (m *TLHelpGetSupport) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// help.getAppChangelog#9010ef6f prev_app_version:string = Updates;
type TLHelpGetAppChangelog struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PrevAppVersion       string        `protobuf:"bytes,2,opt,name=prev_app_version,json=prevAppVersion,proto3" json:"prev_app_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetAppChangelog) Reset()         { *m = TLHelpGetAppChangelog{} }
func (m *TLHelpGetAppChangelog) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetAppChangelog) ProtoMessage()    {}
func (*TLHelpGetAppChangelog) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{263}
}
func (m *TLHelpGetAppChangelog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetAppChangelog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetAppChangelog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetAppChangelog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetAppChangelog.Merge(dst, src)
}
func (m *TLHelpGetAppChangelog) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetAppChangelog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetAppChangelog.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetAppChangelog proto.InternalMessageInfo

func (m *TLHelpGetAppChangelog) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetAppChangelog) GetPrevAppVersion() string {
	if m != nil {
		return m.PrevAppVersion
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// help.setBotUpdatesStatus#ec22cfcd pending_updates_count:int message:string = Bool;
type TLHelpSetBotUpdatesStatus struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PendingUpdatesCount  int32         `protobuf:"varint,2,opt,name=pending_updates_count,json=pendingUpdatesCount,proto3" json:"pending_updates_count,omitempty"`
	Message              string        `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpSetBotUpdatesStatus) Reset()         { *m = TLHelpSetBotUpdatesStatus{} }
func (m *TLHelpSetBotUpdatesStatus) String() string { return proto.CompactTextString(m) }
func (*TLHelpSetBotUpdatesStatus) ProtoMessage()    {}
func (*TLHelpSetBotUpdatesStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{264}
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpSetBotUpdatesStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpSetBotUpdatesStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpSetBotUpdatesStatus.Merge(dst, src)
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpSetBotUpdatesStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpSetBotUpdatesStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpSetBotUpdatesStatus proto.InternalMessageInfo

func (m *TLHelpSetBotUpdatesStatus) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpSetBotUpdatesStatus) GetPendingUpdatesCount() int32 {
	if m != nil {
		return m.PendingUpdatesCount
	}
	return 0
}

func (m *TLHelpSetBotUpdatesStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// help.getCdnConfig#52029342 = CdnConfig;
type TLHelpGetCdnConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetCdnConfig) Reset()         { *m = TLHelpGetCdnConfig{} }
func (m *TLHelpGetCdnConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetCdnConfig) ProtoMessage()    {}
func (*TLHelpGetCdnConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{265}
}
func (m *TLHelpGetCdnConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetCdnConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetCdnConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetCdnConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetCdnConfig.Merge(dst, src)
}
func (m *TLHelpGetCdnConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetCdnConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetCdnConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetCdnConfig proto.InternalMessageInfo

func (m *TLHelpGetCdnConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// help.getRecentMeUrls#3dc0f114 referer:string = help.RecentMeUrls;
type TLHelpGetRecentMeUrls struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Referer              string        `protobuf:"bytes,2,opt,name=referer,proto3" json:"referer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetRecentMeUrls) Reset()         { *m = TLHelpGetRecentMeUrls{} }
func (m *TLHelpGetRecentMeUrls) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetRecentMeUrls) ProtoMessage()    {}
func (*TLHelpGetRecentMeUrls) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{266}
}
func (m *TLHelpGetRecentMeUrls) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetRecentMeUrls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetRecentMeUrls.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetRecentMeUrls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetRecentMeUrls.Merge(dst, src)
}
func (m *TLHelpGetRecentMeUrls) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetRecentMeUrls) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetRecentMeUrls.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetRecentMeUrls proto.InternalMessageInfo

func (m *TLHelpGetRecentMeUrls) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetRecentMeUrls) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// help.getTermsOfServiceUpdate#2ca51fd1 = help.TermsOfServiceUpdate;
type TLHelpGetTermsOfServiceUpdate struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetTermsOfServiceUpdate) Reset()         { *m = TLHelpGetTermsOfServiceUpdate{} }
func (m *TLHelpGetTermsOfServiceUpdate) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetTermsOfServiceUpdate) ProtoMessage()    {}
func (*TLHelpGetTermsOfServiceUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{267}
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetTermsOfServiceUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetTermsOfServiceUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetTermsOfServiceUpdate.Merge(dst, src)
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetTermsOfServiceUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetTermsOfServiceUpdate proto.InternalMessageInfo

func (m *TLHelpGetTermsOfServiceUpdate) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// help.acceptTermsOfService#ee72f79a id:DataJSON = Bool;
type TLHelpAcceptTermsOfService struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *DataJSON     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpAcceptTermsOfService) Reset()         { *m = TLHelpAcceptTermsOfService{} }
func (m *TLHelpAcceptTermsOfService) String() string { return proto.CompactTextString(m) }
func (*TLHelpAcceptTermsOfService) ProtoMessage()    {}
func (*TLHelpAcceptTermsOfService) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{268}
}
func (m *TLHelpAcceptTermsOfService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpAcceptTermsOfService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpAcceptTermsOfService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpAcceptTermsOfService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpAcceptTermsOfService.Merge(dst, src)
}
func (m *TLHelpAcceptTermsOfService) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpAcceptTermsOfService) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpAcceptTermsOfService.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpAcceptTermsOfService proto.InternalMessageInfo

func (m *TLHelpAcceptTermsOfService) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpAcceptTermsOfService) GetId() *DataJSON {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// help.getDeepLinkInfo#3fedc75f path:string = help.DeepLinkInfo;
type TLHelpGetDeepLinkInfo struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Path                 string        `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetDeepLinkInfo) Reset()         { *m = TLHelpGetDeepLinkInfo{} }
func (m *TLHelpGetDeepLinkInfo) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetDeepLinkInfo) ProtoMessage()    {}
func (*TLHelpGetDeepLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{269}
}
func (m *TLHelpGetDeepLinkInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetDeepLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetDeepLinkInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetDeepLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetDeepLinkInfo.Merge(dst, src)
}
func (m *TLHelpGetDeepLinkInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetDeepLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetDeepLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetDeepLinkInfo proto.InternalMessageInfo

func (m *TLHelpGetDeepLinkInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetDeepLinkInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// help.getAppConfig#98914110 = JSONValue;
type TLHelpGetAppConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetAppConfig) Reset()         { *m = TLHelpGetAppConfig{} }
func (m *TLHelpGetAppConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetAppConfig) ProtoMessage()    {}
func (*TLHelpGetAppConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{270}
}
func (m *TLHelpGetAppConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetAppConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetAppConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetAppConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetAppConfig.Merge(dst, src)
}
func (m *TLHelpGetAppConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetAppConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetAppConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetAppConfig proto.InternalMessageInfo

func (m *TLHelpGetAppConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// help.saveAppLog#6f02f748 events:Vector<InputAppEvent> = Bool;
type TLHelpSaveAppLog struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Events               []*InputAppEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLHelpSaveAppLog) Reset()         { *m = TLHelpSaveAppLog{} }
func (m *TLHelpSaveAppLog) String() string { return proto.CompactTextString(m) }
func (*TLHelpSaveAppLog) ProtoMessage()    {}
func (*TLHelpSaveAppLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{271}
}
func (m *TLHelpSaveAppLog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpSaveAppLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpSaveAppLog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpSaveAppLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpSaveAppLog.Merge(dst, src)
}
func (m *TLHelpSaveAppLog) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpSaveAppLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpSaveAppLog.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpSaveAppLog proto.InternalMessageInfo

func (m *TLHelpSaveAppLog) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpSaveAppLog) GetEvents() []*InputAppEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// help.getPassportConfig#c661ad08 hash:int = help.PassportConfig;
type TLHelpGetPassportConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetPassportConfig) Reset()         { *m = TLHelpGetPassportConfig{} }
func (m *TLHelpGetPassportConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetPassportConfig) ProtoMessage()    {}
func (*TLHelpGetPassportConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{272}
}
func (m *TLHelpGetPassportConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetPassportConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetPassportConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetPassportConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetPassportConfig.Merge(dst, src)
}
func (m *TLHelpGetPassportConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetPassportConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetPassportConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetPassportConfig proto.InternalMessageInfo

func (m *TLHelpGetPassportConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetPassportConfig) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// help.getSupportName#d360e72c = help.SupportName;
type TLHelpGetSupportName struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetSupportName) Reset()         { *m = TLHelpGetSupportName{} }
func (m *TLHelpGetSupportName) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetSupportName) ProtoMessage()    {}
func (*TLHelpGetSupportName) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{273}
}
func (m *TLHelpGetSupportName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetSupportName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetSupportName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetSupportName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetSupportName.Merge(dst, src)
}
func (m *TLHelpGetSupportName) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetSupportName) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetSupportName.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetSupportName proto.InternalMessageInfo

func (m *TLHelpGetSupportName) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// help.getUserInfo#38a08d3 user_id:InputUser = help.UserInfo;
type TLHelpGetUserInfo struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetUserInfo) Reset()         { *m = TLHelpGetUserInfo{} }
func (m *TLHelpGetUserInfo) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetUserInfo) ProtoMessage()    {}
func (*TLHelpGetUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{274}
}
func (m *TLHelpGetUserInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetUserInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetUserInfo.Merge(dst, src)
}
func (m *TLHelpGetUserInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetUserInfo proto.InternalMessageInfo

func (m *TLHelpGetUserInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetUserInfo) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// help.editUserInfo#66b91b70 user_id:InputUser message:string entities:Vector<MessageEntity> = help.UserInfo;
type TLHelpEditUserInfo struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserId               *InputUser       `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message              string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Entities             []*MessageEntity `protobuf:"bytes,4,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLHelpEditUserInfo) Reset()         { *m = TLHelpEditUserInfo{} }
func (m *TLHelpEditUserInfo) String() string { return proto.CompactTextString(m) }
func (*TLHelpEditUserInfo) ProtoMessage()    {}
func (*TLHelpEditUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{275}
}
func (m *TLHelpEditUserInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpEditUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpEditUserInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpEditUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpEditUserInfo.Merge(dst, src)
}
func (m *TLHelpEditUserInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpEditUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpEditUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpEditUserInfo proto.InternalMessageInfo

func (m *TLHelpEditUserInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpEditUserInfo) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLHelpEditUserInfo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLHelpEditUserInfo) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// help.getPromoData#c0977421 = help.PromoData;
type TLHelpGetPromoData struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetPromoData) Reset()         { *m = TLHelpGetPromoData{} }
func (m *TLHelpGetPromoData) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetPromoData) ProtoMessage()    {}
func (*TLHelpGetPromoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{276}
}
func (m *TLHelpGetPromoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetPromoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetPromoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetPromoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetPromoData.Merge(dst, src)
}
func (m *TLHelpGetPromoData) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetPromoData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetPromoData.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetPromoData proto.InternalMessageInfo

func (m *TLHelpGetPromoData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// help.hidePromoData#1e251c95 peer:InputPeer = Bool;
type TLHelpHidePromoData struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpHidePromoData) Reset()         { *m = TLHelpHidePromoData{} }
func (m *TLHelpHidePromoData) String() string { return proto.CompactTextString(m) }
func (*TLHelpHidePromoData) ProtoMessage()    {}
func (*TLHelpHidePromoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{277}
}
func (m *TLHelpHidePromoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpHidePromoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpHidePromoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpHidePromoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpHidePromoData.Merge(dst, src)
}
func (m *TLHelpHidePromoData) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpHidePromoData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpHidePromoData.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpHidePromoData proto.InternalMessageInfo

func (m *TLHelpHidePromoData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpHidePromoData) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// help.dismissSuggestion#77fa99f suggestion:string = Bool;
type TLHelpDismissSuggestion struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Suggestion           string        `protobuf:"bytes,2,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpDismissSuggestion) Reset()         { *m = TLHelpDismissSuggestion{} }
func (m *TLHelpDismissSuggestion) String() string { return proto.CompactTextString(m) }
func (*TLHelpDismissSuggestion) ProtoMessage()    {}
func (*TLHelpDismissSuggestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{278}
}
func (m *TLHelpDismissSuggestion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpDismissSuggestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpDismissSuggestion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpDismissSuggestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpDismissSuggestion.Merge(dst, src)
}
func (m *TLHelpDismissSuggestion) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpDismissSuggestion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpDismissSuggestion.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpDismissSuggestion proto.InternalMessageInfo

func (m *TLHelpDismissSuggestion) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpDismissSuggestion) GetSuggestion() string {
	if m != nil {
		return m.Suggestion
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// help.getCountriesList#735787a8 lang_code:string hash:int = help.CountriesList;
type TLHelpGetCountriesList struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCode             string        `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Hash                 int32         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetCountriesList) Reset()         { *m = TLHelpGetCountriesList{} }
func (m *TLHelpGetCountriesList) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetCountriesList) ProtoMessage()    {}
func (*TLHelpGetCountriesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{279}
}
func (m *TLHelpGetCountriesList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetCountriesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetCountriesList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetCountriesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetCountriesList.Merge(dst, src)
}
func (m *TLHelpGetCountriesList) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetCountriesList) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetCountriesList.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetCountriesList proto.InternalMessageInfo

func (m *TLHelpGetCountriesList) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetCountriesList) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLHelpGetCountriesList) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.readHistory#cc104937 channel:InputChannel max_id:int = Bool;
type TLChannelsReadHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	MaxId                int32         `protobuf:"varint,3,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsReadHistory) Reset()         { *m = TLChannelsReadHistory{} }
func (m *TLChannelsReadHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsReadHistory) ProtoMessage()    {}
func (*TLChannelsReadHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{280}
}
func (m *TLChannelsReadHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsReadHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsReadHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsReadHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsReadHistory.Merge(dst, src)
}
func (m *TLChannelsReadHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsReadHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsReadHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsReadHistory proto.InternalMessageInfo

func (m *TLChannelsReadHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsReadHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsReadHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.deleteMessages#84c1fd4e channel:InputChannel id:Vector<int> = messages.AffectedMessages;
type TLChannelsDeleteMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   []int32       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteMessages) Reset()         { *m = TLChannelsDeleteMessages{} }
func (m *TLChannelsDeleteMessages) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteMessages) ProtoMessage()    {}
func (*TLChannelsDeleteMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{281}
}
func (m *TLChannelsDeleteMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsDeleteMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteMessages.Merge(dst, src)
}
func (m *TLChannelsDeleteMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteMessages proto.InternalMessageInfo

func (m *TLChannelsDeleteMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsDeleteMessages) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsDeleteMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.deleteUserHistory#d10dd71b channel:InputChannel user_id:InputUser = messages.AffectedHistory;
type TLChannelsDeleteUserHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteUserHistory) Reset()         { *m = TLChannelsDeleteUserHistory{} }
func (m *TLChannelsDeleteUserHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteUserHistory) ProtoMessage()    {}
func (*TLChannelsDeleteUserHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{282}
}
func (m *TLChannelsDeleteUserHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteUserHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteUserHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsDeleteUserHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteUserHistory.Merge(dst, src)
}
func (m *TLChannelsDeleteUserHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteUserHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteUserHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteUserHistory proto.InternalMessageInfo

func (m *TLChannelsDeleteUserHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsDeleteUserHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsDeleteUserHistory) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.reportSpam#fe087810 channel:InputChannel user_id:InputUser id:Vector<int> = Bool;
type TLChannelsReportSpam struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsReportSpam) Reset()         { *m = TLChannelsReportSpam{} }
func (m *TLChannelsReportSpam) String() string { return proto.CompactTextString(m) }
func (*TLChannelsReportSpam) ProtoMessage()    {}
func (*TLChannelsReportSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{283}
}
func (m *TLChannelsReportSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsReportSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsReportSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsReportSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsReportSpam.Merge(dst, src)
}
func (m *TLChannelsReportSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsReportSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsReportSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsReportSpam proto.InternalMessageInfo

func (m *TLChannelsReportSpam) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsReportSpam) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsReportSpam) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsReportSpam) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.getMessages#ad8c9a23 channel:InputChannel id:Vector<InputMessage> = messages.Messages;
type TLChannelsGetMessages struct {
	Constructor           TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel               *InputChannel   `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Id_VECTORINPUTMESSAGE []*InputMessage `protobuf:"bytes,3,rep,name=id_VECTORINPUTMESSAGE,json=idVECTORINPUTMESSAGE,proto3" json:"id_VECTORINPUTMESSAGE,omitempty"`
	Id_VECTORINT32        []int32         `protobuf:"varint,4,rep,packed,name=id_VECTORINT32,json=idVECTORINT32,proto3" json:"id_VECTORINT32,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}        `json:"-"`
	XXX_unrecognized      []byte          `json:"-"`
	XXX_sizecache         int32           `json:"-"`
}

func (m *TLChannelsGetMessages) Reset()         { *m = TLChannelsGetMessages{} }
func (m *TLChannelsGetMessages) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetMessages) ProtoMessage()    {}
func (*TLChannelsGetMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{284}
}
func (m *TLChannelsGetMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetMessages.Merge(dst, src)
}
func (m *TLChannelsGetMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetMessages proto.InternalMessageInfo

func (m *TLChannelsGetMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetMessages) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetMessages) GetId_VECTORINPUTMESSAGE() []*InputMessage {
	if m != nil {
		return m.Id_VECTORINPUTMESSAGE
	}
	return nil
}

func (m *TLChannelsGetMessages) GetId_VECTORINT32() []int32 {
	if m != nil {
		return m.Id_VECTORINT32
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.getParticipants#123e05e9 channel:InputChannel filter:ChannelParticipantsFilter offset:int limit:int hash:int = channels.ChannelParticipants;
type TLChannelsGetParticipants struct {
	Constructor          TLConstructor              `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel              `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Filter               *ChannelParticipantsFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Offset               int32                      `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32                      `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32                      `protobuf:"varint,6,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TLChannelsGetParticipants) Reset()         { *m = TLChannelsGetParticipants{} }
func (m *TLChannelsGetParticipants) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetParticipants) ProtoMessage()    {}
func (*TLChannelsGetParticipants) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{285}
}
func (m *TLChannelsGetParticipants) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetParticipants) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetParticipants.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetParticipants) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetParticipants.Merge(dst, src)
}
func (m *TLChannelsGetParticipants) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetParticipants) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetParticipants.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetParticipants proto.InternalMessageInfo

func (m *TLChannelsGetParticipants) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetParticipants) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetParticipants) GetFilter() *ChannelParticipantsFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLChannelsGetParticipants) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLChannelsGetParticipants) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLChannelsGetParticipants) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.getParticipant#546dd7a6 channel:InputChannel user_id:InputUser = channels.ChannelParticipant;
type TLChannelsGetParticipant struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetParticipant) Reset()         { *m = TLChannelsGetParticipant{} }
func (m *TLChannelsGetParticipant) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetParticipant) ProtoMessage()    {}
func (*TLChannelsGetParticipant) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{286}
}
func (m *TLChannelsGetParticipant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetParticipant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetParticipant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetParticipant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetParticipant.Merge(dst, src)
}
func (m *TLChannelsGetParticipant) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetParticipant) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetParticipant.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetParticipant proto.InternalMessageInfo

func (m *TLChannelsGetParticipant) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetParticipant) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetParticipant) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.getChannels#a7f6bbb id:Vector<InputChannel> = messages.Chats;
type TLChannelsGetChannels struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []*InputChannel `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLChannelsGetChannels) Reset()         { *m = TLChannelsGetChannels{} }
func (m *TLChannelsGetChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetChannels) ProtoMessage()    {}
func (*TLChannelsGetChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{287}
}
func (m *TLChannelsGetChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetChannels.Merge(dst, src)
}
func (m *TLChannelsGetChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetChannels proto.InternalMessageInfo

func (m *TLChannelsGetChannels) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetChannels) GetId() []*InputChannel {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.getFullChannel#8736a09 channel:InputChannel = messages.ChatFull;
type TLChannelsGetFullChannel struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetFullChannel) Reset()         { *m = TLChannelsGetFullChannel{} }
func (m *TLChannelsGetFullChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetFullChannel) ProtoMessage()    {}
func (*TLChannelsGetFullChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{288}
}
func (m *TLChannelsGetFullChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetFullChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetFullChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetFullChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetFullChannel.Merge(dst, src)
}
func (m *TLChannelsGetFullChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetFullChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetFullChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetFullChannel proto.InternalMessageInfo

func (m *TLChannelsGetFullChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetFullChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.createChannel#f92c8267 flags:# broadcast:flags.0?true megagroup:flags.1?true title:string about:string notice:string geo_point:flags.2?InputGeoPoint address:flags.2?string = Updates;
type TLChannelsCreateChannel struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Broadcast            bool               `protobuf:"varint,2,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Megagroup            bool               `protobuf:"varint,3,opt,name=megagroup,proto3" json:"megagroup,omitempty"`
	Title                string             `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	About                string             `protobuf:"bytes,5,opt,name=about,proto3" json:"about,omitempty"`
	Notice               string             `protobuf:"bytes,6,opt,name=notice,proto3" json:"notice,omitempty"`
	GeoPoint             *InputGeoPoint     `protobuf:"bytes,7,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Address              *types.StringValue `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLChannelsCreateChannel) Reset()         { *m = TLChannelsCreateChannel{} }
func (m *TLChannelsCreateChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsCreateChannel) ProtoMessage()    {}
func (*TLChannelsCreateChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{289}
}
func (m *TLChannelsCreateChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsCreateChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsCreateChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsCreateChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsCreateChannel.Merge(dst, src)
}
func (m *TLChannelsCreateChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsCreateChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsCreateChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsCreateChannel proto.InternalMessageInfo

func (m *TLChannelsCreateChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsCreateChannel) GetBroadcast() bool {
	if m != nil {
		return m.Broadcast
	}
	return false
}

func (m *TLChannelsCreateChannel) GetMegagroup() bool {
	if m != nil {
		return m.Megagroup
	}
	return false
}

func (m *TLChannelsCreateChannel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLChannelsCreateChannel) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

func (m *TLChannelsCreateChannel) GetNotice() string {
	if m != nil {
		return m.Notice
	}
	return ""
}

func (m *TLChannelsCreateChannel) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLChannelsCreateChannel) GetAddress() *types.StringValue {
	if m != nil {
		return m.Address
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.editAdmin#d33c8902 channel:InputChannel user_id:InputUser admin_rights:ChatAdminRights rank:string = Updates;
type TLChannelsEditAdmin struct {
	Constructor                    TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel                        *InputChannel       `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId                         *InputUser          `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AdminRights_CHATADMINRIGHTS    *ChatAdminRights    `protobuf:"bytes,4,opt,name=admin_rights_CHATADMINRIGHTS,json=adminRightsCHATADMINRIGHTS,proto3" json:"admin_rights_CHATADMINRIGHTS,omitempty"`
	Rank                           string              `protobuf:"bytes,5,opt,name=rank,proto3" json:"rank,omitempty"`
	AdminRights_CHANNELADMINRIGHTS *ChannelAdminRights `protobuf:"bytes,6,opt,name=admin_rights_CHANNELADMINRIGHTS,json=adminRightsCHANNELADMINRIGHTS,proto3" json:"admin_rights_CHANNELADMINRIGHTS,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}            `json:"-"`
	XXX_unrecognized               []byte              `json:"-"`
	XXX_sizecache                  int32               `json:"-"`
}

func (m *TLChannelsEditAdmin) Reset()         { *m = TLChannelsEditAdmin{} }
func (m *TLChannelsEditAdmin) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditAdmin) ProtoMessage()    {}
func (*TLChannelsEditAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{290}
}
func (m *TLChannelsEditAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsEditAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditAdmin.Merge(dst, src)
}
func (m *TLChannelsEditAdmin) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditAdmin proto.InternalMessageInfo

func (m *TLChannelsEditAdmin) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditAdmin) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetAdminRights_CHATADMINRIGHTS() *ChatAdminRights {
	if m != nil {
		return m.AdminRights_CHATADMINRIGHTS
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetRank() string {
	if m != nil {
		return m.Rank
	}
	return ""
}

func (m *TLChannelsEditAdmin) GetAdminRights_CHANNELADMINRIGHTS() *ChannelAdminRights {
	if m != nil {
		return m.AdminRights_CHANNELADMINRIGHTS
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.editTitle#566decd0 channel:InputChannel title:string = Updates;
type TLChannelsEditTitle struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Title                string        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsEditTitle) Reset()         { *m = TLChannelsEditTitle{} }
func (m *TLChannelsEditTitle) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditTitle) ProtoMessage()    {}
func (*TLChannelsEditTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{291}
}
func (m *TLChannelsEditTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsEditTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditTitle.Merge(dst, src)
}
func (m *TLChannelsEditTitle) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditTitle.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditTitle proto.InternalMessageInfo

func (m *TLChannelsEditTitle) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditTitle) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// channels.editPhoto#f12e57c9 channel:InputChannel photo:InputChatPhoto = Updates;
type TLChannelsEditPhoto struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel   `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Photo                *InputChatPhoto `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLChannelsEditPhoto) Reset()         { *m = TLChannelsEditPhoto{} }
func (m *TLChannelsEditPhoto) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditPhoto) ProtoMessage()    {}
func (*TLChannelsEditPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{292}
}
func (m *TLChannelsEditPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsEditPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditPhoto.Merge(dst, src)
}
func (m *TLChannelsEditPhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditPhoto proto.InternalMessageInfo

func (m *TLChannelsEditPhoto) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditPhoto) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditPhoto) GetPhoto() *InputChatPhoto {
	if m != nil {
		return m.Photo
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.checkUsername#10e6bd2c channel:InputChannel username:string = Bool;
type TLChannelsCheckUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Username             string        `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsCheckUsername) Reset()         { *m = TLChannelsCheckUsername{} }
func (m *TLChannelsCheckUsername) String() string { return proto.CompactTextString(m) }
func (*TLChannelsCheckUsername) ProtoMessage()    {}
func (*TLChannelsCheckUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{293}
}
func (m *TLChannelsCheckUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsCheckUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsCheckUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsCheckUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsCheckUsername.Merge(dst, src)
}
func (m *TLChannelsCheckUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsCheckUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsCheckUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsCheckUsername proto.InternalMessageInfo

func (m *TLChannelsCheckUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsCheckUsername) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsCheckUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// channels.updateUsername#3514b3de channel:InputChannel username:string = Bool;
type TLChannelsUpdateUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Username             string        `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsUpdateUsername) Reset()         { *m = TLChannelsUpdateUsername{} }
func (m *TLChannelsUpdateUsername) String() string { return proto.CompactTextString(m) }
func (*TLChannelsUpdateUsername) ProtoMessage()    {}
func (*TLChannelsUpdateUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{294}
}
func (m *TLChannelsUpdateUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsUpdateUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsUpdateUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsUpdateUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsUpdateUsername.Merge(dst, src)
}
func (m *TLChannelsUpdateUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsUpdateUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsUpdateUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsUpdateUsername proto.InternalMessageInfo

func (m *TLChannelsUpdateUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsUpdateUsername) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsUpdateUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// channels.joinChannel#24b524c5 channel:InputChannel = Updates;
type TLChannelsJoinChannel struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsJoinChannel) Reset()         { *m = TLChannelsJoinChannel{} }
func (m *TLChannelsJoinChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsJoinChannel) ProtoMessage()    {}
func (*TLChannelsJoinChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{295}
}
func (m *TLChannelsJoinChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsJoinChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsJoinChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsJoinChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsJoinChannel.Merge(dst, src)
}
func (m *TLChannelsJoinChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsJoinChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsJoinChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsJoinChannel proto.InternalMessageInfo

func (m *TLChannelsJoinChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsJoinChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.leaveChannel#f836aa95 channel:InputChannel = Updates;
type TLChannelsLeaveChannel struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsLeaveChannel) Reset()         { *m = TLChannelsLeaveChannel{} }
func (m *TLChannelsLeaveChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsLeaveChannel) ProtoMessage()    {}
func (*TLChannelsLeaveChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{296}
}
func (m *TLChannelsLeaveChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsLeaveChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsLeaveChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsLeaveChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsLeaveChannel.Merge(dst, src)
}
func (m *TLChannelsLeaveChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsLeaveChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsLeaveChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsLeaveChannel proto.InternalMessageInfo

func (m *TLChannelsLeaveChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsLeaveChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.inviteToChannel#199f3a6c channel:InputChannel users:Vector<InputUser> = Updates;
type TLChannelsInviteToChannel struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Users                []*InputUser  `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsInviteToChannel) Reset()         { *m = TLChannelsInviteToChannel{} }
func (m *TLChannelsInviteToChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsInviteToChannel) ProtoMessage()    {}
func (*TLChannelsInviteToChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{297}
}
func (m *TLChannelsInviteToChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsInviteToChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsInviteToChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsInviteToChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsInviteToChannel.Merge(dst, src)
}
func (m *TLChannelsInviteToChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsInviteToChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsInviteToChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsInviteToChannel proto.InternalMessageInfo

func (m *TLChannelsInviteToChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsInviteToChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsInviteToChannel) GetUsers() []*InputUser {
	if m != nil {
		return m.Users
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.deleteChannel#c0111fe3 channel:InputChannel = Updates;
type TLChannelsDeleteChannel struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteChannel) Reset()         { *m = TLChannelsDeleteChannel{} }
func (m *TLChannelsDeleteChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteChannel) ProtoMessage()    {}
func (*TLChannelsDeleteChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{298}
}
func (m *TLChannelsDeleteChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsDeleteChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteChannel.Merge(dst, src)
}
func (m *TLChannelsDeleteChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteChannel proto.InternalMessageInfo

func (m *TLChannelsDeleteChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsDeleteChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.exportMessageLink#e63fadeb flags:# grouped:flags.0?true thread:flags.1?true channel:InputChannel id:int = ExportedMessageLink;
type TLChannelsExportMessageLink struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Grouped_FLAGBOOLEAN  bool          `protobuf:"varint,2,opt,name=grouped_FLAGBOOLEAN,json=groupedFLAGBOOLEAN,proto3" json:"grouped_FLAGBOOLEAN,omitempty"`
	Thread               bool          `protobuf:"varint,3,opt,name=thread,proto3" json:"thread,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   int32         `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Grouped_BOOL         *Bool         `protobuf:"bytes,6,opt,name=grouped_BOOL,json=groupedBOOL,proto3" json:"grouped_BOOL,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsExportMessageLink) Reset()         { *m = TLChannelsExportMessageLink{} }
func (m *TLChannelsExportMessageLink) String() string { return proto.CompactTextString(m) }
func (*TLChannelsExportMessageLink) ProtoMessage()    {}
func (*TLChannelsExportMessageLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{299}
}
func (m *TLChannelsExportMessageLink) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsExportMessageLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsExportMessageLink.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsExportMessageLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsExportMessageLink.Merge(dst, src)
}
func (m *TLChannelsExportMessageLink) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsExportMessageLink) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsExportMessageLink.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsExportMessageLink proto.InternalMessageInfo

func (m *TLChannelsExportMessageLink) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsExportMessageLink) GetGrouped_FLAGBOOLEAN() bool {
	if m != nil {
		return m.Grouped_FLAGBOOLEAN
	}
	return false
}

func (m *TLChannelsExportMessageLink) GetThread() bool {
	if m != nil {
		return m.Thread
	}
	return false
}

func (m *TLChannelsExportMessageLink) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsExportMessageLink) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLChannelsExportMessageLink) GetGrouped_BOOL() *Bool {
	if m != nil {
		return m.Grouped_BOOL
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.toggleSignatures#1f69b606 channel:InputChannel enabled:Bool = Updates;
type TLChannelsToggleSignatures struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsToggleSignatures) Reset()         { *m = TLChannelsToggleSignatures{} }
func (m *TLChannelsToggleSignatures) String() string { return proto.CompactTextString(m) }
func (*TLChannelsToggleSignatures) ProtoMessage()    {}
func (*TLChannelsToggleSignatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{300}
}
func (m *TLChannelsToggleSignatures) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsToggleSignatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsToggleSignatures.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsToggleSignatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsToggleSignatures.Merge(dst, src)
}
func (m *TLChannelsToggleSignatures) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsToggleSignatures) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsToggleSignatures.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsToggleSignatures proto.InternalMessageInfo

func (m *TLChannelsToggleSignatures) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsToggleSignatures) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsToggleSignatures) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.getAdminedPublicChannels#f8b036af flags:# by_location:flags.0?true check_limit:flags.1?true = messages.Chats;
type TLChannelsGetAdminedPublicChannels struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ByLocation           bool          `protobuf:"varint,2,opt,name=by_location,json=byLocation,proto3" json:"by_location,omitempty"`
	CheckLimit           bool          `protobuf:"varint,3,opt,name=check_limit,json=checkLimit,proto3" json:"check_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetAdminedPublicChannels) Reset()         { *m = TLChannelsGetAdminedPublicChannels{} }
func (m *TLChannelsGetAdminedPublicChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetAdminedPublicChannels) ProtoMessage()    {}
func (*TLChannelsGetAdminedPublicChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{301}
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetAdminedPublicChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetAdminedPublicChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetAdminedPublicChannels.Merge(dst, src)
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetAdminedPublicChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetAdminedPublicChannels proto.InternalMessageInfo

func (m *TLChannelsGetAdminedPublicChannels) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetAdminedPublicChannels) GetByLocation() bool {
	if m != nil {
		return m.ByLocation
	}
	return false
}

func (m *TLChannelsGetAdminedPublicChannels) GetCheckLimit() bool {
	if m != nil {
		return m.CheckLimit
	}
	return false
}

// --------------------------------------------------------------------------------------------
// channels.editBanned#72796912 channel:InputChannel user_id:InputUser banned_rights:ChatBannedRights = Updates;
type TLChannelsEditBanned struct {
	Constructor                      TLConstructor        `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel                          *InputChannel        `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId                           *InputUser           `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BannedRights_CHATBANNEDRIGHTS    *ChatBannedRights    `protobuf:"bytes,4,opt,name=banned_rights_CHATBANNEDRIGHTS,json=bannedRightsCHATBANNEDRIGHTS,proto3" json:"banned_rights_CHATBANNEDRIGHTS,omitempty"`
	BannedRights_CHANNELBANNEDRIGHTS *ChannelBannedRights `protobuf:"bytes,5,opt,name=banned_rights_CHANNELBANNEDRIGHTS,json=bannedRightsCHANNELBANNEDRIGHTS,proto3" json:"banned_rights_CHANNELBANNEDRIGHTS,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}             `json:"-"`
	XXX_unrecognized                 []byte               `json:"-"`
	XXX_sizecache                    int32                `json:"-"`
}

func (m *TLChannelsEditBanned) Reset()         { *m = TLChannelsEditBanned{} }
func (m *TLChannelsEditBanned) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditBanned) ProtoMessage()    {}
func (*TLChannelsEditBanned) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{302}
}
func (m *TLChannelsEditBanned) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditBanned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditBanned.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsEditBanned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditBanned.Merge(dst, src)
}
func (m *TLChannelsEditBanned) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditBanned) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditBanned.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditBanned proto.InternalMessageInfo

func (m *TLChannelsEditBanned) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditBanned) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditBanned) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsEditBanned) GetBannedRights_CHATBANNEDRIGHTS() *ChatBannedRights {
	if m != nil {
		return m.BannedRights_CHATBANNEDRIGHTS
	}
	return nil
}

func (m *TLChannelsEditBanned) GetBannedRights_CHANNELBANNEDRIGHTS() *ChannelBannedRights {
	if m != nil {
		return m.BannedRights_CHANNELBANNEDRIGHTS
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.getAdminLog#33ddf480 flags:# channel:InputChannel q:string events_filter:flags.0?ChannelAdminLogEventsFilter admins:flags.1?Vector<InputUser> max_id:long min_id:long limit:int = channels.AdminLogResults;
type TLChannelsGetAdminLog struct {
	Constructor          TLConstructor                `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel                `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Q                    string                       `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	EventsFilter         *ChannelAdminLogEventsFilter `protobuf:"bytes,4,opt,name=events_filter,json=eventsFilter,proto3" json:"events_filter,omitempty"`
	Admins               []*InputUser                 `protobuf:"bytes,5,rep,name=admins,proto3" json:"admins,omitempty"`
	MaxId                int64                        `protobuf:"varint,6,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int64                        `protobuf:"varint,7,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Limit                int32                        `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TLChannelsGetAdminLog) Reset()         { *m = TLChannelsGetAdminLog{} }
func (m *TLChannelsGetAdminLog) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetAdminLog) ProtoMessage()    {}
func (*TLChannelsGetAdminLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{303}
}
func (m *TLChannelsGetAdminLog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetAdminLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetAdminLog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetAdminLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetAdminLog.Merge(dst, src)
}
func (m *TLChannelsGetAdminLog) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetAdminLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetAdminLog.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetAdminLog proto.InternalMessageInfo

func (m *TLChannelsGetAdminLog) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetAdminLog) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetAdminLog) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLChannelsGetAdminLog) GetEventsFilter() *ChannelAdminLogEventsFilter {
	if m != nil {
		return m.EventsFilter
	}
	return nil
}

func (m *TLChannelsGetAdminLog) GetAdmins() []*InputUser {
	if m != nil {
		return m.Admins
	}
	return nil
}

func (m *TLChannelsGetAdminLog) GetMaxId() int64 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLChannelsGetAdminLog) GetMinId() int64 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLChannelsGetAdminLog) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.setStickers#ea8ca4f9 channel:InputChannel stickerset:InputStickerSet = Bool;
type TLChannelsSetStickers struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel    `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLChannelsSetStickers) Reset()         { *m = TLChannelsSetStickers{} }
func (m *TLChannelsSetStickers) String() string { return proto.CompactTextString(m) }
func (*TLChannelsSetStickers) ProtoMessage()    {}
func (*TLChannelsSetStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{304}
}
func (m *TLChannelsSetStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsSetStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsSetStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsSetStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsSetStickers.Merge(dst, src)
}
func (m *TLChannelsSetStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsSetStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsSetStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsSetStickers proto.InternalMessageInfo

func (m *TLChannelsSetStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsSetStickers) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsSetStickers) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.readMessageContents#eab5dc38 channel:InputChannel id:Vector<int> = Bool;
type TLChannelsReadMessageContents struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   []int32       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsReadMessageContents) Reset()         { *m = TLChannelsReadMessageContents{} }
func (m *TLChannelsReadMessageContents) String() string { return proto.CompactTextString(m) }
func (*TLChannelsReadMessageContents) ProtoMessage()    {}
func (*TLChannelsReadMessageContents) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{305}
}
func (m *TLChannelsReadMessageContents) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsReadMessageContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsReadMessageContents.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsReadMessageContents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsReadMessageContents.Merge(dst, src)
}
func (m *TLChannelsReadMessageContents) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsReadMessageContents) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsReadMessageContents.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsReadMessageContents proto.InternalMessageInfo

func (m *TLChannelsReadMessageContents) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsReadMessageContents) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsReadMessageContents) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.deleteHistory#af369d42 channel:InputChannel max_id:int = Bool;
type TLChannelsDeleteHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	MaxId                int32         `protobuf:"varint,3,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteHistory) Reset()         { *m = TLChannelsDeleteHistory{} }
func (m *TLChannelsDeleteHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteHistory) ProtoMessage()    {}
func (*TLChannelsDeleteHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{306}
}
func (m *TLChannelsDeleteHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsDeleteHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteHistory.Merge(dst, src)
}
func (m *TLChannelsDeleteHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteHistory proto.InternalMessageInfo

func (m *TLChannelsDeleteHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsDeleteHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsDeleteHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.togglePreHistoryHidden#eabbb94c channel:InputChannel enabled:Bool = Updates;
type TLChannelsTogglePreHistoryHidden struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsTogglePreHistoryHidden) Reset()         { *m = TLChannelsTogglePreHistoryHidden{} }
func (m *TLChannelsTogglePreHistoryHidden) String() string { return proto.CompactTextString(m) }
func (*TLChannelsTogglePreHistoryHidden) ProtoMessage()    {}
func (*TLChannelsTogglePreHistoryHidden) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{307}
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsTogglePreHistoryHidden.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsTogglePreHistoryHidden) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsTogglePreHistoryHidden.Merge(dst, src)
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsTogglePreHistoryHidden.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsTogglePreHistoryHidden proto.InternalMessageInfo

func (m *TLChannelsTogglePreHistoryHidden) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsTogglePreHistoryHidden) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsTogglePreHistoryHidden) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.getLeftChannels#8341ecc0 offset:int = messages.Chats;
type TLChannelsGetLeftChannels struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Offset               int32         `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetLeftChannels) Reset()         { *m = TLChannelsGetLeftChannels{} }
func (m *TLChannelsGetLeftChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetLeftChannels) ProtoMessage()    {}
func (*TLChannelsGetLeftChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{308}
}
func (m *TLChannelsGetLeftChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetLeftChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetLeftChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetLeftChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetLeftChannels.Merge(dst, src)
}
func (m *TLChannelsGetLeftChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetLeftChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetLeftChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetLeftChannels proto.InternalMessageInfo

func (m *TLChannelsGetLeftChannels) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetLeftChannels) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.getGroupsForDiscussion#f5dad378 = messages.Chats;
type TLChannelsGetGroupsForDiscussion struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetGroupsForDiscussion) Reset()         { *m = TLChannelsGetGroupsForDiscussion{} }
func (m *TLChannelsGetGroupsForDiscussion) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetGroupsForDiscussion) ProtoMessage()    {}
func (*TLChannelsGetGroupsForDiscussion) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{309}
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetGroupsForDiscussion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetGroupsForDiscussion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetGroupsForDiscussion.Merge(dst, src)
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetGroupsForDiscussion.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetGroupsForDiscussion proto.InternalMessageInfo

func (m *TLChannelsGetGroupsForDiscussion) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// channels.setDiscussionGroup#40582bb2 broadcast:InputChannel group:InputChannel = Bool;
type TLChannelsSetDiscussionGroup struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Broadcast            *InputChannel `protobuf:"bytes,2,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Group                *InputChannel `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsSetDiscussionGroup) Reset()         { *m = TLChannelsSetDiscussionGroup{} }
func (m *TLChannelsSetDiscussionGroup) String() string { return proto.CompactTextString(m) }
func (*TLChannelsSetDiscussionGroup) ProtoMessage()    {}
func (*TLChannelsSetDiscussionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{310}
}
func (m *TLChannelsSetDiscussionGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsSetDiscussionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsSetDiscussionGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsSetDiscussionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsSetDiscussionGroup.Merge(dst, src)
}
func (m *TLChannelsSetDiscussionGroup) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsSetDiscussionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsSetDiscussionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsSetDiscussionGroup proto.InternalMessageInfo

func (m *TLChannelsSetDiscussionGroup) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsSetDiscussionGroup) GetBroadcast() *InputChannel {
	if m != nil {
		return m.Broadcast
	}
	return nil
}

func (m *TLChannelsSetDiscussionGroup) GetGroup() *InputChannel {
	if m != nil {
		return m.Group
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.editCreator#8f38cd1f channel:InputChannel user_id:InputUser password:InputCheckPasswordSRP = Updates;
type TLChannelsEditCreator struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel          `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser             `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLChannelsEditCreator) Reset()         { *m = TLChannelsEditCreator{} }
func (m *TLChannelsEditCreator) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditCreator) ProtoMessage()    {}
func (*TLChannelsEditCreator) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{311}
}
func (m *TLChannelsEditCreator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditCreator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditCreator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsEditCreator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditCreator.Merge(dst, src)
}
func (m *TLChannelsEditCreator) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditCreator) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditCreator.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditCreator proto.InternalMessageInfo

func (m *TLChannelsEditCreator) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditCreator) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditCreator) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsEditCreator) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.editLocation#58e63f6d channel:InputChannel geo_point:InputGeoPoint address:string = Bool;
type TLChannelsEditLocation struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel  `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	GeoPoint             *InputGeoPoint `protobuf:"bytes,3,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Address              string         `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLChannelsEditLocation) Reset()         { *m = TLChannelsEditLocation{} }
func (m *TLChannelsEditLocation) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditLocation) ProtoMessage()    {}
func (*TLChannelsEditLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{312}
}
func (m *TLChannelsEditLocation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditLocation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsEditLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditLocation.Merge(dst, src)
}
func (m *TLChannelsEditLocation) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditLocation.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditLocation proto.InternalMessageInfo

func (m *TLChannelsEditLocation) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditLocation) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditLocation) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLChannelsEditLocation) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// channels.toggleSlowMode#edd49ef0 channel:InputChannel seconds:int = Updates;
type TLChannelsToggleSlowMode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Seconds              int32         `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsToggleSlowMode) Reset()         { *m = TLChannelsToggleSlowMode{} }
func (m *TLChannelsToggleSlowMode) String() string { return proto.CompactTextString(m) }
func (*TLChannelsToggleSlowMode) ProtoMessage()    {}
func (*TLChannelsToggleSlowMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{313}
}
func (m *TLChannelsToggleSlowMode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsToggleSlowMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsToggleSlowMode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsToggleSlowMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsToggleSlowMode.Merge(dst, src)
}
func (m *TLChannelsToggleSlowMode) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsToggleSlowMode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsToggleSlowMode.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsToggleSlowMode proto.InternalMessageInfo

func (m *TLChannelsToggleSlowMode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsToggleSlowMode) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsToggleSlowMode) GetSeconds() int32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.getInactiveChannels#11e831ee = messages.InactiveChats;
type TLChannelsGetInactiveChannels struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetInactiveChannels) Reset()         { *m = TLChannelsGetInactiveChannels{} }
func (m *TLChannelsGetInactiveChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetInactiveChannels) ProtoMessage()    {}
func (*TLChannelsGetInactiveChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{314}
}
func (m *TLChannelsGetInactiveChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetInactiveChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetInactiveChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetInactiveChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetInactiveChannels.Merge(dst, src)
}
func (m *TLChannelsGetInactiveChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetInactiveChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetInactiveChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetInactiveChannels proto.InternalMessageInfo

func (m *TLChannelsGetInactiveChannels) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// bots.sendCustomRequest#aa2769ed custom_method:string params:DataJSON = DataJSON;
type TLBotsSendCustomRequest struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	CustomMethod         string        `protobuf:"bytes,2,opt,name=custom_method,json=customMethod,proto3" json:"custom_method,omitempty"`
	Params               *DataJSON     `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBotsSendCustomRequest) Reset()         { *m = TLBotsSendCustomRequest{} }
func (m *TLBotsSendCustomRequest) String() string { return proto.CompactTextString(m) }
func (*TLBotsSendCustomRequest) ProtoMessage()    {}
func (*TLBotsSendCustomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{315}
}
func (m *TLBotsSendCustomRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsSendCustomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsSendCustomRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBotsSendCustomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsSendCustomRequest.Merge(dst, src)
}
func (m *TLBotsSendCustomRequest) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsSendCustomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsSendCustomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsSendCustomRequest proto.InternalMessageInfo

func (m *TLBotsSendCustomRequest) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBotsSendCustomRequest) GetCustomMethod() string {
	if m != nil {
		return m.CustomMethod
	}
	return ""
}

func (m *TLBotsSendCustomRequest) GetParams() *DataJSON {
	if m != nil {
		return m.Params
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// bots.answerWebhookJSONQuery#e6213f4d query_id:long data:DataJSON = Bool;
type TLBotsAnswerWebhookJSONQuery struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	QueryId              int64         `protobuf:"varint,2,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Data                 *DataJSON     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBotsAnswerWebhookJSONQuery) Reset()         { *m = TLBotsAnswerWebhookJSONQuery{} }
func (m *TLBotsAnswerWebhookJSONQuery) String() string { return proto.CompactTextString(m) }
func (*TLBotsAnswerWebhookJSONQuery) ProtoMessage()    {}
func (*TLBotsAnswerWebhookJSONQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{316}
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsAnswerWebhookJSONQuery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBotsAnswerWebhookJSONQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsAnswerWebhookJSONQuery.Merge(dst, src)
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsAnswerWebhookJSONQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsAnswerWebhookJSONQuery proto.InternalMessageInfo

func (m *TLBotsAnswerWebhookJSONQuery) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBotsAnswerWebhookJSONQuery) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLBotsAnswerWebhookJSONQuery) GetData() *DataJSON {
	if m != nil {
		return m.Data
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// bots.setBotCommands#805d46f6 commands:Vector<BotCommand> = Bool;
type TLBotsSetBotCommands struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Commands             []*BotCommand `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBotsSetBotCommands) Reset()         { *m = TLBotsSetBotCommands{} }
func (m *TLBotsSetBotCommands) String() string { return proto.CompactTextString(m) }
func (*TLBotsSetBotCommands) ProtoMessage()    {}
func (*TLBotsSetBotCommands) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{317}
}
func (m *TLBotsSetBotCommands) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsSetBotCommands) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsSetBotCommands.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBotsSetBotCommands) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsSetBotCommands.Merge(dst, src)
}
func (m *TLBotsSetBotCommands) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsSetBotCommands) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsSetBotCommands.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsSetBotCommands proto.InternalMessageInfo

func (m *TLBotsSetBotCommands) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBotsSetBotCommands) GetCommands() []*BotCommand {
	if m != nil {
		return m.Commands
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// payments.getPaymentForm#99f09745 msg_id:int = payments.PaymentForm;
type TLPaymentsGetPaymentForm struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MsgId                int32         `protobuf:"varint,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPaymentsGetPaymentForm) Reset()         { *m = TLPaymentsGetPaymentForm{} }
func (m *TLPaymentsGetPaymentForm) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetPaymentForm) ProtoMessage()    {}
func (*TLPaymentsGetPaymentForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{318}
}
func (m *TLPaymentsGetPaymentForm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetPaymentForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetPaymentForm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPaymentsGetPaymentForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetPaymentForm.Merge(dst, src)
}
func (m *TLPaymentsGetPaymentForm) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetPaymentForm) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetPaymentForm.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetPaymentForm proto.InternalMessageInfo

func (m *TLPaymentsGetPaymentForm) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsGetPaymentForm) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// payments.getPaymentReceipt#a092a980 msg_id:int = payments.PaymentReceipt;
type TLPaymentsGetPaymentReceipt struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MsgId                int32         `protobuf:"varint,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPaymentsGetPaymentReceipt) Reset()         { *m = TLPaymentsGetPaymentReceipt{} }
func (m *TLPaymentsGetPaymentReceipt) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetPaymentReceipt) ProtoMessage()    {}
func (*TLPaymentsGetPaymentReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{319}
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetPaymentReceipt.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPaymentsGetPaymentReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetPaymentReceipt.Merge(dst, src)
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetPaymentReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetPaymentReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetPaymentReceipt proto.InternalMessageInfo

func (m *TLPaymentsGetPaymentReceipt) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsGetPaymentReceipt) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// payments.validateRequestedInfo#770a8e74 flags:# save:flags.0?true msg_id:int info:PaymentRequestedInfo = payments.ValidatedRequestedInfo;
type TLPaymentsValidateRequestedInfo struct {
	Constructor          TLConstructor         `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Save                 bool                  `protobuf:"varint,2,opt,name=save,proto3" json:"save,omitempty"`
	MsgId                int32                 `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Info                 *PaymentRequestedInfo `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TLPaymentsValidateRequestedInfo) Reset()         { *m = TLPaymentsValidateRequestedInfo{} }
func (m *TLPaymentsValidateRequestedInfo) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsValidateRequestedInfo) ProtoMessage()    {}
func (*TLPaymentsValidateRequestedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{320}
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsValidateRequestedInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPaymentsValidateRequestedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsValidateRequestedInfo.Merge(dst, src)
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsValidateRequestedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsValidateRequestedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsValidateRequestedInfo proto.InternalMessageInfo

func (m *TLPaymentsValidateRequestedInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsValidateRequestedInfo) GetSave() bool {
	if m != nil {
		return m.Save
	}
	return false
}

func (m *TLPaymentsValidateRequestedInfo) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLPaymentsValidateRequestedInfo) GetInfo() *PaymentRequestedInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// payments.sendPaymentForm#2b8879b3 flags:# msg_id:int requested_info_id:flags.0?string shipping_option_id:flags.1?string credentials:InputPaymentCredentials = payments.PaymentResult;
type TLPaymentsSendPaymentForm struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MsgId                int32                    `protobuf:"varint,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	RequestedInfoId      *types.StringValue       `protobuf:"bytes,3,opt,name=requested_info_id,json=requestedInfoId,proto3" json:"requested_info_id,omitempty"`
	ShippingOptionId     *types.StringValue       `protobuf:"bytes,4,opt,name=shipping_option_id,json=shippingOptionId,proto3" json:"shipping_option_id,omitempty"`
	Credentials          *InputPaymentCredentials `protobuf:"bytes,5,opt,name=credentials,proto3" json:"credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLPaymentsSendPaymentForm) Reset()         { *m = TLPaymentsSendPaymentForm{} }
func (m *TLPaymentsSendPaymentForm) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsSendPaymentForm) ProtoMessage()    {}
func (*TLPaymentsSendPaymentForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{321}
}
func (m *TLPaymentsSendPaymentForm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsSendPaymentForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsSendPaymentForm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPaymentsSendPaymentForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsSendPaymentForm.Merge(dst, src)
}
func (m *TLPaymentsSendPaymentForm) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsSendPaymentForm) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsSendPaymentForm.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsSendPaymentForm proto.InternalMessageInfo

func (m *TLPaymentsSendPaymentForm) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsSendPaymentForm) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLPaymentsSendPaymentForm) GetRequestedInfoId() *types.StringValue {
	if m != nil {
		return m.RequestedInfoId
	}
	return nil
}

func (m *TLPaymentsSendPaymentForm) GetShippingOptionId() *types.StringValue {
	if m != nil {
		return m.ShippingOptionId
	}
	return nil
}

func (m *TLPaymentsSendPaymentForm) GetCredentials() *InputPaymentCredentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// payments.getSavedInfo#227d824b = payments.SavedInfo;
type TLPaymentsGetSavedInfo struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPaymentsGetSavedInfo) Reset()         { *m = TLPaymentsGetSavedInfo{} }
func (m *TLPaymentsGetSavedInfo) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetSavedInfo) ProtoMessage()    {}
func (*TLPaymentsGetSavedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{322}
}
func (m *TLPaymentsGetSavedInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetSavedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetSavedInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPaymentsGetSavedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetSavedInfo.Merge(dst, src)
}
func (m *TLPaymentsGetSavedInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetSavedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetSavedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetSavedInfo proto.InternalMessageInfo

func (m *TLPaymentsGetSavedInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// payments.clearSavedInfo#d83d70c1 flags:# credentials:flags.0?true info:flags.1?true = Bool;
type TLPaymentsClearSavedInfo struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Credentials          bool          `protobuf:"varint,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Info                 bool          `protobuf:"varint,3,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPaymentsClearSavedInfo) Reset()         { *m = TLPaymentsClearSavedInfo{} }
func (m *TLPaymentsClearSavedInfo) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsClearSavedInfo) ProtoMessage()    {}
func (*TLPaymentsClearSavedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{323}
}
func (m *TLPaymentsClearSavedInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsClearSavedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsClearSavedInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPaymentsClearSavedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsClearSavedInfo.Merge(dst, src)
}
func (m *TLPaymentsClearSavedInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsClearSavedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsClearSavedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsClearSavedInfo proto.InternalMessageInfo

func (m *TLPaymentsClearSavedInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsClearSavedInfo) GetCredentials() bool {
	if m != nil {
		return m.Credentials
	}
	return false
}

func (m *TLPaymentsClearSavedInfo) GetInfo() bool {
	if m != nil {
		return m.Info
	}
	return false
}

// --------------------------------------------------------------------------------------------
// payments.getBankCardData#2e79d779 number:string = payments.BankCardData;
type TLPaymentsGetBankCardData struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Number               string        `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPaymentsGetBankCardData) Reset()         { *m = TLPaymentsGetBankCardData{} }
func (m *TLPaymentsGetBankCardData) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetBankCardData) ProtoMessage()    {}
func (*TLPaymentsGetBankCardData) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{324}
}
func (m *TLPaymentsGetBankCardData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetBankCardData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetBankCardData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPaymentsGetBankCardData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetBankCardData.Merge(dst, src)
}
func (m *TLPaymentsGetBankCardData) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetBankCardData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetBankCardData.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetBankCardData proto.InternalMessageInfo

func (m *TLPaymentsGetBankCardData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsGetBankCardData) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// stickers.createStickerSet#f1036780 flags:# masks:flags.0?true animated:flags.1?true user_id:InputUser title:string short_name:string thumb:flags.2?InputDocument stickers:Vector<InputStickerSetItem> = messages.StickerSet;
type TLStickersCreateStickerSet struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Masks                bool                   `protobuf:"varint,2,opt,name=masks,proto3" json:"masks,omitempty"`
	Animated             bool                   `protobuf:"varint,3,opt,name=animated,proto3" json:"animated,omitempty"`
	UserId               *InputUser             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title                string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	ShortName            string                 `protobuf:"bytes,6,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Thumb                *InputDocument         `protobuf:"bytes,7,opt,name=thumb,proto3" json:"thumb,omitempty"`
	Stickers             []*InputStickerSetItem `protobuf:"bytes,8,rep,name=stickers,proto3" json:"stickers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLStickersCreateStickerSet) Reset()         { *m = TLStickersCreateStickerSet{} }
func (m *TLStickersCreateStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLStickersCreateStickerSet) ProtoMessage()    {}
func (*TLStickersCreateStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{325}
}
func (m *TLStickersCreateStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersCreateStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersCreateStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLStickersCreateStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersCreateStickerSet.Merge(dst, src)
}
func (m *TLStickersCreateStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersCreateStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersCreateStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersCreateStickerSet proto.InternalMessageInfo

func (m *TLStickersCreateStickerSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersCreateStickerSet) GetMasks() bool {
	if m != nil {
		return m.Masks
	}
	return false
}

func (m *TLStickersCreateStickerSet) GetAnimated() bool {
	if m != nil {
		return m.Animated
	}
	return false
}

func (m *TLStickersCreateStickerSet) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLStickersCreateStickerSet) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLStickersCreateStickerSet) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *TLStickersCreateStickerSet) GetThumb() *InputDocument {
	if m != nil {
		return m.Thumb
	}
	return nil
}

func (m *TLStickersCreateStickerSet) GetStickers() []*InputStickerSetItem {
	if m != nil {
		return m.Stickers
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// stickers.removeStickerFromSet#f7760f51 sticker:InputDocument = messages.StickerSet;
type TLStickersRemoveStickerFromSet struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Sticker              *InputDocument `protobuf:"bytes,2,opt,name=sticker,proto3" json:"sticker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLStickersRemoveStickerFromSet) Reset()         { *m = TLStickersRemoveStickerFromSet{} }
func (m *TLStickersRemoveStickerFromSet) String() string { return proto.CompactTextString(m) }
func (*TLStickersRemoveStickerFromSet) ProtoMessage()    {}
func (*TLStickersRemoveStickerFromSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{326}
}
func (m *TLStickersRemoveStickerFromSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersRemoveStickerFromSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersRemoveStickerFromSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLStickersRemoveStickerFromSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersRemoveStickerFromSet.Merge(dst, src)
}
func (m *TLStickersRemoveStickerFromSet) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersRemoveStickerFromSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersRemoveStickerFromSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersRemoveStickerFromSet proto.InternalMessageInfo

func (m *TLStickersRemoveStickerFromSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersRemoveStickerFromSet) GetSticker() *InputDocument {
	if m != nil {
		return m.Sticker
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// stickers.changeStickerPosition#ffb6d4ca sticker:InputDocument position:int = messages.StickerSet;
type TLStickersChangeStickerPosition struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Sticker              *InputDocument `protobuf:"bytes,2,opt,name=sticker,proto3" json:"sticker,omitempty"`
	Position             int32          `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLStickersChangeStickerPosition) Reset()         { *m = TLStickersChangeStickerPosition{} }
func (m *TLStickersChangeStickerPosition) String() string { return proto.CompactTextString(m) }
func (*TLStickersChangeStickerPosition) ProtoMessage()    {}
func (*TLStickersChangeStickerPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{327}
}
func (m *TLStickersChangeStickerPosition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersChangeStickerPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersChangeStickerPosition.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLStickersChangeStickerPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersChangeStickerPosition.Merge(dst, src)
}
func (m *TLStickersChangeStickerPosition) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersChangeStickerPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersChangeStickerPosition.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersChangeStickerPosition proto.InternalMessageInfo

func (m *TLStickersChangeStickerPosition) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersChangeStickerPosition) GetSticker() *InputDocument {
	if m != nil {
		return m.Sticker
	}
	return nil
}

func (m *TLStickersChangeStickerPosition) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// stickers.addStickerToSet#8653febe stickerset:InputStickerSet sticker:InputStickerSetItem = messages.StickerSet;
type TLStickersAddStickerToSet struct {
	Constructor          TLConstructor        `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Stickerset           *InputStickerSet     `protobuf:"bytes,2,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	Sticker              *InputStickerSetItem `protobuf:"bytes,3,opt,name=sticker,proto3" json:"sticker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TLStickersAddStickerToSet) Reset()         { *m = TLStickersAddStickerToSet{} }
func (m *TLStickersAddStickerToSet) String() string { return proto.CompactTextString(m) }
func (*TLStickersAddStickerToSet) ProtoMessage()    {}
func (*TLStickersAddStickerToSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{328}
}
func (m *TLStickersAddStickerToSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersAddStickerToSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersAddStickerToSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLStickersAddStickerToSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersAddStickerToSet.Merge(dst, src)
}
func (m *TLStickersAddStickerToSet) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersAddStickerToSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersAddStickerToSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersAddStickerToSet proto.InternalMessageInfo

func (m *TLStickersAddStickerToSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersAddStickerToSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

func (m *TLStickersAddStickerToSet) GetSticker() *InputStickerSetItem {
	if m != nil {
		return m.Sticker
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// stickers.setStickerSetThumb#9a364e30 stickerset:InputStickerSet thumb:InputDocument = messages.StickerSet;
type TLStickersSetStickerSetThumb struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,2,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	Thumb                *InputDocument   `protobuf:"bytes,3,opt,name=thumb,proto3" json:"thumb,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLStickersSetStickerSetThumb) Reset()         { *m = TLStickersSetStickerSetThumb{} }
func (m *TLStickersSetStickerSetThumb) String() string { return proto.CompactTextString(m) }
func (*TLStickersSetStickerSetThumb) ProtoMessage()    {}
func (*TLStickersSetStickerSetThumb) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{329}
}
func (m *TLStickersSetStickerSetThumb) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersSetStickerSetThumb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersSetStickerSetThumb.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLStickersSetStickerSetThumb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersSetStickerSetThumb.Merge(dst, src)
}
func (m *TLStickersSetStickerSetThumb) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersSetStickerSetThumb) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersSetStickerSetThumb.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersSetStickerSetThumb proto.InternalMessageInfo

func (m *TLStickersSetStickerSetThumb) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersSetStickerSetThumb) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

func (m *TLStickersSetStickerSetThumb) GetThumb() *InputDocument {
	if m != nil {
		return m.Thumb
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// phone.getCallConfig#55451fa9 = DataJSON;
type TLPhoneGetCallConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhoneGetCallConfig) Reset()         { *m = TLPhoneGetCallConfig{} }
func (m *TLPhoneGetCallConfig) String() string { return proto.CompactTextString(m) }
func (*TLPhoneGetCallConfig) ProtoMessage()    {}
func (*TLPhoneGetCallConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{330}
}
func (m *TLPhoneGetCallConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneGetCallConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneGetCallConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhoneGetCallConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneGetCallConfig.Merge(dst, src)
}
func (m *TLPhoneGetCallConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneGetCallConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneGetCallConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneGetCallConfig proto.InternalMessageInfo

func (m *TLPhoneGetCallConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// phone.requestCall#42ff96ed flags:# video:flags.0?true user_id:InputUser random_id:int g_a_hash:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
type TLPhoneRequestCall struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Video                bool               `protobuf:"varint,2,opt,name=video,proto3" json:"video,omitempty"`
	UserId               *InputUser         `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RandomId             int32              `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	GAHash               []byte             `protobuf:"bytes,5,opt,name=g_a_hash,json=gAHash,proto3" json:"g_a_hash,omitempty"`
	Protocol             *PhoneCallProtocol `protobuf:"bytes,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneRequestCall) Reset()         { *m = TLPhoneRequestCall{} }
func (m *TLPhoneRequestCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneRequestCall) ProtoMessage()    {}
func (*TLPhoneRequestCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{331}
}
func (m *TLPhoneRequestCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneRequestCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneRequestCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhoneRequestCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneRequestCall.Merge(dst, src)
}
func (m *TLPhoneRequestCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneRequestCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneRequestCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneRequestCall proto.InternalMessageInfo

func (m *TLPhoneRequestCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneRequestCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *TLPhoneRequestCall) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLPhoneRequestCall) GetRandomId() int32 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLPhoneRequestCall) GetGAHash() []byte {
	if m != nil {
		return m.GAHash
	}
	return nil
}

func (m *TLPhoneRequestCall) GetProtocol() *PhoneCallProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// phone.acceptCall#3bd2b4a0 peer:InputPhoneCall g_b:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
type TLPhoneAcceptCall struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPhoneCall    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	GB                   []byte             `protobuf:"bytes,3,opt,name=g_b,json=gB,proto3" json:"g_b,omitempty"`
	Protocol             *PhoneCallProtocol `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneAcceptCall) Reset()         { *m = TLPhoneAcceptCall{} }
func (m *TLPhoneAcceptCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneAcceptCall) ProtoMessage()    {}
func (*TLPhoneAcceptCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{332}
}
func (m *TLPhoneAcceptCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneAcceptCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneAcceptCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhoneAcceptCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneAcceptCall.Merge(dst, src)
}
func (m *TLPhoneAcceptCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneAcceptCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneAcceptCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneAcceptCall proto.InternalMessageInfo

func (m *TLPhoneAcceptCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneAcceptCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneAcceptCall) GetGB() []byte {
	if m != nil {
		return m.GB
	}
	return nil
}

func (m *TLPhoneAcceptCall) GetProtocol() *PhoneCallProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// phone.confirmCall#2efe1722 peer:InputPhoneCall g_a:bytes key_fingerprint:long protocol:PhoneCallProtocol = phone.PhoneCall;
type TLPhoneConfirmCall struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPhoneCall    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	GA                   []byte             `protobuf:"bytes,3,opt,name=g_a,json=gA,proto3" json:"g_a,omitempty"`
	KeyFingerprint       int64              `protobuf:"varint,4,opt,name=key_fingerprint,json=keyFingerprint,proto3" json:"key_fingerprint,omitempty"`
	Protocol             *PhoneCallProtocol `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneConfirmCall) Reset()         { *m = TLPhoneConfirmCall{} }
func (m *TLPhoneConfirmCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneConfirmCall) ProtoMessage()    {}
func (*TLPhoneConfirmCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{333}
}
func (m *TLPhoneConfirmCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneConfirmCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneConfirmCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhoneConfirmCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneConfirmCall.Merge(dst, src)
}
func (m *TLPhoneConfirmCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneConfirmCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneConfirmCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneConfirmCall proto.InternalMessageInfo

func (m *TLPhoneConfirmCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneConfirmCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneConfirmCall) GetGA() []byte {
	if m != nil {
		return m.GA
	}
	return nil
}

func (m *TLPhoneConfirmCall) GetKeyFingerprint() int64 {
	if m != nil {
		return m.KeyFingerprint
	}
	return 0
}

func (m *TLPhoneConfirmCall) GetProtocol() *PhoneCallProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// phone.receivedCall#17d54f61 peer:InputPhoneCall = Bool;
type TLPhoneReceivedCall struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneReceivedCall) Reset()         { *m = TLPhoneReceivedCall{} }
func (m *TLPhoneReceivedCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneReceivedCall) ProtoMessage()    {}
func (*TLPhoneReceivedCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{334}
}
func (m *TLPhoneReceivedCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneReceivedCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneReceivedCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhoneReceivedCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneReceivedCall.Merge(dst, src)
}
func (m *TLPhoneReceivedCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneReceivedCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneReceivedCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneReceivedCall proto.InternalMessageInfo

func (m *TLPhoneReceivedCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneReceivedCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// phone.discardCall#b2cbc1c0 flags:# video:flags.0?true peer:InputPhoneCall duration:int reason:PhoneCallDiscardReason connection_id:long = Updates;
type TLPhoneDiscardCall struct {
	Constructor          TLConstructor           `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Video                bool                    `protobuf:"varint,2,opt,name=video,proto3" json:"video,omitempty"`
	Peer                 *InputPhoneCall         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Duration             int32                   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Reason               *PhoneCallDiscardReason `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	ConnectionId         int64                   `protobuf:"varint,6,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TLPhoneDiscardCall) Reset()         { *m = TLPhoneDiscardCall{} }
func (m *TLPhoneDiscardCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneDiscardCall) ProtoMessage()    {}
func (*TLPhoneDiscardCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{335}
}
func (m *TLPhoneDiscardCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneDiscardCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneDiscardCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhoneDiscardCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneDiscardCall.Merge(dst, src)
}
func (m *TLPhoneDiscardCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneDiscardCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneDiscardCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneDiscardCall proto.InternalMessageInfo

func (m *TLPhoneDiscardCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneDiscardCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *TLPhoneDiscardCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneDiscardCall) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *TLPhoneDiscardCall) GetReason() *PhoneCallDiscardReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *TLPhoneDiscardCall) GetConnectionId() int64 {
	if m != nil {
		return m.ConnectionId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// phone.setCallRating#59ead627 flags:# user_initiative:flags.0?true peer:InputPhoneCall rating:int comment:string = Updates;
type TLPhoneSetCallRating struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserInitiative       bool            `protobuf:"varint,2,opt,name=user_initiative,json=userInitiative,proto3" json:"user_initiative,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Rating               int32           `protobuf:"varint,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Comment              string          `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneSetCallRating) Reset()         { *m = TLPhoneSetCallRating{} }
func (m *TLPhoneSetCallRating) String() string { return proto.CompactTextString(m) }
func (*TLPhoneSetCallRating) ProtoMessage()    {}
func (*TLPhoneSetCallRating) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{336}
}
func (m *TLPhoneSetCallRating) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneSetCallRating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneSetCallRating.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhoneSetCallRating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneSetCallRating.Merge(dst, src)
}
func (m *TLPhoneSetCallRating) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneSetCallRating) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneSetCallRating.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneSetCallRating proto.InternalMessageInfo

func (m *TLPhoneSetCallRating) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneSetCallRating) GetUserInitiative() bool {
	if m != nil {
		return m.UserInitiative
	}
	return false
}

func (m *TLPhoneSetCallRating) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneSetCallRating) GetRating() int32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *TLPhoneSetCallRating) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// phone.saveCallDebug#277add7e peer:InputPhoneCall debug:DataJSON = Bool;
type TLPhoneSaveCallDebug struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Debug                *DataJSON       `protobuf:"bytes,3,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneSaveCallDebug) Reset()         { *m = TLPhoneSaveCallDebug{} }
func (m *TLPhoneSaveCallDebug) String() string { return proto.CompactTextString(m) }
func (*TLPhoneSaveCallDebug) ProtoMessage()    {}
func (*TLPhoneSaveCallDebug) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{337}
}
func (m *TLPhoneSaveCallDebug) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneSaveCallDebug) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneSaveCallDebug.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhoneSaveCallDebug) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneSaveCallDebug.Merge(dst, src)
}
func (m *TLPhoneSaveCallDebug) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneSaveCallDebug) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneSaveCallDebug.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneSaveCallDebug proto.InternalMessageInfo

func (m *TLPhoneSaveCallDebug) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneSaveCallDebug) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneSaveCallDebug) GetDebug() *DataJSON {
	if m != nil {
		return m.Debug
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// phone.sendSignalingData#ff7a9383 peer:InputPhoneCall data:bytes = Bool;
type TLPhoneSendSignalingData struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Data                 []byte          `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneSendSignalingData) Reset()         { *m = TLPhoneSendSignalingData{} }
func (m *TLPhoneSendSignalingData) String() string { return proto.CompactTextString(m) }
func (*TLPhoneSendSignalingData) ProtoMessage()    {}
func (*TLPhoneSendSignalingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{338}
}
func (m *TLPhoneSendSignalingData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneSendSignalingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneSendSignalingData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhoneSendSignalingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneSendSignalingData.Merge(dst, src)
}
func (m *TLPhoneSendSignalingData) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneSendSignalingData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneSendSignalingData.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneSendSignalingData proto.InternalMessageInfo

func (m *TLPhoneSendSignalingData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneSendSignalingData) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneSendSignalingData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// langpack.getLangPack#f2f2330a lang_pack:string lang_code:string = LangPackDifference;
type TLLangpackGetLangPack struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangPack             string        `protobuf:"bytes,2,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string        `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLLangpackGetLangPack) Reset()         { *m = TLLangpackGetLangPack{} }
func (m *TLLangpackGetLangPack) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetLangPack) ProtoMessage()    {}
func (*TLLangpackGetLangPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{339}
}
func (m *TLLangpackGetLangPack) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetLangPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetLangPack.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLLangpackGetLangPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetLangPack.Merge(dst, src)
}
func (m *TLLangpackGetLangPack) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetLangPack) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetLangPack.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetLangPack proto.InternalMessageInfo

func (m *TLLangpackGetLangPack) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLLangpackGetLangPack) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLLangpackGetLangPack) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// langpack.getStrings#efea3803 lang_pack:string lang_code:string keys:Vector<string> = Vector<LangPackString>;
type TLLangpackGetStrings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangPack             string        `protobuf:"bytes,2,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string        `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Keys                 []string      `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLLangpackGetStrings) Reset()         { *m = TLLangpackGetStrings{} }
func (m *TLLangpackGetStrings) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetStrings) ProtoMessage()    {}
func (*TLLangpackGetStrings) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{340}
}
func (m *TLLangpackGetStrings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetStrings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetStrings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLLangpackGetStrings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetStrings.Merge(dst, src)
}
func (m *TLLangpackGetStrings) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetStrings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetStrings.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetStrings proto.InternalMessageInfo

func (m *TLLangpackGetStrings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLLangpackGetStrings) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLLangpackGetStrings) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLLangpackGetStrings) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// langpack.getDifference#cd984aa5 lang_pack:string lang_code:string from_version:int = LangPackDifference;
type TLLangpackGetDifference struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangPack             string        `protobuf:"bytes,2,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string        `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	FromVersion          int32         `protobuf:"varint,4,opt,name=from_version,json=fromVersion,proto3" json:"from_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLLangpackGetDifference) Reset()         { *m = TLLangpackGetDifference{} }
func (m *TLLangpackGetDifference) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetDifference) ProtoMessage()    {}
func (*TLLangpackGetDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{341}
}
func (m *TLLangpackGetDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLLangpackGetDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetDifference.Merge(dst, src)
}
func (m *TLLangpackGetDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetDifference proto.InternalMessageInfo

func (m *TLLangpackGetDifference) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLLangpackGetDifference) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLLangpackGetDifference) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLLangpackGetDifference) GetFromVersion() int32 {
	if m != nil {
		return m.FromVersion
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// langpack.getLanguages#42c6978f lang_pack:string = Vector<LangPackLanguage>;
type TLLangpackGetLanguages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangPack             string        `protobuf:"bytes,2,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLLangpackGetLanguages) Reset()         { *m = TLLangpackGetLanguages{} }
func (m *TLLangpackGetLanguages) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetLanguages) ProtoMessage()    {}
func (*TLLangpackGetLanguages) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{342}
}
func (m *TLLangpackGetLanguages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetLanguages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetLanguages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLLangpackGetLanguages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetLanguages.Merge(dst, src)
}
func (m *TLLangpackGetLanguages) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetLanguages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetLanguages.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetLanguages proto.InternalMessageInfo

func (m *TLLangpackGetLanguages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLLangpackGetLanguages) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// langpack.getLanguage#6a596502 lang_pack:string lang_code:string = LangPackLanguage;
type TLLangpackGetLanguage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangPack             string        `protobuf:"bytes,2,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string        `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLLangpackGetLanguage) Reset()         { *m = TLLangpackGetLanguage{} }
func (m *TLLangpackGetLanguage) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetLanguage) ProtoMessage()    {}
func (*TLLangpackGetLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{343}
}
func (m *TLLangpackGetLanguage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetLanguage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLLangpackGetLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetLanguage.Merge(dst, src)
}
func (m *TLLangpackGetLanguage) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetLanguage proto.InternalMessageInfo

func (m *TLLangpackGetLanguage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLLangpackGetLanguage) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLLangpackGetLanguage) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// folders.editPeerFolders#6847d0ab folder_peers:Vector<InputFolderPeer> = Updates;
type TLFoldersEditPeerFolders struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FolderPeers          []*InputFolderPeer `protobuf:"bytes,2,rep,name=folder_peers,json=folderPeers,proto3" json:"folder_peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLFoldersEditPeerFolders) Reset()         { *m = TLFoldersEditPeerFolders{} }
func (m *TLFoldersEditPeerFolders) String() string { return proto.CompactTextString(m) }
func (*TLFoldersEditPeerFolders) ProtoMessage()    {}
func (*TLFoldersEditPeerFolders) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{344}
}
func (m *TLFoldersEditPeerFolders) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLFoldersEditPeerFolders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLFoldersEditPeerFolders.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLFoldersEditPeerFolders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLFoldersEditPeerFolders.Merge(dst, src)
}
func (m *TLFoldersEditPeerFolders) XXX_Size() int {
	return m.Size()
}
func (m *TLFoldersEditPeerFolders) XXX_DiscardUnknown() {
	xxx_messageInfo_TLFoldersEditPeerFolders.DiscardUnknown(m)
}

var xxx_messageInfo_TLFoldersEditPeerFolders proto.InternalMessageInfo

func (m *TLFoldersEditPeerFolders) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLFoldersEditPeerFolders) GetFolderPeers() []*InputFolderPeer {
	if m != nil {
		return m.FolderPeers
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// folders.deleteFolder#1c295881 folder_id:int = Updates;
type TLFoldersDeleteFolder struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FolderId             int32         `protobuf:"varint,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLFoldersDeleteFolder) Reset()         { *m = TLFoldersDeleteFolder{} }
func (m *TLFoldersDeleteFolder) String() string { return proto.CompactTextString(m) }
func (*TLFoldersDeleteFolder) ProtoMessage()    {}
func (*TLFoldersDeleteFolder) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{345}
}
func (m *TLFoldersDeleteFolder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLFoldersDeleteFolder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLFoldersDeleteFolder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLFoldersDeleteFolder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLFoldersDeleteFolder.Merge(dst, src)
}
func (m *TLFoldersDeleteFolder) XXX_Size() int {
	return m.Size()
}
func (m *TLFoldersDeleteFolder) XXX_DiscardUnknown() {
	xxx_messageInfo_TLFoldersDeleteFolder.DiscardUnknown(m)
}

var xxx_messageInfo_TLFoldersDeleteFolder proto.InternalMessageInfo

func (m *TLFoldersDeleteFolder) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLFoldersDeleteFolder) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// stats.getBroadcastStats#ab42441a flags:# dark:flags.0?true channel:InputChannel = stats.BroadcastStats;
type TLStatsGetBroadcastStats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Dark                 bool          `protobuf:"varint,2,opt,name=dark,proto3" json:"dark,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	TzOffset             int32         `protobuf:"varint,4,opt,name=tz_offset,json=tzOffset,proto3" json:"tz_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetBroadcastStats) Reset()         { *m = TLStatsGetBroadcastStats{} }
func (m *TLStatsGetBroadcastStats) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetBroadcastStats) ProtoMessage()    {}
func (*TLStatsGetBroadcastStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{346}
}
func (m *TLStatsGetBroadcastStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetBroadcastStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetBroadcastStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLStatsGetBroadcastStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetBroadcastStats.Merge(dst, src)
}
func (m *TLStatsGetBroadcastStats) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetBroadcastStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetBroadcastStats.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetBroadcastStats proto.InternalMessageInfo

func (m *TLStatsGetBroadcastStats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStatsGetBroadcastStats) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLStatsGetBroadcastStats) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLStatsGetBroadcastStats) GetTzOffset() int32 {
	if m != nil {
		return m.TzOffset
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// stats.loadAsyncGraph#621d5fa0 flags:# token:string x:flags.0?long = StatsGraph;
type TLStatsLoadAsyncGraph struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Token                string            `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	X                    *types.Int64Value `protobuf:"bytes,3,opt,name=x,proto3" json:"x,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLStatsLoadAsyncGraph) Reset()         { *m = TLStatsLoadAsyncGraph{} }
func (m *TLStatsLoadAsyncGraph) String() string { return proto.CompactTextString(m) }
func (*TLStatsLoadAsyncGraph) ProtoMessage()    {}
func (*TLStatsLoadAsyncGraph) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{347}
}
func (m *TLStatsLoadAsyncGraph) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsLoadAsyncGraph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsLoadAsyncGraph.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLStatsLoadAsyncGraph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsLoadAsyncGraph.Merge(dst, src)
}
func (m *TLStatsLoadAsyncGraph) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsLoadAsyncGraph) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsLoadAsyncGraph.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsLoadAsyncGraph proto.InternalMessageInfo

func (m *TLStatsLoadAsyncGraph) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStatsLoadAsyncGraph) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TLStatsLoadAsyncGraph) GetX() *types.Int64Value {
	if m != nil {
		return m.X
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// stats.getMegagroupStats#dcdf8607 flags:# dark:flags.0?true channel:InputChannel = stats.MegagroupStats;
type TLStatsGetMegagroupStats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Dark                 bool          `protobuf:"varint,2,opt,name=dark,proto3" json:"dark,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetMegagroupStats) Reset()         { *m = TLStatsGetMegagroupStats{} }
func (m *TLStatsGetMegagroupStats) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetMegagroupStats) ProtoMessage()    {}
func (*TLStatsGetMegagroupStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{348}
}
func (m *TLStatsGetMegagroupStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetMegagroupStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetMegagroupStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLStatsGetMegagroupStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetMegagroupStats.Merge(dst, src)
}
func (m *TLStatsGetMegagroupStats) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetMegagroupStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetMegagroupStats.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetMegagroupStats proto.InternalMessageInfo

func (m *TLStatsGetMegagroupStats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStatsGetMegagroupStats) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLStatsGetMegagroupStats) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// stats.getMessagePublicForwards#5630281b channel:InputChannel msg_id:int offset_rate:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
type TLStatsGetMessagePublicForwards struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	MsgId                int32         `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	OffsetRate           int32         `protobuf:"varint,4,opt,name=offset_rate,json=offsetRate,proto3" json:"offset_rate,omitempty"`
	OffsetPeer           *InputPeer    `protobuf:"bytes,5,opt,name=offset_peer,json=offsetPeer,proto3" json:"offset_peer,omitempty"`
	OffsetId             int32         `protobuf:"varint,6,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32         `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetMessagePublicForwards) Reset()         { *m = TLStatsGetMessagePublicForwards{} }
func (m *TLStatsGetMessagePublicForwards) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetMessagePublicForwards) ProtoMessage()    {}
func (*TLStatsGetMessagePublicForwards) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{349}
}
func (m *TLStatsGetMessagePublicForwards) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetMessagePublicForwards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetMessagePublicForwards.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLStatsGetMessagePublicForwards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetMessagePublicForwards.Merge(dst, src)
}
func (m *TLStatsGetMessagePublicForwards) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetMessagePublicForwards) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetMessagePublicForwards.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetMessagePublicForwards proto.InternalMessageInfo

func (m *TLStatsGetMessagePublicForwards) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStatsGetMessagePublicForwards) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLStatsGetMessagePublicForwards) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLStatsGetMessagePublicForwards) GetOffsetRate() int32 {
	if m != nil {
		return m.OffsetRate
	}
	return 0
}

func (m *TLStatsGetMessagePublicForwards) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *TLStatsGetMessagePublicForwards) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLStatsGetMessagePublicForwards) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// stats.getMessageStats#b6e0a3f5 flags:# dark:flags.0?true channel:InputChannel msg_id:int = stats.MessageStats;
type TLStatsGetMessageStats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Dark                 bool          `protobuf:"varint,2,opt,name=dark,proto3" json:"dark,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetMessageStats) Reset()         { *m = TLStatsGetMessageStats{} }
func (m *TLStatsGetMessageStats) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetMessageStats) ProtoMessage()    {}
func (*TLStatsGetMessageStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{350}
}
func (m *TLStatsGetMessageStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetMessageStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetMessageStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLStatsGetMessageStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetMessageStats.Merge(dst, src)
}
func (m *TLStatsGetMessageStats) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetMessageStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetMessageStats.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetMessageStats proto.InternalMessageInfo

func (m *TLStatsGetMessageStats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStatsGetMessageStats) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLStatsGetMessageStats) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLStatsGetMessageStats) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// wallet.getInfo#86f1ee4f = wallet.Info;
type TLWalletGetInfo struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLWalletGetInfo) Reset()         { *m = TLWalletGetInfo{} }
func (m *TLWalletGetInfo) String() string { return proto.CompactTextString(m) }
func (*TLWalletGetInfo) ProtoMessage()    {}
func (*TLWalletGetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{351}
}
func (m *TLWalletGetInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLWalletGetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLWalletGetInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLWalletGetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLWalletGetInfo.Merge(dst, src)
}
func (m *TLWalletGetInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLWalletGetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLWalletGetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLWalletGetInfo proto.InternalMessageInfo

func (m *TLWalletGetInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// wallet.getRecords#42d1204f flags:# type:flags.0?wallet.RecordType date:flags.1?int offset:int limit:int = wallet.Records;
type TLWalletGetRecords struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Type                 *Wallet_RecordType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Date                 *types.Int32Value  `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Offset               int32              `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32              `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLWalletGetRecords) Reset()         { *m = TLWalletGetRecords{} }
func (m *TLWalletGetRecords) String() string { return proto.CompactTextString(m) }
func (*TLWalletGetRecords) ProtoMessage()    {}
func (*TLWalletGetRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{352}
}
func (m *TLWalletGetRecords) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLWalletGetRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLWalletGetRecords.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLWalletGetRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLWalletGetRecords.Merge(dst, src)
}
func (m *TLWalletGetRecords) XXX_Size() int {
	return m.Size()
}
func (m *TLWalletGetRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_TLWalletGetRecords.DiscardUnknown(m)
}

var xxx_messageInfo_TLWalletGetRecords proto.InternalMessageInfo

func (m *TLWalletGetRecords) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLWalletGetRecords) GetType() *Wallet_RecordType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *TLWalletGetRecords) GetDate() *types.Int32Value {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *TLWalletGetRecords) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLWalletGetRecords) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// blogs.getUser#dd7cabf8 peer:InputPeer = blogs.User;
type TLBlogsGetUser struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetUser) Reset()         { *m = TLBlogsGetUser{} }
func (m *TLBlogsGetUser) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetUser) ProtoMessage()    {}
func (*TLBlogsGetUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{353}
}
func (m *TLBlogsGetUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetUser.Merge(dst, src)
}
func (m *TLBlogsGetUser) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetUser proto.InternalMessageInfo

func (m *TLBlogsGetUser) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetUser) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// blogs.follow#45d768c1 flags:# peer:InputPeer followed:flags.0?true = Updates;
type TLBlogsFollow struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Followed             bool          `protobuf:"varint,3,opt,name=followed,proto3" json:"followed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsFollow) Reset()         { *m = TLBlogsFollow{} }
func (m *TLBlogsFollow) String() string { return proto.CompactTextString(m) }
func (*TLBlogsFollow) ProtoMessage()    {}
func (*TLBlogsFollow) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{354}
}
func (m *TLBlogsFollow) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsFollow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsFollow.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsFollow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsFollow.Merge(dst, src)
}
func (m *TLBlogsFollow) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsFollow) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsFollow.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsFollow proto.InternalMessageInfo

func (m *TLBlogsFollow) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsFollow) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLBlogsFollow) GetFollowed() bool {
	if m != nil {
		return m.Followed
	}
	return false
}

// --------------------------------------------------------------------------------------------
// blogs.like#4c835b23 flags:# id:blogs.IdType liked:flags.0?true = Updates;
type TLBlogsLike struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *Blogs_IdType `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Liked                bool          `protobuf:"varint,3,opt,name=liked,proto3" json:"liked,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsLike) Reset()         { *m = TLBlogsLike{} }
func (m *TLBlogsLike) String() string { return proto.CompactTextString(m) }
func (*TLBlogsLike) ProtoMessage()    {}
func (*TLBlogsLike) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{355}
}
func (m *TLBlogsLike) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsLike) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsLike.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsLike) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsLike.Merge(dst, src)
}
func (m *TLBlogsLike) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsLike) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsLike.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsLike proto.InternalMessageInfo

func (m *TLBlogsLike) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsLike) GetId() *Blogs_IdType {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLBlogsLike) GetLiked() bool {
	if m != nil {
		return m.Liked
	}
	return false
}

// --------------------------------------------------------------------------------------------
// blogs.sendComment#e61dc4cd id:blogs.IdType text:string = Updates;
type TLBlogsSendComment struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *Blogs_IdType `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string        `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsSendComment) Reset()         { *m = TLBlogsSendComment{} }
func (m *TLBlogsSendComment) String() string { return proto.CompactTextString(m) }
func (*TLBlogsSendComment) ProtoMessage()    {}
func (*TLBlogsSendComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{356}
}
func (m *TLBlogsSendComment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsSendComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsSendComment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsSendComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsSendComment.Merge(dst, src)
}
func (m *TLBlogsSendComment) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsSendComment) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsSendComment.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsSendComment proto.InternalMessageInfo

func (m *TLBlogsSendComment) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsSendComment) GetId() *Blogs_IdType {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLBlogsSendComment) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// blogs.reward#a1a73acd flags:# user:int blog:int payment_password:flags.0?string amount:double = Updates;
type TLBlogsReward struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	User                 int32              `protobuf:"varint,2,opt,name=user,proto3" json:"user,omitempty"`
	Blog                 int32              `protobuf:"varint,3,opt,name=blog,proto3" json:"blog,omitempty"`
	PaymentPassword      *types.StringValue `protobuf:"bytes,4,opt,name=payment_password,json=paymentPassword,proto3" json:"payment_password,omitempty"`
	Amount               float64            `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLBlogsReward) Reset()         { *m = TLBlogsReward{} }
func (m *TLBlogsReward) String() string { return proto.CompactTextString(m) }
func (*TLBlogsReward) ProtoMessage()    {}
func (*TLBlogsReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{357}
}
func (m *TLBlogsReward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsReward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsReward.Merge(dst, src)
}
func (m *TLBlogsReward) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsReward) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsReward.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsReward proto.InternalMessageInfo

func (m *TLBlogsReward) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsReward) GetUser() int32 {
	if m != nil {
		return m.User
	}
	return 0
}

func (m *TLBlogsReward) GetBlog() int32 {
	if m != nil {
		return m.Blog
	}
	return 0
}

func (m *TLBlogsReward) GetPaymentPassword() *types.StringValue {
	if m != nil {
		return m.PaymentPassword
	}
	return nil
}

func (m *TLBlogsReward) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// blogs.getFollows#b6152f28 peer:InputPeer offset:int limit:int = blogs.UserDates;
type TLBlogsGetFollows struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Offset               int32         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetFollows) Reset()         { *m = TLBlogsGetFollows{} }
func (m *TLBlogsGetFollows) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetFollows) ProtoMessage()    {}
func (*TLBlogsGetFollows) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{358}
}
func (m *TLBlogsGetFollows) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetFollows) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetFollows.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetFollows) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetFollows.Merge(dst, src)
}
func (m *TLBlogsGetFollows) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetFollows) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetFollows.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetFollows proto.InternalMessageInfo

func (m *TLBlogsGetFollows) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetFollows) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLBlogsGetFollows) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLBlogsGetFollows) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// blogs.getFans#d15ca197 peer:InputPeer offset:int limit:int = blogs.UserDates;
type TLBlogsGetFans struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Offset               int32         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetFans) Reset()         { *m = TLBlogsGetFans{} }
func (m *TLBlogsGetFans) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetFans) ProtoMessage()    {}
func (*TLBlogsGetFans) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{359}
}
func (m *TLBlogsGetFans) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetFans) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetFans.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetFans) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetFans.Merge(dst, src)
}
func (m *TLBlogsGetFans) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetFans) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetFans.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetFans proto.InternalMessageInfo

func (m *TLBlogsGetFans) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetFans) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLBlogsGetFans) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLBlogsGetFans) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// blogs.createGroupTag#64b2a32e title:string users:Vector<int> = Updates;
type TLBlogsCreateGroupTag struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Title                string        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Users                []int32       `protobuf:"varint,3,rep,packed,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsCreateGroupTag) Reset()         { *m = TLBlogsCreateGroupTag{} }
func (m *TLBlogsCreateGroupTag) String() string { return proto.CompactTextString(m) }
func (*TLBlogsCreateGroupTag) ProtoMessage()    {}
func (*TLBlogsCreateGroupTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{360}
}
func (m *TLBlogsCreateGroupTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsCreateGroupTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsCreateGroupTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsCreateGroupTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsCreateGroupTag.Merge(dst, src)
}
func (m *TLBlogsCreateGroupTag) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsCreateGroupTag) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsCreateGroupTag.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsCreateGroupTag proto.InternalMessageInfo

func (m *TLBlogsCreateGroupTag) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsCreateGroupTag) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLBlogsCreateGroupTag) GetUsers() []int32 {
	if m != nil {
		return m.Users
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// blogs.deleteGroupTag#21dffb22 tag_ids:Vector<int> = Updates;
type TLBlogsDeleteGroupTag struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	TagIds               []int32       `protobuf:"varint,2,rep,packed,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsDeleteGroupTag) Reset()         { *m = TLBlogsDeleteGroupTag{} }
func (m *TLBlogsDeleteGroupTag) String() string { return proto.CompactTextString(m) }
func (*TLBlogsDeleteGroupTag) ProtoMessage()    {}
func (*TLBlogsDeleteGroupTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{361}
}
func (m *TLBlogsDeleteGroupTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsDeleteGroupTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsDeleteGroupTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsDeleteGroupTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsDeleteGroupTag.Merge(dst, src)
}
func (m *TLBlogsDeleteGroupTag) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsDeleteGroupTag) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsDeleteGroupTag.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsDeleteGroupTag proto.InternalMessageInfo

func (m *TLBlogsDeleteGroupTag) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsDeleteGroupTag) GetTagIds() []int32 {
	if m != nil {
		return m.TagIds
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// blogs.editGroupTag#12dd4287 tag_id:int title:string = Bool;
type TLBlogsEditGroupTag struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	TagId                int32         `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Title                string        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsEditGroupTag) Reset()         { *m = TLBlogsEditGroupTag{} }
func (m *TLBlogsEditGroupTag) String() string { return proto.CompactTextString(m) }
func (*TLBlogsEditGroupTag) ProtoMessage()    {}
func (*TLBlogsEditGroupTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{362}
}
func (m *TLBlogsEditGroupTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsEditGroupTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsEditGroupTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsEditGroupTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsEditGroupTag.Merge(dst, src)
}
func (m *TLBlogsEditGroupTag) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsEditGroupTag) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsEditGroupTag.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsEditGroupTag proto.InternalMessageInfo

func (m *TLBlogsEditGroupTag) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsEditGroupTag) GetTagId() int32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *TLBlogsEditGroupTag) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// blogs.addGroupTagMember#56dabf3a tag_id:int users:Vector<int> = Updates;
type TLBlogsAddGroupTagMember struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	TagId                int32         `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Users                []int32       `protobuf:"varint,3,rep,packed,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsAddGroupTagMember) Reset()         { *m = TLBlogsAddGroupTagMember{} }
func (m *TLBlogsAddGroupTagMember) String() string { return proto.CompactTextString(m) }
func (*TLBlogsAddGroupTagMember) ProtoMessage()    {}
func (*TLBlogsAddGroupTagMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{363}
}
func (m *TLBlogsAddGroupTagMember) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsAddGroupTagMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsAddGroupTagMember.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsAddGroupTagMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsAddGroupTagMember.Merge(dst, src)
}
func (m *TLBlogsAddGroupTagMember) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsAddGroupTagMember) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsAddGroupTagMember.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsAddGroupTagMember proto.InternalMessageInfo

func (m *TLBlogsAddGroupTagMember) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsAddGroupTagMember) GetTagId() int32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *TLBlogsAddGroupTagMember) GetUsers() []int32 {
	if m != nil {
		return m.Users
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// blogs.deleteGroupTagMember#fd914080 tag_id:int users:Vector<int> = Updates;
type TLBlogsDeleteGroupTagMember struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	TagId                int32         `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Users                []int32       `protobuf:"varint,3,rep,packed,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsDeleteGroupTagMember) Reset()         { *m = TLBlogsDeleteGroupTagMember{} }
func (m *TLBlogsDeleteGroupTagMember) String() string { return proto.CompactTextString(m) }
func (*TLBlogsDeleteGroupTagMember) ProtoMessage()    {}
func (*TLBlogsDeleteGroupTagMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{364}
}
func (m *TLBlogsDeleteGroupTagMember) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsDeleteGroupTagMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsDeleteGroupTagMember.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsDeleteGroupTagMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsDeleteGroupTagMember.Merge(dst, src)
}
func (m *TLBlogsDeleteGroupTagMember) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsDeleteGroupTagMember) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsDeleteGroupTagMember.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsDeleteGroupTagMember proto.InternalMessageInfo

func (m *TLBlogsDeleteGroupTagMember) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsDeleteGroupTagMember) GetTagId() int32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *TLBlogsDeleteGroupTagMember) GetUsers() []int32 {
	if m != nil {
		return m.Users
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// blogs.getGroupTags#c636efb6 = blogs.GroupTags;
type TLBlogsGetGroupTags struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetGroupTags) Reset()         { *m = TLBlogsGetGroupTags{} }
func (m *TLBlogsGetGroupTags) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetGroupTags) ProtoMessage()    {}
func (*TLBlogsGetGroupTags) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{365}
}
func (m *TLBlogsGetGroupTags) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetGroupTags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetGroupTags.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetGroupTags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetGroupTags.Merge(dst, src)
}
func (m *TLBlogsGetGroupTags) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetGroupTags) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetGroupTags.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetGroupTags proto.InternalMessageInfo

func (m *TLBlogsGetGroupTags) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// blogs.sendBlog#db1df059 flags:# visible_type:VisibleType mention_users:Vector<int> text:flags.0?string entities:flags.0?Vector<MessageEntity> random_id:long content:InputBlogContent geo_point:flags.1?InputGeoPoint address:flags.1?string topics:flags.2?Vector<string> = Updates;
type TLBlogsSendBlog struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	VisibleType          *VisibleType       `protobuf:"bytes,2,opt,name=visible_type,json=visibleType,proto3" json:"visible_type,omitempty"`
	MentionUsers         []int32            `protobuf:"varint,3,rep,packed,name=mention_users,json=mentionUsers,proto3" json:"mention_users,omitempty"`
	Text                 *types.StringValue `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Entities             []*MessageEntity   `protobuf:"bytes,5,rep,name=entities,proto3" json:"entities,omitempty"`
	RandomId             int64              `protobuf:"varint,6,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Content              *InputBlogContent  `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	GeoPoint             *InputGeoPoint     `protobuf:"bytes,8,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Address              *types.StringValue `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	Topics               []string           `protobuf:"bytes,10,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLBlogsSendBlog) Reset()         { *m = TLBlogsSendBlog{} }
func (m *TLBlogsSendBlog) String() string { return proto.CompactTextString(m) }
func (*TLBlogsSendBlog) ProtoMessage()    {}
func (*TLBlogsSendBlog) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{366}
}
func (m *TLBlogsSendBlog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsSendBlog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsSendBlog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsSendBlog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsSendBlog.Merge(dst, src)
}
func (m *TLBlogsSendBlog) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsSendBlog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsSendBlog.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsSendBlog proto.InternalMessageInfo

func (m *TLBlogsSendBlog) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsSendBlog) GetVisibleType() *VisibleType {
	if m != nil {
		return m.VisibleType
	}
	return nil
}

func (m *TLBlogsSendBlog) GetMentionUsers() []int32 {
	if m != nil {
		return m.MentionUsers
	}
	return nil
}

func (m *TLBlogsSendBlog) GetText() *types.StringValue {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *TLBlogsSendBlog) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLBlogsSendBlog) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLBlogsSendBlog) GetContent() *InputBlogContent {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *TLBlogsSendBlog) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLBlogsSendBlog) GetAddress() *types.StringValue {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *TLBlogsSendBlog) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// blogs.deleteBlog#c3e55a42 blogs:Vector<int> = Updates;
type TLBlogsDeleteBlog struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Blogs                []int32       `protobuf:"varint,2,rep,packed,name=blogs,proto3" json:"blogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsDeleteBlog) Reset()         { *m = TLBlogsDeleteBlog{} }
func (m *TLBlogsDeleteBlog) String() string { return proto.CompactTextString(m) }
func (*TLBlogsDeleteBlog) ProtoMessage()    {}
func (*TLBlogsDeleteBlog) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{367}
}
func (m *TLBlogsDeleteBlog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsDeleteBlog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsDeleteBlog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsDeleteBlog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsDeleteBlog.Merge(dst, src)
}
func (m *TLBlogsDeleteBlog) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsDeleteBlog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsDeleteBlog.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsDeleteBlog proto.InternalMessageInfo

func (m *TLBlogsDeleteBlog) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsDeleteBlog) GetBlogs() []int32 {
	if m != nil {
		return m.Blogs
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// blogs.getBlogs#7f44d787 blogs:Vector<int> = MicroBlogs;
type TLBlogsGetBlogs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Blogs                []int32       `protobuf:"varint,2,rep,packed,name=blogs,proto3" json:"blogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetBlogs) Reset()         { *m = TLBlogsGetBlogs{} }
func (m *TLBlogsGetBlogs) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetBlogs) ProtoMessage()    {}
func (*TLBlogsGetBlogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{368}
}
func (m *TLBlogsGetBlogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetBlogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetBlogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetBlogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetBlogs.Merge(dst, src)
}
func (m *TLBlogsGetBlogs) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetBlogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetBlogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetBlogs proto.InternalMessageInfo

func (m *TLBlogsGetBlogs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetBlogs) GetBlogs() []int32 {
	if m != nil {
		return m.Blogs
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// blogs.getCommentList#6af5634f comments:Vector<int> = blogs.Comments;
type TLBlogsGetCommentList struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Comments             []int32       `protobuf:"varint,2,rep,packed,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetCommentList) Reset()         { *m = TLBlogsGetCommentList{} }
func (m *TLBlogsGetCommentList) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetCommentList) ProtoMessage()    {}
func (*TLBlogsGetCommentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{369}
}
func (m *TLBlogsGetCommentList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetCommentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetCommentList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetCommentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetCommentList.Merge(dst, src)
}
func (m *TLBlogsGetCommentList) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetCommentList) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetCommentList.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetCommentList proto.InternalMessageInfo

func (m *TLBlogsGetCommentList) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetCommentList) GetComments() []int32 {
	if m != nil {
		return m.Comments
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// blogs.readHistory#a3c20ca8 flags:# pts:flags.0?int read_id:flags.1?blogs.IdType = Bool;
type TLBlogsReadHistory struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Pts                  *types.Int32Value `protobuf:"bytes,2,opt,name=pts,proto3" json:"pts,omitempty"`
	ReadId               *Blogs_IdType     `protobuf:"bytes,3,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLBlogsReadHistory) Reset()         { *m = TLBlogsReadHistory{} }
func (m *TLBlogsReadHistory) String() string { return proto.CompactTextString(m) }
func (*TLBlogsReadHistory) ProtoMessage()    {}
func (*TLBlogsReadHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{370}
}
func (m *TLBlogsReadHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsReadHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsReadHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsReadHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsReadHistory.Merge(dst, src)
}
func (m *TLBlogsReadHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsReadHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsReadHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsReadHistory proto.InternalMessageInfo

func (m *TLBlogsReadHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsReadHistory) GetPts() *types.Int32Value {
	if m != nil {
		return m.Pts
	}
	return nil
}

func (m *TLBlogsReadHistory) GetReadId() *Blogs_IdType {
	if m != nil {
		return m.ReadId
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// blogs.getHistory#8386e43c visible_type:VisibleType offset_id:int add_offset:int limit:int hash:int = MicroBlogs;
type TLBlogsGetHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	VisibleType          *VisibleType  `protobuf:"bytes,2,opt,name=visible_type,json=visibleType,proto3" json:"visible_type,omitempty"`
	OffsetId             int32         `protobuf:"varint,3,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	AddOffset            int32         `protobuf:"varint,4,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32         `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32         `protobuf:"varint,6,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetHistory) Reset()         { *m = TLBlogsGetHistory{} }
func (m *TLBlogsGetHistory) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetHistory) ProtoMessage()    {}
func (*TLBlogsGetHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{371}
}
func (m *TLBlogsGetHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetHistory.Merge(dst, src)
}
func (m *TLBlogsGetHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetHistory proto.InternalMessageInfo

func (m *TLBlogsGetHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetHistory) GetVisibleType() *VisibleType {
	if m != nil {
		return m.VisibleType
	}
	return nil
}

func (m *TLBlogsGetHistory) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLBlogsGetHistory) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLBlogsGetHistory) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLBlogsGetHistory) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// blogs.getComments#5d4ce4dd id:blogs.IdType offset_id:int limit:int = blogs.Comments;
type TLBlogsGetComments struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *Blogs_IdType `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	OffsetId             int32         `protobuf:"varint,3,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetComments) Reset()         { *m = TLBlogsGetComments{} }
func (m *TLBlogsGetComments) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetComments) ProtoMessage()    {}
func (*TLBlogsGetComments) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{372}
}
func (m *TLBlogsGetComments) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetComments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetComments.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetComments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetComments.Merge(dst, src)
}
func (m *TLBlogsGetComments) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetComments) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetComments.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetComments proto.InternalMessageInfo

func (m *TLBlogsGetComments) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetComments) GetId() *Blogs_IdType {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLBlogsGetComments) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLBlogsGetComments) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// blogs.getLikes#2490ae31 id:blogs.IdType offset_id:int limit:int = blogs.UserDates;
type TLBlogsGetLikes struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *Blogs_IdType `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	OffsetId             int32         `protobuf:"varint,3,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetLikes) Reset()         { *m = TLBlogsGetLikes{} }
func (m *TLBlogsGetLikes) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetLikes) ProtoMessage()    {}
func (*TLBlogsGetLikes) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{373}
}
func (m *TLBlogsGetLikes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetLikes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetLikes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetLikes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetLikes.Merge(dst, src)
}
func (m *TLBlogsGetLikes) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetLikes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetLikes.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetLikes proto.InternalMessageInfo

func (m *TLBlogsGetLikes) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetLikes) GetId() *Blogs_IdType {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLBlogsGetLikes) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLBlogsGetLikes) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// blogs.getUnreads#f00410ba pts:int limit:int = blogs.Unreads;
type TLBlogsGetUnreads struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Pts                  int32         `protobuf:"varint,2,opt,name=pts,proto3" json:"pts,omitempty"`
	Limit                int32         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetUnreads) Reset()         { *m = TLBlogsGetUnreads{} }
func (m *TLBlogsGetUnreads) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetUnreads) ProtoMessage()    {}
func (*TLBlogsGetUnreads) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{374}
}
func (m *TLBlogsGetUnreads) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetUnreads) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetUnreads.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetUnreads) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetUnreads.Merge(dst, src)
}
func (m *TLBlogsGetUnreads) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetUnreads) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetUnreads.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetUnreads proto.InternalMessageInfo

func (m *TLBlogsGetUnreads) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetUnreads) GetPts() int32 {
	if m != nil {
		return m.Pts
	}
	return 0
}

func (m *TLBlogsGetUnreads) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// blogs.getTopics#1964edbd from_topic_id:int limit:int = blogs.Topics;
type TLBlogsGetTopics struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FromTopicId          int32         `protobuf:"varint,2,opt,name=from_topic_id,json=fromTopicId,proto3" json:"from_topic_id,omitempty"`
	Limit                int32         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetTopics) Reset()         { *m = TLBlogsGetTopics{} }
func (m *TLBlogsGetTopics) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetTopics) ProtoMessage()    {}
func (*TLBlogsGetTopics) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{375}
}
func (m *TLBlogsGetTopics) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetTopics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetTopics.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetTopics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetTopics.Merge(dst, src)
}
func (m *TLBlogsGetTopics) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetTopics) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetTopics.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetTopics proto.InternalMessageInfo

func (m *TLBlogsGetTopics) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetTopics) GetFromTopicId() int32 {
	if m != nil {
		return m.FromTopicId
	}
	return 0
}

func (m *TLBlogsGetTopics) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// blogs.getHotTopics#074f6bf9 limit:int = blogs.Topics;
type TLBlogsGetHotTopics struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Limit                int32         `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBlogsGetHotTopics) Reset()         { *m = TLBlogsGetHotTopics{} }
func (m *TLBlogsGetHotTopics) String() string { return proto.CompactTextString(m) }
func (*TLBlogsGetHotTopics) ProtoMessage()    {}
func (*TLBlogsGetHotTopics) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{376}
}
func (m *TLBlogsGetHotTopics) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBlogsGetHotTopics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBlogsGetHotTopics.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBlogsGetHotTopics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBlogsGetHotTopics.Merge(dst, src)
}
func (m *TLBlogsGetHotTopics) XXX_Size() int {
	return m.Size()
}
func (m *TLBlogsGetHotTopics) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBlogsGetHotTopics.DiscardUnknown(m)
}

var xxx_messageInfo_TLBlogsGetHotTopics proto.InternalMessageInfo

func (m *TLBlogsGetHotTopics) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBlogsGetHotTopics) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// messages.getMessagesViews#c4c8a55d peer:InputPeer id:Vector<int> increment:Bool = Vector<int>;
type TLMessagesGetMessagesViewsC4C8A55D struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	Increment            *Bool         `protobuf:"bytes,4,opt,name=increment,proto3" json:"increment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetMessagesViewsC4C8A55D) Reset()         { *m = TLMessagesGetMessagesViewsC4C8A55D{} }
func (m *TLMessagesGetMessagesViewsC4C8A55D) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessagesViewsC4C8A55D) ProtoMessage()    {}
func (*TLMessagesGetMessagesViewsC4C8A55D) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{377}
}
func (m *TLMessagesGetMessagesViewsC4C8A55D) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessagesViewsC4C8A55D) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessagesViewsC4C8A55D.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesGetMessagesViewsC4C8A55D) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessagesViewsC4C8A55D.Merge(dst, src)
}
func (m *TLMessagesGetMessagesViewsC4C8A55D) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessagesViewsC4C8A55D) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessagesViewsC4C8A55D.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessagesViewsC4C8A55D proto.InternalMessageInfo

func (m *TLMessagesGetMessagesViewsC4C8A55D) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMessagesViewsC4C8A55D) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetMessagesViewsC4C8A55D) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesGetMessagesViewsC4C8A55D) GetIncrement() *Bool {
	if m != nil {
		return m.Increment
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// photos.updateProfilePhoto#f0bb5152 id:InputPhoto = UserProfilePhoto;
type TLPhotosUpdateProfilePhotoF0BB5152 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputPhoto   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhotosUpdateProfilePhotoF0BB5152) Reset()         { *m = TLPhotosUpdateProfilePhotoF0BB5152{} }
func (m *TLPhotosUpdateProfilePhotoF0BB5152) String() string { return proto.CompactTextString(m) }
func (*TLPhotosUpdateProfilePhotoF0BB5152) ProtoMessage()    {}
func (*TLPhotosUpdateProfilePhotoF0BB5152) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{378}
}
func (m *TLPhotosUpdateProfilePhotoF0BB5152) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosUpdateProfilePhotoF0BB5152) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosUpdateProfilePhotoF0BB5152.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLPhotosUpdateProfilePhotoF0BB5152) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosUpdateProfilePhotoF0BB5152.Merge(dst, src)
}
func (m *TLPhotosUpdateProfilePhotoF0BB5152) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosUpdateProfilePhotoF0BB5152) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosUpdateProfilePhotoF0BB5152.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosUpdateProfilePhotoF0BB5152 proto.InternalMessageInfo

func (m *TLPhotosUpdateProfilePhotoF0BB5152) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhotosUpdateProfilePhotoF0BB5152) GetId() *InputPhoto {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.searchGifs#bf9a776b q:string offset:int = messages.FoundGifs;
type TLMessagesSearchGifs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Q                    string        `protobuf:"bytes,2,opt,name=q,proto3" json:"q,omitempty"`
	Offset               int32         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSearchGifs) Reset()         { *m = TLMessagesSearchGifs{} }
func (m *TLMessagesSearchGifs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearchGifs) ProtoMessage()    {}
func (*TLMessagesSearchGifs) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{379}
}
func (m *TLMessagesSearchGifs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearchGifs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearchGifs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesSearchGifs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearchGifs.Merge(dst, src)
}
func (m *TLMessagesSearchGifs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearchGifs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearchGifs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearchGifs proto.InternalMessageInfo

func (m *TLMessagesSearchGifs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSearchGifs) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearchGifs) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// help.getProxyData#3d7758e1 = help.ProxyData;
type TLHelpGetProxyData struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetProxyData) Reset()         { *m = TLHelpGetProxyData{} }
func (m *TLHelpGetProxyData) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetProxyData) ProtoMessage()    {}
func (*TLHelpGetProxyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{380}
}
func (m *TLHelpGetProxyData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetProxyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetProxyData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetProxyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetProxyData.Merge(dst, src)
}
func (m *TLHelpGetProxyData) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetProxyData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetProxyData.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetProxyData proto.InternalMessageInfo

func (m *TLHelpGetProxyData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// wallet.sendLiteRequest#e2c9d33e body:bytes = wallet.LiteResponse;
type TLWalletSendLiteRequest struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Body                 []byte        `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLWalletSendLiteRequest) Reset()         { *m = TLWalletSendLiteRequest{} }
func (m *TLWalletSendLiteRequest) String() string { return proto.CompactTextString(m) }
func (*TLWalletSendLiteRequest) ProtoMessage()    {}
func (*TLWalletSendLiteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{381}
}
func (m *TLWalletSendLiteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLWalletSendLiteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLWalletSendLiteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLWalletSendLiteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLWalletSendLiteRequest.Merge(dst, src)
}
func (m *TLWalletSendLiteRequest) XXX_Size() int {
	return m.Size()
}
func (m *TLWalletSendLiteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TLWalletSendLiteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TLWalletSendLiteRequest proto.InternalMessageInfo

func (m *TLWalletSendLiteRequest) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLWalletSendLiteRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// wallet.getKeySecretSalt#b57f346 revoke:Bool = wallet.KeySecretSalt;
type TLWalletGetKeySecretSalt struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Revoke               *Bool         `protobuf:"bytes,2,opt,name=revoke,proto3" json:"revoke,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLWalletGetKeySecretSalt) Reset()         { *m = TLWalletGetKeySecretSalt{} }
func (m *TLWalletGetKeySecretSalt) String() string { return proto.CompactTextString(m) }
func (*TLWalletGetKeySecretSalt) ProtoMessage()    {}
func (*TLWalletGetKeySecretSalt) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{382}
}
func (m *TLWalletGetKeySecretSalt) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLWalletGetKeySecretSalt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLWalletGetKeySecretSalt.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLWalletGetKeySecretSalt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLWalletGetKeySecretSalt.Merge(dst, src)
}
func (m *TLWalletGetKeySecretSalt) XXX_Size() int {
	return m.Size()
}
func (m *TLWalletGetKeySecretSalt) XXX_DiscardUnknown() {
	xxx_messageInfo_TLWalletGetKeySecretSalt.DiscardUnknown(m)
}

var xxx_messageInfo_TLWalletGetKeySecretSalt proto.InternalMessageInfo

func (m *TLWalletGetKeySecretSalt) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLWalletGetKeySecretSalt) GetRevoke() *Bool {
	if m != nil {
		return m.Revoke
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.deleteContact#8e953744 id:InputUser = contacts.Link;
type TLContactsDeleteContact struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputUser    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsDeleteContact) Reset()         { *m = TLContactsDeleteContact{} }
func (m *TLContactsDeleteContact) String() string { return proto.CompactTextString(m) }
func (*TLContactsDeleteContact) ProtoMessage()    {}
func (*TLContactsDeleteContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{383}
}
func (m *TLContactsDeleteContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsDeleteContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsDeleteContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsDeleteContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsDeleteContact.Merge(dst, src)
}
func (m *TLContactsDeleteContact) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsDeleteContact) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsDeleteContact.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsDeleteContact proto.InternalMessageInfo

func (m *TLContactsDeleteContact) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsDeleteContact) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// contacts.deleteContacts#59ab389e id:Vector<InputUser> = Bool;
type TLContactsDeleteContacts59AB389E struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []*InputUser  `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsDeleteContacts59AB389E) Reset()         { *m = TLContactsDeleteContacts59AB389E{} }
func (m *TLContactsDeleteContacts59AB389E) String() string { return proto.CompactTextString(m) }
func (*TLContactsDeleteContacts59AB389E) ProtoMessage()    {}
func (*TLContactsDeleteContacts59AB389E) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{384}
}
func (m *TLContactsDeleteContacts59AB389E) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsDeleteContacts59AB389E) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsDeleteContacts59AB389E.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsDeleteContacts59AB389E) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsDeleteContacts59AB389E.Merge(dst, src)
}
func (m *TLContactsDeleteContacts59AB389E) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsDeleteContacts59AB389E) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsDeleteContacts59AB389E.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsDeleteContacts59AB389E proto.InternalMessageInfo

func (m *TLContactsDeleteContacts59AB389E) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsDeleteContacts59AB389E) GetId() []*InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.hideReportSpam#a8f1709b peer:InputPeer = Bool;
type TLMessagesHideReportSpam struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesHideReportSpam) Reset()         { *m = TLMessagesHideReportSpam{} }
func (m *TLMessagesHideReportSpam) String() string { return proto.CompactTextString(m) }
func (*TLMessagesHideReportSpam) ProtoMessage()    {}
func (*TLMessagesHideReportSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{385}
}
func (m *TLMessagesHideReportSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesHideReportSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesHideReportSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesHideReportSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesHideReportSpam.Merge(dst, src)
}
func (m *TLMessagesHideReportSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesHideReportSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesHideReportSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesHideReportSpam proto.InternalMessageInfo

func (m *TLMessagesHideReportSpam) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesHideReportSpam) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.getBroadcastsForDiscussion#1a87f304 = messages.Chats;
type TLChannelsGetBroadcastsForDiscussion struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetBroadcastsForDiscussion) Reset()         { *m = TLChannelsGetBroadcastsForDiscussion{} }
func (m *TLChannelsGetBroadcastsForDiscussion) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetBroadcastsForDiscussion) ProtoMessage()    {}
func (*TLChannelsGetBroadcastsForDiscussion) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{386}
}
func (m *TLChannelsGetBroadcastsForDiscussion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetBroadcastsForDiscussion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetBroadcastsForDiscussion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetBroadcastsForDiscussion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetBroadcastsForDiscussion.Merge(dst, src)
}
func (m *TLChannelsGetBroadcastsForDiscussion) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetBroadcastsForDiscussion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetBroadcastsForDiscussion.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetBroadcastsForDiscussion proto.InternalMessageInfo

func (m *TLChannelsGetBroadcastsForDiscussion) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.getWallPapers#c04cfac2 = Vector<WallPaper>;
type TLAccountGetWallPapersC04CFAC2 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetWallPapersC04CFAC2) Reset()         { *m = TLAccountGetWallPapersC04CFAC2{} }
func (m *TLAccountGetWallPapersC04CFAC2) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetWallPapersC04CFAC2) ProtoMessage()    {}
func (*TLAccountGetWallPapersC04CFAC2) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{387}
}
func (m *TLAccountGetWallPapersC04CFAC2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetWallPapersC04CFAC2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetWallPapersC04CFAC2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountGetWallPapersC04CFAC2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetWallPapersC04CFAC2.Merge(dst, src)
}
func (m *TLAccountGetWallPapersC04CFAC2) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetWallPapersC04CFAC2) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetWallPapersC04CFAC2.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetWallPapersC04CFAC2 proto.InternalMessageInfo

func (m *TLAccountGetWallPapersC04CFAC2) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// messages.toggleChatAdmins#ec8bd9e1 chat_id:int enabled:Bool = Updates;
type TLMessagesToggleChatAdmins struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int32         `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesToggleChatAdmins) Reset()         { *m = TLMessagesToggleChatAdmins{} }
func (m *TLMessagesToggleChatAdmins) String() string { return proto.CompactTextString(m) }
func (*TLMessagesToggleChatAdmins) ProtoMessage()    {}
func (*TLMessagesToggleChatAdmins) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{388}
}
func (m *TLMessagesToggleChatAdmins) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesToggleChatAdmins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesToggleChatAdmins.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesToggleChatAdmins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesToggleChatAdmins.Merge(dst, src)
}
func (m *TLMessagesToggleChatAdmins) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesToggleChatAdmins) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesToggleChatAdmins.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesToggleChatAdmins proto.InternalMessageInfo

func (m *TLMessagesToggleChatAdmins) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesToggleChatAdmins) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesToggleChatAdmins) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.editAbout#13e27f1e channel:InputChannel about:string = Bool;
type TLChannelsEditAbout struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	About                string        `protobuf:"bytes,3,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsEditAbout) Reset()         { *m = TLChannelsEditAbout{} }
func (m *TLChannelsEditAbout) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditAbout) ProtoMessage()    {}
func (*TLChannelsEditAbout) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{389}
}
func (m *TLChannelsEditAbout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditAbout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditAbout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsEditAbout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditAbout.Merge(dst, src)
}
func (m *TLChannelsEditAbout) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditAbout) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditAbout.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditAbout proto.InternalMessageInfo

func (m *TLChannelsEditAbout) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditAbout) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditAbout) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// channels.exportInvite#c7560885 channel:InputChannel = ExportedChatInvite;
type TLChannelsExportInvite struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsExportInvite) Reset()         { *m = TLChannelsExportInvite{} }
func (m *TLChannelsExportInvite) String() string { return proto.CompactTextString(m) }
func (*TLChannelsExportInvite) ProtoMessage()    {}
func (*TLChannelsExportInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{390}
}
func (m *TLChannelsExportInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsExportInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsExportInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsExportInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsExportInvite.Merge(dst, src)
}
func (m *TLChannelsExportInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsExportInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsExportInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsExportInvite proto.InternalMessageInfo

func (m *TLChannelsExportInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsExportInvite) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.toggleInvites#49609307 channel:InputChannel enabled:Bool = Updates;
type TLChannelsToggleInvites struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsToggleInvites) Reset()         { *m = TLChannelsToggleInvites{} }
func (m *TLChannelsToggleInvites) String() string { return proto.CompactTextString(m) }
func (*TLChannelsToggleInvites) ProtoMessage()    {}
func (*TLChannelsToggleInvites) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{391}
}
func (m *TLChannelsToggleInvites) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsToggleInvites) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsToggleInvites.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsToggleInvites) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsToggleInvites.Merge(dst, src)
}
func (m *TLChannelsToggleInvites) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsToggleInvites) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsToggleInvites.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsToggleInvites proto.InternalMessageInfo

func (m *TLChannelsToggleInvites) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsToggleInvites) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsToggleInvites) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.updatePinnedMessage#a72ded52 flags:# silent:flags.0?true channel:InputChannel id:int = Updates;
type TLChannelsUpdatePinnedMessage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool          `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   int32         `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsUpdatePinnedMessage) Reset()         { *m = TLChannelsUpdatePinnedMessage{} }
func (m *TLChannelsUpdatePinnedMessage) String() string { return proto.CompactTextString(m) }
func (*TLChannelsUpdatePinnedMessage) ProtoMessage()    {}
func (*TLChannelsUpdatePinnedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{392}
}
func (m *TLChannelsUpdatePinnedMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsUpdatePinnedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsUpdatePinnedMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsUpdatePinnedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsUpdatePinnedMessage.Merge(dst, src)
}
func (m *TLChannelsUpdatePinnedMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsUpdatePinnedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsUpdatePinnedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsUpdatePinnedMessage proto.InternalMessageInfo

func (m *TLChannelsUpdatePinnedMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsUpdatePinnedMessage) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLChannelsUpdatePinnedMessage) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsUpdatePinnedMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// contacts.exportCard#84e53737 = Vector<int>;
type TLContactsExportCard struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsExportCard) Reset()         { *m = TLContactsExportCard{} }
func (m *TLContactsExportCard) String() string { return proto.CompactTextString(m) }
func (*TLContactsExportCard) ProtoMessage()    {}
func (*TLContactsExportCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{393}
}
func (m *TLContactsExportCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsExportCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsExportCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsExportCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsExportCard.Merge(dst, src)
}
func (m *TLContactsExportCard) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsExportCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsExportCard.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsExportCard proto.InternalMessageInfo

func (m *TLContactsExportCard) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// contacts.importCard#4fe196fe export_card:Vector<int> = User;
type TLContactsImportCard struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ExportCard           []int32       `protobuf:"varint,2,rep,packed,name=export_card,json=exportCard,proto3" json:"export_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsImportCard) Reset()         { *m = TLContactsImportCard{} }
func (m *TLContactsImportCard) String() string { return proto.CompactTextString(m) }
func (*TLContactsImportCard) ProtoMessage()    {}
func (*TLContactsImportCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{394}
}
func (m *TLContactsImportCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsImportCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsImportCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLContactsImportCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsImportCard.Merge(dst, src)
}
func (m *TLContactsImportCard) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsImportCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsImportCard.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsImportCard proto.InternalMessageInfo

func (m *TLContactsImportCard) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsImportCard) GetExportCard() []int32 {
	if m != nil {
		return m.ExportCard
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// auth.sendInvites#771c1d97 phone_numbers:Vector<string> message:string = Bool;
type TLAuthSendInvites struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumbers         []string      `protobuf:"bytes,2,rep,name=phone_numbers,json=phoneNumbers,proto3" json:"phone_numbers,omitempty"`
	Message              string        `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthSendInvites) Reset()         { *m = TLAuthSendInvites{} }
func (m *TLAuthSendInvites) String() string { return proto.CompactTextString(m) }
func (*TLAuthSendInvites) ProtoMessage()    {}
func (*TLAuthSendInvites) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{395}
}
func (m *TLAuthSendInvites) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSendInvites) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSendInvites.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthSendInvites) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSendInvites.Merge(dst, src)
}
func (m *TLAuthSendInvites) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSendInvites) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSendInvites.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSendInvites proto.InternalMessageInfo

func (m *TLAuthSendInvites) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthSendInvites) GetPhoneNumbers() []string {
	if m != nil {
		return m.PhoneNumbers
	}
	return nil
}

func (m *TLAuthSendInvites) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// help.getTermsOfService#8e59b7e7 country_iso2:string = help.TermsOfService;
type TLHelpGetTermsOfService struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	CountryIso2          string        `protobuf:"bytes,2,opt,name=country_iso2,json=countryIso2,proto3" json:"country_iso2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetTermsOfService) Reset()         { *m = TLHelpGetTermsOfService{} }
func (m *TLHelpGetTermsOfService) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetTermsOfService) ProtoMessage()    {}
func (*TLHelpGetTermsOfService) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{396}
}
func (m *TLHelpGetTermsOfService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetTermsOfService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetTermsOfService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetTermsOfService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetTermsOfService.Merge(dst, src)
}
func (m *TLHelpGetTermsOfService) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetTermsOfService) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetTermsOfService.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetTermsOfService proto.InternalMessageInfo

func (m *TLHelpGetTermsOfService) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetTermsOfService) GetCountryIso2() string {
	if m != nil {
		return m.CountryIso2
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// auth.checkPhone#6fe51dfb phone_number:string = auth.CheckedPhone;
type TLAuthCheckPhone struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthCheckPhone) Reset()         { *m = TLAuthCheckPhone{} }
func (m *TLAuthCheckPhone) String() string { return proto.CompactTextString(m) }
func (*TLAuthCheckPhone) ProtoMessage()    {}
func (*TLAuthCheckPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{397}
}
func (m *TLAuthCheckPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthCheckPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthCheckPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthCheckPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthCheckPhone.Merge(dst, src)
}
func (m *TLAuthCheckPhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthCheckPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthCheckPhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthCheckPhone proto.InternalMessageInfo

func (m *TLAuthCheckPhone) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthCheckPhone) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// channels.getFeed#b90f450 flags:# offset_to_max_read:flags.3?true feed_id:int offset_position:flags.0?FeedPosition add_offset:int limit:int max_position:flags.1?FeedPosition min_position:flags.2?FeedPosition hash:int = messages.FeedMessages;
type TLChannelsGetFeed struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	OffsetToMaxRead      bool          `protobuf:"varint,2,opt,name=offset_to_max_read,json=offsetToMaxRead,proto3" json:"offset_to_max_read,omitempty"`
	FeedId               int32         `protobuf:"varint,3,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	OffsetPosition       *FeedPosition `protobuf:"bytes,4,opt,name=offset_position,json=offsetPosition,proto3" json:"offset_position,omitempty"`
	AddOffset            int32         `protobuf:"varint,5,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32         `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxPosition          *FeedPosition `protobuf:"bytes,7,opt,name=max_position,json=maxPosition,proto3" json:"max_position,omitempty"`
	MinPosition          *FeedPosition `protobuf:"bytes,8,opt,name=min_position,json=minPosition,proto3" json:"min_position,omitempty"`
	Hash                 int32         `protobuf:"varint,9,opt,name=hash,proto3" json:"hash,omitempty"`
	SourcesHash          int32         `protobuf:"varint,10,opt,name=sources_hash,json=sourcesHash,proto3" json:"sources_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetFeed) Reset()         { *m = TLChannelsGetFeed{} }
func (m *TLChannelsGetFeed) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetFeed) ProtoMessage()    {}
func (*TLChannelsGetFeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{398}
}
func (m *TLChannelsGetFeed) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetFeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetFeed.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetFeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetFeed.Merge(dst, src)
}
func (m *TLChannelsGetFeed) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetFeed) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetFeed.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetFeed proto.InternalMessageInfo

func (m *TLChannelsGetFeed) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetFeed) GetOffsetToMaxRead() bool {
	if m != nil {
		return m.OffsetToMaxRead
	}
	return false
}

func (m *TLChannelsGetFeed) GetFeedId() int32 {
	if m != nil {
		return m.FeedId
	}
	return 0
}

func (m *TLChannelsGetFeed) GetOffsetPosition() *FeedPosition {
	if m != nil {
		return m.OffsetPosition
	}
	return nil
}

func (m *TLChannelsGetFeed) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLChannelsGetFeed) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLChannelsGetFeed) GetMaxPosition() *FeedPosition {
	if m != nil {
		return m.MaxPosition
	}
	return nil
}

func (m *TLChannelsGetFeed) GetMinPosition() *FeedPosition {
	if m != nil {
		return m.MinPosition
	}
	return nil
}

func (m *TLChannelsGetFeed) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

func (m *TLChannelsGetFeed) GetSourcesHash() int32 {
	if m != nil {
		return m.SourcesHash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.searchFeed#88325369 feed_id:int q:string offset_date:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
type TLChannelsSearchFeed struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FeedId               int32         `protobuf:"varint,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	Q                    string        `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	OffsetDate           int32         `protobuf:"varint,4,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	OffsetPeer           *InputPeer    `protobuf:"bytes,5,opt,name=offset_peer,json=offsetPeer,proto3" json:"offset_peer,omitempty"`
	OffsetId             int32         `protobuf:"varint,6,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32         `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsSearchFeed) Reset()         { *m = TLChannelsSearchFeed{} }
func (m *TLChannelsSearchFeed) String() string { return proto.CompactTextString(m) }
func (*TLChannelsSearchFeed) ProtoMessage()    {}
func (*TLChannelsSearchFeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{399}
}
func (m *TLChannelsSearchFeed) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsSearchFeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsSearchFeed.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsSearchFeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsSearchFeed.Merge(dst, src)
}
func (m *TLChannelsSearchFeed) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsSearchFeed) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsSearchFeed.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsSearchFeed proto.InternalMessageInfo

func (m *TLChannelsSearchFeed) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsSearchFeed) GetFeedId() int32 {
	if m != nil {
		return m.FeedId
	}
	return 0
}

func (m *TLChannelsSearchFeed) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLChannelsSearchFeed) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLChannelsSearchFeed) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *TLChannelsSearchFeed) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLChannelsSearchFeed) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.getFeedSources#d8ce236e flags:# feed_id:flags.0?int hash:int = channels.FeedSources;
type TLChannelsGetFeedSources struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FeedId               *types.Int32Value `protobuf:"bytes,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	Hash                 int32             `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLChannelsGetFeedSources) Reset()         { *m = TLChannelsGetFeedSources{} }
func (m *TLChannelsGetFeedSources) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetFeedSources) ProtoMessage()    {}
func (*TLChannelsGetFeedSources) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{400}
}
func (m *TLChannelsGetFeedSources) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetFeedSources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetFeedSources.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsGetFeedSources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetFeedSources.Merge(dst, src)
}
func (m *TLChannelsGetFeedSources) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetFeedSources) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetFeedSources.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetFeedSources proto.InternalMessageInfo

func (m *TLChannelsGetFeedSources) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetFeedSources) GetFeedId() *types.Int32Value {
	if m != nil {
		return m.FeedId
	}
	return nil
}

func (m *TLChannelsGetFeedSources) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.changeFeedBroadcast#ffb37511 flags:# channel:InputChannel feed_id:flags.0?int = Updates;
type TLChannelsChangeFeedBroadcastFFB37511 struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel     `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	FeedId               *types.Int32Value `protobuf:"bytes,3,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLChannelsChangeFeedBroadcastFFB37511) Reset()         { *m = TLChannelsChangeFeedBroadcastFFB37511{} }
func (m *TLChannelsChangeFeedBroadcastFFB37511) String() string { return proto.CompactTextString(m) }
func (*TLChannelsChangeFeedBroadcastFFB37511) ProtoMessage()    {}
func (*TLChannelsChangeFeedBroadcastFFB37511) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{401}
}
func (m *TLChannelsChangeFeedBroadcastFFB37511) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsChangeFeedBroadcastFFB37511) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsChangeFeedBroadcastFFB37511.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsChangeFeedBroadcastFFB37511) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsChangeFeedBroadcastFFB37511.Merge(dst, src)
}
func (m *TLChannelsChangeFeedBroadcastFFB37511) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsChangeFeedBroadcastFFB37511) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsChangeFeedBroadcastFFB37511.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsChangeFeedBroadcastFFB37511 proto.InternalMessageInfo

func (m *TLChannelsChangeFeedBroadcastFFB37511) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsChangeFeedBroadcastFFB37511) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsChangeFeedBroadcastFFB37511) GetFeedId() *types.Int32Value {
	if m != nil {
		return m.FeedId
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.setFeedBroadcasts#ea80bfae flags:# feed_id:int channels:flags.0?Vector<InputChannel> also_newly_joined:flags.1?Bool = Updates;
type TLChannelsSetFeedBroadcastsEA80BFAE struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FeedId               int32           `protobuf:"varint,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	Channels             []*InputChannel `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
	AlsoNewlyJoined      *Bool           `protobuf:"bytes,4,opt,name=also_newly_joined,json=alsoNewlyJoined,proto3" json:"also_newly_joined,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLChannelsSetFeedBroadcastsEA80BFAE) Reset()         { *m = TLChannelsSetFeedBroadcastsEA80BFAE{} }
func (m *TLChannelsSetFeedBroadcastsEA80BFAE) String() string { return proto.CompactTextString(m) }
func (*TLChannelsSetFeedBroadcastsEA80BFAE) ProtoMessage()    {}
func (*TLChannelsSetFeedBroadcastsEA80BFAE) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{402}
}
func (m *TLChannelsSetFeedBroadcastsEA80BFAE) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsSetFeedBroadcastsEA80BFAE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsSetFeedBroadcastsEA80BFAE.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsSetFeedBroadcastsEA80BFAE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsSetFeedBroadcastsEA80BFAE.Merge(dst, src)
}
func (m *TLChannelsSetFeedBroadcastsEA80BFAE) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsSetFeedBroadcastsEA80BFAE) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsSetFeedBroadcastsEA80BFAE.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsSetFeedBroadcastsEA80BFAE proto.InternalMessageInfo

func (m *TLChannelsSetFeedBroadcastsEA80BFAE) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsSetFeedBroadcastsEA80BFAE) GetFeedId() int32 {
	if m != nil {
		return m.FeedId
	}
	return 0
}

func (m *TLChannelsSetFeedBroadcastsEA80BFAE) GetChannels() []*InputChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *TLChannelsSetFeedBroadcastsEA80BFAE) GetAlsoNewlyJoined() *Bool {
	if m != nil {
		return m.AlsoNewlyJoined
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.readFeed#9c3011d feed_id:int max_position:FeedPosition = Updates;
type TLChannelsReadFeed struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FeedId               int32         `protobuf:"varint,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	MaxPosition          *FeedPosition `protobuf:"bytes,3,opt,name=max_position,json=maxPosition,proto3" json:"max_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsReadFeed) Reset()         { *m = TLChannelsReadFeed{} }
func (m *TLChannelsReadFeed) String() string { return proto.CompactTextString(m) }
func (*TLChannelsReadFeed) ProtoMessage()    {}
func (*TLChannelsReadFeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{403}
}
func (m *TLChannelsReadFeed) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsReadFeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsReadFeed.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsReadFeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsReadFeed.Merge(dst, src)
}
func (m *TLChannelsReadFeed) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsReadFeed) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsReadFeed.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsReadFeed proto.InternalMessageInfo

func (m *TLChannelsReadFeed) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsReadFeed) GetFeedId() int32 {
	if m != nil {
		return m.FeedId
	}
	return 0
}

func (m *TLChannelsReadFeed) GetMaxPosition() *FeedPosition {
	if m != nil {
		return m.MaxPosition
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.forwardMessage#33963bf9 peer:InputPeer id:int random_id:long = Updates;
type TLMessagesForwardMessage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32         `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	RandomId             int64         `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesForwardMessage) Reset()         { *m = TLMessagesForwardMessage{} }
func (m *TLMessagesForwardMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesForwardMessage) ProtoMessage()    {}
func (*TLMessagesForwardMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{404}
}
func (m *TLMessagesForwardMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesForwardMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesForwardMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesForwardMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesForwardMessage.Merge(dst, src)
}
func (m *TLMessagesForwardMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesForwardMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesForwardMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesForwardMessage proto.InternalMessageInfo

func (m *TLMessagesForwardMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesForwardMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesForwardMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesForwardMessage) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// upload.reuploadCdnFile#1af91c09 file_token:bytes request_token:bytes = Vector<CdnFileHash>;
type TLUploadReuploadCdnFile1AF91C09 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileToken            []byte        `protobuf:"bytes,2,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	RequestToken         []byte        `protobuf:"bytes,3,opt,name=request_token,json=requestToken,proto3" json:"request_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadReuploadCdnFile1AF91C09) Reset()         { *m = TLUploadReuploadCdnFile1AF91C09{} }
func (m *TLUploadReuploadCdnFile1AF91C09) String() string { return proto.CompactTextString(m) }
func (*TLUploadReuploadCdnFile1AF91C09) ProtoMessage()    {}
func (*TLUploadReuploadCdnFile1AF91C09) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{405}
}
func (m *TLUploadReuploadCdnFile1AF91C09) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadReuploadCdnFile1AF91C09) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadReuploadCdnFile1AF91C09.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUploadReuploadCdnFile1AF91C09) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadReuploadCdnFile1AF91C09.Merge(dst, src)
}
func (m *TLUploadReuploadCdnFile1AF91C09) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadReuploadCdnFile1AF91C09) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadReuploadCdnFile1AF91C09.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadReuploadCdnFile1AF91C09 proto.InternalMessageInfo

func (m *TLUploadReuploadCdnFile1AF91C09) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadReuploadCdnFile1AF91C09) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadReuploadCdnFile1AF91C09) GetRequestToken() []byte {
	if m != nil {
		return m.RequestToken
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// upload.getCdnFileHashes#f715c87b file_token:bytes offset:int = Vector<CdnFileHash>;
type TLUploadGetCdnFileHashesF715C87B struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileToken            []byte        `protobuf:"bytes,2,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	Offset               int32         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadGetCdnFileHashesF715C87B) Reset()         { *m = TLUploadGetCdnFileHashesF715C87B{} }
func (m *TLUploadGetCdnFileHashesF715C87B) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetCdnFileHashesF715C87B) ProtoMessage()    {}
func (*TLUploadGetCdnFileHashesF715C87B) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{406}
}
func (m *TLUploadGetCdnFileHashesF715C87B) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetCdnFileHashesF715C87B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetCdnFileHashesF715C87B.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUploadGetCdnFileHashesF715C87B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetCdnFileHashesF715C87B.Merge(dst, src)
}
func (m *TLUploadGetCdnFileHashesF715C87B) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetCdnFileHashesF715C87B) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetCdnFileHashesF715C87B.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetCdnFileHashesF715C87B proto.InternalMessageInfo

func (m *TLUploadGetCdnFileHashesF715C87B) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetCdnFileHashesF715C87B) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadGetCdnFileHashesF715C87B) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// channels.changeFeedBroadcast#2528871e flags:# channel:InputChannel feed_id:flags.0?int = Bool;
type TLChannelsChangeFeedBroadcast2528871E struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel     `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	FeedId               *types.Int32Value `protobuf:"bytes,3,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLChannelsChangeFeedBroadcast2528871E) Reset()         { *m = TLChannelsChangeFeedBroadcast2528871E{} }
func (m *TLChannelsChangeFeedBroadcast2528871E) String() string { return proto.CompactTextString(m) }
func (*TLChannelsChangeFeedBroadcast2528871E) ProtoMessage()    {}
func (*TLChannelsChangeFeedBroadcast2528871E) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{407}
}
func (m *TLChannelsChangeFeedBroadcast2528871E) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsChangeFeedBroadcast2528871E) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsChangeFeedBroadcast2528871E.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsChangeFeedBroadcast2528871E) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsChangeFeedBroadcast2528871E.Merge(dst, src)
}
func (m *TLChannelsChangeFeedBroadcast2528871E) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsChangeFeedBroadcast2528871E) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsChangeFeedBroadcast2528871E.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsChangeFeedBroadcast2528871E proto.InternalMessageInfo

func (m *TLChannelsChangeFeedBroadcast2528871E) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsChangeFeedBroadcast2528871E) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsChangeFeedBroadcast2528871E) GetFeedId() *types.Int32Value {
	if m != nil {
		return m.FeedId
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// channels.setFeedBroadcasts#7e91b8f2 feed_id:int channels:Vector<InputChannel> also_newly_joined:Bool = Bool;
type TLChannelsSetFeedBroadcasts7E91B8F2 struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FeedId               int32           `protobuf:"varint,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	Channels             []*InputChannel `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
	AlsoNewlyJoined      *Bool           `protobuf:"bytes,4,opt,name=also_newly_joined,json=alsoNewlyJoined,proto3" json:"also_newly_joined,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLChannelsSetFeedBroadcasts7E91B8F2) Reset()         { *m = TLChannelsSetFeedBroadcasts7E91B8F2{} }
func (m *TLChannelsSetFeedBroadcasts7E91B8F2) String() string { return proto.CompactTextString(m) }
func (*TLChannelsSetFeedBroadcasts7E91B8F2) ProtoMessage()    {}
func (*TLChannelsSetFeedBroadcasts7E91B8F2) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{408}
}
func (m *TLChannelsSetFeedBroadcasts7E91B8F2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsSetFeedBroadcasts7E91B8F2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsSetFeedBroadcasts7E91B8F2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLChannelsSetFeedBroadcasts7E91B8F2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsSetFeedBroadcasts7E91B8F2.Merge(dst, src)
}
func (m *TLChannelsSetFeedBroadcasts7E91B8F2) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsSetFeedBroadcasts7E91B8F2) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsSetFeedBroadcasts7E91B8F2.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsSetFeedBroadcasts7E91B8F2 proto.InternalMessageInfo

func (m *TLChannelsSetFeedBroadcasts7E91B8F2) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsSetFeedBroadcasts7E91B8F2) GetFeedId() int32 {
	if m != nil {
		return m.FeedId
	}
	return 0
}

func (m *TLChannelsSetFeedBroadcasts7E91B8F2) GetChannels() []*InputChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *TLChannelsSetFeedBroadcasts7E91B8F2) GetAlsoNewlyJoined() *Bool {
	if m != nil {
		return m.AlsoNewlyJoined
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// messages.readHistory#b04f2510 peer:InputPeer max_id:int offset:int = messages.AffectedHistory;
type TLMessagesReadHistoryB04F2510 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	MaxId                int32         `protobuf:"varint,3,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	Offset               int32         `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadHistoryB04F2510) Reset()         { *m = TLMessagesReadHistoryB04F2510{} }
func (m *TLMessagesReadHistoryB04F2510) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadHistoryB04F2510) ProtoMessage()    {}
func (*TLMessagesReadHistoryB04F2510) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{409}
}
func (m *TLMessagesReadHistoryB04F2510) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadHistoryB04F2510) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadHistoryB04F2510.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLMessagesReadHistoryB04F2510) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadHistoryB04F2510.Merge(dst, src)
}
func (m *TLMessagesReadHistoryB04F2510) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadHistoryB04F2510) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadHistoryB04F2510.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadHistoryB04F2510 proto.InternalMessageInfo

func (m *TLMessagesReadHistoryB04F2510) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadHistoryB04F2510) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReadHistoryB04F2510) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesReadHistoryB04F2510) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// help.getScheme#dbb69a9e version:int = Scheme;
type TLHelpGetScheme struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Version              int32         `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetScheme) Reset()         { *m = TLHelpGetScheme{} }
func (m *TLHelpGetScheme) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetScheme) ProtoMessage()    {}
func (*TLHelpGetScheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{410}
}
func (m *TLHelpGetScheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetScheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetScheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpGetScheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetScheme.Merge(dst, src)
}
func (m *TLHelpGetScheme) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetScheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetScheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetScheme proto.InternalMessageInfo

func (m *TLHelpGetScheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetScheme) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

// --------------------------------------------------------------------------------------------
// help.test#c0e202f7 = Bool;
type TLHelpTest struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpTest) Reset()         { *m = TLHelpTest{} }
func (m *TLHelpTest) String() string { return proto.CompactTextString(m) }
func (*TLHelpTest) ProtoMessage()    {}
func (*TLHelpTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{411}
}
func (m *TLHelpTest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpTest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLHelpTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpTest.Merge(dst, src)
}
func (m *TLHelpTest) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpTest) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpTest.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpTest proto.InternalMessageInfo

func (m *TLHelpTest) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// account.createPredefinedUser flags:# phone:string first_name:flags.0?string last_name:flags.1?string username:flags.2?string code:string verified:flags.3?bool = PredefinedUser;
type TLAccountCreatePredefinedUser struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string             `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	FirstName            *types.StringValue `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             *types.StringValue `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Username             *types.StringValue `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Code                 string             `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	Verified             bool               `protobuf:"varint,7,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountCreatePredefinedUser) Reset()         { *m = TLAccountCreatePredefinedUser{} }
func (m *TLAccountCreatePredefinedUser) String() string { return proto.CompactTextString(m) }
func (*TLAccountCreatePredefinedUser) ProtoMessage()    {}
func (*TLAccountCreatePredefinedUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{412}
}
func (m *TLAccountCreatePredefinedUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountCreatePredefinedUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountCreatePredefinedUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountCreatePredefinedUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountCreatePredefinedUser.Merge(dst, src)
}
func (m *TLAccountCreatePredefinedUser) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountCreatePredefinedUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountCreatePredefinedUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountCreatePredefinedUser proto.InternalMessageInfo

func (m *TLAccountCreatePredefinedUser) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountCreatePredefinedUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLAccountCreatePredefinedUser) GetFirstName() *types.StringValue {
	if m != nil {
		return m.FirstName
	}
	return nil
}

func (m *TLAccountCreatePredefinedUser) GetLastName() *types.StringValue {
	if m != nil {
		return m.LastName
	}
	return nil
}

func (m *TLAccountCreatePredefinedUser) GetUsername() *types.StringValue {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *TLAccountCreatePredefinedUser) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TLAccountCreatePredefinedUser) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

// --------------------------------------------------------------------------------------------
// account.updatePredefinedUsername phone:string username:string = PredefinedUser;
type TLAccountUpdatePredefinedUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string        `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Username             string        `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdatePredefinedUsername) Reset()         { *m = TLAccountUpdatePredefinedUsername{} }
func (m *TLAccountUpdatePredefinedUsername) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdatePredefinedUsername) ProtoMessage()    {}
func (*TLAccountUpdatePredefinedUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{413}
}
func (m *TLAccountUpdatePredefinedUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdatePredefinedUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdatePredefinedUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdatePredefinedUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdatePredefinedUsername.Merge(dst, src)
}
func (m *TLAccountUpdatePredefinedUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdatePredefinedUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdatePredefinedUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdatePredefinedUsername proto.InternalMessageInfo

func (m *TLAccountUpdatePredefinedUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdatePredefinedUsername) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLAccountUpdatePredefinedUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// account.updatePredefinedProfile flags:# phone:string first_name:flags.0?string last_name:flags.1?string about:flags.2?string = PredefinedUser;
type TLAccountUpdatePredefinedProfile struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string             `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	FirstName            *types.StringValue `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             *types.StringValue `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	About                *types.StringValue `protobuf:"bytes,5,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountUpdatePredefinedProfile) Reset()         { *m = TLAccountUpdatePredefinedProfile{} }
func (m *TLAccountUpdatePredefinedProfile) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdatePredefinedProfile) ProtoMessage()    {}
func (*TLAccountUpdatePredefinedProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{414}
}
func (m *TLAccountUpdatePredefinedProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdatePredefinedProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdatePredefinedProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdatePredefinedProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdatePredefinedProfile.Merge(dst, src)
}
func (m *TLAccountUpdatePredefinedProfile) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdatePredefinedProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdatePredefinedProfile.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdatePredefinedProfile proto.InternalMessageInfo

func (m *TLAccountUpdatePredefinedProfile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdatePredefinedProfile) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLAccountUpdatePredefinedProfile) GetFirstName() *types.StringValue {
	if m != nil {
		return m.FirstName
	}
	return nil
}

func (m *TLAccountUpdatePredefinedProfile) GetLastName() *types.StringValue {
	if m != nil {
		return m.LastName
	}
	return nil
}

func (m *TLAccountUpdatePredefinedProfile) GetAbout() *types.StringValue {
	if m != nil {
		return m.About
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// account.updateVerified flags:# id:int verified:flags.0?bool = User;
type TLAccountUpdateVerified struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   int32         `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Verified             bool          `protobuf:"varint,3,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdateVerified) Reset()         { *m = TLAccountUpdateVerified{} }
func (m *TLAccountUpdateVerified) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateVerified) ProtoMessage()    {}
func (*TLAccountUpdateVerified) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{415}
}
func (m *TLAccountUpdateVerified) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateVerified) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateVerified.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdateVerified) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateVerified.Merge(dst, src)
}
func (m *TLAccountUpdateVerified) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateVerified) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateVerified.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateVerified proto.InternalMessageInfo

func (m *TLAccountUpdateVerified) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateVerified) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLAccountUpdateVerified) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

// --------------------------------------------------------------------------------------------
// account.updatePredefinedVerified flags:# phone:string verified:flags.0?bool = PredefinedUser;
type TLAccountUpdatePredefinedVerified struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string        `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Verified             bool          `protobuf:"varint,3,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdatePredefinedVerified) Reset()         { *m = TLAccountUpdatePredefinedVerified{} }
func (m *TLAccountUpdatePredefinedVerified) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdatePredefinedVerified) ProtoMessage()    {}
func (*TLAccountUpdatePredefinedVerified) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{416}
}
func (m *TLAccountUpdatePredefinedVerified) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdatePredefinedVerified) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdatePredefinedVerified.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdatePredefinedVerified) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdatePredefinedVerified.Merge(dst, src)
}
func (m *TLAccountUpdatePredefinedVerified) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdatePredefinedVerified) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdatePredefinedVerified.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdatePredefinedVerified proto.InternalMessageInfo

func (m *TLAccountUpdatePredefinedVerified) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdatePredefinedVerified) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLAccountUpdatePredefinedVerified) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

// --------------------------------------------------------------------------------------------
// account.updatePredefinedCode phone:string code:string = PredefinedUser;
type TLAccountUpdatePredefinedCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string        `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Code                 string        `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdatePredefinedCode) Reset()         { *m = TLAccountUpdatePredefinedCode{} }
func (m *TLAccountUpdatePredefinedCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdatePredefinedCode) ProtoMessage()    {}
func (*TLAccountUpdatePredefinedCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{417}
}
func (m *TLAccountUpdatePredefinedCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdatePredefinedCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdatePredefinedCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAccountUpdatePredefinedCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdatePredefinedCode.Merge(dst, src)
}
func (m *TLAccountUpdatePredefinedCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdatePredefinedCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdatePredefinedCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdatePredefinedCode proto.InternalMessageInfo

func (m *TLAccountUpdatePredefinedCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdatePredefinedCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLAccountUpdatePredefinedCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// auth.toggleBan flags:# phone:string predefined:flags.0?bool expires:flags.1?int reason:flags.1?string = PredefinedUser;
type TLAuthToggleBan struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string             `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Predefined           bool               `protobuf:"varint,3,opt,name=predefined,proto3" json:"predefined,omitempty"`
	Expires              *types.Int32Value  `protobuf:"bytes,4,opt,name=expires,proto3" json:"expires,omitempty"`
	Reason               *types.StringValue `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAuthToggleBan) Reset()         { *m = TLAuthToggleBan{} }
func (m *TLAuthToggleBan) String() string { return proto.CompactTextString(m) }
func (*TLAuthToggleBan) ProtoMessage()    {}
func (*TLAuthToggleBan) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{418}
}
func (m *TLAuthToggleBan) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthToggleBan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthToggleBan.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLAuthToggleBan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthToggleBan.Merge(dst, src)
}
func (m *TLAuthToggleBan) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthToggleBan) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthToggleBan.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthToggleBan proto.InternalMessageInfo

func (m *TLAuthToggleBan) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthToggleBan) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLAuthToggleBan) GetPredefined() bool {
	if m != nil {
		return m.Predefined
	}
	return false
}

func (m *TLAuthToggleBan) GetExpires() *types.Int32Value {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *TLAuthToggleBan) GetReason() *types.StringValue {
	if m != nil {
		return m.Reason
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// users.getPredefinedUser phone:string = PredefinedUser;
type TLUsersGetPredefinedUser struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string        `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUsersGetPredefinedUser) Reset()         { *m = TLUsersGetPredefinedUser{} }
func (m *TLUsersGetPredefinedUser) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetPredefinedUser) ProtoMessage()    {}
func (*TLUsersGetPredefinedUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{419}
}
func (m *TLUsersGetPredefinedUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetPredefinedUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetPredefinedUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUsersGetPredefinedUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetPredefinedUser.Merge(dst, src)
}
func (m *TLUsersGetPredefinedUser) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetPredefinedUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetPredefinedUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetPredefinedUser proto.InternalMessageInfo

func (m *TLUsersGetPredefinedUser) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUsersGetPredefinedUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// users.getPredefinedUsers = Vector<PredefinedUser>;
type TLUsersGetPredefinedUsers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUsersGetPredefinedUsers) Reset()         { *m = TLUsersGetPredefinedUsers{} }
func (m *TLUsersGetPredefinedUsers) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetPredefinedUsers) ProtoMessage()    {}
func (*TLUsersGetPredefinedUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{420}
}
func (m *TLUsersGetPredefinedUsers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetPredefinedUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetPredefinedUsers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUsersGetPredefinedUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetPredefinedUsers.Merge(dst, src)
}
func (m *TLUsersGetPredefinedUsers) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetPredefinedUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetPredefinedUsers.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetPredefinedUsers proto.InternalMessageInfo

func (m *TLUsersGetPredefinedUsers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

// --------------------------------------------------------------------------------------------
// users.getMe id:int token:string = User;
type TLUsersGetMe struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   int32         `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Token                string        `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUsersGetMe) Reset()         { *m = TLUsersGetMe{} }
func (m *TLUsersGetMe) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetMe) ProtoMessage()    {}
func (*TLUsersGetMe) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{421}
}
func (m *TLUsersGetMe) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetMe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetMe.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLUsersGetMe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetMe.Merge(dst, src)
}
func (m *TLUsersGetMe) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetMe) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetMe.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetMe proto.InternalMessageInfo

func (m *TLUsersGetMe) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUsersGetMe) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLUsersGetMe) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// --------------------------------------------------------------------------------------------
// biz.invokeBizDataRaw biz_data:BizDataRaw = BizDataRaw;
type TLBizInvokeBizDataRaw struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	BizData              *BizDataRaw   `protobuf:"bytes,2,opt,name=biz_data,json=bizData,proto3" json:"biz_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBizInvokeBizDataRaw) Reset()         { *m = TLBizInvokeBizDataRaw{} }
func (m *TLBizInvokeBizDataRaw) String() string { return proto.CompactTextString(m) }
func (*TLBizInvokeBizDataRaw) ProtoMessage()    {}
func (*TLBizInvokeBizDataRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{422}
}
func (m *TLBizInvokeBizDataRaw) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBizInvokeBizDataRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBizInvokeBizDataRaw.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TLBizInvokeBizDataRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBizInvokeBizDataRaw.Merge(dst, src)
}
func (m *TLBizInvokeBizDataRaw) XXX_Size() int {
	return m.Size()
}
func (m *TLBizInvokeBizDataRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBizInvokeBizDataRaw.DiscardUnknown(m)
}

var xxx_messageInfo_TLBizInvokeBizDataRaw proto.InternalMessageInfo

func (m *TLBizInvokeBizDataRaw) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBizInvokeBizDataRaw) GetBizData() *BizDataRaw {
	if m != nil {
		return m.BizData
	}
	return nil
}

// --------------------------------------------------------------------------------------------
// Vector api result type
type Vector_SecureValue struct {
	Datas                []*SecureValue `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Vector_SecureValue) Reset()         { *m = Vector_SecureValue{} }
func (m *Vector_SecureValue) String() string { return proto.CompactTextString(m) }
func (*Vector_SecureValue) ProtoMessage()    {}
func (*Vector_SecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{423}
}
func (m *Vector_SecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_SecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_SecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_SecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_SecureValue.Merge(dst, src)
}
func (m *Vector_SecureValue) XXX_Size() int {
	return m.Size()
}
func (m *Vector_SecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_SecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_SecureValue proto.InternalMessageInfo

func (m *Vector_SecureValue) GetDatas() []*SecureValue {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_WallPaper struct {
	Datas                []*WallPaper `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Vector_WallPaper) Reset()         { *m = Vector_WallPaper{} }
func (m *Vector_WallPaper) String() string { return proto.CompactTextString(m) }
func (*Vector_WallPaper) ProtoMessage()    {}
func (*Vector_WallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{424}
}
func (m *Vector_WallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_WallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_WallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_WallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_WallPaper.Merge(dst, src)
}
func (m *Vector_WallPaper) XXX_Size() int {
	return m.Size()
}
func (m *Vector_WallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_WallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_WallPaper proto.InternalMessageInfo

func (m *Vector_WallPaper) GetDatas() []*WallPaper {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_User struct {
	Datas                []*User  `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vector_User) Reset()         { *m = Vector_User{} }
func (m *Vector_User) String() string { return proto.CompactTextString(m) }
func (*Vector_User) ProtoMessage()    {}
func (*Vector_User) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{425}
}
func (m *Vector_User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_User.Merge(dst, src)
}
func (m *Vector_User) XXX_Size() int {
	return m.Size()
}
func (m *Vector_User) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_User.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_User proto.InternalMessageInfo

func (m *Vector_User) GetDatas() []*User {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_Int struct {
	Datas                []int32  `protobuf:"varint,1,rep,packed,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vector_Int) Reset()         { *m = Vector_Int{} }
func (m *Vector_Int) String() string { return proto.CompactTextString(m) }
func (*Vector_Int) ProtoMessage()    {}
func (*Vector_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{426}
}
func (m *Vector_Int) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_Int.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_Int.Merge(dst, src)
}
func (m *Vector_Int) XXX_Size() int {
	return m.Size()
}
func (m *Vector_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_Int.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_Int proto.InternalMessageInfo

func (m *Vector_Int) GetDatas() []int32 {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_ContactStatus struct {
	Datas                []*ContactStatus `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Vector_ContactStatus) Reset()         { *m = Vector_ContactStatus{} }
func (m *Vector_ContactStatus) String() string { return proto.CompactTextString(m) }
func (*Vector_ContactStatus) ProtoMessage()    {}
func (*Vector_ContactStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{427}
}
func (m *Vector_ContactStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_ContactStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_ContactStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_ContactStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_ContactStatus.Merge(dst, src)
}
func (m *Vector_ContactStatus) XXX_Size() int {
	return m.Size()
}
func (m *Vector_ContactStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_ContactStatus.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_ContactStatus proto.InternalMessageInfo

func (m *Vector_ContactStatus) GetDatas() []*ContactStatus {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_SavedContact struct {
	Datas                []*SavedContact `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Vector_SavedContact) Reset()         { *m = Vector_SavedContact{} }
func (m *Vector_SavedContact) String() string { return proto.CompactTextString(m) }
func (*Vector_SavedContact) ProtoMessage()    {}
func (*Vector_SavedContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{428}
}
func (m *Vector_SavedContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_SavedContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_SavedContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_SavedContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_SavedContact.Merge(dst, src)
}
func (m *Vector_SavedContact) XXX_Size() int {
	return m.Size()
}
func (m *Vector_SavedContact) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_SavedContact.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_SavedContact proto.InternalMessageInfo

func (m *Vector_SavedContact) GetDatas() []*SavedContact {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_ReceivedNotifyMessage struct {
	Datas                []*ReceivedNotifyMessage `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Vector_ReceivedNotifyMessage) Reset()         { *m = Vector_ReceivedNotifyMessage{} }
func (m *Vector_ReceivedNotifyMessage) String() string { return proto.CompactTextString(m) }
func (*Vector_ReceivedNotifyMessage) ProtoMessage()    {}
func (*Vector_ReceivedNotifyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{429}
}
func (m *Vector_ReceivedNotifyMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_ReceivedNotifyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_ReceivedNotifyMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_ReceivedNotifyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_ReceivedNotifyMessage.Merge(dst, src)
}
func (m *Vector_ReceivedNotifyMessage) XXX_Size() int {
	return m.Size()
}
func (m *Vector_ReceivedNotifyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_ReceivedNotifyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_ReceivedNotifyMessage proto.InternalMessageInfo

func (m *Vector_ReceivedNotifyMessage) GetDatas() []*ReceivedNotifyMessage {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_Long struct {
	Datas                []int64  `protobuf:"varint,1,rep,packed,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vector_Long) Reset()         { *m = Vector_Long{} }
func (m *Vector_Long) String() string { return proto.CompactTextString(m) }
func (*Vector_Long) ProtoMessage()    {}
func (*Vector_Long) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{430}
}
func (m *Vector_Long) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_Long) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_Long.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_Long) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_Long.Merge(dst, src)
}
func (m *Vector_Long) XXX_Size() int {
	return m.Size()
}
func (m *Vector_Long) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_Long.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_Long proto.InternalMessageInfo

func (m *Vector_Long) GetDatas() []int64 {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_StickerSetCovered struct {
	Datas                []*StickerSetCovered `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Vector_StickerSetCovered) Reset()         { *m = Vector_StickerSetCovered{} }
func (m *Vector_StickerSetCovered) String() string { return proto.CompactTextString(m) }
func (*Vector_StickerSetCovered) ProtoMessage()    {}
func (*Vector_StickerSetCovered) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{431}
}
func (m *Vector_StickerSetCovered) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_StickerSetCovered) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_StickerSetCovered.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_StickerSetCovered) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_StickerSetCovered.Merge(dst, src)
}
func (m *Vector_StickerSetCovered) XXX_Size() int {
	return m.Size()
}
func (m *Vector_StickerSetCovered) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_StickerSetCovered.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_StickerSetCovered proto.InternalMessageInfo

func (m *Vector_StickerSetCovered) GetDatas() []*StickerSetCovered {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_MessageRange struct {
	Datas                []*MessageRange `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Vector_MessageRange) Reset()         { *m = Vector_MessageRange{} }
func (m *Vector_MessageRange) String() string { return proto.CompactTextString(m) }
func (*Vector_MessageRange) ProtoMessage()    {}
func (*Vector_MessageRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{432}
}
func (m *Vector_MessageRange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_MessageRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_MessageRange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_MessageRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_MessageRange.Merge(dst, src)
}
func (m *Vector_MessageRange) XXX_Size() int {
	return m.Size()
}
func (m *Vector_MessageRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_MessageRange.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_MessageRange proto.InternalMessageInfo

func (m *Vector_MessageRange) GetDatas() []*MessageRange {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_DialogPeer struct {
	Datas                []*DialogPeer `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Vector_DialogPeer) Reset()         { *m = Vector_DialogPeer{} }
func (m *Vector_DialogPeer) String() string { return proto.CompactTextString(m) }
func (*Vector_DialogPeer) ProtoMessage()    {}
func (*Vector_DialogPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{433}
}
func (m *Vector_DialogPeer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_DialogPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_DialogPeer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_DialogPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_DialogPeer.Merge(dst, src)
}
func (m *Vector_DialogPeer) XXX_Size() int {
	return m.Size()
}
func (m *Vector_DialogPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_DialogPeer.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_DialogPeer proto.InternalMessageInfo

func (m *Vector_DialogPeer) GetDatas() []*DialogPeer {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_EmojiLanguage struct {
	Datas                []*EmojiLanguage `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Vector_EmojiLanguage) Reset()         { *m = Vector_EmojiLanguage{} }
func (m *Vector_EmojiLanguage) String() string { return proto.CompactTextString(m) }
func (*Vector_EmojiLanguage) ProtoMessage()    {}
func (*Vector_EmojiLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{434}
}
func (m *Vector_EmojiLanguage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_EmojiLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_EmojiLanguage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_EmojiLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_EmojiLanguage.Merge(dst, src)
}
func (m *Vector_EmojiLanguage) XXX_Size() int {
	return m.Size()
}
func (m *Vector_EmojiLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_EmojiLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_EmojiLanguage proto.InternalMessageInfo

func (m *Vector_EmojiLanguage) GetDatas() []*EmojiLanguage {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_Messages_SearchCounter struct {
	Datas                []*Messages_SearchCounter `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Vector_Messages_SearchCounter) Reset()         { *m = Vector_Messages_SearchCounter{} }
func (m *Vector_Messages_SearchCounter) String() string { return proto.CompactTextString(m) }
func (*Vector_Messages_SearchCounter) ProtoMessage()    {}
func (*Vector_Messages_SearchCounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{435}
}
func (m *Vector_Messages_SearchCounter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_Messages_SearchCounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_Messages_SearchCounter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_Messages_SearchCounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_Messages_SearchCounter.Merge(dst, src)
}
func (m *Vector_Messages_SearchCounter) XXX_Size() int {
	return m.Size()
}
func (m *Vector_Messages_SearchCounter) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_Messages_SearchCounter.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_Messages_SearchCounter proto.InternalMessageInfo

func (m *Vector_Messages_SearchCounter) GetDatas() []*Messages_SearchCounter {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_DialogFilter struct {
	Datas                []*DialogFilter `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Vector_DialogFilter) Reset()         { *m = Vector_DialogFilter{} }
func (m *Vector_DialogFilter) String() string { return proto.CompactTextString(m) }
func (*Vector_DialogFilter) ProtoMessage()    {}
func (*Vector_DialogFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{436}
}
func (m *Vector_DialogFilter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_DialogFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_DialogFilter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_DialogFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_DialogFilter.Merge(dst, src)
}
func (m *Vector_DialogFilter) XXX_Size() int {
	return m.Size()
}
func (m *Vector_DialogFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_DialogFilter.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_DialogFilter proto.InternalMessageInfo

func (m *Vector_DialogFilter) GetDatas() []*DialogFilter {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_DialogFilterSuggested struct {
	Datas                []*DialogFilterSuggested `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Vector_DialogFilterSuggested) Reset()         { *m = Vector_DialogFilterSuggested{} }
func (m *Vector_DialogFilterSuggested) String() string { return proto.CompactTextString(m) }
func (*Vector_DialogFilterSuggested) ProtoMessage()    {}
func (*Vector_DialogFilterSuggested) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{437}
}
func (m *Vector_DialogFilterSuggested) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_DialogFilterSuggested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_DialogFilterSuggested.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_DialogFilterSuggested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_DialogFilterSuggested.Merge(dst, src)
}
func (m *Vector_DialogFilterSuggested) XXX_Size() int {
	return m.Size()
}
func (m *Vector_DialogFilterSuggested) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_DialogFilterSuggested.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_DialogFilterSuggested proto.InternalMessageInfo

func (m *Vector_DialogFilterSuggested) GetDatas() []*DialogFilterSuggested {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_FileHash struct {
	Datas                []*FileHash `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Vector_FileHash) Reset()         { *m = Vector_FileHash{} }
func (m *Vector_FileHash) String() string { return proto.CompactTextString(m) }
func (*Vector_FileHash) ProtoMessage()    {}
func (*Vector_FileHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{438}
}
func (m *Vector_FileHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_FileHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_FileHash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_FileHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_FileHash.Merge(dst, src)
}
func (m *Vector_FileHash) XXX_Size() int {
	return m.Size()
}
func (m *Vector_FileHash) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_FileHash.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_FileHash proto.InternalMessageInfo

func (m *Vector_FileHash) GetDatas() []*FileHash {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_LangPackString struct {
	Datas                []*LangPackString `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Vector_LangPackString) Reset()         { *m = Vector_LangPackString{} }
func (m *Vector_LangPackString) String() string { return proto.CompactTextString(m) }
func (*Vector_LangPackString) ProtoMessage()    {}
func (*Vector_LangPackString) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{439}
}
func (m *Vector_LangPackString) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_LangPackString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_LangPackString.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_LangPackString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_LangPackString.Merge(dst, src)
}
func (m *Vector_LangPackString) XXX_Size() int {
	return m.Size()
}
func (m *Vector_LangPackString) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_LangPackString.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_LangPackString proto.InternalMessageInfo

func (m *Vector_LangPackString) GetDatas() []*LangPackString {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_LangPackLanguage struct {
	Datas                []*LangPackLanguage `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Vector_LangPackLanguage) Reset()         { *m = Vector_LangPackLanguage{} }
func (m *Vector_LangPackLanguage) String() string { return proto.CompactTextString(m) }
func (*Vector_LangPackLanguage) ProtoMessage()    {}
func (*Vector_LangPackLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{440}
}
func (m *Vector_LangPackLanguage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_LangPackLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_LangPackLanguage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_LangPackLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_LangPackLanguage.Merge(dst, src)
}
func (m *Vector_LangPackLanguage) XXX_Size() int {
	return m.Size()
}
func (m *Vector_LangPackLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_LangPackLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_LangPackLanguage proto.InternalMessageInfo

func (m *Vector_LangPackLanguage) GetDatas() []*LangPackLanguage {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_CdnFileHash struct {
	Datas                []*CdnFileHash `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Vector_CdnFileHash) Reset()         { *m = Vector_CdnFileHash{} }
func (m *Vector_CdnFileHash) String() string { return proto.CompactTextString(m) }
func (*Vector_CdnFileHash) ProtoMessage()    {}
func (*Vector_CdnFileHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{441}
}
func (m *Vector_CdnFileHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_CdnFileHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_CdnFileHash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_CdnFileHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_CdnFileHash.Merge(dst, src)
}
func (m *Vector_CdnFileHash) XXX_Size() int {
	return m.Size()
}
func (m *Vector_CdnFileHash) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_CdnFileHash.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_CdnFileHash proto.InternalMessageInfo

func (m *Vector_CdnFileHash) GetDatas() []*CdnFileHash {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_PredefinedUser struct {
	Datas                []*PredefinedUser `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Vector_PredefinedUser) Reset()         { *m = Vector_PredefinedUser{} }
func (m *Vector_PredefinedUser) String() string { return proto.CompactTextString(m) }
func (*Vector_PredefinedUser) ProtoMessage()    {}
func (*Vector_PredefinedUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_schema_tl_sync_service_f589721181dfadaf, []int{442}
}
func (m *Vector_PredefinedUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_PredefinedUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_PredefinedUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Vector_PredefinedUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_PredefinedUser.Merge(dst, src)
}
func (m *Vector_PredefinedUser) XXX_Size() int {
	return m.Size()
}
func (m *Vector_PredefinedUser) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_PredefinedUser.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_PredefinedUser proto.InternalMessageInfo

func (m *Vector_PredefinedUser) GetDatas() []*PredefinedUser {
	if m != nil {
		return m.Datas
	}
	return nil
}

func init() {
	proto.RegisterType((*TLInvokeAfterMsg)(nil), "mtproto.TL_invokeAfterMsg")
	proto.RegisterType((*TLInvokeAfterMsgs)(nil), "mtproto.TL_invokeAfterMsgs")
	proto.RegisterType((*TLInitConnection)(nil), "mtproto.TL_initConnection")
	proto.RegisterType((*TLInvokeWithLayer)(nil), "mtproto.TL_invokeWithLayer")
	proto.RegisterType((*TLInvokeWithoutUpdates)(nil), "mtproto.TL_invokeWithoutUpdates")
	proto.RegisterType((*TLInvokeWithMessagesRange)(nil), "mtproto.TL_invokeWithMessagesRange")
	proto.RegisterType((*TLInvokeWithTakeout)(nil), "mtproto.TL_invokeWithTakeout")
	proto.RegisterType((*TLAuthSendCode)(nil), "mtproto.TL_auth_sendCode")
	proto.RegisterType((*TLAuthSignUp)(nil), "mtproto.TL_auth_signUp")
	proto.RegisterType((*TLAuthSignIn)(nil), "mtproto.TL_auth_signIn")
	proto.RegisterType((*TLAuthLogOut)(nil), "mtproto.TL_auth_logOut")
	proto.RegisterType((*TLAuthResetAuthorizations)(nil), "mtproto.TL_auth_resetAuthorizations")
	proto.RegisterType((*TLAuthExportAuthorization)(nil), "mtproto.TL_auth_exportAuthorization")
	proto.RegisterType((*TLAuthImportAuthorization)(nil), "mtproto.TL_auth_importAuthorization")
	proto.RegisterType((*TLAuthBindTempAuthKey)(nil), "mtproto.TL_auth_bindTempAuthKey")
	proto.RegisterType((*TLAuthImportBotAuthorization)(nil), "mtproto.TL_auth_importBotAuthorization")
	proto.RegisterType((*TLAuthCheckPassword)(nil), "mtproto.TL_auth_checkPassword")
	proto.RegisterType((*TLAuthRequestPasswordRecovery)(nil), "mtproto.TL_auth_requestPasswordRecovery")
	proto.RegisterType((*TLAuthRecoverPassword)(nil), "mtproto.TL_auth_recoverPassword")
	proto.RegisterType((*TLAuthResendCode)(nil), "mtproto.TL_auth_resendCode")
	proto.RegisterType((*TLAuthCancelCode)(nil), "mtproto.TL_auth_cancelCode")
	proto.RegisterType((*TLAuthDropTempAuthKeys)(nil), "mtproto.TL_auth_dropTempAuthKeys")
	proto.RegisterType((*TLAuthExportLoginToken)(nil), "mtproto.TL_auth_exportLoginToken")
	proto.RegisterType((*TLAuthImportLoginToken)(nil), "mtproto.TL_auth_importLoginToken")
	proto.RegisterType((*TLAuthAcceptLoginToken)(nil), "mtproto.TL_auth_acceptLoginToken")
	proto.RegisterType((*TLAccountRegisterDevice)(nil), "mtproto.TL_account_registerDevice")
	proto.RegisterType((*TLAccountUnregisterDevice)(nil), "mtproto.TL_account_unregisterDevice")
	proto.RegisterType((*TLAccountUpdateNotifySettings)(nil), "mtproto.TL_account_updateNotifySettings")
	proto.RegisterType((*TLAccountGetNotifySettings)(nil), "mtproto.TL_account_getNotifySettings")
	proto.RegisterType((*TLAccountResetNotifySettings)(nil), "mtproto.TL_account_resetNotifySettings")
	proto.RegisterType((*TLAccountUpdateProfile)(nil), "mtproto.TL_account_updateProfile")
	proto.RegisterType((*TLAccountUpdateStatus)(nil), "mtproto.TL_account_updateStatus")
	proto.RegisterType((*TLAccountGetWallPapersAABB1763)(nil), "mtproto.TL_account_getWallPapersAABB1763")
	proto.RegisterType((*TLAccountReportPeer)(nil), "mtproto.TL_account_reportPeer")
	proto.RegisterType((*TLAccountCheckUsername)(nil), "mtproto.TL_account_checkUsername")
	proto.RegisterType((*TLAccountUpdateUsername)(nil), "mtproto.TL_account_updateUsername")
	proto.RegisterType((*TLAccountGetPrivacy)(nil), "mtproto.TL_account_getPrivacy")
	proto.RegisterType((*TLAccountSetPrivacy)(nil), "mtproto.TL_account_setPrivacy")
	proto.RegisterType((*TLAccountDeleteAccount)(nil), "mtproto.TL_account_deleteAccount")
	proto.RegisterType((*TLAccountGetAccountTTL)(nil), "mtproto.TL_account_getAccountTTL")
	proto.RegisterType((*TLAccountSetAccountTTL)(nil), "mtproto.TL_account_setAccountTTL")
	proto.RegisterType((*TLAccountSendChangePhoneCode)(nil), "mtproto.TL_account_sendChangePhoneCode")
	proto.RegisterType((*TLAccountChangePhone)(nil), "mtproto.TL_account_changePhone")
	proto.RegisterType((*TLAccountUpdateDeviceLocked)(nil), "mtproto.TL_account_updateDeviceLocked")
	proto.RegisterType((*TLAccountGetAuthorizations)(nil), "mtproto.TL_account_getAuthorizations")
	proto.RegisterType((*TLAccountResetAuthorization)(nil), "mtproto.TL_account_resetAuthorization")
	proto.RegisterType((*TLAccountGetPassword)(nil), "mtproto.TL_account_getPassword")
	proto.RegisterType((*TLAccountGetPasswordSettings)(nil), "mtproto.TL_account_getPasswordSettings")
	proto.RegisterType((*TLAccountUpdatePasswordSettings)(nil), "mtproto.TL_account_updatePasswordSettings")
	proto.RegisterType((*TLAccountSendConfirmPhoneCode)(nil), "mtproto.TL_account_sendConfirmPhoneCode")
	proto.RegisterType((*TLAccountConfirmPhone)(nil), "mtproto.TL_account_confirmPhone")
	proto.RegisterType((*TLAccountGetTmpPassword)(nil), "mtproto.TL_account_getTmpPassword")
	proto.RegisterType((*TLAccountGetWebAuthorizations)(nil), "mtproto.TL_account_getWebAuthorizations")
	proto.RegisterType((*TLAccountResetWebAuthorization)(nil), "mtproto.TL_account_resetWebAuthorization")
	proto.RegisterType((*TLAccountResetWebAuthorizations)(nil), "mtproto.TL_account_resetWebAuthorizations")
	proto.RegisterType((*TLAccountGetAllSecureValues)(nil), "mtproto.TL_account_getAllSecureValues")
	proto.RegisterType((*TLAccountGetSecureValue)(nil), "mtproto.TL_account_getSecureValue")
	proto.RegisterType((*TLAccountSaveSecureValue)(nil), "mtproto.TL_account_saveSecureValue")
	proto.RegisterType((*TLAccountDeleteSecureValue)(nil), "mtproto.TL_account_deleteSecureValue")
	proto.RegisterType((*TLAccountGetAuthorizationForm)(nil), "mtproto.TL_account_getAuthorizationForm")
	proto.RegisterType((*TLAccountAcceptAuthorization)(nil), "mtproto.TL_account_acceptAuthorization")
	proto.RegisterType((*TLAccountSendVerifyPhoneCode)(nil), "mtproto.TL_account_sendVerifyPhoneCode")
	proto.RegisterType((*TLAccountVerifyPhone)(nil), "mtproto.TL_account_verifyPhone")
	proto.RegisterType((*TLAccountSendVerifyEmailCode)(nil), "mtproto.TL_account_sendVerifyEmailCode")
	proto.RegisterType((*TLAccountVerifyEmail)(nil), "mtproto.TL_account_verifyEmail")
	proto.RegisterType((*TLAccountInitTakeoutSession)(nil), "mtproto.TL_account_initTakeoutSession")
	proto.RegisterType((*TLAccountFinishTakeoutSession)(nil), "mtproto.TL_account_finishTakeoutSession")
	proto.RegisterType((*TLAccountConfirmPasswordEmail)(nil), "mtproto.TL_account_confirmPasswordEmail")
	proto.RegisterType((*TLAccountResendPasswordEmail)(nil), "mtproto.TL_account_resendPasswordEmail")
	proto.RegisterType((*TLAccountCancelPasswordEmail)(nil), "mtproto.TL_account_cancelPasswordEmail")
	proto.RegisterType((*TLAccountGetContactSignUpNotification)(nil), "mtproto.TL_account_getContactSignUpNotification")
	proto.RegisterType((*TLAccountSetContactSignUpNotification)(nil), "mtproto.TL_account_setContactSignUpNotification")
	proto.RegisterType((*TLAccountGetNotifyExceptions)(nil), "mtproto.TL_account_getNotifyExceptions")
	proto.RegisterType((*TLAccountGetWallPaper)(nil), "mtproto.TL_account_getWallPaper")
	proto.RegisterType((*TLAccountUploadWallPaper)(nil), "mtproto.TL_account_uploadWallPaper")
	proto.RegisterType((*TLAccountSaveWallPaper)(nil), "mtproto.TL_account_saveWallPaper")
	proto.RegisterType((*TLAccountInstallWallPaper)(nil), "mtproto.TL_account_installWallPaper")
	proto.RegisterType((*TLAccountResetWallPapers)(nil), "mtproto.TL_account_resetWallPapers")
	proto.RegisterType((*TLAccountGetAutoDownloadSettings)(nil), "mtproto.TL_account_getAutoDownloadSettings")
	proto.RegisterType((*TLAccountSaveAutoDownloadSettings)(nil), "mtproto.TL_account_saveAutoDownloadSettings")
	proto.RegisterType((*TLAccountUploadTheme)(nil), "mtproto.TL_account_uploadTheme")
	proto.RegisterType((*TLAccountCreateTheme)(nil), "mtproto.TL_account_createTheme")
	proto.RegisterType((*TLAccountUpdateTheme)(nil), "mtproto.TL_account_updateTheme")
	proto.RegisterType((*TLAccountSaveTheme)(nil), "mtproto.TL_account_saveTheme")
	proto.RegisterType((*TLAccountInstallTheme)(nil), "mtproto.TL_account_installTheme")
	proto.RegisterType((*TLAccountGetTheme)(nil), "mtproto.TL_account_getTheme")
	proto.RegisterType((*TLAccountGetThemes)(nil), "mtproto.TL_account_getThemes")
	proto.RegisterType((*TLAccountSetContentSettings)(nil), "mtproto.TL_account_setContentSettings")
	proto.RegisterType((*TLAccountGetContentSettings)(nil), "mtproto.TL_account_getContentSettings")
	proto.RegisterType((*TLAccountGetMultiWallPapers)(nil), "mtproto.TL_account_getMultiWallPapers")
	proto.RegisterType((*TLAccountGetGlobalPrivacySettings)(nil), "mtproto.TL_account_getGlobalPrivacySettings")
	proto.RegisterType((*TLAccountSetGlobalPrivacySettings)(nil), "mtproto.TL_account_setGlobalPrivacySettings")
	proto.RegisterType((*TLUsersGetUsers)(nil), "mtproto.TL_users_getUsers")
	proto.RegisterType((*TLUsersGetFullUser)(nil), "mtproto.TL_users_getFullUser")
	proto.RegisterType((*TLUsersSetSecureValueErrors)(nil), "mtproto.TL_users_setSecureValueErrors")
	proto.RegisterType((*TLContactsGetContactIDs)(nil), "mtproto.TL_contacts_getContactIDs")
	proto.RegisterType((*TLContactsGetStatuses)(nil), "mtproto.TL_contacts_getStatuses")
	proto.RegisterType((*TLContactsGetContacts)(nil), "mtproto.TL_contacts_getContacts")
	proto.RegisterType((*TLContactsImportContacts)(nil), "mtproto.TL_contacts_importContacts")
	proto.RegisterType((*TLContactsDeleteContacts96A0E00)(nil), "mtproto.TL_contacts_deleteContacts96A0E00")
	proto.RegisterType((*TLContactsDeleteByPhones)(nil), "mtproto.TL_contacts_deleteByPhones")
	proto.RegisterType((*TLContactsBlock)(nil), "mtproto.TL_contacts_block")
	proto.RegisterType((*TLContactsUnblock)(nil), "mtproto.TL_contacts_unblock")
	proto.RegisterType((*TLContactsGetBlocked)(nil), "mtproto.TL_contacts_getBlocked")
	proto.RegisterType((*TLContactsSearch)(nil), "mtproto.TL_contacts_search")
	proto.RegisterType((*TLContactsResolveUsername)(nil), "mtproto.TL_contacts_resolveUsername")
	proto.RegisterType((*TLContactsGetTopPeers)(nil), "mtproto.TL_contacts_getTopPeers")
	proto.RegisterType((*TLContactsResetTopPeerRating)(nil), "mtproto.TL_contacts_resetTopPeerRating")
	proto.RegisterType((*TLContactsResetSaved)(nil), "mtproto.TL_contacts_resetSaved")
	proto.RegisterType((*TLContactsGetSaved)(nil), "mtproto.TL_contacts_getSaved")
	proto.RegisterType((*TLContactsToggleTopPeers)(nil), "mtproto.TL_contacts_toggleTopPeers")
	proto.RegisterType((*TLContactsAddContact)(nil), "mtproto.TL_contacts_addContact")
	proto.RegisterType((*TLContactsAcceptContact)(nil), "mtproto.TL_contacts_acceptContact")
	proto.RegisterType((*TLContactsGetLocated)(nil), "mtproto.TL_contacts_getLocated")
	proto.RegisterType((*TLContactsBlockFromReplies)(nil), "mtproto.TL_contacts_blockFromReplies")
	proto.RegisterType((*TLMessagesGetMessages)(nil), "mtproto.TL_messages_getMessages")
	proto.RegisterType((*TLMessagesGetDialogs)(nil), "mtproto.TL_messages_getDialogs")
	proto.RegisterType((*TLMessagesGetHistory)(nil), "mtproto.TL_messages_getHistory")
	proto.RegisterType((*TLMessagesSearch)(nil), "mtproto.TL_messages_search")
	proto.RegisterType((*TLMessagesReadHistoryE306D3A)(nil), "mtproto.TL_messages_readHistoryE306D3A")
	proto.RegisterType((*TLMessagesDeleteHistory)(nil), "mtproto.TL_messages_deleteHistory")
	proto.RegisterType((*TLMessagesDeleteMessages)(nil), "mtproto.TL_messages_deleteMessages")
	proto.RegisterType((*TLMessagesReceivedMessages)(nil), "mtproto.TL_messages_receivedMessages")
	proto.RegisterType((*TLMessagesSetTyping)(nil), "mtproto.TL_messages_setTyping")
	proto.RegisterType((*TLMessagesSendMessage)(nil), "mtproto.TL_messages_sendMessage")
	proto.RegisterType((*TLMessagesSendMedia)(nil), "mtproto.TL_messages_sendMedia")
	proto.RegisterType((*TLMessagesForwardMessages)(nil), "mtproto.TL_messages_forwardMessages")
	proto.RegisterType((*TLMessagesReportSpam)(nil), "mtproto.TL_messages_reportSpam")
	proto.RegisterType((*TLMessagesGetPeerSettings)(nil), "mtproto.TL_messages_getPeerSettings")
	proto.RegisterType((*TLMessagesReport)(nil), "mtproto.TL_messages_report")
	proto.RegisterType((*TLMessagesGetChats)(nil), "mtproto.TL_messages_getChats")
	proto.RegisterType((*TLMessagesGetFullChat)(nil), "mtproto.TL_messages_getFullChat")
	proto.RegisterType((*TLMessagesEditChatTitle)(nil), "mtproto.TL_messages_editChatTitle")
	proto.RegisterType((*TLMessagesEditChatPhoto)(nil), "mtproto.TL_messages_editChatPhoto")
	proto.RegisterType((*TLMessagesAddChatUser)(nil), "mtproto.TL_messages_addChatUser")
	proto.RegisterType((*TLMessagesDeleteChatUser)(nil), "mtproto.TL_messages_deleteChatUser")
	proto.RegisterType((*TLMessagesCreateChat)(nil), "mtproto.TL_messages_createChat")
	proto.RegisterType((*TLMessagesGetDhConfig)(nil), "mtproto.TL_messages_getDhConfig")
	proto.RegisterType((*TLMessagesRequestEncryption)(nil), "mtproto.TL_messages_requestEncryption")
	proto.RegisterType((*TLMessagesAcceptEncryption)(nil), "mtproto.TL_messages_acceptEncryption")
	proto.RegisterType((*TLMessagesDiscardEncryption)(nil), "mtproto.TL_messages_discardEncryption")
	proto.RegisterType((*TLMessagesSetEncryptedTyping)(nil), "mtproto.TL_messages_setEncryptedTyping")
	proto.RegisterType((*TLMessagesReadEncryptedHistory)(nil), "mtproto.TL_messages_readEncryptedHistory")
	proto.RegisterType((*TLMessagesSendEncrypted)(nil), "mtproto.TL_messages_sendEncrypted")
	proto.RegisterType((*TLMessagesSendEncryptedFile)(nil), "mtproto.TL_messages_sendEncryptedFile")
	proto.RegisterType((*TLMessagesSendEncryptedService)(nil), "mtproto.TL_messages_sendEncryptedService")
	proto.RegisterType((*TLMessagesReceivedQueue)(nil), "mtproto.TL_messages_receivedQueue")
	proto.RegisterType((*TLMessagesReportEncryptedSpam)(nil), "mtproto.TL_messages_reportEncryptedSpam")
	proto.RegisterType((*TLMessagesReadMessageContents)(nil), "mtproto.TL_messages_readMessageContents")
	proto.RegisterType((*TLMessagesGetStickers)(nil), "mtproto.TL_messages_getStickers")
	proto.RegisterType((*TLMessagesGetAllStickers)(nil), "mtproto.TL_messages_getAllStickers")
	proto.RegisterType((*TLMessagesGetWebPagePreview)(nil), "mtproto.TL_messages_getWebPagePreview")
	proto.RegisterType((*TLMessagesExportChatInvite)(nil), "mtproto.TL_messages_exportChatInvite")
	proto.RegisterType((*TLMessagesCheckChatInvite)(nil), "mtproto.TL_messages_checkChatInvite")
	proto.RegisterType((*TLMessagesImportChatInvite)(nil), "mtproto.TL_messages_importChatInvite")
	proto.RegisterType((*TLMessagesGetStickerSet)(nil), "mtproto.TL_messages_getStickerSet")
	proto.RegisterType((*TLMessagesInstallStickerSet)(nil), "mtproto.TL_messages_installStickerSet")
	proto.RegisterType((*TLMessagesUninstallStickerSet)(nil), "mtproto.TL_messages_uninstallStickerSet")
	proto.RegisterType((*TLMessagesStartBot)(nil), "mtproto.TL_messages_startBot")
	proto.RegisterType((*TLMessagesGetMessagesViews5784D3E1)(nil), "mtproto.TL_messages_getMessagesViews5784D3E1")
	proto.RegisterType((*TLMessagesEditChatAdmin)(nil), "mtproto.TL_messages_editChatAdmin")
	proto.RegisterType((*TLMessagesMigrateChat)(nil), "mtproto.TL_messages_migrateChat")
	proto.RegisterType((*TLMessagesSearchGlobal)(nil), "mtproto.TL_messages_searchGlobal")
	proto.RegisterType((*TLMessagesReorderStickerSets)(nil), "mtproto.TL_messages_reorderStickerSets")
	proto.RegisterType((*TLMessagesGetDocumentByHash)(nil), "mtproto.TL_messages_getDocumentByHash")
	proto.RegisterType((*TLMessagesGetSavedGifs)(nil), "mtproto.TL_messages_getSavedGifs")
	proto.RegisterType((*TLMessagesSaveGif)(nil), "mtproto.TL_messages_saveGif")
	proto.RegisterType((*TLMessagesGetInlineBotResults)(nil), "mtproto.TL_messages_getInlineBotResults")
	proto.RegisterType((*TLMessagesSetInlineBotResults)(nil), "mtproto.TL_messages_setInlineBotResults")
	proto.RegisterType((*TLMessagesSendInlineBotResult)(nil), "mtproto.TL_messages_sendInlineBotResult")
	proto.RegisterType((*TLMessagesGetMessageEditData)(nil), "mtproto.TL_messages_getMessageEditData")
	proto.RegisterType((*TLMessagesEditMessage)(nil), "mtproto.TL_messages_editMessage")
	proto.RegisterType((*TLMessagesEditInlineBotMessage)(nil), "mtproto.TL_messages_editInlineBotMessage")
	proto.RegisterType((*TLMessagesGetBotCallbackAnswer)(nil), "mtproto.TL_messages_getBotCallbackAnswer")
	proto.RegisterType((*TLMessagesSetBotCallbackAnswer)(nil), "mtproto.TL_messages_setBotCallbackAnswer")
	proto.RegisterType((*TLMessagesGetPeerDialogs)(nil), "mtproto.TL_messages_getPeerDialogs")
	proto.RegisterType((*TLMessagesSaveDraft)(nil), "mtproto.TL_messages_saveDraft")
	proto.RegisterType((*TLMessagesGetAllDrafts)(nil), "mtproto.TL_messages_getAllDrafts")
	proto.RegisterType((*TLMessagesGetFeaturedStickers)(nil), "mtproto.TL_messages_getFeaturedStickers")
	proto.RegisterType((*TLMessagesReadFeaturedStickers)(nil), "mtproto.TL_messages_readFeaturedStickers")
	proto.RegisterType((*TLMessagesGetRecentStickers)(nil), "mtproto.TL_messages_getRecentStickers")
	proto.RegisterType((*TLMessagesSaveRecentSticker)(nil), "mtproto.TL_messages_saveRecentSticker")
	proto.RegisterType((*TLMessagesClearRecentStickers)(nil), "mtproto.TL_messages_clearRecentStickers")
	proto.RegisterType((*TLMessagesGetArchivedStickers)(nil), "mtproto.TL_messages_getArchivedStickers")
	proto.RegisterType((*TLMessagesGetMaskStickers)(nil), "mtproto.TL_messages_getMaskStickers")
	proto.RegisterType((*TLMessagesGetAttachedStickers)(nil), "mtproto.TL_messages_getAttachedStickers")
	proto.RegisterType((*TLMessagesSetGameScore)(nil), "mtproto.TL_messages_setGameScore")
	proto.RegisterType((*TLMessagesSetInlineGameScore)(nil), "mtproto.TL_messages_setInlineGameScore")
	proto.RegisterType((*TLMessagesGetGameHighScores)(nil), "mtproto.TL_messages_getGameHighScores")
	proto.RegisterType((*TLMessagesGetInlineGameHighScores)(nil), "mtproto.TL_messages_getInlineGameHighScores")
	proto.RegisterType((*TLMessagesGetCommonChats)(nil), "mtproto.TL_messages_getCommonChats")
	proto.RegisterType((*TLMessagesGetAllChats)(nil), "mtproto.TL_messages_getAllChats")
	proto.RegisterType((*TLMessagesGetWebPage)(nil), "mtproto.TL_messages_getWebPage")
	proto.RegisterType((*TLMessagesToggleDialogPin)(nil), "mtproto.TL_messages_toggleDialogPin")
	proto.RegisterType((*TLMessagesReorderPinnedDialogs)(nil), "mtproto.TL_messages_reorderPinnedDialogs")
	proto.RegisterType((*TLMessagesGetPinnedDialogs)(nil), "mtproto.TL_messages_getPinnedDialogs")
	proto.RegisterType((*TLMessagesSetBotShippingResults)(nil), "mtproto.TL_messages_setBotShippingResults")
	proto.RegisterType((*TLMessagesSetBotPrecheckoutResults)(nil), "mtproto.TL_messages_setBotPrecheckoutResults")
	proto.RegisterType((*TLMessagesUploadMedia)(nil), "mtproto.TL_messages_uploadMedia")
	proto.RegisterType((*TLMessagesSendScreenshotNotification)(nil), "mtproto.TL_messages_sendScreenshotNotification")
	proto.RegisterType((*TLMessagesGetFavedStickers)(nil), "mtproto.TL_messages_getFavedStickers")
	proto.RegisterType((*TLMessagesFaveSticker)(nil), "mtproto.TL_messages_faveSticker")
	proto.RegisterType((*TLMessagesGetUnreadMentions)(nil), "mtproto.TL_messages_getUnreadMentions")
	proto.RegisterType((*TLMessagesReadMentions)(nil), "mtproto.TL_messages_readMentions")
	proto.RegisterType((*TLMessagesGetRecentLocations)(nil), "mtproto.TL_messages_getRecentLocations")
	proto.RegisterType((*TLMessagesSendMultiMedia)(nil), "mtproto.TL_messages_sendMultiMedia")
	proto.RegisterType((*TLMessagesUploadEncryptedFile)(nil), "mtproto.TL_messages_uploadEncryptedFile")
	proto.RegisterType((*TLMessagesSearchStickerSets)(nil), "mtproto.TL_messages_searchStickerSets")
	proto.RegisterType((*TLMessagesGetSplitRanges)(nil), "mtproto.TL_messages_getSplitRanges")
	proto.RegisterType((*TLMessagesMarkDialogUnread)(nil), "mtproto.TL_messages_markDialogUnread")
	proto.RegisterType((*TLMessagesGetDialogUnreadMarks)(nil), "mtproto.TL_messages_getDialogUnreadMarks")
	proto.RegisterType((*TLMessagesClearAllDrafts)(nil), "mtproto.TL_messages_clearAllDrafts")
	proto.RegisterType((*TLMessagesUpdatePinnedMessage)(nil), "mtproto.TL_messages_updatePinnedMessage")
	proto.RegisterType((*TLMessagesSendVote)(nil), "mtproto.TL_messages_sendVote")
	proto.RegisterType((*TLMessagesGetPollResults)(nil), "mtproto.TL_messages_getPollResults")
	proto.RegisterType((*TLMessagesGetOnlines)(nil), "mtproto.TL_messages_getOnlines")
	proto.RegisterType((*TLMessagesGetStatsURL)(nil), "mtproto.TL_messages_getStatsURL")
	proto.RegisterType((*TLMessagesEditChatAbout)(nil), "mtproto.TL_messages_editChatAbout")
	proto.RegisterType((*TLMessagesEditChatNotice)(nil), "mtproto.TL_messages_editChatNotice")
	proto.RegisterType((*TLMessagesEditChatDefaultBannedRights)(nil), "mtproto.TL_messages_editChatDefaultBannedRights")
	proto.RegisterType((*TLMessagesGetEmojiKeywords)(nil), "mtproto.TL_messages_getEmojiKeywords")
	proto.RegisterType((*TLMessagesGetEmojiKeywordsDifference)(nil), "mtproto.TL_messages_getEmojiKeywordsDifference")
	proto.RegisterType((*TLMessagesGetEmojiKeywordsLanguages)(nil), "mtproto.TL_messages_getEmojiKeywordsLanguages")
	proto.RegisterType((*TLMessagesGetEmojiURL)(nil), "mtproto.TL_messages_getEmojiURL")
	proto.RegisterType((*TLMessagesGetSearchCounters)(nil), "mtproto.TL_messages_getSearchCounters")
	proto.RegisterType((*TLMessagesRequestUrlAuth)(nil), "mtproto.TL_messages_requestUrlAuth")
	proto.RegisterType((*TLMessagesAcceptUrlAuth)(nil), "mtproto.TL_messages_acceptUrlAuth")
	proto.RegisterType((*TLMessagesHidePeerSettingsBar)(nil), "mtproto.TL_messages_hidePeerSettingsBar")
	proto.RegisterType((*TLMessagesGetScheduledHistory)(nil), "mtproto.TL_messages_getScheduledHistory")
	proto.RegisterType((*TLMessagesGetScheduledMessages)(nil), "mtproto.TL_messages_getScheduledMessages")
	proto.RegisterType((*TLMessagesSendScheduledMessages)(nil), "mtproto.TL_messages_sendScheduledMessages")
	proto.RegisterType((*TLMessagesDeleteScheduledMessages)(nil), "mtproto.TL_messages_deleteScheduledMessages")
	proto.RegisterType((*TLMessagesGetPollVotes)(nil), "mtproto.TL_messages_getPollVotes")
	proto.RegisterType((*TLMessagesToggleStickerSets)(nil), "mtproto.TL_messages_toggleStickerSets")
	proto.RegisterType((*TLMessagesGetDialogFilters)(nil), "mtproto.TL_messages_getDialogFilters")
	proto.RegisterType((*TLMessagesGetSuggestedDialogFilters)(nil), "mtproto.TL_messages_getSuggestedDialogFilters")
	proto.RegisterType((*TLMessagesUpdateDialogFilter)(nil), "mtproto.TL_messages_updateDialogFilter")
	proto.RegisterType((*TLMessagesUpdateDialogFiltersOrder)(nil), "mtproto.TL_messages_updateDialogFiltersOrder")
	proto.RegisterType((*TLMessagesGetOldFeaturedStickers)(nil), "mtproto.TL_messages_getOldFeaturedStickers")
	proto.RegisterType((*TLMessagesGetReplies)(nil), "mtproto.TL_messages_getReplies")
	proto.RegisterType((*TLMessagesGetDiscussionMessage)(nil), "mtproto.TL_messages_getDiscussionMessage")
	proto.RegisterType((*TLMessagesReadDiscussion)(nil), "mtproto.TL_messages_readDiscussion")
	proto.RegisterType((*TLMessagesUnpinAllMessages)(nil), "mtproto.TL_messages_unpinAllMessages")
	proto.RegisterType((*TLUpdatesGetState)(nil), "mtproto.TL_updates_getState")
	proto.RegisterType((*TLUpdatesGetDifference)(nil), "mtproto.TL_updates_getDifference")
	proto.RegisterType((*TLUpdatesGetChannelDifference)(nil), "mtproto.TL_updates_getChannelDifference")
	proto.RegisterType((*TLPhotosUpdateProfilePhoto72D4742C)(nil), "mtproto.TL_photos_updateProfilePhoto72D4742C")
	proto.RegisterType((*TLPhotosUploadProfilePhoto)(nil), "mtproto.TL_photos_uploadProfilePhoto")
	proto.RegisterType((*TLPhotosDeletePhotos)(nil), "mtproto.TL_photos_deletePhotos")
	proto.RegisterType((*TLPhotosGetUserPhotos)(nil), "mtproto.TL_photos_getUserPhotos")
	proto.RegisterType((*TLUploadSaveFilePart)(nil), "mtproto.TL_upload_saveFilePart")
	proto.RegisterType((*TLUploadGetFile)(nil), "mtproto.TL_upload_getFile")
	proto.RegisterType((*TLUploadSaveBigFilePart)(nil), "mtproto.TL_upload_saveBigFilePart")
	proto.RegisterType((*TLUploadGetWebFile)(nil), "mtproto.TL_upload_getWebFile")
	proto.RegisterType((*TLUploadGetCdnFile)(nil), "mtproto.TL_upload_getCdnFile")
	proto.RegisterType((*TLUploadReuploadCdnFile9B2754A8)(nil), "mtproto.TL_upload_reuploadCdnFile9B2754A8")
	proto.RegisterType((*TLUploadGetCdnFileHashes4DA54231)(nil), "mtproto.TL_upload_getCdnFileHashes4DA54231")
	proto.RegisterType((*TLUploadGetFileHashes)(nil), "mtproto.TL_upload_getFileHashes")
	proto.RegisterType((*TLHelpGetConfig)(nil), "mtproto.TL_help_getConfig")
	proto.RegisterType((*TLHelpGetNearestDc)(nil), "mtproto.TL_help_getNearestDc")
	proto.RegisterType((*TLHelpGetAppUpdate)(nil), "mtproto.TL_help_getAppUpdate")
	proto.RegisterType((*TLHelpGetInviteText)(nil), "mtproto.TL_help_getInviteText")
	proto.RegisterType((*TLHelpGetSupport)(nil), "mtproto.TL_help_getSupport")
	proto.RegisterType((*TLHelpGetAppChangelog)(nil), "mtproto.TL_help_getAppChangelog")
	proto.RegisterType((*TLHelpSetBotUpdatesStatus)(nil), "mtproto.TL_help_setBotUpdatesStatus")
	proto.RegisterType((*TLHelpGetCdnConfig)(nil), "mtproto.TL_help_getCdnConfig")
	proto.RegisterType((*TLHelpGetRecentMeUrls)(nil), "mtproto.TL_help_getRecentMeUrls")
	proto.RegisterType((*TLHelpGetTermsOfServiceUpdate)(nil), "mtproto.TL_help_getTermsOfServiceUpdate")
	proto.RegisterType((*TLHelpAcceptTermsOfService)(nil), "mtproto.TL_help_acceptTermsOfService")
	proto.RegisterType((*TLHelpGetDeepLinkInfo)(nil), "mtproto.TL_help_getDeepLinkInfo")
	proto.RegisterType((*TLHelpGetAppConfig)(nil), "mtproto.TL_help_getAppConfig")
	proto.RegisterType((*TLHelpSaveAppLog)(nil), "mtproto.TL_help_saveAppLog")
	proto.RegisterType((*TLHelpGetPassportConfig)(nil), "mtproto.TL_help_getPassportConfig")
	proto.RegisterType((*TLHelpGetSupportName)(nil), "mtproto.TL_help_getSupportName")
	proto.RegisterType((*TLHelpGetUserInfo)(nil), "mtproto.TL_help_getUserInfo")
	proto.RegisterType((*TLHelpEditUserInfo)(nil), "mtproto.TL_help_editUserInfo")
	proto.RegisterType((*TLHelpGetPromoData)(nil), "mtproto.TL_help_getPromoData")
	proto.RegisterType((*TLHelpHidePromoData)(nil), "mtproto.TL_help_hidePromoData")
	proto.RegisterType((*TLHelpDismissSuggestion)(nil), "mtproto.TL_help_dismissSuggestion")
	proto.RegisterType((*TLHelpGetCountriesList)(nil), "mtproto.TL_help_getCountriesList")
	proto.RegisterType((*TLChannelsReadHistory)(nil), "mtproto.TL_channels_readHistory")
	proto.RegisterType((*TLChannelsDeleteMessages)(nil), "mtproto.TL_channels_deleteMessages")
	proto.RegisterType((*TLChannelsDeleteUserHistory)(nil), "mtproto.TL_channels_deleteUserHistory")
	proto.RegisterType((*TLChannelsReportSpam)(nil), "mtproto.TL_channels_reportSpam")
	proto.RegisterType((*TLChannelsGetMessages)(nil), "mtproto.TL_channels_getMessages")
	proto.RegisterType((*TLChannelsGetParticipants)(nil), "mtproto.TL_channels_getParticipants")
	proto.RegisterType((*TLChannelsGetParticipant)(nil), "mtproto.TL_channels_getParticipant")
	proto.RegisterType((*TLChannelsGetChannels)(nil), "mtproto.TL_channels_getChannels")
	proto.RegisterType((*TLChannelsGetFullChannel)(nil), "mtproto.TL_channels_getFullChannel")
	proto.RegisterType((*TLChannelsCreateChannel)(nil), "mtproto.TL_channels_createChannel")
	proto.RegisterType((*TLChannelsEditAdmin)(nil), "mtproto.TL_channels_editAdmin")
	proto.RegisterType((*TLChannelsEditTitle)(nil), "mtproto.TL_channels_editTitle")
	proto.RegisterType((*TLChannelsEditPhoto)(nil), "mtproto.TL_channels_editPhoto")
	proto.RegisterType((*TLChannelsCheckUsername)(nil), "mtproto.TL_channels_checkUsername")
	proto.RegisterType((*TLChannelsUpdateUsername)(nil), "mtproto.TL_channels_updateUsername")
	proto.RegisterType((*TLChannelsJoinChannel)(nil), "mtproto.TL_channels_joinChannel")
	proto.RegisterType((*TLChannelsLeaveChannel)(nil), "mtproto.TL_channels_leaveChannel")
	proto.RegisterType((*TLChannelsInviteToChannel)(nil), "mtproto.TL_channels_inviteToChannel")
	proto.RegisterType((*TLChannelsDeleteChannel)(nil), "mtproto.TL_channels_deleteChannel")
	proto.RegisterType((*TLChannelsExportMessageLink)(nil), "mtproto.TL_channels_exportMessageLink")
	proto.RegisterType((*TLChannelsToggleSignatures)(nil), "mtproto.TL_channels_toggleSignatures")
	proto.RegisterType((*TLChannelsGetAdminedPublicChannels)(nil), "mtproto.TL_channels_getAdminedPublicChannels")
	proto.RegisterType((*TLChannelsEditBanned)(nil), "mtproto.TL_channels_editBanned")
	proto.RegisterType((*TLChannelsGetAdminLog)(nil), "mtproto.TL_channels_getAdminLog")
	proto.RegisterType((*TLChannelsSetStickers)(nil), "mtproto.TL_channels_setStickers")
	proto.RegisterType((*TLChannelsReadMessageContents)(nil), "mtproto.TL_channels_readMessageContents")
	proto.RegisterType((*TLChannelsDeleteHistory)(nil), "mtproto.TL_channels_deleteHistory")
	proto.RegisterType((*TLChannelsTogglePreHistoryHidden)(nil), "mtproto.TL_channels_togglePreHistoryHidden")
	proto.RegisterType((*TLChannelsGetLeftChannels)(nil), "mtproto.TL_channels_getLeftChannels")
	proto.RegisterType((*TLChannelsGetGroupsForDiscussion)(nil), "mtproto.TL_channels_getGroupsForDiscussion")
	proto.RegisterType((*TLChannelsSetDiscussionGroup)(nil), "mtproto.TL_channels_setDiscussionGroup")
	proto.RegisterType((*TLChannelsEditCreator)(nil), "mtproto.TL_channels_editCreator")
	proto.RegisterType((*TLChannelsEditLocation)(nil), "mtproto.TL_channels_editLocation")
	proto.RegisterType((*TLChannelsToggleSlowMode)(nil), "mtproto.TL_channels_toggleSlowMode")
	proto.RegisterType((*TLChannelsGetInactiveChannels)(nil), "mtproto.TL_channels_getInactiveChannels")
	proto.RegisterType((*TLBotsSendCustomRequest)(nil), "mtproto.TL_bots_sendCustomRequest")
	proto.RegisterType((*TLBotsAnswerWebhookJSONQuery)(nil), "mtproto.TL_bots_answerWebhookJSONQuery")
	proto.RegisterType((*TLBotsSetBotCommands)(nil), "mtproto.TL_bots_setBotCommands")
	proto.RegisterType((*TLPaymentsGetPaymentForm)(nil), "mtproto.TL_payments_getPaymentForm")
	proto.RegisterType((*TLPaymentsGetPaymentReceipt)(nil), "mtproto.TL_payments_getPaymentReceipt")
	proto.RegisterType((*TLPaymentsValidateRequestedInfo)(nil), "mtproto.TL_payments_validateRequestedInfo")
	proto.RegisterType((*TLPaymentsSendPaymentForm)(nil), "mtproto.TL_payments_sendPaymentForm")
	proto.RegisterType((*TLPaymentsGetSavedInfo)(nil), "mtproto.TL_payments_getSavedInfo")
	proto.RegisterType((*TLPaymentsClearSavedInfo)(nil), "mtproto.TL_payments_clearSavedInfo")
	proto.RegisterType((*TLPaymentsGetBankCardData)(nil), "mtproto.TL_payments_getBankCardData")
	proto.RegisterType((*TLStickersCreateStickerSet)(nil), "mtproto.TL_stickers_createStickerSet")
	proto.RegisterType((*TLStickersRemoveStickerFromSet)(nil), "mtproto.TL_stickers_removeStickerFromSet")
	proto.RegisterType((*TLStickersChangeStickerPosition)(nil), "mtproto.TL_stickers_changeStickerPosition")
	proto.RegisterType((*TLStickersAddStickerToSet)(nil), "mtproto.TL_stickers_addStickerToSet")
	proto.RegisterType((*TLStickersSetStickerSetThumb)(nil), "mtproto.TL_stickers_setStickerSetThumb")
	proto.RegisterType((*TLPhoneGetCallConfig)(nil), "mtproto.TL_phone_getCallConfig")
	proto.RegisterType((*TLPhoneRequestCall)(nil), "mtproto.TL_phone_requestCall")
	proto.RegisterType((*TLPhoneAcceptCall)(nil), "mtproto.TL_phone_acceptCall")
	proto.RegisterType((*TLPhoneConfirmCall)(nil), "mtproto.TL_phone_confirmCall")
	proto.RegisterType((*TLPhoneReceivedCall)(nil), "mtproto.TL_phone_receivedCall")
	proto.RegisterType((*TLPhoneDiscardCall)(nil), "mtproto.TL_phone_discardCall")
	proto.RegisterType((*TLPhoneSetCallRating)(nil), "mtproto.TL_phone_setCallRating")
	proto.RegisterType((*TLPhoneSaveCallDebug)(nil), "mtproto.TL_phone_saveCallDebug")
	proto.RegisterType((*TLPhoneSendSignalingData)(nil), "mtproto.TL_phone_sendSignalingData")
	proto.RegisterType((*TLLangpackGetLangPack)(nil), "mtproto.TL_langpack_getLangPack")
	proto.RegisterType((*TLLangpackGetStrings)(nil), "mtproto.TL_langpack_getStrings")
	proto.RegisterType((*TLLangpackGetDifference)(nil), "mtproto.TL_langpack_getDifference")
	proto.RegisterType((*TLLangpackGetLanguages)(nil), "mtproto.TL_langpack_getLanguages")
	proto.RegisterType((*TLLangpackGetLanguage)(nil), "mtproto.TL_langpack_getLanguage")
	proto.RegisterType((*TLFoldersEditPeerFolders)(nil), "mtproto.TL_folders_editPeerFolders")
	proto.RegisterType((*TLFoldersDeleteFolder)(nil), "mtproto.TL_folders_deleteFolder")
	proto.RegisterType((*TLStatsGetBroadcastStats)(nil), "mtproto.TL_stats_getBroadcastStats")
	proto.RegisterType((*TLStatsLoadAsyncGraph)(nil), "mtproto.TL_stats_loadAsyncGraph")
	proto.RegisterType((*TLStatsGetMegagroupStats)(nil), "mtproto.TL_stats_getMegagroupStats")
	proto.RegisterType((*TLStatsGetMessagePublicForwards)(nil), "mtproto.TL_stats_getMessagePublicForwards")
	proto.RegisterType((*TLStatsGetMessageStats)(nil), "mtproto.TL_stats_getMessageStats")
	proto.RegisterType((*TLWalletGetInfo)(nil), "mtproto.TL_wallet_getInfo")
	proto.RegisterType((*TLWalletGetRecords)(nil), "mtproto.TL_wallet_getRecords")
	proto.RegisterType((*TLBlogsGetUser)(nil), "mtproto.TL_blogs_getUser")
	proto.RegisterType((*TLBlogsFollow)(nil), "mtproto.TL_blogs_follow")
	proto.RegisterType((*TLBlogsLike)(nil), "mtproto.TL_blogs_like")
	proto.RegisterType((*TLBlogsSendComment)(nil), "mtproto.TL_blogs_sendComment")
	proto.RegisterType((*TLBlogsReward)(nil), "mtproto.TL_blogs_reward")
	proto.RegisterType((*TLBlogsGetFollows)(nil), "mtproto.TL_blogs_getFollows")
	proto.RegisterType((*TLBlogsGetFans)(nil), "mtproto.TL_blogs_getFans")
	proto.RegisterType((*TLBlogsCreateGroupTag)(nil), "mtproto.TL_blogs_createGroupTag")
	proto.RegisterType((*TLBlogsDeleteGroupTag)(nil), "mtproto.TL_blogs_deleteGroupTag")
	proto.RegisterType((*TLBlogsEditGroupTag)(nil), "mtproto.TL_blogs_editGroupTag")
	proto.RegisterType((*TLBlogsAddGroupTagMember)(nil), "mtproto.TL_blogs_addGroupTagMember")
	proto.RegisterType((*TLBlogsDeleteGroupTagMember)(nil), "mtproto.TL_blogs_deleteGroupTagMember")
	proto.RegisterType((*TLBlogsGetGroupTags)(nil), "mtproto.TL_blogs_getGroupTags")
	proto.RegisterType((*TLBlogsSendBlog)(nil), "mtproto.TL_blogs_sendBlog")
	proto.RegisterType((*TLBlogsDeleteBlog)(nil), "mtproto.TL_blogs_deleteBlog")
	proto.RegisterType((*TLBlogsGetBlogs)(nil), "mtproto.TL_blogs_getBlogs")
	proto.RegisterType((*TLBlogsGetCommentList)(nil), "mtproto.TL_blogs_getCommentList")
	proto.RegisterType((*TLBlogsReadHistory)(nil), "mtproto.TL_blogs_readHistory")
	proto.RegisterType((*TLBlogsGetHistory)(nil), "mtproto.TL_blogs_getHistory")
	proto.RegisterType((*TLBlogsGetComments)(nil), "mtproto.TL_blogs_getComments")
	proto.RegisterType((*TLBlogsGetLikes)(nil), "mtproto.TL_blogs_getLikes")
	proto.RegisterType((*TLBlogsGetUnreads)(nil), "mtproto.TL_blogs_getUnreads")
	proto.RegisterType((*TLBlogsGetTopics)(nil), "mtproto.TL_blogs_getTopics")
	proto.RegisterType((*TLBlogsGetHotTopics)(nil), "mtproto.TL_blogs_getHotTopics")
	proto.RegisterType((*TLMessagesGetMessagesViewsC4C8A55D)(nil), "mtproto.TL_messages_getMessagesViewsC4C8A55D")
	proto.RegisterType((*TLPhotosUpdateProfilePhotoF0BB5152)(nil), "mtproto.TL_photos_updateProfilePhotoF0BB5152")
	proto.RegisterType((*TLMessagesSearchGifs)(nil), "mtproto.TL_messages_searchGifs")
	proto.RegisterType((*TLHelpGetProxyData)(nil), "mtproto.TL_help_getProxyData")
	proto.RegisterType((*TLWalletSendLiteRequest)(nil), "mtproto.TL_wallet_sendLiteRequest")
	proto.RegisterType((*TLWalletGetKeySecretSalt)(nil), "mtproto.TL_wallet_getKeySecretSalt")
	proto.RegisterType((*TLContactsDeleteContact)(nil), "mtproto.TL_contacts_deleteContact")
	proto.RegisterType((*TLContactsDeleteContacts59AB389E)(nil), "mtproto.TL_contacts_deleteContacts59AB389E")
	proto.RegisterType((*TLMessagesHideReportSpam)(nil), "mtproto.TL_messages_hideReportSpam")
	proto.RegisterType((*TLChannelsGetBroadcastsForDiscussion)(nil), "mtproto.TL_channels_getBroadcastsForDiscussion")
	proto.RegisterType((*TLAccountGetWallPapersC04CFAC2)(nil), "mtproto.TL_account_getWallPapersC04CFAC2")
	proto.RegisterType((*TLMessagesToggleChatAdmins)(nil), "mtproto.TL_messages_toggleChatAdmins")
	proto.RegisterType((*TLChannelsEditAbout)(nil), "mtproto.TL_channels_editAbout")
	proto.RegisterType((*TLChannelsExportInvite)(nil), "mtproto.TL_channels_exportInvite")
	proto.RegisterType((*TLChannelsToggleInvites)(nil), "mtproto.TL_channels_toggleInvites")
	proto.RegisterType((*TLChannelsUpdatePinnedMessage)(nil), "mtproto.TL_channels_updatePinnedMessage")
	proto.RegisterType((*TLContactsExportCard)(nil), "mtproto.TL_contacts_exportCard")
	proto.RegisterType((*TLContactsImportCard)(nil), "mtproto.TL_contacts_importCard")
	proto.RegisterType((*TLAuthSendInvites)(nil), "mtproto.TL_auth_sendInvites")
	proto.RegisterType((*TLHelpGetTermsOfService)(nil), "mtproto.TL_help_getTermsOfService")
	proto.RegisterType((*TLAuthCheckPhone)(nil), "mtproto.TL_auth_checkPhone")
	proto.RegisterType((*TLChannelsGetFeed)(nil), "mtproto.TL_channels_getFeed")
	proto.RegisterType((*TLChannelsSearchFeed)(nil), "mtproto.TL_channels_searchFeed")
	proto.RegisterType((*TLChannelsGetFeedSources)(nil), "mtproto.TL_channels_getFeedSources")
	proto.RegisterType((*TLChannelsChangeFeedBroadcastFFB37511)(nil), "mtproto.TL_channels_changeFeedBroadcastFFB37511")
	proto.RegisterType((*TLChannelsSetFeedBroadcastsEA80BFAE)(nil), "mtproto.TL_channels_setFeedBroadcastsEA80BFAE")
	proto.RegisterType((*TLChannelsReadFeed)(nil), "mtproto.TL_channels_readFeed")
	proto.RegisterType((*TLMessagesForwardMessage)(nil), "mtproto.TL_messages_forwardMessage")
	proto.RegisterType((*TLUploadReuploadCdnFile1AF91C09)(nil), "mtproto.TL_upload_reuploadCdnFile1AF91C09")
	proto.RegisterType((*TLUploadGetCdnFileHashesF715C87B)(nil), "mtproto.TL_upload_getCdnFileHashesF715C87B")
	proto.RegisterType((*TLChannelsChangeFeedBroadcast2528871E)(nil), "mtproto.TL_channels_changeFeedBroadcast2528871E")
	proto.RegisterType((*TLChannelsSetFeedBroadcasts7E91B8F2)(nil), "mtproto.TL_channels_setFeedBroadcasts7E91B8F2")
	proto.RegisterType((*TLMessagesReadHistoryB04F2510)(nil), "mtproto.TL_messages_readHistoryB04F2510")
	proto.RegisterType((*TLHelpGetScheme)(nil), "mtproto.TL_help_getScheme")
	proto.RegisterType((*TLHelpTest)(nil), "mtproto.TL_help_test")
	proto.RegisterType((*TLAccountCreatePredefinedUser)(nil), "mtproto.TL_account_createPredefinedUser")
	proto.RegisterType((*TLAccountUpdatePredefinedUsername)(nil), "mtproto.TL_account_updatePredefinedUsername")
	proto.RegisterType((*TLAccountUpdatePredefinedProfile)(nil), "mtproto.TL_account_updatePredefinedProfile")
	proto.RegisterType((*TLAccountUpdateVerified)(nil), "mtproto.TL_account_updateVerified")
	proto.RegisterType((*TLAccountUpdatePredefinedVerified)(nil), "mtproto.TL_account_updatePredefinedVerified")
	proto.RegisterType((*TLAccountUpdatePredefinedCode)(nil), "mtproto.TL_account_updatePredefinedCode")
	proto.RegisterType((*TLAuthToggleBan)(nil), "mtproto.TL_auth_toggleBan")
	proto.RegisterType((*TLUsersGetPredefinedUser)(nil), "mtproto.TL_users_getPredefinedUser")
	proto.RegisterType((*TLUsersGetPredefinedUsers)(nil), "mtproto.TL_users_getPredefinedUsers")
	proto.RegisterType((*TLUsersGetMe)(nil), "mtproto.TL_users_getMe")
	proto.RegisterType((*TLBizInvokeBizDataRaw)(nil), "mtproto.TL_biz_invokeBizDataRaw")
	proto.RegisterType((*Vector_SecureValue)(nil), "mtproto.Vector_SecureValue")
	proto.RegisterType((*Vector_WallPaper)(nil), "mtproto.Vector_WallPaper")
	proto.RegisterType((*Vector_User)(nil), "mtproto.Vector_User")
	proto.RegisterType((*Vector_Int)(nil), "mtproto.Vector_Int")
	proto.RegisterType((*Vector_ContactStatus)(nil), "mtproto.Vector_ContactStatus")
	proto.RegisterType((*Vector_SavedContact)(nil), "mtproto.Vector_SavedContact")
	proto.RegisterType((*Vector_ReceivedNotifyMessage)(nil), "mtproto.Vector_ReceivedNotifyMessage")
	proto.RegisterType((*Vector_Long)(nil), "mtproto.Vector_Long")
	proto.RegisterType((*Vector_StickerSetCovered)(nil), "mtproto.Vector_StickerSetCovered")
	proto.RegisterType((*Vector_MessageRange)(nil), "mtproto.Vector_MessageRange")
	proto.RegisterType((*Vector_DialogPeer)(nil), "mtproto.Vector_DialogPeer")
	proto.RegisterType((*Vector_EmojiLanguage)(nil), "mtproto.Vector_EmojiLanguage")
	proto.RegisterType((*Vector_Messages_SearchCounter)(nil), "mtproto.Vector_Messages_SearchCounter")
	proto.RegisterType((*Vector_DialogFilter)(nil), "mtproto.Vector_DialogFilter")
	proto.RegisterType((*Vector_DialogFilterSuggested)(nil), "mtproto.Vector_DialogFilterSuggested")
	proto.RegisterType((*Vector_FileHash)(nil), "mtproto.Vector_FileHash")
	proto.RegisterType((*Vector_LangPackString)(nil), "mtproto.Vector_LangPackString")
	proto.RegisterType((*Vector_LangPackLanguage)(nil), "mtproto.Vector_LangPackLanguage")
	proto.RegisterType((*Vector_CdnFileHash)(nil), "mtproto.Vector_CdnFileHash")
	proto.RegisterType((*Vector_PredefinedUser)(nil), "mtproto.Vector_PredefinedUser")
}
func (this *TLInvokeAfterMsg) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLInvokeAfterMsg{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "Query: "+fmt.Sprintf("%#v", this.Query)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLInvokeAfterMsgs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLInvokeAfterMsgs{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "MsgIds: "+fmt.Sprintf("%#v", this.MsgIds)+",\n")
	s = append(s, "Query: "+fmt.Sprintf("%#v", this.Query)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLInitConnection) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&mtproto.TLInitConnection{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ApiId: "+fmt.Sprintf("%#v", this.ApiId)+",\n")
	s = append(s, "DeviceModel: "+fmt.Sprintf("%#v", this.DeviceModel)+",\n")
	s = append(s, "SystemVersion: "+fmt.Sprintf("%#v", this.SystemVersion)+",\n")
	s = append(s, "AppVersion: "+fmt.Sprintf("%#v", this.AppVersion)+",\n")
	s = append(s, "SystemLangCode: "+fmt.Sprintf("%#v", this.SystemLangCode)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.Proxy != nil {
		s = append(s, "Proxy: "+fmt.Sprintf("%#v", this.Proxy)+",\n")
	}
	if this.Params != nil {
		s = append(s, "Params: "+fmt.Sprintf("%#v", this.Params)+",\n")
	}
	s = append(s, "Query: "+fmt.Sprintf("%#v", this.Query)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLInvokeWithLayer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLInvokeWithLayer{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Layer: "+fmt.Sprintf("%#v", this.Layer)+",\n")
	s = append(s, "Query: "+fmt.Sprintf("%#v", this.Query)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLInvokeWithoutUpdates) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLInvokeWithoutUpdates{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Query: "+fmt.Sprintf("%#v", this.Query)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLInvokeWithMessagesRange) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLInvokeWithMessagesRange{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Range != nil {
		s = append(s, "Range: "+fmt.Sprintf("%#v", this.Range)+",\n")
	}
	s = append(s, "Query: "+fmt.Sprintf("%#v", this.Query)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLInvokeWithTakeout) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLInvokeWithTakeout{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "TakeoutId: "+fmt.Sprintf("%#v", this.TakeoutId)+",\n")
	s = append(s, "Query: "+fmt.Sprintf("%#v", this.Query)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthSendCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLAuthSendCode{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "ApiId: "+fmt.Sprintf("%#v", this.ApiId)+",\n")
	s = append(s, "ApiHash: "+fmt.Sprintf("%#v", this.ApiHash)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	s = append(s, "AllowFlashcall: "+fmt.Sprintf("%#v", this.AllowFlashcall)+",\n")
	if this.CurrentNumber != nil {
		s = append(s, "CurrentNumber: "+fmt.Sprintf("%#v", this.CurrentNumber)+",\n")
	}
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthSignUp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLAuthSignUp{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	s = append(s, "FirstName: "+fmt.Sprintf("%#v", this.FirstName)+",\n")
	s = append(s, "LastName: "+fmt.Sprintf("%#v", this.LastName)+",\n")
	s = append(s, "PhoneCode: "+fmt.Sprintf("%#v", this.PhoneCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthSignIn) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAuthSignIn{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	s = append(s, "PhoneCode: "+fmt.Sprintf("%#v", this.PhoneCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthLogOut) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAuthLogOut{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthResetAuthorizations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAuthResetAuthorizations{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthExportAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAuthExportAuthorization{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "DcId: "+fmt.Sprintf("%#v", this.DcId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthImportAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthImportAuthorization{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Bytes: "+fmt.Sprintf("%#v", this.Bytes)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthBindTempAuthKey) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAuthBindTempAuthKey{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PermAuthKeyId: "+fmt.Sprintf("%#v", this.PermAuthKeyId)+",\n")
	s = append(s, "Nonce: "+fmt.Sprintf("%#v", this.Nonce)+",\n")
	s = append(s, "ExpiresAt: "+fmt.Sprintf("%#v", this.ExpiresAt)+",\n")
	s = append(s, "EncryptedMessage: "+fmt.Sprintf("%#v", this.EncryptedMessage)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthImportBotAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAuthImportBotAuthorization{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "ApiId: "+fmt.Sprintf("%#v", this.ApiId)+",\n")
	s = append(s, "ApiHash: "+fmt.Sprintf("%#v", this.ApiHash)+",\n")
	s = append(s, "BotAuthToken: "+fmt.Sprintf("%#v", this.BotAuthToken)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthCheckPassword) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthCheckPassword{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	s = append(s, "PasswordHash: "+fmt.Sprintf("%#v", this.PasswordHash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthRequestPasswordRecovery) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAuthRequestPasswordRecovery{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthRecoverPassword) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAuthRecoverPassword{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Code: "+fmt.Sprintf("%#v", this.Code)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthResendCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthResendCode{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthCancelCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthCancelCode{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthDropTempAuthKeys) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAuthDropTempAuthKeys{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ExceptAuthKeys: "+fmt.Sprintf("%#v", this.ExceptAuthKeys)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthExportLoginToken) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAuthExportLoginToken{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ApiId: "+fmt.Sprintf("%#v", this.ApiId)+",\n")
	s = append(s, "ApiHash: "+fmt.Sprintf("%#v", this.ApiHash)+",\n")
	s = append(s, "ExceptIds: "+fmt.Sprintf("%#v", this.ExceptIds)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthImportLoginToken) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAuthImportLoginToken{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthAcceptLoginToken) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAuthAcceptLoginToken{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountRegisterDevice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLAccountRegisterDevice{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "NoMuted: "+fmt.Sprintf("%#v", this.NoMuted)+",\n")
	s = append(s, "TokenType: "+fmt.Sprintf("%#v", this.TokenType)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	if this.AppSandbox != nil {
		s = append(s, "AppSandbox: "+fmt.Sprintf("%#v", this.AppSandbox)+",\n")
	}
	s = append(s, "Secret: "+fmt.Sprintf("%#v", this.Secret)+",\n")
	s = append(s, "OtherUids: "+fmt.Sprintf("%#v", this.OtherUids)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUnregisterDevice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountUnregisterDevice{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "TokenType: "+fmt.Sprintf("%#v", this.TokenType)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	s = append(s, "OtherUids: "+fmt.Sprintf("%#v", this.OtherUids)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateNotifySettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountUpdateNotifySettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetNotifySettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetNotifySettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResetNotifySettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountResetNotifySettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateProfile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountUpdateProfile{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.FirstName != nil {
		s = append(s, "FirstName: "+fmt.Sprintf("%#v", this.FirstName)+",\n")
	}
	if this.LastName != nil {
		s = append(s, "LastName: "+fmt.Sprintf("%#v", this.LastName)+",\n")
	}
	if this.About != nil {
		s = append(s, "About: "+fmt.Sprintf("%#v", this.About)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateStatus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountUpdateStatus{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Offline != nil {
		s = append(s, "Offline: "+fmt.Sprintf("%#v", this.Offline)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetWallPapersAABB1763) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetWallPapersAABB1763{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountReportPeer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountReportPeer{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Reason != nil {
		s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountCheckUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountCheckUsername{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountUpdateUsername{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetPrivacy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetPrivacy{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Key != nil {
		s = append(s, "Key: "+fmt.Sprintf("%#v", this.Key)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSetPrivacy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountSetPrivacy{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Key != nil {
		s = append(s, "Key: "+fmt.Sprintf("%#v", this.Key)+",\n")
	}
	if this.Rules != nil {
		s = append(s, "Rules: "+fmt.Sprintf("%#v", this.Rules)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountDeleteAccount) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountDeleteAccount{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetAccountTTL) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountGetAccountTTL{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSetAccountTTL) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountSetAccountTTL{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Ttl != nil {
		s = append(s, "Ttl: "+fmt.Sprintf("%#v", this.Ttl)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSendChangePhoneCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountSendChangePhoneCode{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	s = append(s, "AllowFlashcall: "+fmt.Sprintf("%#v", this.AllowFlashcall)+",\n")
	if this.CurrentNumber != nil {
		s = append(s, "CurrentNumber: "+fmt.Sprintf("%#v", this.CurrentNumber)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountChangePhone) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountChangePhone{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	s = append(s, "PhoneCode: "+fmt.Sprintf("%#v", this.PhoneCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateDeviceLocked) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountUpdateDeviceLocked{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Period: "+fmt.Sprintf("%#v", this.Period)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetAuthorizations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountGetAuthorizations{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResetAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountResetAuthorization{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetPassword) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountGetPassword{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetPasswordSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountGetPasswordSettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	s = append(s, "CurrentPasswordHash: "+fmt.Sprintf("%#v", this.CurrentPasswordHash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdatePasswordSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountUpdatePasswordSettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	if this.NewSettings != nil {
		s = append(s, "NewSettings: "+fmt.Sprintf("%#v", this.NewSettings)+",\n")
	}
	s = append(s, "CurrentPasswordHash: "+fmt.Sprintf("%#v", this.CurrentPasswordHash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSendConfirmPhoneCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountSendConfirmPhoneCode{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	s = append(s, "AllowFlashcall: "+fmt.Sprintf("%#v", this.AllowFlashcall)+",\n")
	if this.CurrentNumber != nil {
		s = append(s, "CurrentNumber: "+fmt.Sprintf("%#v", this.CurrentNumber)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountConfirmPhone) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountConfirmPhone{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	s = append(s, "PhoneCode: "+fmt.Sprintf("%#v", this.PhoneCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetTmpPassword) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountGetTmpPassword{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	s = append(s, "Period: "+fmt.Sprintf("%#v", this.Period)+",\n")
	s = append(s, "PasswordHash: "+fmt.Sprintf("%#v", this.PasswordHash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetWebAuthorizations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountGetWebAuthorizations{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResetWebAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountResetWebAuthorization{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResetWebAuthorizations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountResetWebAuthorizations{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetAllSecureValues) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountGetAllSecureValues{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetSecureValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetSecureValue{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Types != nil {
		s = append(s, "Types: "+fmt.Sprintf("%#v", this.Types)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSaveSecureValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountSaveSecureValue{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Value != nil {
		s = append(s, "Value: "+fmt.Sprintf("%#v", this.Value)+",\n")
	}
	s = append(s, "SecureSecretId: "+fmt.Sprintf("%#v", this.SecureSecretId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountDeleteSecureValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountDeleteSecureValue{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Types != nil {
		s = append(s, "Types: "+fmt.Sprintf("%#v", this.Types)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetAuthorizationForm) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountGetAuthorizationForm{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "BotId: "+fmt.Sprintf("%#v", this.BotId)+",\n")
	s = append(s, "Scope: "+fmt.Sprintf("%#v", this.Scope)+",\n")
	s = append(s, "PublicKey: "+fmt.Sprintf("%#v", this.PublicKey)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountAcceptAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLAccountAcceptAuthorization{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "BotId: "+fmt.Sprintf("%#v", this.BotId)+",\n")
	s = append(s, "Scope: "+fmt.Sprintf("%#v", this.Scope)+",\n")
	s = append(s, "PublicKey: "+fmt.Sprintf("%#v", this.PublicKey)+",\n")
	if this.ValueHashes != nil {
		s = append(s, "ValueHashes: "+fmt.Sprintf("%#v", this.ValueHashes)+",\n")
	}
	if this.Credentials != nil {
		s = append(s, "Credentials: "+fmt.Sprintf("%#v", this.Credentials)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSendVerifyPhoneCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountSendVerifyPhoneCode{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	s = append(s, "AllowFlashcall: "+fmt.Sprintf("%#v", this.AllowFlashcall)+",\n")
	if this.CurrentNumber != nil {
		s = append(s, "CurrentNumber: "+fmt.Sprintf("%#v", this.CurrentNumber)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountVerifyPhone) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountVerifyPhone{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	s = append(s, "PhoneCode: "+fmt.Sprintf("%#v", this.PhoneCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSendVerifyEmailCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountSendVerifyEmailCode{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountVerifyEmail) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountVerifyEmail{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "Code: "+fmt.Sprintf("%#v", this.Code)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountInitTakeoutSession) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLAccountInitTakeoutSession{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Contacts: "+fmt.Sprintf("%#v", this.Contacts)+",\n")
	s = append(s, "MessageUsers: "+fmt.Sprintf("%#v", this.MessageUsers)+",\n")
	s = append(s, "MessageChats: "+fmt.Sprintf("%#v", this.MessageChats)+",\n")
	s = append(s, "MessageMegagroups: "+fmt.Sprintf("%#v", this.MessageMegagroups)+",\n")
	s = append(s, "MessageChannels: "+fmt.Sprintf("%#v", this.MessageChannels)+",\n")
	s = append(s, "Files: "+fmt.Sprintf("%#v", this.Files)+",\n")
	if this.FileMaxSize != nil {
		s = append(s, "FileMaxSize: "+fmt.Sprintf("%#v", this.FileMaxSize)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountFinishTakeoutSession) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountFinishTakeoutSession{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Success: "+fmt.Sprintf("%#v", this.Success)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountConfirmPasswordEmail) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountConfirmPasswordEmail{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Code: "+fmt.Sprintf("%#v", this.Code)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResendPasswordEmail) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountResendPasswordEmail{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountCancelPasswordEmail) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountCancelPasswordEmail{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetContactSignUpNotification) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountGetContactSignUpNotification{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSetContactSignUpNotification) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountSetContactSignUpNotification{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Silent != nil {
		s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetNotifyExceptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountGetNotifyExceptions{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "CompareSound: "+fmt.Sprintf("%#v", this.CompareSound)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetWallPaper) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetWallPaper{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Wallpaper != nil {
		s = append(s, "Wallpaper: "+fmt.Sprintf("%#v", this.Wallpaper)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUploadWallPaper) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountUploadWallPaper{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.File != nil {
		s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	}
	s = append(s, "MimeType: "+fmt.Sprintf("%#v", this.MimeType)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSaveWallPaper) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountSaveWallPaper{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Wallpaper != nil {
		s = append(s, "Wallpaper: "+fmt.Sprintf("%#v", this.Wallpaper)+",\n")
	}
	if this.Unsave != nil {
		s = append(s, "Unsave: "+fmt.Sprintf("%#v", this.Unsave)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountInstallWallPaper) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountInstallWallPaper{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Wallpaper != nil {
		s = append(s, "Wallpaper: "+fmt.Sprintf("%#v", this.Wallpaper)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResetWallPapers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountResetWallPapers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetAutoDownloadSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountGetAutoDownloadSettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSaveAutoDownloadSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountSaveAutoDownloadSettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Low: "+fmt.Sprintf("%#v", this.Low)+",\n")
	s = append(s, "High: "+fmt.Sprintf("%#v", this.High)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUploadTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountUploadTheme{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.File != nil {
		s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	}
	if this.Thumb != nil {
		s = append(s, "Thumb: "+fmt.Sprintf("%#v", this.Thumb)+",\n")
	}
	s = append(s, "FileName: "+fmt.Sprintf("%#v", this.FileName)+",\n")
	s = append(s, "MimeType: "+fmt.Sprintf("%#v", this.MimeType)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountCreateTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountCreateTheme{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Slug: "+fmt.Sprintf("%#v", this.Slug)+",\n")
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	if this.Document != nil {
		s = append(s, "Document: "+fmt.Sprintf("%#v", this.Document)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLAccountUpdateTheme{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Format: "+fmt.Sprintf("%#v", this.Format)+",\n")
	if this.Theme != nil {
		s = append(s, "Theme: "+fmt.Sprintf("%#v", this.Theme)+",\n")
	}
	if this.Slug != nil {
		s = append(s, "Slug: "+fmt.Sprintf("%#v", this.Slug)+",\n")
	}
	if this.Title != nil {
		s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	}
	if this.Document != nil {
		s = append(s, "Document: "+fmt.Sprintf("%#v", this.Document)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSaveTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountSaveTheme{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Theme != nil {
		s = append(s, "Theme: "+fmt.Sprintf("%#v", this.Theme)+",\n")
	}
	if this.Unsave != nil {
		s = append(s, "Unsave: "+fmt.Sprintf("%#v", this.Unsave)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountInstallTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountInstallTheme{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Dark: "+fmt.Sprintf("%#v", this.Dark)+",\n")
	if this.Format != nil {
		s = append(s, "Format: "+fmt.Sprintf("%#v", this.Format)+",\n")
	}
	if this.Theme != nil {
		s = append(s, "Theme: "+fmt.Sprintf("%#v", this.Theme)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountGetTheme{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Format: "+fmt.Sprintf("%#v", this.Format)+",\n")
	if this.Theme != nil {
		s = append(s, "Theme: "+fmt.Sprintf("%#v", this.Theme)+",\n")
	}
	s = append(s, "DocumentId: "+fmt.Sprintf("%#v", this.DocumentId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetThemes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountGetThemes{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Format: "+fmt.Sprintf("%#v", this.Format)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSetContentSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountSetContentSettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "SensitiveEnabled: "+fmt.Sprintf("%#v", this.SensitiveEnabled)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetContentSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountGetContentSettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetMultiWallPapers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetMultiWallPapers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Wallpapers != nil {
		s = append(s, "Wallpapers: "+fmt.Sprintf("%#v", this.Wallpapers)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetGlobalPrivacySettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountGetGlobalPrivacySettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSetGlobalPrivacySettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountSetGlobalPrivacySettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUsersGetUsers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLUsersGetUsers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUsersGetFullUser) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLUsersGetFullUser{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUsersSetSecureValueErrors) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLUsersSetSecureValueErrors{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.Errors != nil {
		s = append(s, "Errors: "+fmt.Sprintf("%#v", this.Errors)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetContactIDs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsGetContactIDs{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetStatuses) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLContactsGetStatuses{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetContacts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsGetContacts{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsImportContacts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsImportContacts{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Contacts != nil {
		s = append(s, "Contacts: "+fmt.Sprintf("%#v", this.Contacts)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsDeleteContacts96A0E00) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsDeleteContacts96A0E00{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsDeleteByPhones) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsDeleteByPhones{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Phones: "+fmt.Sprintf("%#v", this.Phones)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsBlock) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsBlock{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id_INPUTPEER != nil {
		s = append(s, "Id_INPUTPEER: "+fmt.Sprintf("%#v", this.Id_INPUTPEER)+",\n")
	}
	if this.Id_INPUTUSER != nil {
		s = append(s, "Id_INPUTUSER: "+fmt.Sprintf("%#v", this.Id_INPUTUSER)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsUnblock) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsUnblock{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id_INPUTPEER != nil {
		s = append(s, "Id_INPUTPEER: "+fmt.Sprintf("%#v", this.Id_INPUTPEER)+",\n")
	}
	if this.Id_INPUTUSER != nil {
		s = append(s, "Id_INPUTUSER: "+fmt.Sprintf("%#v", this.Id_INPUTUSER)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetBlocked) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsGetBlocked{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsSearch) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsSearch{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsResolveUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsResolveUsername{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetTopPeers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 16)
	s = append(s, "&mtproto.TLContactsGetTopPeers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Correspondents: "+fmt.Sprintf("%#v", this.Correspondents)+",\n")
	s = append(s, "BotsPm: "+fmt.Sprintf("%#v", this.BotsPm)+",\n")
	s = append(s, "BotsInline: "+fmt.Sprintf("%#v", this.BotsInline)+",\n")
	s = append(s, "PhoneCalls: "+fmt.Sprintf("%#v", this.PhoneCalls)+",\n")
	s = append(s, "ForwardUsers: "+fmt.Sprintf("%#v", this.ForwardUsers)+",\n")
	s = append(s, "ForwardChats: "+fmt.Sprintf("%#v", this.ForwardChats)+",\n")
	s = append(s, "Groups: "+fmt.Sprintf("%#v", this.Groups)+",\n")
	s = append(s, "Channels: "+fmt.Sprintf("%#v", this.Channels)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsResetTopPeerRating) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsResetTopPeerRating{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Category != nil {
		s = append(s, "Category: "+fmt.Sprintf("%#v", this.Category)+",\n")
	}
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsResetSaved) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLContactsResetSaved{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetSaved) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLContactsGetSaved{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsToggleTopPeers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsToggleTopPeers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsAddContact) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLContactsAddContact{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "AddPhonePrivacyException: "+fmt.Sprintf("%#v", this.AddPhonePrivacyException)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	s = append(s, "FirstName: "+fmt.Sprintf("%#v", this.FirstName)+",\n")
	s = append(s, "LastName: "+fmt.Sprintf("%#v", this.LastName)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsAcceptContact) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsAcceptContact{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetLocated) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLContactsGetLocated{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	if this.SelfExpires != nil {
		s = append(s, "SelfExpires: "+fmt.Sprintf("%#v", this.SelfExpires)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsBlockFromReplies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLContactsBlockFromReplies{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "DeleteMessage: "+fmt.Sprintf("%#v", this.DeleteMessage)+",\n")
	s = append(s, "DeleteHistory: "+fmt.Sprintf("%#v", this.DeleteHistory)+",\n")
	s = append(s, "ReportSpam: "+fmt.Sprintf("%#v", this.ReportSpam)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetMessages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id_VECTORINPUTMESSAGE != nil {
		s = append(s, "Id_VECTORINPUTMESSAGE: "+fmt.Sprintf("%#v", this.Id_VECTORINPUTMESSAGE)+",\n")
	}
	s = append(s, "Id_VECTORINT32: "+fmt.Sprintf("%#v", this.Id_VECTORINT32)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDialogs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&mtproto.TLMessagesGetDialogs{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ExcludePinned: "+fmt.Sprintf("%#v", this.ExcludePinned)+",\n")
	if this.FolderId != nil {
		s = append(s, "FolderId: "+fmt.Sprintf("%#v", this.FolderId)+",\n")
	}
	s = append(s, "OffsetDate: "+fmt.Sprintf("%#v", this.OffsetDate)+",\n")
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	if this.OffsetPeer != nil {
		s = append(s, "OffsetPeer: "+fmt.Sprintf("%#v", this.OffsetPeer)+",\n")
	}
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.FeedId != nil {
		s = append(s, "FeedId: "+fmt.Sprintf("%#v", this.FeedId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&mtproto.TLMessagesGetHistory{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "OffsetDate: "+fmt.Sprintf("%#v", this.OffsetDate)+",\n")
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSearch) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 20)
	s = append(s, "&mtproto.TLMessagesSearch{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	if this.FromId_FLAGINPUTPEER != nil {
		s = append(s, "FromId_FLAGINPUTPEER: "+fmt.Sprintf("%#v", this.FromId_FLAGINPUTPEER)+",\n")
	}
	if this.TopMsgId != nil {
		s = append(s, "TopMsgId: "+fmt.Sprintf("%#v", this.TopMsgId)+",\n")
	}
	if this.Filter != nil {
		s = append(s, "Filter: "+fmt.Sprintf("%#v", this.Filter)+",\n")
	}
	s = append(s, "MinDate: "+fmt.Sprintf("%#v", this.MinDate)+",\n")
	s = append(s, "MaxDate: "+fmt.Sprintf("%#v", this.MaxDate)+",\n")
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.FromId_FLAGINPUTUSER != nil {
		s = append(s, "FromId_FLAGINPUTUSER: "+fmt.Sprintf("%#v", this.FromId_FLAGINPUTUSER)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadHistoryE306D3A) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesReadHistoryE306D3A{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesDeleteHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesDeleteHistory{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "JustClear: "+fmt.Sprintf("%#v", this.JustClear)+",\n")
	s = append(s, "Revoke: "+fmt.Sprintf("%#v", this.Revoke)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesDeleteMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesDeleteMessages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Revoke: "+fmt.Sprintf("%#v", this.Revoke)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReceivedMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesReceivedMessages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetTyping) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSetTyping{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.TopMsgId != nil {
		s = append(s, "TopMsgId: "+fmt.Sprintf("%#v", this.TopMsgId)+",\n")
	}
	if this.Action != nil {
		s = append(s, "Action: "+fmt.Sprintf("%#v", this.Action)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&mtproto.TLMessagesSendMessage{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "NoWebpage: "+fmt.Sprintf("%#v", this.NoWebpage)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "ClearDraft: "+fmt.Sprintf("%#v", this.ClearDraft)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.ReplyToMsgId != nil {
		s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	}
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.ReplyMarkup != nil {
		s = append(s, "ReplyMarkup: "+fmt.Sprintf("%#v", this.ReplyMarkup)+",\n")
	}
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	if this.ScheduleDate != nil {
		s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	}
	if this.TtlSeconds != nil {
		s = append(s, "TtlSeconds: "+fmt.Sprintf("%#v", this.TtlSeconds)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendMedia) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&mtproto.TLMessagesSendMedia{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "ClearDraft: "+fmt.Sprintf("%#v", this.ClearDraft)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.ReplyToMsgId != nil {
		s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	}
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.ReplyMarkup != nil {
		s = append(s, "ReplyMarkup: "+fmt.Sprintf("%#v", this.ReplyMarkup)+",\n")
	}
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	if this.ScheduleDate != nil {
		s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	}
	if this.TtlSeconds != nil {
		s = append(s, "TtlSeconds: "+fmt.Sprintf("%#v", this.TtlSeconds)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesForwardMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLMessagesForwardMessages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "WithMyScore: "+fmt.Sprintf("%#v", this.WithMyScore)+",\n")
	if this.FromPeer != nil {
		s = append(s, "FromPeer: "+fmt.Sprintf("%#v", this.FromPeer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.ToPeer != nil {
		s = append(s, "ToPeer: "+fmt.Sprintf("%#v", this.ToPeer)+",\n")
	}
	if this.ScheduleDate != nil {
		s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	}
	s = append(s, "Grouped: "+fmt.Sprintf("%#v", this.Grouped)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReportSpam) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesReportSpam{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetPeerSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetPeerSettings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReport) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesReport{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Reason != nil {
		s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetChats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetChats{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetFullChat) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetFullChat{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatTitle) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesEditChatTitle{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatPhoto) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesEditChatPhoto{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.Photo != nil {
		s = append(s, "Photo: "+fmt.Sprintf("%#v", this.Photo)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesAddChatUser) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesAddChatUser{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "FwdLimit: "+fmt.Sprintf("%#v", this.FwdLimit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesDeleteChatUser) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesDeleteChatUser{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesCreateChat) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesCreateChat{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Users != nil {
		s = append(s, "Users: "+fmt.Sprintf("%#v", this.Users)+",\n")
	}
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDhConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetDhConfig{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Version: "+fmt.Sprintf("%#v", this.Version)+",\n")
	s = append(s, "RandomLength: "+fmt.Sprintf("%#v", this.RandomLength)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesRequestEncryption) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesRequestEncryption{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "GA: "+fmt.Sprintf("%#v", this.GA)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesAcceptEncryption) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesAcceptEncryption{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "GB: "+fmt.Sprintf("%#v", this.GB)+",\n")
	s = append(s, "KeyFingerprint: "+fmt.Sprintf("%#v", this.KeyFingerprint)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesDiscardEncryption) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesDiscardEncryption{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetEncryptedTyping) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesSetEncryptedTyping{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Typing != nil {
		s = append(s, "Typing: "+fmt.Sprintf("%#v", this.Typing)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadEncryptedHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesReadEncryptedHistory{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MaxDate: "+fmt.Sprintf("%#v", this.MaxDate)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendEncrypted) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesSendEncrypted{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendEncryptedFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesSendEncryptedFile{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	if this.File != nil {
		s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendEncryptedService) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSendEncryptedService{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReceivedQueue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesReceivedQueue{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "MaxQts: "+fmt.Sprintf("%#v", this.MaxQts)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReportEncryptedSpam) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesReportEncryptedSpam{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadMessageContents) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesReadMessageContents{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesGetStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Emoticon: "+fmt.Sprintf("%#v", this.Emoticon)+",\n")
	s = append(s, "Hash_INT32: "+fmt.Sprintf("%#v", this.Hash_INT32)+",\n")
	s = append(s, "ExcludeFeatured: "+fmt.Sprintf("%#v", this.ExcludeFeatured)+",\n")
	s = append(s, "Hash_STRING: "+fmt.Sprintf("%#v", this.Hash_STRING)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetAllStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetAllStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetWebPagePreview) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetWebPagePreview{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesExportChatInvite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesExportChatInvite{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesCheckChatInvite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesCheckChatInvite{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesImportChatInvite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesImportChatInvite{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetStickerSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetStickerSet{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesInstallStickerSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesInstallStickerSet{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.Archived != nil {
		s = append(s, "Archived: "+fmt.Sprintf("%#v", this.Archived)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUninstallStickerSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesUninstallStickerSet{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesStartBot) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesStartBot{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Bot != nil {
		s = append(s, "Bot: "+fmt.Sprintf("%#v", this.Bot)+",\n")
	}
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "StartParam: "+fmt.Sprintf("%#v", this.StartParam)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetMessagesViews5784D3E1) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetMessagesViews5784D3E1{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Increment != nil {
		s = append(s, "Increment: "+fmt.Sprintf("%#v", this.Increment)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesEditChatAdmin{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.IsAdmin != nil {
		s = append(s, "IsAdmin: "+fmt.Sprintf("%#v", this.IsAdmin)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesMigrateChat) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesMigrateChat{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSearchGlobal) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&mtproto.TLMessagesSearchGlobal{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.FolderId != nil {
		s = append(s, "FolderId: "+fmt.Sprintf("%#v", this.FolderId)+",\n")
	}
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	if this.Filter != nil {
		s = append(s, "Filter: "+fmt.Sprintf("%#v", this.Filter)+",\n")
	}
	s = append(s, "MinDate: "+fmt.Sprintf("%#v", this.MinDate)+",\n")
	s = append(s, "MaxDate: "+fmt.Sprintf("%#v", this.MaxDate)+",\n")
	s = append(s, "OffsetRate: "+fmt.Sprintf("%#v", this.OffsetRate)+",\n")
	if this.OffsetPeer != nil {
		s = append(s, "OffsetPeer: "+fmt.Sprintf("%#v", this.OffsetPeer)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "OffsetDate: "+fmt.Sprintf("%#v", this.OffsetDate)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReorderStickerSets) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesReorderStickerSets{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Masks: "+fmt.Sprintf("%#v", this.Masks)+",\n")
	s = append(s, "Order: "+fmt.Sprintf("%#v", this.Order)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDocumentByHash) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetDocumentByHash{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Sha256: "+fmt.Sprintf("%#v", this.Sha256)+",\n")
	s = append(s, "Size2: "+fmt.Sprintf("%#v", this.Size2)+",\n")
	s = append(s, "MimeType: "+fmt.Sprintf("%#v", this.MimeType)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetSavedGifs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetSavedGifs{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSaveGif) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesSaveGif{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.Unsave != nil {
		s = append(s, "Unsave: "+fmt.Sprintf("%#v", this.Unsave)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetInlineBotResults) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesGetInlineBotResults{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Bot != nil {
		s = append(s, "Bot: "+fmt.Sprintf("%#v", this.Bot)+",\n")
	}
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	s = append(s, "Query: "+fmt.Sprintf("%#v", this.Query)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetInlineBotResults) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLMessagesSetInlineBotResults{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Gallery: "+fmt.Sprintf("%#v", this.Gallery)+",\n")
	s = append(s, "Private: "+fmt.Sprintf("%#v", this.Private)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	if this.Results != nil {
		s = append(s, "Results: "+fmt.Sprintf("%#v", this.Results)+",\n")
	}
	s = append(s, "CacheTime: "+fmt.Sprintf("%#v", this.CacheTime)+",\n")
	if this.NextOffset != nil {
		s = append(s, "NextOffset: "+fmt.Sprintf("%#v", this.NextOffset)+",\n")
	}
	if this.SwitchPm != nil {
		s = append(s, "SwitchPm: "+fmt.Sprintf("%#v", this.SwitchPm)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendInlineBotResult) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&mtproto.TLMessagesSendInlineBotResult{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "ClearDraft: "+fmt.Sprintf("%#v", this.ClearDraft)+",\n")
	s = append(s, "HideVia: "+fmt.Sprintf("%#v", this.HideVia)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.ReplyToMsgId != nil {
		s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.ScheduleDate != nil {
		s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetMessageEditData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetMessageEditData{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&mtproto.TLMessagesEditMessage{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "NoWebpage: "+fmt.Sprintf("%#v", this.NoWebpage)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Message != nil {
		s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	}
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	if this.ReplyMarkup != nil {
		s = append(s, "ReplyMarkup: "+fmt.Sprintf("%#v", this.ReplyMarkup)+",\n")
	}
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	if this.ScheduleDate != nil {
		s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	}
	s = append(s, "StopGeoLive: "+fmt.Sprintf("%#v", this.StopGeoLive)+",\n")
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditInlineBotMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&mtproto.TLMessagesEditInlineBotMessage{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "NoWebpage: "+fmt.Sprintf("%#v", this.NoWebpage)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.Message != nil {
		s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	}
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	if this.ReplyMarkup != nil {
		s = append(s, "ReplyMarkup: "+fmt.Sprintf("%#v", this.ReplyMarkup)+",\n")
	}
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	s = append(s, "StopGeoLive: "+fmt.Sprintf("%#v", this.StopGeoLive)+",\n")
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetBotCallbackAnswer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesGetBotCallbackAnswer{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Game: "+fmt.Sprintf("%#v", this.Game)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetBotCallbackAnswer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesSetBotCallbackAnswer{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Alert: "+fmt.Sprintf("%#v", this.Alert)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	if this.Message != nil {
		s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	}
	if this.Url != nil {
		s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	}
	s = append(s, "CacheTime: "+fmt.Sprintf("%#v", this.CacheTime)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetPeerDialogs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetPeerDialogs{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peers_VECTORINPUTDIALOGPEER != nil {
		s = append(s, "Peers_VECTORINPUTDIALOGPEER: "+fmt.Sprintf("%#v", this.Peers_VECTORINPUTDIALOGPEER)+",\n")
	}
	if this.Peers_VECTORINPUTPEER != nil {
		s = append(s, "Peers_VECTORINPUTPEER: "+fmt.Sprintf("%#v", this.Peers_VECTORINPUTPEER)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSaveDraft) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesSaveDraft{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "NoWebpage: "+fmt.Sprintf("%#v", this.NoWebpage)+",\n")
	if this.ReplyToMsgId != nil {
		s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	}
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetAllDrafts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLMessagesGetAllDrafts{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetFeaturedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetFeaturedStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadFeaturedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesReadFeaturedStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetRecentStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetRecentStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Attached: "+fmt.Sprintf("%#v", this.Attached)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSaveRecentSticker) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSaveRecentSticker{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Attached: "+fmt.Sprintf("%#v", this.Attached)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.Unsave != nil {
		s = append(s, "Unsave: "+fmt.Sprintf("%#v", this.Unsave)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesClearRecentStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesClearRecentStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Attached: "+fmt.Sprintf("%#v", this.Attached)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetArchivedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetArchivedStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Masks: "+fmt.Sprintf("%#v", this.Masks)+",\n")
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetMaskStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetMaskStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetAttachedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetAttachedStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetGameScore) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLMessagesSetGameScore{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "EditMessage: "+fmt.Sprintf("%#v", this.EditMessage)+",\n")
	s = append(s, "Force: "+fmt.Sprintf("%#v", this.Force)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Score: "+fmt.Sprintf("%#v", this.Score)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetInlineGameScore) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesSetInlineGameScore{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "EditMessage: "+fmt.Sprintf("%#v", this.EditMessage)+",\n")
	s = append(s, "Force: "+fmt.Sprintf("%#v", this.Force)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Score: "+fmt.Sprintf("%#v", this.Score)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetGameHighScores) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetGameHighScores{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetInlineGameHighScores) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetInlineGameHighScores{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetCommonChats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetCommonChats{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetAllChats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetAllChats{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ExceptIds: "+fmt.Sprintf("%#v", this.ExceptIds)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetWebPage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetWebPage{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesToggleDialogPin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesToggleDialogPin{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Pinned: "+fmt.Sprintf("%#v", this.Pinned)+",\n")
	if this.Peer_INPUTDIALOGPEER != nil {
		s = append(s, "Peer_INPUTDIALOGPEER: "+fmt.Sprintf("%#v", this.Peer_INPUTDIALOGPEER)+",\n")
	}
	if this.Peer_INPUTPEER != nil {
		s = append(s, "Peer_INPUTPEER: "+fmt.Sprintf("%#v", this.Peer_INPUTPEER)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReorderPinnedDialogs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesReorderPinnedDialogs{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Force: "+fmt.Sprintf("%#v", this.Force)+",\n")
	s = append(s, "FolderId: "+fmt.Sprintf("%#v", this.FolderId)+",\n")
	if this.Order_VECTORINPUTDIALOGPEER != nil {
		s = append(s, "Order_VECTORINPUTDIALOGPEER: "+fmt.Sprintf("%#v", this.Order_VECTORINPUTDIALOGPEER)+",\n")
	}
	if this.Order_VECTORINPUTPEER != nil {
		s = append(s, "Order_VECTORINPUTPEER: "+fmt.Sprintf("%#v", this.Order_VECTORINPUTPEER)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetPinnedDialogs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetPinnedDialogs{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FolderId: "+fmt.Sprintf("%#v", this.FolderId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetBotShippingResults) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSetBotShippingResults{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	if this.Error != nil {
		s = append(s, "Error: "+fmt.Sprintf("%#v", this.Error)+",\n")
	}
	if this.ShippingOptions != nil {
		s = append(s, "ShippingOptions: "+fmt.Sprintf("%#v", this.ShippingOptions)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetBotPrecheckoutResults) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSetBotPrecheckoutResults{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Success: "+fmt.Sprintf("%#v", this.Success)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	if this.Error != nil {
		s = append(s, "Error: "+fmt.Sprintf("%#v", this.Error)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUploadMedia) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesUploadMedia{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendScreenshotNotification) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSendScreenshotNotification{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetFavedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetFavedStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesFaveSticker) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesFaveSticker{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.Unfave != nil {
		s = append(s, "Unfave: "+fmt.Sprintf("%#v", this.Unfave)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetUnreadMentions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLMessagesGetUnreadMentions{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadMentions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesReadMentions{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetRecentLocations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetRecentLocations{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendMultiMedia) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&mtproto.TLMessagesSendMultiMedia{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "ClearDraft: "+fmt.Sprintf("%#v", this.ClearDraft)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.ReplyToMsgId != nil {
		s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	}
	if this.MultiMedia != nil {
		s = append(s, "MultiMedia: "+fmt.Sprintf("%#v", this.MultiMedia)+",\n")
	}
	if this.ScheduleDate != nil {
		s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	}
	if this.TtlSeconds != nil {
		s = append(s, "TtlSeconds: "+fmt.Sprintf("%#v", this.TtlSeconds)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUploadEncryptedFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesUploadEncryptedFile{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.File != nil {
		s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSearchStickerSets) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSearchStickerSets{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ExcludeFeatured: "+fmt.Sprintf("%#v", this.ExcludeFeatured)+",\n")
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetSplitRanges) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLMessagesGetSplitRanges{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesMarkDialogUnread) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesMarkDialogUnread{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Unread: "+fmt.Sprintf("%#v", this.Unread)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDialogUnreadMarks) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLMessagesGetDialogUnreadMarks{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesClearAllDrafts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLMessagesClearAllDrafts{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUpdatePinnedMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesUpdatePinnedMessage{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Unpin: "+fmt.Sprintf("%#v", this.Unpin)+",\n")
	s = append(s, "PmOneside: "+fmt.Sprintf("%#v", this.PmOneside)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendVote) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSendVote{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "Options: "+fmt.Sprintf("%#v", this.Options)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetPollResults) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetPollResults{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetOnlines) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetOnlines{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetStatsURL) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetStatsURL{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Dark: "+fmt.Sprintf("%#v", this.Dark)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Params: "+fmt.Sprintf("%#v", this.Params)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatAbout) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesEditChatAbout{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "About: "+fmt.Sprintf("%#v", this.About)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatNotice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesEditChatNotice{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Notice: "+fmt.Sprintf("%#v", this.Notice)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatDefaultBannedRights) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesEditChatDefaultBannedRights{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.BannedRights != nil {
		s = append(s, "BannedRights: "+fmt.Sprintf("%#v", this.BannedRights)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetEmojiKeywords) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetEmojiKeywords{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetEmojiKeywordsDifference) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetEmojiKeywordsDifference{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "FromVersion: "+fmt.Sprintf("%#v", this.FromVersion)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetEmojiKeywordsLanguages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetEmojiKeywordsLanguages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangCodes: "+fmt.Sprintf("%#v", this.LangCodes)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetEmojiURL) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetEmojiURL{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetSearchCounters) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetSearchCounters{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Filters != nil {
		s = append(s, "Filters: "+fmt.Sprintf("%#v", this.Filters)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesRequestUrlAuth) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesRequestUrlAuth{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "ButtonId: "+fmt.Sprintf("%#v", this.ButtonId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesAcceptUrlAuth) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesAcceptUrlAuth{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "WriteAllowed: "+fmt.Sprintf("%#v", this.WriteAllowed)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "ButtonId: "+fmt.Sprintf("%#v", this.ButtonId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesHidePeerSettingsBar) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesHidePeerSettingsBar{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetScheduledHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetScheduledHistory{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetScheduledMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetScheduledMessages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendScheduledMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesSendScheduledMessages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesDeleteScheduledMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesDeleteScheduledMessages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetPollVotes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesGetPollVotes{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Option: "+fmt.Sprintf("%#v", this.Option)+",\n")
	if this.Offset != nil {
		s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	}
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesToggleStickerSets) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesToggleStickerSets{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Uninstall: "+fmt.Sprintf("%#v", this.Uninstall)+",\n")
	s = append(s, "Archive: "+fmt.Sprintf("%#v", this.Archive)+",\n")
	s = append(s, "Unarchive: "+fmt.Sprintf("%#v", this.Unarchive)+",\n")
	if this.Stickersets != nil {
		s = append(s, "Stickersets: "+fmt.Sprintf("%#v", this.Stickersets)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDialogFilters) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLMessagesGetDialogFilters{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetSuggestedDialogFilters) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLMessagesGetSuggestedDialogFilters{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUpdateDialogFilter) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesUpdateDialogFilter{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Filter != nil {
		s = append(s, "Filter: "+fmt.Sprintf("%#v", this.Filter)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUpdateDialogFiltersOrder) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesUpdateDialogFiltersOrder{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Order: "+fmt.Sprintf("%#v", this.Order)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetOldFeaturedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetOldFeaturedStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetReplies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLMessagesGetReplies{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "OffsetDate: "+fmt.Sprintf("%#v", this.OffsetDate)+",\n")
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDiscussionMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetDiscussionMessage{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadDiscussion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesReadDiscussion{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "ReadMaxId: "+fmt.Sprintf("%#v", this.ReadMaxId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUnpinAllMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesUnpinAllMessages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUpdatesGetState) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLUpdatesGetState{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUpdatesGetDifference) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLUpdatesGetDifference{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Pts: "+fmt.Sprintf("%#v", this.Pts)+",\n")
	if this.PtsTotalLimit != nil {
		s = append(s, "PtsTotalLimit: "+fmt.Sprintf("%#v", this.PtsTotalLimit)+",\n")
	}
	s = append(s, "Date: "+fmt.Sprintf("%#v", this.Date)+",\n")
	s = append(s, "Qts: "+fmt.Sprintf("%#v", this.Qts)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUpdatesGetChannelDifference) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLUpdatesGetChannelDifference{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Force: "+fmt.Sprintf("%#v", this.Force)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Filter != nil {
		s = append(s, "Filter: "+fmt.Sprintf("%#v", this.Filter)+",\n")
	}
	s = append(s, "Pts: "+fmt.Sprintf("%#v", this.Pts)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhotosUpdateProfilePhoto72D4742C) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLPhotosUpdateProfilePhoto72D4742C{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhotosUploadProfilePhoto) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLPhotosUploadProfilePhoto{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.File != nil {
		s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	}
	if this.Video != nil {
		s = append(s, "Video: "+fmt.Sprintf("%#v", this.Video)+",\n")
	}
	if this.VideoStartTs != nil {
		s = append(s, "VideoStartTs: "+fmt.Sprintf("%#v", this.VideoStartTs)+",\n")
	}
	s = append(s, "Caption: "+fmt.Sprintf("%#v", this.Caption)+",\n")
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	if this.Crop != nil {
		s = append(s, "Crop: "+fmt.Sprintf("%#v", this.Crop)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhotosDeletePhotos) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLPhotosDeletePhotos{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhotosGetUserPhotos) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLPhotosGetUserPhotos{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadSaveFilePart) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLUploadSaveFilePart{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FileId: "+fmt.Sprintf("%#v", this.FileId)+",\n")
	s = append(s, "FilePart: "+fmt.Sprintf("%#v", this.FilePart)+",\n")
	s = append(s, "Bytes: "+fmt.Sprintf("%#v", this.Bytes)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLUploadGetFile{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Precise: "+fmt.Sprintf("%#v", this.Precise)+",\n")
	s = append(s, "CdnSupported: "+fmt.Sprintf("%#v", this.CdnSupported)+",\n")
	if this.Location != nil {
		s = append(s, "Location: "+fmt.Sprintf("%#v", this.Location)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadSaveBigFilePart) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLUploadSaveBigFilePart{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FileId: "+fmt.Sprintf("%#v", this.FileId)+",\n")
	s = append(s, "FilePart: "+fmt.Sprintf("%#v", this.FilePart)+",\n")
	s = append(s, "FileTotalParts: "+fmt.Sprintf("%#v", this.FileTotalParts)+",\n")
	s = append(s, "Bytes: "+fmt.Sprintf("%#v", this.Bytes)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetWebFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLUploadGetWebFile{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Location != nil {
		s = append(s, "Location: "+fmt.Sprintf("%#v", this.Location)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetCdnFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLUploadGetCdnFile{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FileToken: "+fmt.Sprintf("%#v", this.FileToken)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadReuploadCdnFile9B2754A8) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLUploadReuploadCdnFile9B2754A8{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FileToken: "+fmt.Sprintf("%#v", this.FileToken)+",\n")
	s = append(s, "RequestToken: "+fmt.Sprintf("%#v", this.RequestToken)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetCdnFileHashes4DA54231) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLUploadGetCdnFileHashes4DA54231{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FileToken: "+fmt.Sprintf("%#v", this.FileToken)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetFileHashes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLUploadGetFileHashes{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Location != nil {
		s = append(s, "Location: "+fmt.Sprintf("%#v", this.Location)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLHelpGetConfig{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetNearestDc) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLHelpGetNearestDc{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetAppUpdate) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLHelpGetAppUpdate{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Source: "+fmt.Sprintf("%#v", this.Source)+",\n")
	s = append(s, "DeviceModel: "+fmt.Sprintf("%#v", this.DeviceModel)+",\n")
	s = append(s, "SystemVersion: "+fmt.Sprintf("%#v", this.SystemVersion)+",\n")
	s = append(s, "AppVersion: "+fmt.Sprintf("%#v", this.AppVersion)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetInviteText) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetInviteText{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetSupport) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLHelpGetSupport{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetAppChangelog) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetAppChangelog{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PrevAppVersion: "+fmt.Sprintf("%#v", this.PrevAppVersion)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpSetBotUpdatesStatus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpSetBotUpdatesStatus{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PendingUpdatesCount: "+fmt.Sprintf("%#v", this.PendingUpdatesCount)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetCdnConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLHelpGetCdnConfig{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetRecentMeUrls) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetRecentMeUrls{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Referer: "+fmt.Sprintf("%#v", this.Referer)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetTermsOfServiceUpdate) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLHelpGetTermsOfServiceUpdate{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpAcceptTermsOfService) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpAcceptTermsOfService{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetDeepLinkInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetDeepLinkInfo{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Path: "+fmt.Sprintf("%#v", this.Path)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetAppConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLHelpGetAppConfig{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpSaveAppLog) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpSaveAppLog{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Events != nil {
		s = append(s, "Events: "+fmt.Sprintf("%#v", this.Events)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetPassportConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetPassportConfig{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetSupportName) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLHelpGetSupportName{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetUserInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetUserInfo{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpEditUserInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLHelpEditUserInfo{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetPromoData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLHelpGetPromoData{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpHidePromoData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpHidePromoData{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpDismissSuggestion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpDismissSuggestion{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Suggestion: "+fmt.Sprintf("%#v", this.Suggestion)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetCountriesList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpGetCountriesList{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsReadHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsReadHistory{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsDeleteMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsDeleteMessages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsDeleteUserHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsDeleteUserHistory{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsReportSpam) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsReportSpam{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsGetMessages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Id_VECTORINPUTMESSAGE != nil {
		s = append(s, "Id_VECTORINPUTMESSAGE: "+fmt.Sprintf("%#v", this.Id_VECTORINPUTMESSAGE)+",\n")
	}
	s = append(s, "Id_VECTORINT32: "+fmt.Sprintf("%#v", this.Id_VECTORINT32)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetParticipants) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLChannelsGetParticipants{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Filter != nil {
		s = append(s, "Filter: "+fmt.Sprintf("%#v", this.Filter)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetParticipant) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsGetParticipant{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetChannels) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLChannelsGetChannels{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetFullChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLChannelsGetFullChannel{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsCreateChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLChannelsCreateChannel{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Broadcast: "+fmt.Sprintf("%#v", this.Broadcast)+",\n")
	s = append(s, "Megagroup: "+fmt.Sprintf("%#v", this.Megagroup)+",\n")
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	s = append(s, "About: "+fmt.Sprintf("%#v", this.About)+",\n")
	s = append(s, "Notice: "+fmt.Sprintf("%#v", this.Notice)+",\n")
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	if this.Address != nil {
		s = append(s, "Address: "+fmt.Sprintf("%#v", this.Address)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLChannelsEditAdmin{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.AdminRights_CHATADMINRIGHTS != nil {
		s = append(s, "AdminRights_CHATADMINRIGHTS: "+fmt.Sprintf("%#v", this.AdminRights_CHATADMINRIGHTS)+",\n")
	}
	s = append(s, "Rank: "+fmt.Sprintf("%#v", this.Rank)+",\n")
	if this.AdminRights_CHANNELADMINRIGHTS != nil {
		s = append(s, "AdminRights_CHANNELADMINRIGHTS: "+fmt.Sprintf("%#v", this.AdminRights_CHANNELADMINRIGHTS)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditTitle) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsEditTitle{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditPhoto) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsEditPhoto{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Photo != nil {
		s = append(s, "Photo: "+fmt.Sprintf("%#v", this.Photo)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsCheckUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsCheckUsername{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsUpdateUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsUpdateUsername{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsJoinChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLChannelsJoinChannel{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsLeaveChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLChannelsLeaveChannel{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsInviteToChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsInviteToChannel{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Users != nil {
		s = append(s, "Users: "+fmt.Sprintf("%#v", this.Users)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsDeleteChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLChannelsDeleteChannel{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsExportMessageLink) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLChannelsExportMessageLink{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Grouped_FLAGBOOLEAN: "+fmt.Sprintf("%#v", this.Grouped_FLAGBOOLEAN)+",\n")
	s = append(s, "Thread: "+fmt.Sprintf("%#v", this.Thread)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Grouped_BOOL != nil {
		s = append(s, "Grouped_BOOL: "+fmt.Sprintf("%#v", this.Grouped_BOOL)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsToggleSignatures) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsToggleSignatures{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetAdminedPublicChannels) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsGetAdminedPublicChannels{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ByLocation: "+fmt.Sprintf("%#v", this.ByLocation)+",\n")
	s = append(s, "CheckLimit: "+fmt.Sprintf("%#v", this.CheckLimit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditBanned) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLChannelsEditBanned{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.BannedRights_CHATBANNEDRIGHTS != nil {
		s = append(s, "BannedRights_CHATBANNEDRIGHTS: "+fmt.Sprintf("%#v", this.BannedRights_CHATBANNEDRIGHTS)+",\n")
	}
	if this.BannedRights_CHANNELBANNEDRIGHTS != nil {
		s = append(s, "BannedRights_CHANNELBANNEDRIGHTS: "+fmt.Sprintf("%#v", this.BannedRights_CHANNELBANNEDRIGHTS)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetAdminLog) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLChannelsGetAdminLog{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	if this.EventsFilter != nil {
		s = append(s, "EventsFilter: "+fmt.Sprintf("%#v", this.EventsFilter)+",\n")
	}
	if this.Admins != nil {
		s = append(s, "Admins: "+fmt.Sprintf("%#v", this.Admins)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsSetStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsSetStickers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsReadMessageContents) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsReadMessageContents{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsDeleteHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsDeleteHistory{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsTogglePreHistoryHidden) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsTogglePreHistoryHidden{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetLeftChannels) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLChannelsGetLeftChannels{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetGroupsForDiscussion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLChannelsGetGroupsForDiscussion{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsSetDiscussionGroup) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsSetDiscussionGroup{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Broadcast != nil {
		s = append(s, "Broadcast: "+fmt.Sprintf("%#v", this.Broadcast)+",\n")
	}
	if this.Group != nil {
		s = append(s, "Group: "+fmt.Sprintf("%#v", this.Group)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditCreator) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsEditCreator{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditLocation) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsEditLocation{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	s = append(s, "Address: "+fmt.Sprintf("%#v", this.Address)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsToggleSlowMode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsToggleSlowMode{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Seconds: "+fmt.Sprintf("%#v", this.Seconds)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetInactiveChannels) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLChannelsGetInactiveChannels{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBotsSendCustomRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBotsSendCustomRequest{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "CustomMethod: "+fmt.Sprintf("%#v", this.CustomMethod)+",\n")
	if this.Params != nil {
		s = append(s, "Params: "+fmt.Sprintf("%#v", this.Params)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBotsAnswerWebhookJSONQuery) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBotsAnswerWebhookJSONQuery{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBotsSetBotCommands) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLBotsSetBotCommands{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Commands != nil {
		s = append(s, "Commands: "+fmt.Sprintf("%#v", this.Commands)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsGetPaymentForm) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLPaymentsGetPaymentForm{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsGetPaymentReceipt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLPaymentsGetPaymentReceipt{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsValidateRequestedInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLPaymentsValidateRequestedInfo{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Save: "+fmt.Sprintf("%#v", this.Save)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.Info != nil {
		s = append(s, "Info: "+fmt.Sprintf("%#v", this.Info)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsSendPaymentForm) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLPaymentsSendPaymentForm{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.RequestedInfoId != nil {
		s = append(s, "RequestedInfoId: "+fmt.Sprintf("%#v", this.RequestedInfoId)+",\n")
	}
	if this.ShippingOptionId != nil {
		s = append(s, "ShippingOptionId: "+fmt.Sprintf("%#v", this.ShippingOptionId)+",\n")
	}
	if this.Credentials != nil {
		s = append(s, "Credentials: "+fmt.Sprintf("%#v", this.Credentials)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsGetSavedInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLPaymentsGetSavedInfo{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsClearSavedInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPaymentsClearSavedInfo{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Credentials: "+fmt.Sprintf("%#v", this.Credentials)+",\n")
	s = append(s, "Info: "+fmt.Sprintf("%#v", this.Info)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsGetBankCardData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLPaymentsGetBankCardData{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Number: "+fmt.Sprintf("%#v", this.Number)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStickersCreateStickerSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLStickersCreateStickerSet{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Masks: "+fmt.Sprintf("%#v", this.Masks)+",\n")
	s = append(s, "Animated: "+fmt.Sprintf("%#v", this.Animated)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	s = append(s, "ShortName: "+fmt.Sprintf("%#v", this.ShortName)+",\n")
	if this.Thumb != nil {
		s = append(s, "Thumb: "+fmt.Sprintf("%#v", this.Thumb)+",\n")
	}
	if this.Stickers != nil {
		s = append(s, "Stickers: "+fmt.Sprintf("%#v", this.Stickers)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStickersRemoveStickerFromSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLStickersRemoveStickerFromSet{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Sticker != nil {
		s = append(s, "Sticker: "+fmt.Sprintf("%#v", this.Sticker)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStickersChangeStickerPosition) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLStickersChangeStickerPosition{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Sticker != nil {
		s = append(s, "Sticker: "+fmt.Sprintf("%#v", this.Sticker)+",\n")
	}
	s = append(s, "Position: "+fmt.Sprintf("%#v", this.Position)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStickersAddStickerToSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLStickersAddStickerToSet{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.Sticker != nil {
		s = append(s, "Sticker: "+fmt.Sprintf("%#v", this.Sticker)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStickersSetStickerSetThumb) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLStickersSetStickerSetThumb{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.Thumb != nil {
		s = append(s, "Thumb: "+fmt.Sprintf("%#v", this.Thumb)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneGetCallConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLPhoneGetCallConfig{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneRequestCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLPhoneRequestCall{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Video: "+fmt.Sprintf("%#v", this.Video)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "GAHash: "+fmt.Sprintf("%#v", this.GAHash)+",\n")
	if this.Protocol != nil {
		s = append(s, "Protocol: "+fmt.Sprintf("%#v", this.Protocol)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneAcceptCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLPhoneAcceptCall{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "GB: "+fmt.Sprintf("%#v", this.GB)+",\n")
	if this.Protocol != nil {
		s = append(s, "Protocol: "+fmt.Sprintf("%#v", this.Protocol)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneConfirmCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLPhoneConfirmCall{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "GA: "+fmt.Sprintf("%#v", this.GA)+",\n")
	s = append(s, "KeyFingerprint: "+fmt.Sprintf("%#v", this.KeyFingerprint)+",\n")
	if this.Protocol != nil {
		s = append(s, "Protocol: "+fmt.Sprintf("%#v", this.Protocol)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneReceivedCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLPhoneReceivedCall{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneDiscardCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLPhoneDiscardCall{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Video: "+fmt.Sprintf("%#v", this.Video)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Duration: "+fmt.Sprintf("%#v", this.Duration)+",\n")
	if this.Reason != nil {
		s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	}
	s = append(s, "ConnectionId: "+fmt.Sprintf("%#v", this.ConnectionId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneSetCallRating) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLPhoneSetCallRating{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "UserInitiative: "+fmt.Sprintf("%#v", this.UserInitiative)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Rating: "+fmt.Sprintf("%#v", this.Rating)+",\n")
	s = append(s, "Comment: "+fmt.Sprintf("%#v", this.Comment)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneSaveCallDebug) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPhoneSaveCallDebug{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Debug != nil {
		s = append(s, "Debug: "+fmt.Sprintf("%#v", this.Debug)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneSendSignalingData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPhoneSendSignalingData{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLLangpackGetLangPack) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLLangpackGetLangPack{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLLangpackGetStrings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLLangpackGetStrings{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "Keys: "+fmt.Sprintf("%#v", this.Keys)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLLangpackGetDifference) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLLangpackGetDifference{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "FromVersion: "+fmt.Sprintf("%#v", this.FromVersion)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLLangpackGetLanguages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLLangpackGetLanguages{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLLangpackGetLanguage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLLangpackGetLanguage{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLFoldersEditPeerFolders) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLFoldersEditPeerFolders{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.FolderPeers != nil {
		s = append(s, "FolderPeers: "+fmt.Sprintf("%#v", this.FolderPeers)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLFoldersDeleteFolder) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLFoldersDeleteFolder{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FolderId: "+fmt.Sprintf("%#v", this.FolderId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStatsGetBroadcastStats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLStatsGetBroadcastStats{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Dark: "+fmt.Sprintf("%#v", this.Dark)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "TzOffset: "+fmt.Sprintf("%#v", this.TzOffset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStatsLoadAsyncGraph) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLStatsLoadAsyncGraph{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	if this.X != nil {
		s = append(s, "X: "+fmt.Sprintf("%#v", this.X)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStatsGetMegagroupStats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLStatsGetMegagroupStats{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Dark: "+fmt.Sprintf("%#v", this.Dark)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStatsGetMessagePublicForwards) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLStatsGetMessagePublicForwards{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "OffsetRate: "+fmt.Sprintf("%#v", this.OffsetRate)+",\n")
	if this.OffsetPeer != nil {
		s = append(s, "OffsetPeer: "+fmt.Sprintf("%#v", this.OffsetPeer)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStatsGetMessageStats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLStatsGetMessageStats{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Dark: "+fmt.Sprintf("%#v", this.Dark)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLWalletGetInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLWalletGetInfo{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLWalletGetRecords) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLWalletGetRecords{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Type != nil {
		s = append(s, "Type: "+fmt.Sprintf("%#v", this.Type)+",\n")
	}
	if this.Date != nil {
		s = append(s, "Date: "+fmt.Sprintf("%#v", this.Date)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetUser) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLBlogsGetUser{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsFollow) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBlogsFollow{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Followed: "+fmt.Sprintf("%#v", this.Followed)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsLike) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBlogsLike{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	s = append(s, "Liked: "+fmt.Sprintf("%#v", this.Liked)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsSendComment) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBlogsSendComment{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	s = append(s, "Text: "+fmt.Sprintf("%#v", this.Text)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsReward) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLBlogsReward{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "User: "+fmt.Sprintf("%#v", this.User)+",\n")
	s = append(s, "Blog: "+fmt.Sprintf("%#v", this.Blog)+",\n")
	if this.PaymentPassword != nil {
		s = append(s, "PaymentPassword: "+fmt.Sprintf("%#v", this.PaymentPassword)+",\n")
	}
	s = append(s, "Amount: "+fmt.Sprintf("%#v", this.Amount)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetFollows) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLBlogsGetFollows{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetFans) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLBlogsGetFans{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsCreateGroupTag) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBlogsCreateGroupTag{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	s = append(s, "Users: "+fmt.Sprintf("%#v", this.Users)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsDeleteGroupTag) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLBlogsDeleteGroupTag{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "TagIds: "+fmt.Sprintf("%#v", this.TagIds)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsEditGroupTag) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBlogsEditGroupTag{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "TagId: "+fmt.Sprintf("%#v", this.TagId)+",\n")
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsAddGroupTagMember) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBlogsAddGroupTagMember{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "TagId: "+fmt.Sprintf("%#v", this.TagId)+",\n")
	s = append(s, "Users: "+fmt.Sprintf("%#v", this.Users)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsDeleteGroupTagMember) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBlogsDeleteGroupTagMember{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "TagId: "+fmt.Sprintf("%#v", this.TagId)+",\n")
	s = append(s, "Users: "+fmt.Sprintf("%#v", this.Users)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetGroupTags) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLBlogsGetGroupTags{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsSendBlog) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLBlogsSendBlog{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.VisibleType != nil {
		s = append(s, "VisibleType: "+fmt.Sprintf("%#v", this.VisibleType)+",\n")
	}
	s = append(s, "MentionUsers: "+fmt.Sprintf("%#v", this.MentionUsers)+",\n")
	if this.Text != nil {
		s = append(s, "Text: "+fmt.Sprintf("%#v", this.Text)+",\n")
	}
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.Content != nil {
		s = append(s, "Content: "+fmt.Sprintf("%#v", this.Content)+",\n")
	}
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	if this.Address != nil {
		s = append(s, "Address: "+fmt.Sprintf("%#v", this.Address)+",\n")
	}
	s = append(s, "Topics: "+fmt.Sprintf("%#v", this.Topics)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsDeleteBlog) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLBlogsDeleteBlog{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Blogs: "+fmt.Sprintf("%#v", this.Blogs)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetBlogs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLBlogsGetBlogs{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Blogs: "+fmt.Sprintf("%#v", this.Blogs)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetCommentList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLBlogsGetCommentList{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Comments: "+fmt.Sprintf("%#v", this.Comments)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsReadHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBlogsReadHistory{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Pts != nil {
		s = append(s, "Pts: "+fmt.Sprintf("%#v", this.Pts)+",\n")
	}
	if this.ReadId != nil {
		s = append(s, "ReadId: "+fmt.Sprintf("%#v", this.ReadId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLBlogsGetHistory{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.VisibleType != nil {
		s = append(s, "VisibleType: "+fmt.Sprintf("%#v", this.VisibleType)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetComments) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLBlogsGetComments{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetLikes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLBlogsGetLikes{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetUnreads) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBlogsGetUnreads{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Pts: "+fmt.Sprintf("%#v", this.Pts)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetTopics) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBlogsGetTopics{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FromTopicId: "+fmt.Sprintf("%#v", this.FromTopicId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBlogsGetHotTopics) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLBlogsGetHotTopics{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetMessagesViewsC4C8A55D) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetMessagesViewsC4C8A55D{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Increment != nil {
		s = append(s, "Increment: "+fmt.Sprintf("%#v", this.Increment)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhotosUpdateProfilePhotoF0BB5152) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLPhotosUpdateProfilePhotoF0BB5152{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSearchGifs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesSearchGifs{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetProxyData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLHelpGetProxyData{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLWalletSendLiteRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLWalletSendLiteRequest{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Body: "+fmt.Sprintf("%#v", this.Body)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLWalletGetKeySecretSalt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLWalletGetKeySecretSalt{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Revoke != nil {
		s = append(s, "Revoke: "+fmt.Sprintf("%#v", this.Revoke)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsDeleteContact) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsDeleteContact{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsDeleteContacts59AB389E) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsDeleteContacts59AB389E{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesHideReportSpam) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesHideReportSpam{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetBroadcastsForDiscussion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLChannelsGetBroadcastsForDiscussion{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetWallPapersC04CFAC2) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLAccountGetWallPapersC04CFAC2{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesToggleChatAdmins) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesToggleChatAdmins{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditAbout) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsEditAbout{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "About: "+fmt.Sprintf("%#v", this.About)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsExportInvite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLChannelsExportInvite{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsToggleInvites) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsToggleInvites{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsUpdatePinnedMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsUpdatePinnedMessage{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsExportCard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLContactsExportCard{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsImportCard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsImportCard{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "ExportCard: "+fmt.Sprintf("%#v", this.ExportCard)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthSendInvites) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthSendInvites{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumbers: "+fmt.Sprintf("%#v", this.PhoneNumbers)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetTermsOfService) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetTermsOfService{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "CountryIso2: "+fmt.Sprintf("%#v", this.CountryIso2)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthCheckPhone) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAuthCheckPhone{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetFeed) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLChannelsGetFeed{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "OffsetToMaxRead: "+fmt.Sprintf("%#v", this.OffsetToMaxRead)+",\n")
	s = append(s, "FeedId: "+fmt.Sprintf("%#v", this.FeedId)+",\n")
	if this.OffsetPosition != nil {
		s = append(s, "OffsetPosition: "+fmt.Sprintf("%#v", this.OffsetPosition)+",\n")
	}
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.MaxPosition != nil {
		s = append(s, "MaxPosition: "+fmt.Sprintf("%#v", this.MaxPosition)+",\n")
	}
	if this.MinPosition != nil {
		s = append(s, "MinPosition: "+fmt.Sprintf("%#v", this.MinPosition)+",\n")
	}
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	s = append(s, "SourcesHash: "+fmt.Sprintf("%#v", this.SourcesHash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsSearchFeed) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLChannelsSearchFeed{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FeedId: "+fmt.Sprintf("%#v", this.FeedId)+",\n")
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	s = append(s, "OffsetDate: "+fmt.Sprintf("%#v", this.OffsetDate)+",\n")
	if this.OffsetPeer != nil {
		s = append(s, "OffsetPeer: "+fmt.Sprintf("%#v", this.OffsetPeer)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetFeedSources) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsGetFeedSources{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.FeedId != nil {
		s = append(s, "FeedId: "+fmt.Sprintf("%#v", this.FeedId)+",\n")
	}
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsChangeFeedBroadcastFFB37511) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsChangeFeedBroadcastFFB37511{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.FeedId != nil {
		s = append(s, "FeedId: "+fmt.Sprintf("%#v", this.FeedId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsSetFeedBroadcastsEA80BFAE) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsSetFeedBroadcastsEA80BFAE{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FeedId: "+fmt.Sprintf("%#v", this.FeedId)+",\n")
	if this.Channels != nil {
		s = append(s, "Channels: "+fmt.Sprintf("%#v", this.Channels)+",\n")
	}
	if this.AlsoNewlyJoined != nil {
		s = append(s, "AlsoNewlyJoined: "+fmt.Sprintf("%#v", this.AlsoNewlyJoined)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsReadFeed) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsReadFeed{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FeedId: "+fmt.Sprintf("%#v", this.FeedId)+",\n")
	if this.MaxPosition != nil {
		s = append(s, "MaxPosition: "+fmt.Sprintf("%#v", this.MaxPosition)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesForwardMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesForwardMessage{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadReuploadCdnFile1AF91C09) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLUploadReuploadCdnFile1AF91C09{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FileToken: "+fmt.Sprintf("%#v", this.FileToken)+",\n")
	s = append(s, "RequestToken: "+fmt.Sprintf("%#v", this.RequestToken)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetCdnFileHashesF715C87B) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLUploadGetCdnFileHashesF715C87B{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FileToken: "+fmt.Sprintf("%#v", this.FileToken)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsChangeFeedBroadcast2528871E) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsChangeFeedBroadcast2528871E{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.FeedId != nil {
		s = append(s, "FeedId: "+fmt.Sprintf("%#v", this.FeedId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsSetFeedBroadcasts7E91B8F2) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsSetFeedBroadcasts7E91B8F2{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "FeedId: "+fmt.Sprintf("%#v", this.FeedId)+",\n")
	if this.Channels != nil {
		s = append(s, "Channels: "+fmt.Sprintf("%#v", this.Channels)+",\n")
	}
	if this.AlsoNewlyJoined != nil {
		s = append(s, "AlsoNewlyJoined: "+fmt.Sprintf("%#v", this.AlsoNewlyJoined)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadHistoryB04F2510) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesReadHistoryB04F2510{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetScheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetScheme{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Version: "+fmt.Sprintf("%#v", this.Version)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpTest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLHelpTest{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountCreatePredefinedUser) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLAccountCreatePredefinedUser{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	if this.FirstName != nil {
		s = append(s, "FirstName: "+fmt.Sprintf("%#v", this.FirstName)+",\n")
	}
	if this.LastName != nil {
		s = append(s, "LastName: "+fmt.Sprintf("%#v", this.LastName)+",\n")
	}
	if this.Username != nil {
		s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	}
	s = append(s, "Code: "+fmt.Sprintf("%#v", this.Code)+",\n")
	s = append(s, "Verified: "+fmt.Sprintf("%#v", this.Verified)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdatePredefinedUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountUpdatePredefinedUsername{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdatePredefinedProfile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountUpdatePredefinedProfile{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	if this.FirstName != nil {
		s = append(s, "FirstName: "+fmt.Sprintf("%#v", this.FirstName)+",\n")
	}
	if this.LastName != nil {
		s = append(s, "LastName: "+fmt.Sprintf("%#v", this.LastName)+",\n")
	}
	if this.About != nil {
		s = append(s, "About: "+fmt.Sprintf("%#v", this.About)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateVerified) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountUpdateVerified{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Verified: "+fmt.Sprintf("%#v", this.Verified)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdatePredefinedVerified) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountUpdatePredefinedVerified{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	s = append(s, "Verified: "+fmt.Sprintf("%#v", this.Verified)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdatePredefinedCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountUpdatePredefinedCode{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	s = append(s, "Code: "+fmt.Sprintf("%#v", this.Code)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthToggleBan) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAuthToggleBan{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	s = append(s, "Predefined: "+fmt.Sprintf("%#v", this.Predefined)+",\n")
	if this.Expires != nil {
		s = append(s, "Expires: "+fmt.Sprintf("%#v", this.Expires)+",\n")
	}
	if this.Reason != nil {
		s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUsersGetPredefinedUser) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLUsersGetPredefinedUser{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUsersGetPredefinedUsers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.TLUsersGetPredefinedUsers{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUsersGetMe) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLUsersGetMe{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBizInvokeBizDataRaw) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLBizInvokeBizDataRaw{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	if this.BizData != nil {
		s = append(s, "BizData: "+fmt.Sprintf("%#v", this.BizData)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_SecureValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_SecureValue{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_WallPaper) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_WallPaper{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_User) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_User{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_Int) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_Int{")
	s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_ContactStatus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_ContactStatus{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_SavedContact) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_SavedContact{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_ReceivedNotifyMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_ReceivedNotifyMessage{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_Long) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_Long{")
	s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_StickerSetCovered) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_StickerSetCovered{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_MessageRange) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_MessageRange{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_DialogPeer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_DialogPeer{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_EmojiLanguage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_EmojiLanguage{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_Messages_SearchCounter) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_Messages_SearchCounter{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_DialogFilter) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_DialogFilter{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_DialogFilterSuggested) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_DialogFilterSuggested{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_FileHash) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_FileHash{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_LangPackString) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_LangPackString{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_LangPackLanguage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_LangPackLanguage{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_CdnFileHash) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_CdnFileHash{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_PredefinedUser) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_PredefinedUser{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringSchemaTlSyncService(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCMessagesMessageClient is the client API for RPCMessagesMessage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCMessagesMessageClient interface {
	// messages.getMessages#63c66506 id:Vector<InputMessage> = messages.Messages;
	MessagesGetMessages(ctx context.Context, in *TLMessagesGetMessages, opts ...grpc.CallOption) (*Messages_Messages, error)
	// messages.getHistory#dcbb8260 peer:InputPeer offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
	MessagesGetHistory(ctx context.Context, in *TLMessagesGetHistory, opts ...grpc.CallOption) (*Messages_Messages, error)
	// messages.search#c352eec flags:# peer:InputPeer q:string from_id:flags.0?InputPeer top_msg_id:flags.1?int filter:MessagesFilter min_date:int max_date:int offset_id:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
	MessagesSearch(ctx context.Context, in *TLMessagesSearch, opts ...grpc.CallOption) (*Messages_Messages, error)
	// messages.readHistory#e306d3a peer:InputPeer max_id:int = messages.AffectedMessages;
	MessagesReadHistoryE306D3A(ctx context.Context, in *TLMessagesReadHistoryE306D3A, opts ...grpc.CallOption) (*Messages_AffectedMessages, error)
	// messages.deleteHistory#1c015b09 flags:# just_clear:flags.0?true revoke:flags.1?true peer:InputPeer max_id:int = messages.AffectedHistory;
	MessagesDeleteHistory(ctx context.Context, in *TLMessagesDeleteHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
	// messages.deleteMessages#e58e95d2 flags:# revoke:flags.0?true id:Vector<int> = messages.AffectedMessages;
	MessagesDeleteMessages(ctx context.Context, in *TLMessagesDeleteMessages, opts ...grpc.CallOption) (*Messages_AffectedMessages, error)
	// messages.receivedMessages#5a954c0 max_id:int = Vector<ReceivedNotifyMessage>;
	MessagesReceivedMessages(ctx context.Context, in *TLMessagesReceivedMessages, opts ...grpc.CallOption) (*Vector_ReceivedNotifyMessage, error)
	// messages.sendMessage#c4ea1590 flags:# no_webpage:flags.1?true silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.10?int ttl_seconds:flags.30?int = Updates;
	MessagesSendMessage(ctx context.Context, in *TLMessagesSendMessage, opts ...grpc.CallOption) (*Updates, error)
	// messages.sendMedia#ee3a150e flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int media:InputMedia message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.10?int ttl_seconds:flags.30?int = Updates;
	MessagesSendMedia(ctx context.Context, in *TLMessagesSendMedia, opts ...grpc.CallOption) (*Updates, error)
	// messages.forwardMessages#d9fee60e flags:# silent:flags.5?true background:flags.6?true with_my_score:flags.8?true from_peer:InputPeer id:Vector<int> random_id:Vector<long> to_peer:InputPeer schedule_date:flags.10?int = Updates;
	MessagesForwardMessages(ctx context.Context, in *TLMessagesForwardMessages, opts ...grpc.CallOption) (*Updates, error)
	// messages.readMessageContents#36a73f77 id:Vector<int> = messages.AffectedMessages;
	MessagesReadMessageContents(ctx context.Context, in *TLMessagesReadMessageContents, opts ...grpc.CallOption) (*Messages_AffectedMessages, error)
	// messages.getWebPagePreview#8b68b0cc flags:# message:string entities:flags.3?Vector<MessageEntity> = MessageMedia;
	MessagesGetWebPagePreview(ctx context.Context, in *TLMessagesGetWebPagePreview, opts ...grpc.CallOption) (*MessageMedia, error)
	// messages.getMessagesViews#5784d3e1 peer:InputPeer id:Vector<int> increment:Bool = messages.MessageViews;
	MessagesGetMessagesViews5784D3E1(ctx context.Context, in *TLMessagesGetMessagesViews5784D3E1, opts ...grpc.CallOption) (*Messages_MessageViews, error)
	// messages.searchGlobal#4bc6589a flags:# folder_id:flags.0?int q:string filter:MessagesFilter min_date:int max_date:int offset_rate:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
	MessagesSearchGlobal(ctx context.Context, in *TLMessagesSearchGlobal, opts ...grpc.CallOption) (*Messages_Messages, error)
	// messages.getDocumentByHash#338e2464 sha256:bytes size:int mime_type:string = Document;
	MessagesGetDocumentByHash(ctx context.Context, in *TLMessagesGetDocumentByHash, opts ...grpc.CallOption) (*Document, error)
	// messages.getMessageEditData#fda68d36 peer:InputPeer id:int = messages.MessageEditData;
	MessagesGetMessageEditData(ctx context.Context, in *TLMessagesGetMessageEditData, opts ...grpc.CallOption) (*Messages_MessageEditData, error)
	// messages.editMessage#48f71778 flags:# no_webpage:flags.1?true peer:InputPeer id:int message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.15?int = Updates;
	MessagesEditMessage(ctx context.Context, in *TLMessagesEditMessage, opts ...grpc.CallOption) (*Updates, error)
	// messages.getWebPage#32ca8f91 url:string hash:int = WebPage;
	MessagesGetWebPage(ctx context.Context, in *TLMessagesGetWebPage, opts ...grpc.CallOption) (*WebPage, error)
	// messages.uploadMedia#519bc2b1 peer:InputPeer media:InputMedia = MessageMedia;
	MessagesUploadMedia(ctx context.Context, in *TLMessagesUploadMedia, opts ...grpc.CallOption) (*MessageMedia, error)
	// messages.getUnreadMentions#46578472 peer:InputPeer offset_id:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
	MessagesGetUnreadMentions(ctx context.Context, in *TLMessagesGetUnreadMentions, opts ...grpc.CallOption) (*Messages_Messages, error)
	// messages.readMentions#f0189d3 peer:InputPeer = messages.AffectedHistory;
	MessagesReadMentions(ctx context.Context, in *TLMessagesReadMentions, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
	// messages.getRecentLocations#bbc45b09 peer:InputPeer limit:int hash:int = messages.Messages;
	MessagesGetRecentLocations(ctx context.Context, in *TLMessagesGetRecentLocations, opts ...grpc.CallOption) (*Messages_Messages, error)
	// messages.sendMultiMedia#2fad5de flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int multi_media:Vector<InputSingleMedia> schedule_date:flags.10?int ttl_seconds:flags.30?int = Updates;
	MessagesSendMultiMedia(ctx context.Context, in *TLMessagesSendMultiMedia, opts ...grpc.CallOption) (*Updates, error)
	// messages.getSplitRanges#1cff7e08 = Vector<MessageRange>;
	MessagesGetSplitRanges(ctx context.Context, in *TLMessagesGetSplitRanges, opts ...grpc.CallOption) (*Vector_MessageRange, error)
	// messages.updatePinnedMessage#d2aaf7ec flags:# silent:flags.0?true unpin:flags.1?true pm_oneside:flags.2?true peer:InputPeer id:int = Updates;
	MessagesUpdatePinnedMessage(ctx context.Context, in *TLMessagesUpdatePinnedMessage, opts ...grpc.CallOption) (*Updates, error)
	// messages.sendVote#10ea6184 peer:InputPeer msg_id:int options:Vector<bytes> = Updates;
	MessagesSendVote(ctx context.Context, in *TLMessagesSendVote, opts ...grpc.CallOption) (*Updates, error)
	// messages.getPollResults#73bb643b peer:InputPeer msg_id:int = Updates;
	MessagesGetPollResults(ctx context.Context, in *TLMessagesGetPollResults, opts ...grpc.CallOption) (*Updates, error)
	// messages.getStatsURL#812c2ae6 flags:# dark:flags.0?true peer:InputPeer params:string = StatsURL;
	MessagesGetStatsURL(ctx context.Context, in *TLMessagesGetStatsURL, opts ...grpc.CallOption) (*StatsURL, error)
	// messages.getEmojiKeywords#35a0e062 lang_code:string = EmojiKeywordsDifference;
	MessagesGetEmojiKeywords(ctx context.Context, in *TLMessagesGetEmojiKeywords, opts ...grpc.CallOption) (*EmojiKeywordsDifference, error)
	// messages.getEmojiKeywordsDifference#1508b6af lang_code:string from_version:int = EmojiKeywordsDifference;
	MessagesGetEmojiKeywordsDifference(ctx context.Context, in *TLMessagesGetEmojiKeywordsDifference, opts ...grpc.CallOption) (*EmojiKeywordsDifference, error)
	// messages.getEmojiKeywordsLanguages#4e9963b2 lang_codes:Vector<string> = Vector<EmojiLanguage>;
	MessagesGetEmojiKeywordsLanguages(ctx context.Context, in *TLMessagesGetEmojiKeywordsLanguages, opts ...grpc.CallOption) (*Vector_EmojiLanguage, error)
	// messages.getEmojiURL#d5b10c26 lang_code:string = EmojiURL;
	MessagesGetEmojiURL(ctx context.Context, in *TLMessagesGetEmojiURL, opts ...grpc.CallOption) (*EmojiURL, error)
	// messages.getSearchCounters#732eef00 peer:InputPeer filters:Vector<MessagesFilter> = Vector<messages.SearchCounter>;
	MessagesGetSearchCounters(ctx context.Context, in *TLMessagesGetSearchCounters, opts ...grpc.CallOption) (*Vector_Messages_SearchCounter, error)
	// messages.requestUrlAuth#e33f5613 peer:InputPeer msg_id:int button_id:int = UrlAuthResult;
	MessagesRequestUrlAuth(ctx context.Context, in *TLMessagesRequestUrlAuth, opts ...grpc.CallOption) (*UrlAuthResult, error)
	// messages.acceptUrlAuth#f729ea98 flags:# write_allowed:flags.0?true peer:InputPeer msg_id:int button_id:int = UrlAuthResult;
	MessagesAcceptUrlAuth(ctx context.Context, in *TLMessagesAcceptUrlAuth, opts ...grpc.CallOption) (*UrlAuthResult, error)
	// messages.getScheduledHistory#e2c2685b peer:InputPeer hash:int = messages.Messages;
	MessagesGetScheduledHistory(ctx context.Context, in *TLMessagesGetScheduledHistory, opts ...grpc.CallOption) (*Messages_Messages, error)
	// messages.getScheduledMessages#bdbb0464 peer:InputPeer id:Vector<int> = messages.Messages;
	MessagesGetScheduledMessages(ctx context.Context, in *TLMessagesGetScheduledMessages, opts ...grpc.CallOption) (*Messages_Messages, error)
	// messages.sendScheduledMessages#bd38850a peer:InputPeer id:Vector<int> = Updates;
	MessagesSendScheduledMessages(ctx context.Context, in *TLMessagesSendScheduledMessages, opts ...grpc.CallOption) (*Updates, error)
	// messages.deleteScheduledMessages#59ae2b16 peer:InputPeer id:Vector<int> = Updates;
	MessagesDeleteScheduledMessages(ctx context.Context, in *TLMessagesDeleteScheduledMessages, opts ...grpc.CallOption) (*Updates, error)
	// messages.getPollVotes#b86e380e flags:# peer:InputPeer id:int option:flags.0?bytes offset:flags.1?string limit:int = messages.VotesList;
	MessagesGetPollVotes(ctx context.Context, in *TLMessagesGetPollVotes, opts ...grpc.CallOption) (*Messages_VotesList, error)
	// messages.getReplies#24b581ba peer:InputPeer msg_id:int offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
	MessagesGetReplies(ctx context.Context, in *TLMessagesGetReplies, opts ...grpc.CallOption) (*Messages_Messages, error)
	// messages.getDiscussionMessage#446972fd peer:InputPeer msg_id:int = messages.DiscussionMessage;
	MessagesGetDiscussionMessage(ctx context.Context, in *TLMessagesGetDiscussionMessage, opts ...grpc.CallOption) (*Messages_DiscussionMessage, error)
	// messages.readDiscussion#f731a9f4 peer:InputPeer msg_id:int read_max_id:int = Bool;
	MessagesReadDiscussion(ctx context.Context, in *TLMessagesReadDiscussion, opts ...grpc.CallOption) (*Bool, error)
	// messages.unpinAllMessages#f025bc8b peer:InputPeer = messages.AffectedHistory;
	MessagesUnpinAllMessages(ctx context.Context, in *TLMessagesUnpinAllMessages, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
	// messages.getMessagesViews#c4c8a55d peer:InputPeer id:Vector<int> increment:Bool = Vector<int>;
	MessagesGetMessagesViewsC4C8A55D(ctx context.Context, in *TLMessagesGetMessagesViewsC4C8A55D, opts ...grpc.CallOption) (*Vector_Int, error)
	// messages.forwardMessage#33963bf9 peer:InputPeer id:int random_id:long = Updates;
	MessagesForwardMessage(ctx context.Context, in *TLMessagesForwardMessage, opts ...grpc.CallOption) (*Updates, error)
	// messages.readHistory#b04f2510 peer:InputPeer max_id:int offset:int = messages.AffectedHistory;
	MessagesReadHistoryB04F2510(ctx context.Context, in *TLMessagesReadHistoryB04F2510, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
}

type rPCMessagesMessageClient struct {
	cc *grpc.ClientConn
}

func NewRPCMessagesMessageClient(cc *grpc.ClientConn) RPCMessagesMessageClient {
	return &rPCMessagesMessageClient{cc}
}

func (c *rPCMessagesMessageClient) MessagesGetMessages(ctx context.Context, in *TLMessagesGetMessages, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetHistory(ctx context.Context, in *TLMessagesGetHistory, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesSearch(ctx context.Context, in *TLMessagesSearch, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesReadHistoryE306D3A(ctx context.Context, in *TLMessagesReadHistoryE306D3A, opts ...grpc.CallOption) (*Messages_AffectedMessages, error) {
	out := new(Messages_AffectedMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_readHistoryE306D3A", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesDeleteHistory(ctx context.Context, in *TLMessagesDeleteHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_deleteHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesDeleteMessages(ctx context.Context, in *TLMessagesDeleteMessages, opts ...grpc.CallOption) (*Messages_AffectedMessages, error) {
	out := new(Messages_AffectedMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_deleteMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesReceivedMessages(ctx context.Context, in *TLMessagesReceivedMessages, opts ...grpc.CallOption) (*Vector_ReceivedNotifyMessage, error) {
	out := new(Vector_ReceivedNotifyMessage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_receivedMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesSendMessage(ctx context.Context, in *TLMessagesSendMessage, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_sendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesSendMedia(ctx context.Context, in *TLMessagesSendMedia, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_sendMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesForwardMessages(ctx context.Context, in *TLMessagesForwardMessages, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_forwardMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesReadMessageContents(ctx context.Context, in *TLMessagesReadMessageContents, opts ...grpc.CallOption) (*Messages_AffectedMessages, error) {
	out := new(Messages_AffectedMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_readMessageContents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetWebPagePreview(ctx context.Context, in *TLMessagesGetWebPagePreview, opts ...grpc.CallOption) (*MessageMedia, error) {
	out := new(MessageMedia)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getWebPagePreview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetMessagesViews5784D3E1(ctx context.Context, in *TLMessagesGetMessagesViews5784D3E1, opts ...grpc.CallOption) (*Messages_MessageViews, error) {
	out := new(Messages_MessageViews)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getMessagesViews5784D3E1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesSearchGlobal(ctx context.Context, in *TLMessagesSearchGlobal, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_searchGlobal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetDocumentByHash(ctx context.Context, in *TLMessagesGetDocumentByHash, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getDocumentByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetMessageEditData(ctx context.Context, in *TLMessagesGetMessageEditData, opts ...grpc.CallOption) (*Messages_MessageEditData, error) {
	out := new(Messages_MessageEditData)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getMessageEditData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesEditMessage(ctx context.Context, in *TLMessagesEditMessage, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_editMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetWebPage(ctx context.Context, in *TLMessagesGetWebPage, opts ...grpc.CallOption) (*WebPage, error) {
	out := new(WebPage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getWebPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesUploadMedia(ctx context.Context, in *TLMessagesUploadMedia, opts ...grpc.CallOption) (*MessageMedia, error) {
	out := new(MessageMedia)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_uploadMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetUnreadMentions(ctx context.Context, in *TLMessagesGetUnreadMentions, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getUnreadMentions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesReadMentions(ctx context.Context, in *TLMessagesReadMentions, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_readMentions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetRecentLocations(ctx context.Context, in *TLMessagesGetRecentLocations, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getRecentLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesSendMultiMedia(ctx context.Context, in *TLMessagesSendMultiMedia, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_sendMultiMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetSplitRanges(ctx context.Context, in *TLMessagesGetSplitRanges, opts ...grpc.CallOption) (*Vector_MessageRange, error) {
	out := new(Vector_MessageRange)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getSplitRanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesUpdatePinnedMessage(ctx context.Context, in *TLMessagesUpdatePinnedMessage, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_updatePinnedMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesSendVote(ctx context.Context, in *TLMessagesSendVote, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_sendVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetPollResults(ctx context.Context, in *TLMessagesGetPollResults, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getPollResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetStatsURL(ctx context.Context, in *TLMessagesGetStatsURL, opts ...grpc.CallOption) (*StatsURL, error) {
	out := new(StatsURL)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getStatsURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetEmojiKeywords(ctx context.Context, in *TLMessagesGetEmojiKeywords, opts ...grpc.CallOption) (*EmojiKeywordsDifference, error) {
	out := new(EmojiKeywordsDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getEmojiKeywords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetEmojiKeywordsDifference(ctx context.Context, in *TLMessagesGetEmojiKeywordsDifference, opts ...grpc.CallOption) (*EmojiKeywordsDifference, error) {
	out := new(EmojiKeywordsDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getEmojiKeywordsDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetEmojiKeywordsLanguages(ctx context.Context, in *TLMessagesGetEmojiKeywordsLanguages, opts ...grpc.CallOption) (*Vector_EmojiLanguage, error) {
	out := new(Vector_EmojiLanguage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getEmojiKeywordsLanguages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetEmojiURL(ctx context.Context, in *TLMessagesGetEmojiURL, opts ...grpc.CallOption) (*EmojiURL, error) {
	out := new(EmojiURL)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getEmojiURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetSearchCounters(ctx context.Context, in *TLMessagesGetSearchCounters, opts ...grpc.CallOption) (*Vector_Messages_SearchCounter, error) {
	out := new(Vector_Messages_SearchCounter)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getSearchCounters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesRequestUrlAuth(ctx context.Context, in *TLMessagesRequestUrlAuth, opts ...grpc.CallOption) (*UrlAuthResult, error) {
	out := new(UrlAuthResult)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_requestUrlAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesAcceptUrlAuth(ctx context.Context, in *TLMessagesAcceptUrlAuth, opts ...grpc.CallOption) (*UrlAuthResult, error) {
	out := new(UrlAuthResult)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_acceptUrlAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetScheduledHistory(ctx context.Context, in *TLMessagesGetScheduledHistory, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getScheduledHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetScheduledMessages(ctx context.Context, in *TLMessagesGetScheduledMessages, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getScheduledMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesSendScheduledMessages(ctx context.Context, in *TLMessagesSendScheduledMessages, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_sendScheduledMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesDeleteScheduledMessages(ctx context.Context, in *TLMessagesDeleteScheduledMessages, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_deleteScheduledMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetPollVotes(ctx context.Context, in *TLMessagesGetPollVotes, opts ...grpc.CallOption) (*Messages_VotesList, error) {
	out := new(Messages_VotesList)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getPollVotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetReplies(ctx context.Context, in *TLMessagesGetReplies, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getReplies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetDiscussionMessage(ctx context.Context, in *TLMessagesGetDiscussionMessage, opts ...grpc.CallOption) (*Messages_DiscussionMessage, error) {
	out := new(Messages_DiscussionMessage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getDiscussionMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesReadDiscussion(ctx context.Context, in *TLMessagesReadDiscussion, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_readDiscussion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesUnpinAllMessages(ctx context.Context, in *TLMessagesUnpinAllMessages, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_unpinAllMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesGetMessagesViewsC4C8A55D(ctx context.Context, in *TLMessagesGetMessagesViewsC4C8A55D, opts ...grpc.CallOption) (*Vector_Int, error) {
	out := new(Vector_Int)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_getMessagesViewsC4C8A55D", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesForwardMessage(ctx context.Context, in *TLMessagesForwardMessage, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_forwardMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesMessageClient) MessagesReadHistoryB04F2510(ctx context.Context, in *TLMessagesReadHistoryB04F2510, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesMessage/messages_readHistoryB04F2510", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCMessagesMessageServer is the server API for RPCMessagesMessage service.
type RPCMessagesMessageServer interface {
	// messages.getMessages#63c66506 id:Vector<InputMessage> = messages.Messages;
	MessagesGetMessages(context.Context, *TLMessagesGetMessages) (*Messages_Messages, error)
	// messages.getHistory#dcbb8260 peer:InputPeer offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
	MessagesGetHistory(context.Context, *TLMessagesGetHistory) (*Messages_Messages, error)
	// messages.search#c352eec flags:# peer:InputPeer q:string from_id:flags.0?InputPeer top_msg_id:flags.1?int filter:MessagesFilter min_date:int max_date:int offset_id:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
	MessagesSearch(context.Context, *TLMessagesSearch) (*Messages_Messages, error)
	// messages.readHistory#e306d3a peer:InputPeer max_id:int = messages.AffectedMessages;
	MessagesReadHistoryE306D3A(context.Context, *TLMessagesReadHistoryE306D3A) (*Messages_AffectedMessages, error)
	// messages.deleteHistory#1c015b09 flags:# just_clear:flags.0?true revoke:flags.1?true peer:InputPeer max_id:int = messages.AffectedHistory;
	MessagesDeleteHistory(context.Context, *TLMessagesDeleteHistory) (*Messages_AffectedHistory, error)
	// messages.deleteMessages#e58e95d2 flags:# revoke:flags.0?true id:Vector<int> = messages.AffectedMessages;
	MessagesDeleteMessages(context.Context, *TLMessagesDeleteMessages) (*Messages_AffectedMessages, error)
	// messages.receivedMessages#5a954c0 max_id:int = Vector<ReceivedNotifyMessage>;
	MessagesReceivedMessages(context.Context, *TLMessagesReceivedMessages) (*Vector_ReceivedNotifyMessage, error)
	// messages.sendMessage#c4ea1590 flags:# no_webpage:flags.1?true silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.10?int ttl_seconds:flags.30?int = Updates;
	MessagesSendMessage(context.Context, *TLMessagesSendMessage) (*Updates, error)
	// messages.sendMedia#ee3a150e flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int media:InputMedia message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.10?int ttl_seconds:flags.30?int = Updates;
	MessagesSendMedia(context.Context, *TLMessagesSendMedia) (*Updates, error)
	// messages.forwardMessages#d9fee60e flags:# silent:flags.5?true background:flags.6?true with_my_score:flags.8?true from_peer:InputPeer id:Vector<int> random_id:Vector<long> to_peer:InputPeer schedule_date:flags.10?int = Updates;
	MessagesForwardMessages(context.Context, *TLMessagesForwardMessages) (*Updates, error)
	// messages.readMessageContents#36a73f77 id:Vector<int> = messages.AffectedMessages;
	MessagesReadMessageContents(context.Context, *TLMessagesReadMessageContents) (*Messages_AffectedMessages, error)
	// messages.getWebPagePreview#8b68b0cc flags:# message:string entities:flags.3?Vector<MessageEntity> = MessageMedia;
	MessagesGetWebPagePreview(context.Context, *TLMessagesGetWebPagePreview) (*MessageMedia, error)
	// messages.getMessagesViews#5784d3e1 peer:InputPeer id:Vector<int> increment:Bool = messages.MessageViews;
	MessagesGetMessagesViews5784D3E1(context.Context, *TLMessagesGetMessagesViews5784D3E1) (*Messages_MessageViews, error)
	// messages.searchGlobal#4bc6589a flags:# folder_id:flags.0?int q:string filter:MessagesFilter min_date:int max_date:int offset_rate:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
	MessagesSearchGlobal(context.Context, *TLMessagesSearchGlobal) (*Messages_Messages, error)
	// messages.getDocumentByHash#338e2464 sha256:bytes size:int mime_type:string = Document;
	MessagesGetDocumentByHash(context.Context, *TLMessagesGetDocumentByHash) (*Document, error)
	// messages.getMessageEditData#fda68d36 peer:InputPeer id:int = messages.MessageEditData;
	MessagesGetMessageEditData(context.Context, *TLMessagesGetMessageEditData) (*Messages_MessageEditData, error)
	// messages.editMessage#48f71778 flags:# no_webpage:flags.1?true peer:InputPeer id:int message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.15?int = Updates;
	MessagesEditMessage(context.Context, *TLMessagesEditMessage) (*Updates, error)
	// messages.getWebPage#32ca8f91 url:string hash:int = WebPage;
	MessagesGetWebPage(context.Context, *TLMessagesGetWebPage) (*WebPage, error)
	// messages.uploadMedia#519bc2b1 peer:InputPeer media:InputMedia = MessageMedia;
	MessagesUploadMedia(context.Context, *TLMessagesUploadMedia) (*MessageMedia, error)
	// messages.getUnreadMentions#46578472 peer:InputPeer offset_id:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
	MessagesGetUnreadMentions(context.Context, *TLMessagesGetUnreadMentions) (*Messages_Messages, error)
	// messages.readMentions#f0189d3 peer:InputPeer = messages.AffectedHistory;
	MessagesReadMentions(context.Context, *TLMessagesReadMentions) (*Messages_AffectedHistory, error)
	// messages.getRecentLocations#bbc45b09 peer:InputPeer limit:int hash:int = messages.Messages;
	MessagesGetRecentLocations(context.Context, *TLMessagesGetRecentLocations) (*Messages_Messages, error)
	// messages.sendMultiMedia#2fad5de flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int multi_media:Vector<InputSingleMedia> schedule_date:flags.10?int ttl_seconds:flags.30?int = Updates;
	MessagesSendMultiMedia(context.Context, *TLMessagesSendMultiMedia) (*Updates, error)
	// messages.getSplitRanges#1cff7e08 = Vector<MessageRange>;
	MessagesGetSplitRanges(context.Context, *TLMessagesGetSplitRanges) (*Vector_MessageRange, error)
	// messages.updatePinnedMessage#d2aaf7ec flags:# silent:flags.0?true unpin:flags.1?true pm_oneside:flags.2?true peer:InputPeer id:int = Updates;
	MessagesUpdatePinnedMessage(context.Context, *TLMessagesUpdatePinnedMessage) (*Updates, error)
	// messages.sendVote#10ea6184 peer:InputPeer msg_id:int options:Vector<bytes> = Updates;
	MessagesSendVote(context.Context, *TLMessagesSendVote) (*Updates, error)
	// messages.getPollResults#73bb643b peer:InputPeer msg_id:int = Updates;
	MessagesGetPollResults(context.Context, *TLMessagesGetPollResults) (*Updates, error)
	// messages.getStatsURL#812c2ae6 flags:# dark:flags.0?true peer:InputPeer params:string = StatsURL;
	MessagesGetStatsURL(context.Context, *TLMessagesGetStatsURL) (*StatsURL, error)
	// messages.getEmojiKeywords#35a0e062 lang_code:string = EmojiKeywordsDifference;
	MessagesGetEmojiKeywords(context.Context, *TLMessagesGetEmojiKeywords) (*EmojiKeywordsDifference, error)
	// messages.getEmojiKeywordsDifference#1508b6af lang_code:string from_version:int = EmojiKeywordsDifference;
	MessagesGetEmojiKeywordsDifference(context.Context, *TLMessagesGetEmojiKeywordsDifference) (*EmojiKeywordsDifference, error)
	// messages.getEmojiKeywordsLanguages#4e9963b2 lang_codes:Vector<string> = Vector<EmojiLanguage>;
	MessagesGetEmojiKeywordsLanguages(context.Context, *TLMessagesGetEmojiKeywordsLanguages) (*Vector_EmojiLanguage, error)
	// messages.getEmojiURL#d5b10c26 lang_code:string = EmojiURL;
	MessagesGetEmojiURL(context.Context, *TLMessagesGetEmojiURL) (*EmojiURL, error)
	// messages.getSearchCounters#732eef00 peer:InputPeer filters:Vector<MessagesFilter> = Vector<messages.SearchCounter>;
	MessagesGetSearchCounters(context.Context, *TLMessagesGetSearchCounters) (*Vector_Messages_SearchCounter, error)
	// messages.requestUrlAuth#e33f5613 peer:InputPeer msg_id:int button_id:int = UrlAuthResult;
	MessagesRequestUrlAuth(context.Context, *TLMessagesRequestUrlAuth) (*UrlAuthResult, error)
	// messages.acceptUrlAuth#f729ea98 flags:# write_allowed:flags.0?true peer:InputPeer msg_id:int button_id:int = UrlAuthResult;
	MessagesAcceptUrlAuth(context.Context, *TLMessagesAcceptUrlAuth) (*UrlAuthResult, error)
	// messages.getScheduledHistory#e2c2685b peer:InputPeer hash:int = messages.Messages;
	MessagesGetScheduledHistory(context.Context, *TLMessagesGetScheduledHistory) (*Messages_Messages, error)
	// messages.getScheduledMessages#bdbb0464 peer:InputPeer id:Vector<int> = messages.Messages;
	MessagesGetScheduledMessages(context.Context, *TLMessagesGetScheduledMessages) (*Messages_Messages, error)
	// messages.sendScheduledMessages#bd38850a peer:InputPeer id:Vector<int> = Updates;
	MessagesSendScheduledMessages(context.Context, *TLMessagesSendScheduledMessages) (*Updates, error)
	// messages.deleteScheduledMessages#59ae2b16 peer:InputPeer id:Vector<int> = Updates;
	MessagesDeleteScheduledMessages(context.Context, *TLMessagesDeleteScheduledMessages) (*Updates, error)
	// messages.getPollVotes#b86e380e flags:# peer:InputPeer id:int option:flags.0?bytes offset:flags.1?string limit:int = messages.VotesList;
	MessagesGetPollVotes(context.Context, *TLMessagesGetPollVotes) (*Messages_VotesList, error)
	// messages.getReplies#24b581ba peer:InputPeer msg_id:int offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
	MessagesGetReplies(context.Context, *TLMessagesGetReplies) (*Messages_Messages, error)
	// messages.getDiscussionMessage#446972fd peer:InputPeer msg_id:int = messages.DiscussionMessage;
	MessagesGetDiscussionMessage(context.Context, *TLMessagesGetDiscussionMessage) (*Messages_DiscussionMessage, error)
	// messages.readDiscussion#f731a9f4 peer:InputPeer msg_id:int read_max_id:int = Bool;
	MessagesReadDiscussion(context.Context, *TLMessagesReadDiscussion) (*Bool, error)
	// messages.unpinAllMessages#f025bc8b peer:InputPeer = messages.AffectedHistory;
	MessagesUnpinAllMessages(context.Context, *TLMessagesUnpinAllMessages) (*Messages_AffectedHistory, error)
	// messages.getMessagesViews#c4c8a55d peer:InputPeer id:Vector<int> increment:Bool = Vector<int>;
	MessagesGetMessagesViewsC4C8A55D(context.Context, *TLMessagesGetMessagesViewsC4C8A55D) (*Vector_Int, error)
	// messages.forwardMessage#33963bf9 peer:InputPeer id:int random_id:long = Updates;
	MessagesForwardMessage(context.Context, *TLMessagesForwardMessage) (*Updates, error)
	// messages.readHistory#b04f2510 peer:InputPeer max_id:int offset:int = messages.AffectedHistory;
	MessagesReadHistoryB04F2510(context.Context, *TLMessagesReadHistoryB04F2510) (*Messages_AffectedHistory, error)
}

func RegisterRPCMessagesMessageServer(s *grpc.Server, srv RPCMessagesMessageServer) {
	s.RegisterService(&_RPCMessagesMessage_serviceDesc, srv)
}

func _RPCMessagesMessage_MessagesGetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetMessages(ctx, req.(*TLMessagesGetMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetHistory(ctx, req.(*TLMessagesGetHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSearch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesSearch(ctx, req.(*TLMessagesSearch))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesReadHistoryE306D3A_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadHistoryE306D3A)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesReadHistoryE306D3A(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesReadHistoryE306D3A",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesReadHistoryE306D3A(ctx, req.(*TLMessagesReadHistoryE306D3A))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesDeleteHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesDeleteHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesDeleteHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesDeleteHistory(ctx, req.(*TLMessagesDeleteHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesDeleteMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesDeleteMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesDeleteMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesDeleteMessages(ctx, req.(*TLMessagesDeleteMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesReceivedMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReceivedMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesReceivedMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesReceivedMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesReceivedMessages(ctx, req.(*TLMessagesReceivedMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesSendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesSendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesSendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesSendMessage(ctx, req.(*TLMessagesSendMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesSendMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendMedia)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesSendMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesSendMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesSendMedia(ctx, req.(*TLMessagesSendMedia))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesForwardMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesForwardMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesForwardMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesForwardMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesForwardMessages(ctx, req.(*TLMessagesForwardMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesReadMessageContents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadMessageContents)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesReadMessageContents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesReadMessageContents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesReadMessageContents(ctx, req.(*TLMessagesReadMessageContents))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetWebPagePreview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetWebPagePreview)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetWebPagePreview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetWebPagePreview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetWebPagePreview(ctx, req.(*TLMessagesGetWebPagePreview))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetMessagesViews5784D3E1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMessagesViews5784D3E1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetMessagesViews5784D3E1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetMessagesViews5784D3E1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetMessagesViews5784D3E1(ctx, req.(*TLMessagesGetMessagesViews5784D3E1))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesSearchGlobal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSearchGlobal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesSearchGlobal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesSearchGlobal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesSearchGlobal(ctx, req.(*TLMessagesSearchGlobal))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetDocumentByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDocumentByHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetDocumentByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetDocumentByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetDocumentByHash(ctx, req.(*TLMessagesGetDocumentByHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetMessageEditData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMessageEditData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetMessageEditData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetMessageEditData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetMessageEditData(ctx, req.(*TLMessagesGetMessageEditData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesEditMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesEditMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesEditMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesEditMessage(ctx, req.(*TLMessagesEditMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetWebPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetWebPage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetWebPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetWebPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetWebPage(ctx, req.(*TLMessagesGetWebPage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesUploadMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUploadMedia)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesUploadMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesUploadMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesUploadMedia(ctx, req.(*TLMessagesUploadMedia))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetUnreadMentions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetUnreadMentions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetUnreadMentions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetUnreadMentions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetUnreadMentions(ctx, req.(*TLMessagesGetUnreadMentions))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesReadMentions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadMentions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesReadMentions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesReadMentions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesReadMentions(ctx, req.(*TLMessagesReadMentions))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetRecentLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetRecentLocations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetRecentLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetRecentLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetRecentLocations(ctx, req.(*TLMessagesGetRecentLocations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesSendMultiMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendMultiMedia)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesSendMultiMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesSendMultiMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesSendMultiMedia(ctx, req.(*TLMessagesSendMultiMedia))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetSplitRanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetSplitRanges)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetSplitRanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetSplitRanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetSplitRanges(ctx, req.(*TLMessagesGetSplitRanges))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesUpdatePinnedMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUpdatePinnedMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesUpdatePinnedMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesUpdatePinnedMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesUpdatePinnedMessage(ctx, req.(*TLMessagesUpdatePinnedMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesSendVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendVote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesSendVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesSendVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesSendVote(ctx, req.(*TLMessagesSendVote))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetPollResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPollResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetPollResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetPollResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetPollResults(ctx, req.(*TLMessagesGetPollResults))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetStatsURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetStatsURL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetStatsURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetStatsURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetStatsURL(ctx, req.(*TLMessagesGetStatsURL))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetEmojiKeywords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetEmojiKeywords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetEmojiKeywords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetEmojiKeywords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetEmojiKeywords(ctx, req.(*TLMessagesGetEmojiKeywords))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetEmojiKeywordsDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetEmojiKeywordsDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetEmojiKeywordsDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetEmojiKeywordsDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetEmojiKeywordsDifference(ctx, req.(*TLMessagesGetEmojiKeywordsDifference))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetEmojiKeywordsLanguages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetEmojiKeywordsLanguages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetEmojiKeywordsLanguages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetEmojiKeywordsLanguages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetEmojiKeywordsLanguages(ctx, req.(*TLMessagesGetEmojiKeywordsLanguages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetEmojiURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetEmojiURL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetEmojiURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetEmojiURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetEmojiURL(ctx, req.(*TLMessagesGetEmojiURL))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetSearchCounters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetSearchCounters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetSearchCounters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetSearchCounters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetSearchCounters(ctx, req.(*TLMessagesGetSearchCounters))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesRequestUrlAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesRequestUrlAuth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesRequestUrlAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesRequestUrlAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesRequestUrlAuth(ctx, req.(*TLMessagesRequestUrlAuth))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesAcceptUrlAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesAcceptUrlAuth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesAcceptUrlAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesAcceptUrlAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesAcceptUrlAuth(ctx, req.(*TLMessagesAcceptUrlAuth))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetScheduledHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetScheduledHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetScheduledHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetScheduledHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetScheduledHistory(ctx, req.(*TLMessagesGetScheduledHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetScheduledMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetScheduledMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetScheduledMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetScheduledMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetScheduledMessages(ctx, req.(*TLMessagesGetScheduledMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesSendScheduledMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendScheduledMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesSendScheduledMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesSendScheduledMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesSendScheduledMessages(ctx, req.(*TLMessagesSendScheduledMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesDeleteScheduledMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteScheduledMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesDeleteScheduledMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesDeleteScheduledMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesDeleteScheduledMessages(ctx, req.(*TLMessagesDeleteScheduledMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetPollVotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPollVotes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetPollVotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetPollVotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetPollVotes(ctx, req.(*TLMessagesGetPollVotes))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetReplies)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetReplies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetReplies(ctx, req.(*TLMessagesGetReplies))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetDiscussionMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDiscussionMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetDiscussionMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetDiscussionMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetDiscussionMessage(ctx, req.(*TLMessagesGetDiscussionMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesReadDiscussion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadDiscussion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesReadDiscussion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesReadDiscussion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesReadDiscussion(ctx, req.(*TLMessagesReadDiscussion))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesUnpinAllMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUnpinAllMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesUnpinAllMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesUnpinAllMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesUnpinAllMessages(ctx, req.(*TLMessagesUnpinAllMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesGetMessagesViewsC4C8A55D_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMessagesViewsC4C8A55D)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesGetMessagesViewsC4C8A55D(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesGetMessagesViewsC4C8A55D",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesGetMessagesViewsC4C8A55D(ctx, req.(*TLMessagesGetMessagesViewsC4C8A55D))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesForwardMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesForwardMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesForwardMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesForwardMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesForwardMessage(ctx, req.(*TLMessagesForwardMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesMessage_MessagesReadHistoryB04F2510_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadHistoryB04F2510)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesMessageServer).MessagesReadHistoryB04F2510(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesMessage/MessagesReadHistoryB04F2510",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesMessageServer).MessagesReadHistoryB04F2510(ctx, req.(*TLMessagesReadHistoryB04F2510))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCMessagesMessage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCMessagesMessage",
	HandlerType: (*RPCMessagesMessageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getMessages",
			Handler:    _RPCMessagesMessage_MessagesGetMessages_Handler,
		},
		{
			MethodName: "messages_getHistory",
			Handler:    _RPCMessagesMessage_MessagesGetHistory_Handler,
		},
		{
			MethodName: "messages_search",
			Handler:    _RPCMessagesMessage_MessagesSearch_Handler,
		},
		{
			MethodName: "messages_readHistoryE306D3A",
			Handler:    _RPCMessagesMessage_MessagesReadHistoryE306D3A_Handler,
		},
		{
			MethodName: "messages_deleteHistory",
			Handler:    _RPCMessagesMessage_MessagesDeleteHistory_Handler,
		},
		{
			MethodName: "messages_deleteMessages",
			Handler:    _RPCMessagesMessage_MessagesDeleteMessages_Handler,
		},
		{
			MethodName: "messages_receivedMessages",
			Handler:    _RPCMessagesMessage_MessagesReceivedMessages_Handler,
		},
		{
			MethodName: "messages_sendMessage",
			Handler:    _RPCMessagesMessage_MessagesSendMessage_Handler,
		},
		{
			MethodName: "messages_sendMedia",
			Handler:    _RPCMessagesMessage_MessagesSendMedia_Handler,
		},
		{
			MethodName: "messages_forwardMessages",
			Handler:    _RPCMessagesMessage_MessagesForwardMessages_Handler,
		},
		{
			MethodName: "messages_readMessageContents",
			Handler:    _RPCMessagesMessage_MessagesReadMessageContents_Handler,
		},
		{
			MethodName: "messages_getWebPagePreview",
			Handler:    _RPCMessagesMessage_MessagesGetWebPagePreview_Handler,
		},
		{
			MethodName: "messages_getMessagesViews5784D3E1",
			Handler:    _RPCMessagesMessage_MessagesGetMessagesViews5784D3E1_Handler,
		},
		{
			MethodName: "messages_searchGlobal",
			Handler:    _RPCMessagesMessage_MessagesSearchGlobal_Handler,
		},
		{
			MethodName: "messages_getDocumentByHash",
			Handler:    _RPCMessagesMessage_MessagesGetDocumentByHash_Handler,
		},
		{
			MethodName: "messages_getMessageEditData",
			Handler:    _RPCMessagesMessage_MessagesGetMessageEditData_Handler,
		},
		{
			MethodName: "messages_editMessage",
			Handler:    _RPCMessagesMessage_MessagesEditMessage_Handler,
		},
		{
			MethodName: "messages_getWebPage",
			Handler:    _RPCMessagesMessage_MessagesGetWebPage_Handler,
		},
		{
			MethodName: "messages_uploadMedia",
			Handler:    _RPCMessagesMessage_MessagesUploadMedia_Handler,
		},
		{
			MethodName: "messages_getUnreadMentions",
			Handler:    _RPCMessagesMessage_MessagesGetUnreadMentions_Handler,
		},
		{
			MethodName: "messages_readMentions",
			Handler:    _RPCMessagesMessage_MessagesReadMentions_Handler,
		},
		{
			MethodName: "messages_getRecentLocations",
			Handler:    _RPCMessagesMessage_MessagesGetRecentLocations_Handler,
		},
		{
			MethodName: "messages_sendMultiMedia",
			Handler:    _RPCMessagesMessage_MessagesSendMultiMedia_Handler,
		},
		{
			MethodName: "messages_getSplitRanges",
			Handler:    _RPCMessagesMessage_MessagesGetSplitRanges_Handler,
		},
		{
			MethodName: "messages_updatePinnedMessage",
			Handler:    _RPCMessagesMessage_MessagesUpdatePinnedMessage_Handler,
		},
		{
			MethodName: "messages_sendVote",
			Handler:    _RPCMessagesMessage_MessagesSendVote_Handler,
		},
		{
			MethodName: "messages_getPollResults",
			Handler:    _RPCMessagesMessage_MessagesGetPollResults_Handler,
		},
		{
			MethodName: "messages_getStatsURL",
			Handler:    _RPCMessagesMessage_MessagesGetStatsURL_Handler,
		},
		{
			MethodName: "messages_getEmojiKeywords",
			Handler:    _RPCMessagesMessage_MessagesGetEmojiKeywords_Handler,
		},
		{
			MethodName: "messages_getEmojiKeywordsDifference",
			Handler:    _RPCMessagesMessage_MessagesGetEmojiKeywordsDifference_Handler,
		},
		{
			MethodName: "messages_getEmojiKeywordsLanguages",
			Handler:    _RPCMessagesMessage_MessagesGetEmojiKeywordsLanguages_Handler,
		},
		{
			MethodName: "messages_getEmojiURL",
			Handler:    _RPCMessagesMessage_MessagesGetEmojiURL_Handler,
		},
		{
			MethodName: "messages_getSearchCounters",
			Handler:    _RPCMessagesMessage_MessagesGetSearchCounters_Handler,
		},
		{
			MethodName: "messages_requestUrlAuth",
			Handler:    _RPCMessagesMessage_MessagesRequestUrlAuth_Handler,
		},
		{
			MethodName: "messages_acceptUrlAuth",
			Handler:    _RPCMessagesMessage_MessagesAcceptUrlAuth_Handler,
		},
		{
			MethodName: "messages_getScheduledHistory",
			Handler:    _RPCMessagesMessage_MessagesGetScheduledHistory_Handler,
		},
		{
			MethodName: "messages_getScheduledMessages",
			Handler:    _RPCMessagesMessage_MessagesGetScheduledMessages_Handler,
		},
		{
			MethodName: "messages_sendScheduledMessages",
			Handler:    _RPCMessagesMessage_MessagesSendScheduledMessages_Handler,
		},
		{
			MethodName: "messages_deleteScheduledMessages",
			Handler:    _RPCMessagesMessage_MessagesDeleteScheduledMessages_Handler,
		},
		{
			MethodName: "messages_getPollVotes",
			Handler:    _RPCMessagesMessage_MessagesGetPollVotes_Handler,
		},
		{
			MethodName: "messages_getReplies",
			Handler:    _RPCMessagesMessage_MessagesGetReplies_Handler,
		},
		{
			MethodName: "messages_getDiscussionMessage",
			Handler:    _RPCMessagesMessage_MessagesGetDiscussionMessage_Handler,
		},
		{
			MethodName: "messages_readDiscussion",
			Handler:    _RPCMessagesMessage_MessagesReadDiscussion_Handler,
		},
		{
			MethodName: "messages_unpinAllMessages",
			Handler:    _RPCMessagesMessage_MessagesUnpinAllMessages_Handler,
		},
		{
			MethodName: "messages_getMessagesViewsC4C8A55D",
			Handler:    _RPCMessagesMessage_MessagesGetMessagesViewsC4C8A55D_Handler,
		},
		{
			MethodName: "messages_forwardMessage",
			Handler:    _RPCMessagesMessage_MessagesForwardMessage_Handler,
		},
		{
			MethodName: "messages_readHistoryB04F2510",
			Handler:    _RPCMessagesMessage_MessagesReadHistoryB04F2510_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCMessagesDialogClient is the client API for RPCMessagesDialog service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCMessagesDialogClient interface {
	// messages.getDialogs#a0ee3b73 flags:# exclude_pinned:flags.0?true folder_id:flags.1?int offset_date:int offset_id:int offset_peer:InputPeer limit:int hash:int = messages.Dialogs;
	MessagesGetDialogs(ctx context.Context, in *TLMessagesGetDialogs, opts ...grpc.CallOption) (*Messages_Dialogs, error)
	// messages.setTyping#58943ee2 flags:# peer:InputPeer top_msg_id:flags.0?int action:SendMessageAction = Bool;
	MessagesSetTyping(ctx context.Context, in *TLMessagesSetTyping, opts ...grpc.CallOption) (*Bool, error)
	// messages.reportSpam#cf1592db peer:InputPeer = Bool;
	MessagesReportSpam(ctx context.Context, in *TLMessagesReportSpam, opts ...grpc.CallOption) (*Bool, error)
	// messages.getPeerSettings#3672e09c peer:InputPeer = PeerSettings;
	MessagesGetPeerSettings(ctx context.Context, in *TLMessagesGetPeerSettings, opts ...grpc.CallOption) (*PeerSettings, error)
	// messages.report#bd82b658 peer:InputPeer id:Vector<int> reason:ReportReason = Bool;
	MessagesReport(ctx context.Context, in *TLMessagesReport, opts ...grpc.CallOption) (*Bool, error)
	// messages.getPeerDialogs#e470bcfd peers:Vector<InputDialogPeer> = messages.PeerDialogs;
	MessagesGetPeerDialogs(ctx context.Context, in *TLMessagesGetPeerDialogs, opts ...grpc.CallOption) (*Messages_PeerDialogs, error)
	// messages.saveDraft#bc39e14b flags:# no_webpage:flags.1?true reply_to_msg_id:flags.0?int peer:InputPeer message:string entities:flags.3?Vector<MessageEntity> = Bool;
	MessagesSaveDraft(ctx context.Context, in *TLMessagesSaveDraft, opts ...grpc.CallOption) (*Bool, error)
	// messages.getAllDrafts#6a3f8d65 = Updates;
	MessagesGetAllDrafts(ctx context.Context, in *TLMessagesGetAllDrafts, opts ...grpc.CallOption) (*Updates, error)
	// messages.toggleDialogPin#a731e257 flags:# pinned:flags.0?true peer:InputDialogPeer = Bool;
	MessagesToggleDialogPin(ctx context.Context, in *TLMessagesToggleDialogPin, opts ...grpc.CallOption) (*Bool, error)
	// messages.reorderPinnedDialogs#3b1adf37 flags:# force:flags.0?true folder_id:int order:Vector<InputDialogPeer> = Bool;
	MessagesReorderPinnedDialogs(ctx context.Context, in *TLMessagesReorderPinnedDialogs, opts ...grpc.CallOption) (*Bool, error)
	// messages.getPinnedDialogs#d6b94df2 folder_id:int = messages.PeerDialogs;
	MessagesGetPinnedDialogs(ctx context.Context, in *TLMessagesGetPinnedDialogs, opts ...grpc.CallOption) (*Messages_PeerDialogs, error)
	// messages.sendScreenshotNotification#c97df020 peer:InputPeer reply_to_msg_id:int random_id:long = Updates;
	MessagesSendScreenshotNotification(ctx context.Context, in *TLMessagesSendScreenshotNotification, opts ...grpc.CallOption) (*Updates, error)
	// messages.markDialogUnread#c286d98f flags:# unread:flags.0?true peer:InputDialogPeer = Bool;
	MessagesMarkDialogUnread(ctx context.Context, in *TLMessagesMarkDialogUnread, opts ...grpc.CallOption) (*Bool, error)
	// messages.getDialogUnreadMarks#22e24e22 = Vector<DialogPeer>;
	MessagesGetDialogUnreadMarks(ctx context.Context, in *TLMessagesGetDialogUnreadMarks, opts ...grpc.CallOption) (*Vector_DialogPeer, error)
	// messages.clearAllDrafts#7e58ee9c = Bool;
	MessagesClearAllDrafts(ctx context.Context, in *TLMessagesClearAllDrafts, opts ...grpc.CallOption) (*Bool, error)
	// messages.getOnlines#6e2be050 peer:InputPeer = ChatOnlines;
	MessagesGetOnlines(ctx context.Context, in *TLMessagesGetOnlines, opts ...grpc.CallOption) (*ChatOnlines, error)
	// messages.hidePeerSettingsBar#4facb138 peer:InputPeer = Bool;
	MessagesHidePeerSettingsBar(ctx context.Context, in *TLMessagesHidePeerSettingsBar, opts ...grpc.CallOption) (*Bool, error)
	// messages.getDialogFilters#f19ed96d = Vector<DialogFilter>;
	MessagesGetDialogFilters(ctx context.Context, in *TLMessagesGetDialogFilters, opts ...grpc.CallOption) (*Vector_DialogFilter, error)
	// messages.getSuggestedDialogFilters#a29cd42c = Vector<DialogFilterSuggested>;
	MessagesGetSuggestedDialogFilters(ctx context.Context, in *TLMessagesGetSuggestedDialogFilters, opts ...grpc.CallOption) (*Vector_DialogFilterSuggested, error)
	// messages.updateDialogFilter#1ad4a04a flags:# id:int filter:flags.0?DialogFilter = Bool;
	MessagesUpdateDialogFilter(ctx context.Context, in *TLMessagesUpdateDialogFilter, opts ...grpc.CallOption) (*Bool, error)
	// messages.updateDialogFiltersOrder#c563c1e4 order:Vector<int> = Bool;
	MessagesUpdateDialogFiltersOrder(ctx context.Context, in *TLMessagesUpdateDialogFiltersOrder, opts ...grpc.CallOption) (*Bool, error)
	// messages.hideReportSpam#a8f1709b peer:InputPeer = Bool;
	MessagesHideReportSpam(ctx context.Context, in *TLMessagesHideReportSpam, opts ...grpc.CallOption) (*Bool, error)
}

type rPCMessagesDialogClient struct {
	cc *grpc.ClientConn
}

func NewRPCMessagesDialogClient(cc *grpc.ClientConn) RPCMessagesDialogClient {
	return &rPCMessagesDialogClient{cc}
}

func (c *rPCMessagesDialogClient) MessagesGetDialogs(ctx context.Context, in *TLMessagesGetDialogs, opts ...grpc.CallOption) (*Messages_Dialogs, error) {
	out := new(Messages_Dialogs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_getDialogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesSetTyping(ctx context.Context, in *TLMessagesSetTyping, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_setTyping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesReportSpam(ctx context.Context, in *TLMessagesReportSpam, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_reportSpam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesGetPeerSettings(ctx context.Context, in *TLMessagesGetPeerSettings, opts ...grpc.CallOption) (*PeerSettings, error) {
	out := new(PeerSettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_getPeerSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesReport(ctx context.Context, in *TLMessagesReport, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_report", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesGetPeerDialogs(ctx context.Context, in *TLMessagesGetPeerDialogs, opts ...grpc.CallOption) (*Messages_PeerDialogs, error) {
	out := new(Messages_PeerDialogs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_getPeerDialogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesSaveDraft(ctx context.Context, in *TLMessagesSaveDraft, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_saveDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesGetAllDrafts(ctx context.Context, in *TLMessagesGetAllDrafts, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_getAllDrafts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesToggleDialogPin(ctx context.Context, in *TLMessagesToggleDialogPin, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_toggleDialogPin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesReorderPinnedDialogs(ctx context.Context, in *TLMessagesReorderPinnedDialogs, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_reorderPinnedDialogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesGetPinnedDialogs(ctx context.Context, in *TLMessagesGetPinnedDialogs, opts ...grpc.CallOption) (*Messages_PeerDialogs, error) {
	out := new(Messages_PeerDialogs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_getPinnedDialogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesSendScreenshotNotification(ctx context.Context, in *TLMessagesSendScreenshotNotification, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_sendScreenshotNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesMarkDialogUnread(ctx context.Context, in *TLMessagesMarkDialogUnread, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_markDialogUnread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesGetDialogUnreadMarks(ctx context.Context, in *TLMessagesGetDialogUnreadMarks, opts ...grpc.CallOption) (*Vector_DialogPeer, error) {
	out := new(Vector_DialogPeer)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_getDialogUnreadMarks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesClearAllDrafts(ctx context.Context, in *TLMessagesClearAllDrafts, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_clearAllDrafts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesGetOnlines(ctx context.Context, in *TLMessagesGetOnlines, opts ...grpc.CallOption) (*ChatOnlines, error) {
	out := new(ChatOnlines)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_getOnlines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesHidePeerSettingsBar(ctx context.Context, in *TLMessagesHidePeerSettingsBar, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_hidePeerSettingsBar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesGetDialogFilters(ctx context.Context, in *TLMessagesGetDialogFilters, opts ...grpc.CallOption) (*Vector_DialogFilter, error) {
	out := new(Vector_DialogFilter)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_getDialogFilters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesGetSuggestedDialogFilters(ctx context.Context, in *TLMessagesGetSuggestedDialogFilters, opts ...grpc.CallOption) (*Vector_DialogFilterSuggested, error) {
	out := new(Vector_DialogFilterSuggested)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_getSuggestedDialogFilters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesUpdateDialogFilter(ctx context.Context, in *TLMessagesUpdateDialogFilter, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_updateDialogFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesUpdateDialogFiltersOrder(ctx context.Context, in *TLMessagesUpdateDialogFiltersOrder, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_updateDialogFiltersOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesDialogClient) MessagesHideReportSpam(ctx context.Context, in *TLMessagesHideReportSpam, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesDialog/messages_hideReportSpam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCMessagesDialogServer is the server API for RPCMessagesDialog service.
type RPCMessagesDialogServer interface {
	// messages.getDialogs#a0ee3b73 flags:# exclude_pinned:flags.0?true folder_id:flags.1?int offset_date:int offset_id:int offset_peer:InputPeer limit:int hash:int = messages.Dialogs;
	MessagesGetDialogs(context.Context, *TLMessagesGetDialogs) (*Messages_Dialogs, error)
	// messages.setTyping#58943ee2 flags:# peer:InputPeer top_msg_id:flags.0?int action:SendMessageAction = Bool;
	MessagesSetTyping(context.Context, *TLMessagesSetTyping) (*Bool, error)
	// messages.reportSpam#cf1592db peer:InputPeer = Bool;
	MessagesReportSpam(context.Context, *TLMessagesReportSpam) (*Bool, error)
	// messages.getPeerSettings#3672e09c peer:InputPeer = PeerSettings;
	MessagesGetPeerSettings(context.Context, *TLMessagesGetPeerSettings) (*PeerSettings, error)
	// messages.report#bd82b658 peer:InputPeer id:Vector<int> reason:ReportReason = Bool;
	MessagesReport(context.Context, *TLMessagesReport) (*Bool, error)
	// messages.getPeerDialogs#e470bcfd peers:Vector<InputDialogPeer> = messages.PeerDialogs;
	MessagesGetPeerDialogs(context.Context, *TLMessagesGetPeerDialogs) (*Messages_PeerDialogs, error)
	// messages.saveDraft#bc39e14b flags:# no_webpage:flags.1?true reply_to_msg_id:flags.0?int peer:InputPeer message:string entities:flags.3?Vector<MessageEntity> = Bool;
	MessagesSaveDraft(context.Context, *TLMessagesSaveDraft) (*Bool, error)
	// messages.getAllDrafts#6a3f8d65 = Updates;
	MessagesGetAllDrafts(context.Context, *TLMessagesGetAllDrafts) (*Updates, error)
	// messages.toggleDialogPin#a731e257 flags:# pinned:flags.0?true peer:InputDialogPeer = Bool;
	MessagesToggleDialogPin(context.Context, *TLMessagesToggleDialogPin) (*Bool, error)
	// messages.reorderPinnedDialogs#3b1adf37 flags:# force:flags.0?true folder_id:int order:Vector<InputDialogPeer> = Bool;
	MessagesReorderPinnedDialogs(context.Context, *TLMessagesReorderPinnedDialogs) (*Bool, error)
	// messages.getPinnedDialogs#d6b94df2 folder_id:int = messages.PeerDialogs;
	MessagesGetPinnedDialogs(context.Context, *TLMessagesGetPinnedDialogs) (*Messages_PeerDialogs, error)
	// messages.sendScreenshotNotification#c97df020 peer:InputPeer reply_to_msg_id:int random_id:long = Updates;
	MessagesSendScreenshotNotification(context.Context, *TLMessagesSendScreenshotNotification) (*Updates, error)
	// messages.markDialogUnread#c286d98f flags:# unread:flags.0?true peer:InputDialogPeer = Bool;
	MessagesMarkDialogUnread(context.Context, *TLMessagesMarkDialogUnread) (*Bool, error)
	// messages.getDialogUnreadMarks#22e24e22 = Vector<DialogPeer>;
	MessagesGetDialogUnreadMarks(context.Context, *TLMessagesGetDialogUnreadMarks) (*Vector_DialogPeer, error)
	// messages.clearAllDrafts#7e58ee9c = Bool;
	MessagesClearAllDrafts(context.Context, *TLMessagesClearAllDrafts) (*Bool, error)
	// messages.getOnlines#6e2be050 peer:InputPeer = ChatOnlines;
	MessagesGetOnlines(context.Context, *TLMessagesGetOnlines) (*ChatOnlines, error)
	// messages.hidePeerSettingsBar#4facb138 peer:InputPeer = Bool;
	MessagesHidePeerSettingsBar(context.Context, *TLMessagesHidePeerSettingsBar) (*Bool, error)
	// messages.getDialogFilters#f19ed96d = Vector<DialogFilter>;
	MessagesGetDialogFilters(context.Context, *TLMessagesGetDialogFilters) (*Vector_DialogFilter, error)
	// messages.getSuggestedDialogFilters#a29cd42c = Vector<DialogFilterSuggested>;
	MessagesGetSuggestedDialogFilters(context.Context, *TLMessagesGetSuggestedDialogFilters) (*Vector_DialogFilterSuggested, error)
	// messages.updateDialogFilter#1ad4a04a flags:# id:int filter:flags.0?DialogFilter = Bool;
	MessagesUpdateDialogFilter(context.Context, *TLMessagesUpdateDialogFilter) (*Bool, error)
	// messages.updateDialogFiltersOrder#c563c1e4 order:Vector<int> = Bool;
	MessagesUpdateDialogFiltersOrder(context.Context, *TLMessagesUpdateDialogFiltersOrder) (*Bool, error)
	// messages.hideReportSpam#a8f1709b peer:InputPeer = Bool;
	MessagesHideReportSpam(context.Context, *TLMessagesHideReportSpam) (*Bool, error)
}

func RegisterRPCMessagesDialogServer(s *grpc.Server, srv RPCMessagesDialogServer) {
	s.RegisterService(&_RPCMessagesDialog_serviceDesc, srv)
}

func _RPCMessagesDialog_MessagesGetDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDialogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesGetDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesGetDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesGetDialogs(ctx, req.(*TLMessagesGetDialogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesSetTyping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetTyping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesSetTyping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesSetTyping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesSetTyping(ctx, req.(*TLMessagesSetTyping))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesReportSpam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReportSpam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesReportSpam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesReportSpam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesReportSpam(ctx, req.(*TLMessagesReportSpam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesGetPeerSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPeerSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesGetPeerSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesGetPeerSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesGetPeerSettings(ctx, req.(*TLMessagesGetPeerSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesReport(ctx, req.(*TLMessagesReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesGetPeerDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPeerDialogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesGetPeerDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesGetPeerDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesGetPeerDialogs(ctx, req.(*TLMessagesGetPeerDialogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesSaveDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSaveDraft)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesSaveDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesSaveDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesSaveDraft(ctx, req.(*TLMessagesSaveDraft))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesGetAllDrafts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetAllDrafts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesGetAllDrafts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesGetAllDrafts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesGetAllDrafts(ctx, req.(*TLMessagesGetAllDrafts))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesToggleDialogPin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesToggleDialogPin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesToggleDialogPin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesToggleDialogPin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesToggleDialogPin(ctx, req.(*TLMessagesToggleDialogPin))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesReorderPinnedDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReorderPinnedDialogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesReorderPinnedDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesReorderPinnedDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesReorderPinnedDialogs(ctx, req.(*TLMessagesReorderPinnedDialogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesGetPinnedDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPinnedDialogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesGetPinnedDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesGetPinnedDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesGetPinnedDialogs(ctx, req.(*TLMessagesGetPinnedDialogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesSendScreenshotNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendScreenshotNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesSendScreenshotNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesSendScreenshotNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesSendScreenshotNotification(ctx, req.(*TLMessagesSendScreenshotNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesMarkDialogUnread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesMarkDialogUnread)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesMarkDialogUnread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesMarkDialogUnread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesMarkDialogUnread(ctx, req.(*TLMessagesMarkDialogUnread))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesGetDialogUnreadMarks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDialogUnreadMarks)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesGetDialogUnreadMarks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesGetDialogUnreadMarks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesGetDialogUnreadMarks(ctx, req.(*TLMessagesGetDialogUnreadMarks))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesClearAllDrafts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesClearAllDrafts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesClearAllDrafts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesClearAllDrafts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesClearAllDrafts(ctx, req.(*TLMessagesClearAllDrafts))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesGetOnlines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetOnlines)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesGetOnlines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesGetOnlines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesGetOnlines(ctx, req.(*TLMessagesGetOnlines))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesHidePeerSettingsBar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesHidePeerSettingsBar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesHidePeerSettingsBar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesHidePeerSettingsBar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesHidePeerSettingsBar(ctx, req.(*TLMessagesHidePeerSettingsBar))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesGetDialogFilters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDialogFilters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesGetDialogFilters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesGetDialogFilters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesGetDialogFilters(ctx, req.(*TLMessagesGetDialogFilters))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesGetSuggestedDialogFilters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetSuggestedDialogFilters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesGetSuggestedDialogFilters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesGetSuggestedDialogFilters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesGetSuggestedDialogFilters(ctx, req.(*TLMessagesGetSuggestedDialogFilters))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesUpdateDialogFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUpdateDialogFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesUpdateDialogFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesUpdateDialogFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesUpdateDialogFilter(ctx, req.(*TLMessagesUpdateDialogFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesUpdateDialogFiltersOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUpdateDialogFiltersOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesUpdateDialogFiltersOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesUpdateDialogFiltersOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesUpdateDialogFiltersOrder(ctx, req.(*TLMessagesUpdateDialogFiltersOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesDialog_MessagesHideReportSpam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesHideReportSpam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesDialogServer).MessagesHideReportSpam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesDialog/MessagesHideReportSpam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesDialogServer).MessagesHideReportSpam(ctx, req.(*TLMessagesHideReportSpam))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCMessagesDialog_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCMessagesDialog",
	HandlerType: (*RPCMessagesDialogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getDialogs",
			Handler:    _RPCMessagesDialog_MessagesGetDialogs_Handler,
		},
		{
			MethodName: "messages_setTyping",
			Handler:    _RPCMessagesDialog_MessagesSetTyping_Handler,
		},
		{
			MethodName: "messages_reportSpam",
			Handler:    _RPCMessagesDialog_MessagesReportSpam_Handler,
		},
		{
			MethodName: "messages_getPeerSettings",
			Handler:    _RPCMessagesDialog_MessagesGetPeerSettings_Handler,
		},
		{
			MethodName: "messages_report",
			Handler:    _RPCMessagesDialog_MessagesReport_Handler,
		},
		{
			MethodName: "messages_getPeerDialogs",
			Handler:    _RPCMessagesDialog_MessagesGetPeerDialogs_Handler,
		},
		{
			MethodName: "messages_saveDraft",
			Handler:    _RPCMessagesDialog_MessagesSaveDraft_Handler,
		},
		{
			MethodName: "messages_getAllDrafts",
			Handler:    _RPCMessagesDialog_MessagesGetAllDrafts_Handler,
		},
		{
			MethodName: "messages_toggleDialogPin",
			Handler:    _RPCMessagesDialog_MessagesToggleDialogPin_Handler,
		},
		{
			MethodName: "messages_reorderPinnedDialogs",
			Handler:    _RPCMessagesDialog_MessagesReorderPinnedDialogs_Handler,
		},
		{
			MethodName: "messages_getPinnedDialogs",
			Handler:    _RPCMessagesDialog_MessagesGetPinnedDialogs_Handler,
		},
		{
			MethodName: "messages_sendScreenshotNotification",
			Handler:    _RPCMessagesDialog_MessagesSendScreenshotNotification_Handler,
		},
		{
			MethodName: "messages_markDialogUnread",
			Handler:    _RPCMessagesDialog_MessagesMarkDialogUnread_Handler,
		},
		{
			MethodName: "messages_getDialogUnreadMarks",
			Handler:    _RPCMessagesDialog_MessagesGetDialogUnreadMarks_Handler,
		},
		{
			MethodName: "messages_clearAllDrafts",
			Handler:    _RPCMessagesDialog_MessagesClearAllDrafts_Handler,
		},
		{
			MethodName: "messages_getOnlines",
			Handler:    _RPCMessagesDialog_MessagesGetOnlines_Handler,
		},
		{
			MethodName: "messages_hidePeerSettingsBar",
			Handler:    _RPCMessagesDialog_MessagesHidePeerSettingsBar_Handler,
		},
		{
			MethodName: "messages_getDialogFilters",
			Handler:    _RPCMessagesDialog_MessagesGetDialogFilters_Handler,
		},
		{
			MethodName: "messages_getSuggestedDialogFilters",
			Handler:    _RPCMessagesDialog_MessagesGetSuggestedDialogFilters_Handler,
		},
		{
			MethodName: "messages_updateDialogFilter",
			Handler:    _RPCMessagesDialog_MessagesUpdateDialogFilter_Handler,
		},
		{
			MethodName: "messages_updateDialogFiltersOrder",
			Handler:    _RPCMessagesDialog_MessagesUpdateDialogFiltersOrder_Handler,
		},
		{
			MethodName: "messages_hideReportSpam",
			Handler:    _RPCMessagesDialog_MessagesHideReportSpam_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCBotsClient is the client API for RPCBots service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCBotsClient interface {
	// bots.sendCustomRequest#aa2769ed custom_method:string params:DataJSON = DataJSON;
	BotsSendCustomRequest(ctx context.Context, in *TLBotsSendCustomRequest, opts ...grpc.CallOption) (*DataJSON, error)
	// bots.answerWebhookJSONQuery#e6213f4d query_id:long data:DataJSON = Bool;
	BotsAnswerWebhookJSONQuery(ctx context.Context, in *TLBotsAnswerWebhookJSONQuery, opts ...grpc.CallOption) (*Bool, error)
	// bots.setBotCommands#805d46f6 commands:Vector<BotCommand> = Bool;
	BotsSetBotCommands(ctx context.Context, in *TLBotsSetBotCommands, opts ...grpc.CallOption) (*Bool, error)
}

type rPCBotsClient struct {
	cc *grpc.ClientConn
}

func NewRPCBotsClient(cc *grpc.ClientConn) RPCBotsClient {
	return &rPCBotsClient{cc}
}

func (c *rPCBotsClient) BotsSendCustomRequest(ctx context.Context, in *TLBotsSendCustomRequest, opts ...grpc.CallOption) (*DataJSON, error) {
	out := new(DataJSON)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBots/bots_sendCustomRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBotsClient) BotsAnswerWebhookJSONQuery(ctx context.Context, in *TLBotsAnswerWebhookJSONQuery, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBots/bots_answerWebhookJSONQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBotsClient) BotsSetBotCommands(ctx context.Context, in *TLBotsSetBotCommands, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBots/bots_setBotCommands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCBotsServer is the server API for RPCBots service.
type RPCBotsServer interface {
	// bots.sendCustomRequest#aa2769ed custom_method:string params:DataJSON = DataJSON;
	BotsSendCustomRequest(context.Context, *TLBotsSendCustomRequest) (*DataJSON, error)
	// bots.answerWebhookJSONQuery#e6213f4d query_id:long data:DataJSON = Bool;
	BotsAnswerWebhookJSONQuery(context.Context, *TLBotsAnswerWebhookJSONQuery) (*Bool, error)
	// bots.setBotCommands#805d46f6 commands:Vector<BotCommand> = Bool;
	BotsSetBotCommands(context.Context, *TLBotsSetBotCommands) (*Bool, error)
}

func RegisterRPCBotsServer(s *grpc.Server, srv RPCBotsServer) {
	s.RegisterService(&_RPCBots_serviceDesc, srv)
}

func _RPCBots_BotsSendCustomRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBotsSendCustomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBotsServer).BotsSendCustomRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBots/BotsSendCustomRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBotsServer).BotsSendCustomRequest(ctx, req.(*TLBotsSendCustomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBots_BotsAnswerWebhookJSONQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBotsAnswerWebhookJSONQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBotsServer).BotsAnswerWebhookJSONQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBots/BotsAnswerWebhookJSONQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBotsServer).BotsAnswerWebhookJSONQuery(ctx, req.(*TLBotsAnswerWebhookJSONQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBots_BotsSetBotCommands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBotsSetBotCommands)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBotsServer).BotsSetBotCommands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBots/BotsSetBotCommands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBotsServer).BotsSetBotCommands(ctx, req.(*TLBotsSetBotCommands))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCBots_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCBots",
	HandlerType: (*RPCBotsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "bots_sendCustomRequest",
			Handler:    _RPCBots_BotsSendCustomRequest_Handler,
		},
		{
			MethodName: "bots_answerWebhookJSONQuery",
			Handler:    _RPCBots_BotsAnswerWebhookJSONQuery_Handler,
		},
		{
			MethodName: "bots_setBotCommands",
			Handler:    _RPCBots_BotsSetBotCommands_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCStickersClient is the client API for RPCStickers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCStickersClient interface {
	// stickers.createStickerSet#f1036780 flags:# masks:flags.0?true animated:flags.1?true user_id:InputUser title:string short_name:string thumb:flags.2?InputDocument stickers:Vector<InputStickerSetItem> = messages.StickerSet;
	StickersCreateStickerSet(ctx context.Context, in *TLStickersCreateStickerSet, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	// stickers.removeStickerFromSet#f7760f51 sticker:InputDocument = messages.StickerSet;
	StickersRemoveStickerFromSet(ctx context.Context, in *TLStickersRemoveStickerFromSet, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	// stickers.changeStickerPosition#ffb6d4ca sticker:InputDocument position:int = messages.StickerSet;
	StickersChangeStickerPosition(ctx context.Context, in *TLStickersChangeStickerPosition, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	// stickers.addStickerToSet#8653febe stickerset:InputStickerSet sticker:InputStickerSetItem = messages.StickerSet;
	StickersAddStickerToSet(ctx context.Context, in *TLStickersAddStickerToSet, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	// stickers.setStickerSetThumb#9a364e30 stickerset:InputStickerSet thumb:InputDocument = messages.StickerSet;
	StickersSetStickerSetThumb(ctx context.Context, in *TLStickersSetStickerSetThumb, opts ...grpc.CallOption) (*Messages_StickerSet, error)
}

type rPCStickersClient struct {
	cc *grpc.ClientConn
}

func NewRPCStickersClient(cc *grpc.ClientConn) RPCStickersClient {
	return &rPCStickersClient{cc}
}

func (c *rPCStickersClient) StickersCreateStickerSet(ctx context.Context, in *TLStickersCreateStickerSet, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_createStickerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersRemoveStickerFromSet(ctx context.Context, in *TLStickersRemoveStickerFromSet, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_removeStickerFromSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersChangeStickerPosition(ctx context.Context, in *TLStickersChangeStickerPosition, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_changeStickerPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersAddStickerToSet(ctx context.Context, in *TLStickersAddStickerToSet, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_addStickerToSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersSetStickerSetThumb(ctx context.Context, in *TLStickersSetStickerSetThumb, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_setStickerSetThumb", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCStickersServer is the server API for RPCStickers service.
type RPCStickersServer interface {
	// stickers.createStickerSet#f1036780 flags:# masks:flags.0?true animated:flags.1?true user_id:InputUser title:string short_name:string thumb:flags.2?InputDocument stickers:Vector<InputStickerSetItem> = messages.StickerSet;
	StickersCreateStickerSet(context.Context, *TLStickersCreateStickerSet) (*Messages_StickerSet, error)
	// stickers.removeStickerFromSet#f7760f51 sticker:InputDocument = messages.StickerSet;
	StickersRemoveStickerFromSet(context.Context, *TLStickersRemoveStickerFromSet) (*Messages_StickerSet, error)
	// stickers.changeStickerPosition#ffb6d4ca sticker:InputDocument position:int = messages.StickerSet;
	StickersChangeStickerPosition(context.Context, *TLStickersChangeStickerPosition) (*Messages_StickerSet, error)
	// stickers.addStickerToSet#8653febe stickerset:InputStickerSet sticker:InputStickerSetItem = messages.StickerSet;
	StickersAddStickerToSet(context.Context, *TLStickersAddStickerToSet) (*Messages_StickerSet, error)
	// stickers.setStickerSetThumb#9a364e30 stickerset:InputStickerSet thumb:InputDocument = messages.StickerSet;
	StickersSetStickerSetThumb(context.Context, *TLStickersSetStickerSetThumb) (*Messages_StickerSet, error)
}

func RegisterRPCStickersServer(s *grpc.Server, srv RPCStickersServer) {
	s.RegisterService(&_RPCStickers_serviceDesc, srv)
}

func _RPCStickers_StickersCreateStickerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersCreateStickerSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersCreateStickerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersCreateStickerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersCreateStickerSet(ctx, req.(*TLStickersCreateStickerSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersRemoveStickerFromSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersRemoveStickerFromSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersRemoveStickerFromSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersRemoveStickerFromSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersRemoveStickerFromSet(ctx, req.(*TLStickersRemoveStickerFromSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersChangeStickerPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersChangeStickerPosition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersChangeStickerPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersChangeStickerPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersChangeStickerPosition(ctx, req.(*TLStickersChangeStickerPosition))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersAddStickerToSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersAddStickerToSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersAddStickerToSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersAddStickerToSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersAddStickerToSet(ctx, req.(*TLStickersAddStickerToSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersSetStickerSetThumb_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersSetStickerSetThumb)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersSetStickerSetThumb(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersSetStickerSetThumb",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersSetStickerSetThumb(ctx, req.(*TLStickersSetStickerSetThumb))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCStickers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCStickers",
	HandlerType: (*RPCStickersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "stickers_createStickerSet",
			Handler:    _RPCStickers_StickersCreateStickerSet_Handler,
		},
		{
			MethodName: "stickers_removeStickerFromSet",
			Handler:    _RPCStickers_StickersRemoveStickerFromSet_Handler,
		},
		{
			MethodName: "stickers_changeStickerPosition",
			Handler:    _RPCStickers_StickersChangeStickerPosition_Handler,
		},
		{
			MethodName: "stickers_addStickerToSet",
			Handler:    _RPCStickers_StickersAddStickerToSet_Handler,
		},
		{
			MethodName: "stickers_setStickerSetThumb",
			Handler:    _RPCStickers_StickersSetStickerSetThumb_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCWalletClient is the client API for RPCWallet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCWalletClient interface {
	// wallet.getInfo#86f1ee4f = wallet.Info;
	WalletGetInfo(ctx context.Context, in *TLWalletGetInfo, opts ...grpc.CallOption) (*Wallet_Info, error)
	// wallet.getRecords#42d1204f flags:# type:flags.0?wallet.RecordType date:flags.1?int offset:int limit:int = wallet.Records;
	WalletGetRecords(ctx context.Context, in *TLWalletGetRecords, opts ...grpc.CallOption) (*Wallet_Records, error)
	// wallet.sendLiteRequest#e2c9d33e body:bytes = wallet.LiteResponse;
	WalletSendLiteRequest(ctx context.Context, in *TLWalletSendLiteRequest, opts ...grpc.CallOption) (*Wallet_LiteResponse, error)
	// wallet.getKeySecretSalt#b57f346 revoke:Bool = wallet.KeySecretSalt;
	WalletGetKeySecretSalt(ctx context.Context, in *TLWalletGetKeySecretSalt, opts ...grpc.CallOption) (*Wallet_KeySecretSalt, error)
}

type rPCWalletClient struct {
	cc *grpc.ClientConn
}

func NewRPCWalletClient(cc *grpc.ClientConn) RPCWalletClient {
	return &rPCWalletClient{cc}
}

func (c *rPCWalletClient) WalletGetInfo(ctx context.Context, in *TLWalletGetInfo, opts ...grpc.CallOption) (*Wallet_Info, error) {
	out := new(Wallet_Info)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallet/wallet_getInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCWalletClient) WalletGetRecords(ctx context.Context, in *TLWalletGetRecords, opts ...grpc.CallOption) (*Wallet_Records, error) {
	out := new(Wallet_Records)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallet/wallet_getRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCWalletClient) WalletSendLiteRequest(ctx context.Context, in *TLWalletSendLiteRequest, opts ...grpc.CallOption) (*Wallet_LiteResponse, error) {
	out := new(Wallet_LiteResponse)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallet/wallet_sendLiteRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCWalletClient) WalletGetKeySecretSalt(ctx context.Context, in *TLWalletGetKeySecretSalt, opts ...grpc.CallOption) (*Wallet_KeySecretSalt, error) {
	out := new(Wallet_KeySecretSalt)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallet/wallet_getKeySecretSalt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCWalletServer is the server API for RPCWallet service.
type RPCWalletServer interface {
	// wallet.getInfo#86f1ee4f = wallet.Info;
	WalletGetInfo(context.Context, *TLWalletGetInfo) (*Wallet_Info, error)
	// wallet.getRecords#42d1204f flags:# type:flags.0?wallet.RecordType date:flags.1?int offset:int limit:int = wallet.Records;
	WalletGetRecords(context.Context, *TLWalletGetRecords) (*Wallet_Records, error)
	// wallet.sendLiteRequest#e2c9d33e body:bytes = wallet.LiteResponse;
	WalletSendLiteRequest(context.Context, *TLWalletSendLiteRequest) (*Wallet_LiteResponse, error)
	// wallet.getKeySecretSalt#b57f346 revoke:Bool = wallet.KeySecretSalt;
	WalletGetKeySecretSalt(context.Context, *TLWalletGetKeySecretSalt) (*Wallet_KeySecretSalt, error)
}

func RegisterRPCWalletServer(s *grpc.Server, srv RPCWalletServer) {
	s.RegisterService(&_RPCWallet_serviceDesc, srv)
}

func _RPCWallet_WalletGetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLWalletGetInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWalletServer).WalletGetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallet/WalletGetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWalletServer).WalletGetInfo(ctx, req.(*TLWalletGetInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCWallet_WalletGetRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLWalletGetRecords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWalletServer).WalletGetRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallet/WalletGetRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWalletServer).WalletGetRecords(ctx, req.(*TLWalletGetRecords))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCWallet_WalletSendLiteRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLWalletSendLiteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWalletServer).WalletSendLiteRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallet/WalletSendLiteRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWalletServer).WalletSendLiteRequest(ctx, req.(*TLWalletSendLiteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCWallet_WalletGetKeySecretSalt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLWalletGetKeySecretSalt)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWalletServer).WalletGetKeySecretSalt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallet/WalletGetKeySecretSalt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWalletServer).WalletGetKeySecretSalt(ctx, req.(*TLWalletGetKeySecretSalt))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCWallet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCWallet",
	HandlerType: (*RPCWalletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "wallet_getInfo",
			Handler:    _RPCWallet_WalletGetInfo_Handler,
		},
		{
			MethodName: "wallet_getRecords",
			Handler:    _RPCWallet_WalletGetRecords_Handler,
		},
		{
			MethodName: "wallet_sendLiteRequest",
			Handler:    _RPCWallet_WalletSendLiteRequest_Handler,
		},
		{
			MethodName: "wallet_getKeySecretSalt",
			Handler:    _RPCWallet_WalletGetKeySecretSalt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCMessagesSecretChatClient is the client API for RPCMessagesSecretChat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCMessagesSecretChatClient interface {
	// messages.getDhConfig#26cf8950 version:int random_length:int = messages.DhConfig;
	MessagesGetDhConfig(ctx context.Context, in *TLMessagesGetDhConfig, opts ...grpc.CallOption) (*Messages_DhConfig, error)
	// messages.requestEncryption#f64daf43 user_id:InputUser random_id:int g_a:bytes = EncryptedChat;
	MessagesRequestEncryption(ctx context.Context, in *TLMessagesRequestEncryption, opts ...grpc.CallOption) (*EncryptedChat, error)
	// messages.acceptEncryption#3dbc0415 peer:InputEncryptedChat g_b:bytes key_fingerprint:long = EncryptedChat;
	MessagesAcceptEncryption(ctx context.Context, in *TLMessagesAcceptEncryption, opts ...grpc.CallOption) (*EncryptedChat, error)
	// messages.discardEncryption#edd923c5 chat_id:int = Bool;
	MessagesDiscardEncryption(ctx context.Context, in *TLMessagesDiscardEncryption, opts ...grpc.CallOption) (*Bool, error)
	// messages.setEncryptedTyping#791451ed peer:InputEncryptedChat typing:Bool = Bool;
	MessagesSetEncryptedTyping(ctx context.Context, in *TLMessagesSetEncryptedTyping, opts ...grpc.CallOption) (*Bool, error)
	// messages.readEncryptedHistory#7f4b690a peer:InputEncryptedChat max_date:int = Bool;
	MessagesReadEncryptedHistory(ctx context.Context, in *TLMessagesReadEncryptedHistory, opts ...grpc.CallOption) (*Bool, error)
	// messages.sendEncrypted#44fa7a15 flags:# silent:flags.0?true peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
	MessagesSendEncrypted(ctx context.Context, in *TLMessagesSendEncrypted, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error)
	// messages.sendEncryptedFile#5559481d flags:# silent:flags.0?true peer:InputEncryptedChat random_id:long data:bytes file:InputEncryptedFile = messages.SentEncryptedMessage;
	MessagesSendEncryptedFile(ctx context.Context, in *TLMessagesSendEncryptedFile, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error)
	// messages.sendEncryptedService#32d439a4 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
	MessagesSendEncryptedService(ctx context.Context, in *TLMessagesSendEncryptedService, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error)
	// messages.receivedQueue#55a5bb66 max_qts:int = Vector<long>;
	MessagesReceivedQueue(ctx context.Context, in *TLMessagesReceivedQueue, opts ...grpc.CallOption) (*Vector_Long, error)
	// messages.reportEncryptedSpam#4b0c8c0f peer:InputEncryptedChat = Bool;
	MessagesReportEncryptedSpam(ctx context.Context, in *TLMessagesReportEncryptedSpam, opts ...grpc.CallOption) (*Bool, error)
	// messages.uploadEncryptedFile#5057c497 peer:InputEncryptedChat file:InputEncryptedFile = EncryptedFile;
	MessagesUploadEncryptedFile(ctx context.Context, in *TLMessagesUploadEncryptedFile, opts ...grpc.CallOption) (*EncryptedFile, error)
}

type rPCMessagesSecretChatClient struct {
	cc *grpc.ClientConn
}

func NewRPCMessagesSecretChatClient(cc *grpc.ClientConn) RPCMessagesSecretChatClient {
	return &rPCMessagesSecretChatClient{cc}
}

func (c *rPCMessagesSecretChatClient) MessagesGetDhConfig(ctx context.Context, in *TLMessagesGetDhConfig, opts ...grpc.CallOption) (*Messages_DhConfig, error) {
	out := new(Messages_DhConfig)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_getDhConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesRequestEncryption(ctx context.Context, in *TLMessagesRequestEncryption, opts ...grpc.CallOption) (*EncryptedChat, error) {
	out := new(EncryptedChat)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_requestEncryption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesAcceptEncryption(ctx context.Context, in *TLMessagesAcceptEncryption, opts ...grpc.CallOption) (*EncryptedChat, error) {
	out := new(EncryptedChat)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_acceptEncryption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesDiscardEncryption(ctx context.Context, in *TLMessagesDiscardEncryption, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_discardEncryption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesSetEncryptedTyping(ctx context.Context, in *TLMessagesSetEncryptedTyping, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_setEncryptedTyping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesReadEncryptedHistory(ctx context.Context, in *TLMessagesReadEncryptedHistory, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_readEncryptedHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesSendEncrypted(ctx context.Context, in *TLMessagesSendEncrypted, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error) {
	out := new(Messages_SentEncryptedMessage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_sendEncrypted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesSendEncryptedFile(ctx context.Context, in *TLMessagesSendEncryptedFile, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error) {
	out := new(Messages_SentEncryptedMessage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_sendEncryptedFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesSendEncryptedService(ctx context.Context, in *TLMessagesSendEncryptedService, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error) {
	out := new(Messages_SentEncryptedMessage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_sendEncryptedService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesReceivedQueue(ctx context.Context, in *TLMessagesReceivedQueue, opts ...grpc.CallOption) (*Vector_Long, error) {
	out := new(Vector_Long)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_receivedQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesReportEncryptedSpam(ctx context.Context, in *TLMessagesReportEncryptedSpam, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_reportEncryptedSpam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesSecretChatClient) MessagesUploadEncryptedFile(ctx context.Context, in *TLMessagesUploadEncryptedFile, opts ...grpc.CallOption) (*EncryptedFile, error) {
	out := new(EncryptedFile)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSecretChat/messages_uploadEncryptedFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCMessagesSecretChatServer is the server API for RPCMessagesSecretChat service.
type RPCMessagesSecretChatServer interface {
	// messages.getDhConfig#26cf8950 version:int random_length:int = messages.DhConfig;
	MessagesGetDhConfig(context.Context, *TLMessagesGetDhConfig) (*Messages_DhConfig, error)
	// messages.requestEncryption#f64daf43 user_id:InputUser random_id:int g_a:bytes = EncryptedChat;
	MessagesRequestEncryption(context.Context, *TLMessagesRequestEncryption) (*EncryptedChat, error)
	// messages.acceptEncryption#3dbc0415 peer:InputEncryptedChat g_b:bytes key_fingerprint:long = EncryptedChat;
	MessagesAcceptEncryption(context.Context, *TLMessagesAcceptEncryption) (*EncryptedChat, error)
	// messages.discardEncryption#edd923c5 chat_id:int = Bool;
	MessagesDiscardEncryption(context.Context, *TLMessagesDiscardEncryption) (*Bool, error)
	// messages.setEncryptedTyping#791451ed peer:InputEncryptedChat typing:Bool = Bool;
	MessagesSetEncryptedTyping(context.Context, *TLMessagesSetEncryptedTyping) (*Bool, error)
	// messages.readEncryptedHistory#7f4b690a peer:InputEncryptedChat max_date:int = Bool;
	MessagesReadEncryptedHistory(context.Context, *TLMessagesReadEncryptedHistory) (*Bool, error)
	// messages.sendEncrypted#44fa7a15 flags:# silent:flags.0?true peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
	MessagesSendEncrypted(context.Context, *TLMessagesSendEncrypted) (*Messages_SentEncryptedMessage, error)
	// messages.sendEncryptedFile#5559481d flags:# silent:flags.0?true peer:InputEncryptedChat random_id:long data:bytes file:InputEncryptedFile = messages.SentEncryptedMessage;
	MessagesSendEncryptedFile(context.Context, *TLMessagesSendEncryptedFile) (*Messages_SentEncryptedMessage, error)
	// messages.sendEncryptedService#32d439a4 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
	MessagesSendEncryptedService(context.Context, *TLMessagesSendEncryptedService) (*Messages_SentEncryptedMessage, error)
	// messages.receivedQueue#55a5bb66 max_qts:int = Vector<long>;
	MessagesReceivedQueue(context.Context, *TLMessagesReceivedQueue) (*Vector_Long, error)
	// messages.reportEncryptedSpam#4b0c8c0f peer:InputEncryptedChat = Bool;
	MessagesReportEncryptedSpam(context.Context, *TLMessagesReportEncryptedSpam) (*Bool, error)
	// messages.uploadEncryptedFile#5057c497 peer:InputEncryptedChat file:InputEncryptedFile = EncryptedFile;
	MessagesUploadEncryptedFile(context.Context, *TLMessagesUploadEncryptedFile) (*EncryptedFile, error)
}

func RegisterRPCMessagesSecretChatServer(s *grpc.Server, srv RPCMessagesSecretChatServer) {
	s.RegisterService(&_RPCMessagesSecretChat_serviceDesc, srv)
}

func _RPCMessagesSecretChat_MessagesGetDhConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDhConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesGetDhConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesGetDhConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesGetDhConfig(ctx, req.(*TLMessagesGetDhConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesRequestEncryption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesRequestEncryption)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesRequestEncryption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesRequestEncryption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesRequestEncryption(ctx, req.(*TLMessagesRequestEncryption))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesAcceptEncryption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesAcceptEncryption)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesAcceptEncryption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesAcceptEncryption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesAcceptEncryption(ctx, req.(*TLMessagesAcceptEncryption))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesDiscardEncryption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDiscardEncryption)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesDiscardEncryption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesDiscardEncryption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesDiscardEncryption(ctx, req.(*TLMessagesDiscardEncryption))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesSetEncryptedTyping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetEncryptedTyping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesSetEncryptedTyping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesSetEncryptedTyping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesSetEncryptedTyping(ctx, req.(*TLMessagesSetEncryptedTyping))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesReadEncryptedHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadEncryptedHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesReadEncryptedHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesReadEncryptedHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesReadEncryptedHistory(ctx, req.(*TLMessagesReadEncryptedHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesSendEncrypted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendEncrypted)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesSendEncrypted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesSendEncrypted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesSendEncrypted(ctx, req.(*TLMessagesSendEncrypted))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesSendEncryptedFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendEncryptedFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesSendEncryptedFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesSendEncryptedFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesSendEncryptedFile(ctx, req.(*TLMessagesSendEncryptedFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesSendEncryptedService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendEncryptedService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesSendEncryptedService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesSendEncryptedService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesSendEncryptedService(ctx, req.(*TLMessagesSendEncryptedService))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesReceivedQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReceivedQueue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesReceivedQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesReceivedQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesReceivedQueue(ctx, req.(*TLMessagesReceivedQueue))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesReportEncryptedSpam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReportEncryptedSpam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesReportEncryptedSpam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesReportEncryptedSpam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesReportEncryptedSpam(ctx, req.(*TLMessagesReportEncryptedSpam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSecretChat_MessagesUploadEncryptedFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUploadEncryptedFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesSecretChatServer).MessagesUploadEncryptedFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSecretChat/MessagesUploadEncryptedFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesSecretChatServer).MessagesUploadEncryptedFile(ctx, req.(*TLMessagesUploadEncryptedFile))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCMessagesSecretChat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCMessagesSecretChat",
	HandlerType: (*RPCMessagesSecretChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getDhConfig",
			Handler:    _RPCMessagesSecretChat_MessagesGetDhConfig_Handler,
		},
		{
			MethodName: "messages_requestEncryption",
			Handler:    _RPCMessagesSecretChat_MessagesRequestEncryption_Handler,
		},
		{
			MethodName: "messages_acceptEncryption",
			Handler:    _RPCMessagesSecretChat_MessagesAcceptEncryption_Handler,
		},
		{
			MethodName: "messages_discardEncryption",
			Handler:    _RPCMessagesSecretChat_MessagesDiscardEncryption_Handler,
		},
		{
			MethodName: "messages_setEncryptedTyping",
			Handler:    _RPCMessagesSecretChat_MessagesSetEncryptedTyping_Handler,
		},
		{
			MethodName: "messages_readEncryptedHistory",
			Handler:    _RPCMessagesSecretChat_MessagesReadEncryptedHistory_Handler,
		},
		{
			MethodName: "messages_sendEncrypted",
			Handler:    _RPCMessagesSecretChat_MessagesSendEncrypted_Handler,
		},
		{
			MethodName: "messages_sendEncryptedFile",
			Handler:    _RPCMessagesSecretChat_MessagesSendEncryptedFile_Handler,
		},
		{
			MethodName: "messages_sendEncryptedService",
			Handler:    _RPCMessagesSecretChat_MessagesSendEncryptedService_Handler,
		},
		{
			MethodName: "messages_receivedQueue",
			Handler:    _RPCMessagesSecretChat_MessagesReceivedQueue_Handler,
		},
		{
			MethodName: "messages_reportEncryptedSpam",
			Handler:    _RPCMessagesSecretChat_MessagesReportEncryptedSpam_Handler,
		},
		{
			MethodName: "messages_uploadEncryptedFile",
			Handler:    _RPCMessagesSecretChat_MessagesUploadEncryptedFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCChannelsClient is the client API for RPCChannels service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCChannelsClient interface {
	// channels.readHistory#cc104937 channel:InputChannel max_id:int = Bool;
	ChannelsReadHistory(ctx context.Context, in *TLChannelsReadHistory, opts ...grpc.CallOption) (*Bool, error)
	// channels.deleteMessages#84c1fd4e channel:InputChannel id:Vector<int> = messages.AffectedMessages;
	ChannelsDeleteMessages(ctx context.Context, in *TLChannelsDeleteMessages, opts ...grpc.CallOption) (*Messages_AffectedMessages, error)
	// channels.deleteUserHistory#d10dd71b channel:InputChannel user_id:InputUser = messages.AffectedHistory;
	ChannelsDeleteUserHistory(ctx context.Context, in *TLChannelsDeleteUserHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
	// channels.reportSpam#fe087810 channel:InputChannel user_id:InputUser id:Vector<int> = Bool;
	ChannelsReportSpam(ctx context.Context, in *TLChannelsReportSpam, opts ...grpc.CallOption) (*Bool, error)
	// channels.getMessages#ad8c9a23 channel:InputChannel id:Vector<InputMessage> = messages.Messages;
	ChannelsGetMessages(ctx context.Context, in *TLChannelsGetMessages, opts ...grpc.CallOption) (*Messages_Messages, error)
	// channels.getParticipants#123e05e9 channel:InputChannel filter:ChannelParticipantsFilter offset:int limit:int hash:int = channels.ChannelParticipants;
	ChannelsGetParticipants(ctx context.Context, in *TLChannelsGetParticipants, opts ...grpc.CallOption) (*Channels_ChannelParticipants, error)
	// channels.getParticipant#546dd7a6 channel:InputChannel user_id:InputUser = channels.ChannelParticipant;
	ChannelsGetParticipant(ctx context.Context, in *TLChannelsGetParticipant, opts ...grpc.CallOption) (*Channels_ChannelParticipant, error)
	// channels.getChannels#a7f6bbb id:Vector<InputChannel> = messages.Chats;
	ChannelsGetChannels(ctx context.Context, in *TLChannelsGetChannels, opts ...grpc.CallOption) (*Messages_Chats, error)
	// channels.getFullChannel#8736a09 channel:InputChannel = messages.ChatFull;
	ChannelsGetFullChannel(ctx context.Context, in *TLChannelsGetFullChannel, opts ...grpc.CallOption) (*Messages_ChatFull, error)
	// channels.createChannel#f92c8267 flags:# broadcast:flags.0?true megagroup:flags.1?true title:string about:string notice:string geo_point:flags.2?InputGeoPoint address:flags.2?string = Updates;
	ChannelsCreateChannel(ctx context.Context, in *TLChannelsCreateChannel, opts ...grpc.CallOption) (*Updates, error)
	// channels.editAdmin#d33c8902 channel:InputChannel user_id:InputUser admin_rights:ChatAdminRights rank:string = Updates;
	ChannelsEditAdmin(ctx context.Context, in *TLChannelsEditAdmin, opts ...grpc.CallOption) (*Updates, error)
	// channels.editTitle#566decd0 channel:InputChannel title:string = Updates;
	ChannelsEditTitle(ctx context.Context, in *TLChannelsEditTitle, opts ...grpc.CallOption) (*Updates, error)
	// channels.editPhoto#f12e57c9 channel:InputChannel photo:InputChatPhoto = Updates;
	ChannelsEditPhoto(ctx context.Context, in *TLChannelsEditPhoto, opts ...grpc.CallOption) (*Updates, error)
	// channels.checkUsername#10e6bd2c channel:InputChannel username:string = Bool;
	ChannelsCheckUsername(ctx context.Context, in *TLChannelsCheckUsername, opts ...grpc.CallOption) (*Bool, error)
	// channels.updateUsername#3514b3de channel:InputChannel username:string = Bool;
	ChannelsUpdateUsername(ctx context.Context, in *TLChannelsUpdateUsername, opts ...grpc.CallOption) (*Bool, error)
	// channels.joinChannel#24b524c5 channel:InputChannel = Updates;
	ChannelsJoinChannel(ctx context.Context, in *TLChannelsJoinChannel, opts ...grpc.CallOption) (*Updates, error)
	// channels.leaveChannel#f836aa95 channel:InputChannel = Updates;
	ChannelsLeaveChannel(ctx context.Context, in *TLChannelsLeaveChannel, opts ...grpc.CallOption) (*Updates, error)
	// channels.inviteToChannel#199f3a6c channel:InputChannel users:Vector<InputUser> = Updates;
	ChannelsInviteToChannel(ctx context.Context, in *TLChannelsInviteToChannel, opts ...grpc.CallOption) (*Updates, error)
	// channels.deleteChannel#c0111fe3 channel:InputChannel = Updates;
	ChannelsDeleteChannel(ctx context.Context, in *TLChannelsDeleteChannel, opts ...grpc.CallOption) (*Updates, error)
	// channels.exportMessageLink#e63fadeb flags:# grouped:flags.0?true thread:flags.1?true channel:InputChannel id:int = ExportedMessageLink;
	ChannelsExportMessageLink(ctx context.Context, in *TLChannelsExportMessageLink, opts ...grpc.CallOption) (*ExportedMessageLink, error)
	// channels.toggleSignatures#1f69b606 channel:InputChannel enabled:Bool = Updates;
	ChannelsToggleSignatures(ctx context.Context, in *TLChannelsToggleSignatures, opts ...grpc.CallOption) (*Updates, error)
	// channels.getAdminedPublicChannels#f8b036af flags:# by_location:flags.0?true check_limit:flags.1?true = messages.Chats;
	ChannelsGetAdminedPublicChannels(ctx context.Context, in *TLChannelsGetAdminedPublicChannels, opts ...grpc.CallOption) (*Messages_Chats, error)
	// channels.editBanned#72796912 channel:InputChannel user_id:InputUser banned_rights:ChatBannedRights = Updates;
	ChannelsEditBanned(ctx context.Context, in *TLChannelsEditBanned, opts ...grpc.CallOption) (*Updates, error)
	// channels.getAdminLog#33ddf480 flags:# channel:InputChannel q:string events_filter:flags.0?ChannelAdminLogEventsFilter admins:flags.1?Vector<InputUser> max_id:long min_id:long limit:int = channels.AdminLogResults;
	ChannelsGetAdminLog(ctx context.Context, in *TLChannelsGetAdminLog, opts ...grpc.CallOption) (*Channels_AdminLogResults, error)
	// channels.setStickers#ea8ca4f9 channel:InputChannel stickerset:InputStickerSet = Bool;
	ChannelsSetStickers(ctx context.Context, in *TLChannelsSetStickers, opts ...grpc.CallOption) (*Bool, error)
	// channels.readMessageContents#eab5dc38 channel:InputChannel id:Vector<int> = Bool;
	ChannelsReadMessageContents(ctx context.Context, in *TLChannelsReadMessageContents, opts ...grpc.CallOption) (*Bool, error)
	// channels.deleteHistory#af369d42 channel:InputChannel max_id:int = Bool;
	ChannelsDeleteHistory(ctx context.Context, in *TLChannelsDeleteHistory, opts ...grpc.CallOption) (*Bool, error)
	// channels.togglePreHistoryHidden#eabbb94c channel:InputChannel enabled:Bool = Updates;
	ChannelsTogglePreHistoryHidden(ctx context.Context, in *TLChannelsTogglePreHistoryHidden, opts ...grpc.CallOption) (*Updates, error)
	// channels.getLeftChannels#8341ecc0 offset:int = messages.Chats;
	ChannelsGetLeftChannels(ctx context.Context, in *TLChannelsGetLeftChannels, opts ...grpc.CallOption) (*Messages_Chats, error)
	// channels.getGroupsForDiscussion#f5dad378 = messages.Chats;
	ChannelsGetGroupsForDiscussion(ctx context.Context, in *TLChannelsGetGroupsForDiscussion, opts ...grpc.CallOption) (*Messages_Chats, error)
	// channels.setDiscussionGroup#40582bb2 broadcast:InputChannel group:InputChannel = Bool;
	ChannelsSetDiscussionGroup(ctx context.Context, in *TLChannelsSetDiscussionGroup, opts ...grpc.CallOption) (*Bool, error)
	// channels.editCreator#8f38cd1f channel:InputChannel user_id:InputUser password:InputCheckPasswordSRP = Updates;
	ChannelsEditCreator(ctx context.Context, in *TLChannelsEditCreator, opts ...grpc.CallOption) (*Updates, error)
	// channels.editLocation#58e63f6d channel:InputChannel geo_point:InputGeoPoint address:string = Bool;
	ChannelsEditLocation(ctx context.Context, in *TLChannelsEditLocation, opts ...grpc.CallOption) (*Bool, error)
	// channels.toggleSlowMode#edd49ef0 channel:InputChannel seconds:int = Updates;
	ChannelsToggleSlowMode(ctx context.Context, in *TLChannelsToggleSlowMode, opts ...grpc.CallOption) (*Updates, error)
	// channels.getInactiveChannels#11e831ee = messages.InactiveChats;
	ChannelsGetInactiveChannels(ctx context.Context, in *TLChannelsGetInactiveChannels, opts ...grpc.CallOption) (*Messages_InactiveChats, error)
	// channels.getBroadcastsForDiscussion#1a87f304 = messages.Chats;
	ChannelsGetBroadcastsForDiscussion(ctx context.Context, in *TLChannelsGetBroadcastsForDiscussion, opts ...grpc.CallOption) (*Messages_Chats, error)
	// channels.editAbout#13e27f1e channel:InputChannel about:string = Bool;
	ChannelsEditAbout(ctx context.Context, in *TLChannelsEditAbout, opts ...grpc.CallOption) (*Bool, error)
	// channels.exportInvite#c7560885 channel:InputChannel = ExportedChatInvite;
	ChannelsExportInvite(ctx context.Context, in *TLChannelsExportInvite, opts ...grpc.CallOption) (*ExportedChatInvite, error)
	// channels.toggleInvites#49609307 channel:InputChannel enabled:Bool = Updates;
	ChannelsToggleInvites(ctx context.Context, in *TLChannelsToggleInvites, opts ...grpc.CallOption) (*Updates, error)
	// channels.updatePinnedMessage#a72ded52 flags:# silent:flags.0?true channel:InputChannel id:int = Updates;
	ChannelsUpdatePinnedMessage(ctx context.Context, in *TLChannelsUpdatePinnedMessage, opts ...grpc.CallOption) (*Updates, error)
	// channels.getFeed#b90f450 flags:# offset_to_max_read:flags.3?true feed_id:int offset_position:flags.0?FeedPosition add_offset:int limit:int max_position:flags.1?FeedPosition min_position:flags.2?FeedPosition hash:int = messages.FeedMessages;
	ChannelsGetFeed(ctx context.Context, in *TLChannelsGetFeed, opts ...grpc.CallOption) (*Messages_FeedMessages, error)
	// channels.searchFeed#88325369 feed_id:int q:string offset_date:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
	ChannelsSearchFeed(ctx context.Context, in *TLChannelsSearchFeed, opts ...grpc.CallOption) (*Messages_Messages, error)
	// channels.getFeedSources#d8ce236e flags:# feed_id:flags.0?int hash:int = channels.FeedSources;
	ChannelsGetFeedSources(ctx context.Context, in *TLChannelsGetFeedSources, opts ...grpc.CallOption) (*Channels_FeedSources, error)
	// channels.changeFeedBroadcast#ffb37511 flags:# channel:InputChannel feed_id:flags.0?int = Updates;
	ChannelsChangeFeedBroadcastFFB37511(ctx context.Context, in *TLChannelsChangeFeedBroadcastFFB37511, opts ...grpc.CallOption) (*Updates, error)
	// channels.setFeedBroadcasts#ea80bfae flags:# feed_id:int channels:flags.0?Vector<InputChannel> also_newly_joined:flags.1?Bool = Updates;
	ChannelsSetFeedBroadcastsEA80BFAE(ctx context.Context, in *TLChannelsSetFeedBroadcastsEA80BFAE, opts ...grpc.CallOption) (*Updates, error)
	// channels.readFeed#9c3011d feed_id:int max_position:FeedPosition = Updates;
	ChannelsReadFeed(ctx context.Context, in *TLChannelsReadFeed, opts ...grpc.CallOption) (*Updates, error)
	// channels.changeFeedBroadcast#2528871e flags:# channel:InputChannel feed_id:flags.0?int = Bool;
	ChannelsChangeFeedBroadcast2528871E(ctx context.Context, in *TLChannelsChangeFeedBroadcast2528871E, opts ...grpc.CallOption) (*Bool, error)
	// channels.setFeedBroadcasts#7e91b8f2 feed_id:int channels:Vector<InputChannel> also_newly_joined:Bool = Bool;
	ChannelsSetFeedBroadcasts7E91B8F2(ctx context.Context, in *TLChannelsSetFeedBroadcasts7E91B8F2, opts ...grpc.CallOption) (*Bool, error)
}

type rPCChannelsClient struct {
	cc *grpc.ClientConn
}

func NewRPCChannelsClient(cc *grpc.ClientConn) RPCChannelsClient {
	return &rPCChannelsClient{cc}
}

func (c *rPCChannelsClient) ChannelsReadHistory(ctx context.Context, in *TLChannelsReadHistory, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_readHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsDeleteMessages(ctx context.Context, in *TLChannelsDeleteMessages, opts ...grpc.CallOption) (*Messages_AffectedMessages, error) {
	out := new(Messages_AffectedMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_deleteMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsDeleteUserHistory(ctx context.Context, in *TLChannelsDeleteUserHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_deleteUserHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsReportSpam(ctx context.Context, in *TLChannelsReportSpam, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_reportSpam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetMessages(ctx context.Context, in *TLChannelsGetMessages, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetParticipants(ctx context.Context, in *TLChannelsGetParticipants, opts ...grpc.CallOption) (*Channels_ChannelParticipants, error) {
	out := new(Channels_ChannelParticipants)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getParticipants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetParticipant(ctx context.Context, in *TLChannelsGetParticipant, opts ...grpc.CallOption) (*Channels_ChannelParticipant, error) {
	out := new(Channels_ChannelParticipant)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getParticipant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetChannels(ctx context.Context, in *TLChannelsGetChannels, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetFullChannel(ctx context.Context, in *TLChannelsGetFullChannel, opts ...grpc.CallOption) (*Messages_ChatFull, error) {
	out := new(Messages_ChatFull)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getFullChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsCreateChannel(ctx context.Context, in *TLChannelsCreateChannel, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_createChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditAdmin(ctx context.Context, in *TLChannelsEditAdmin, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditTitle(ctx context.Context, in *TLChannelsEditTitle, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditPhoto(ctx context.Context, in *TLChannelsEditPhoto, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsCheckUsername(ctx context.Context, in *TLChannelsCheckUsername, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_checkUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsUpdateUsername(ctx context.Context, in *TLChannelsUpdateUsername, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_updateUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsJoinChannel(ctx context.Context, in *TLChannelsJoinChannel, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_joinChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsLeaveChannel(ctx context.Context, in *TLChannelsLeaveChannel, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_leaveChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsInviteToChannel(ctx context.Context, in *TLChannelsInviteToChannel, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_inviteToChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsDeleteChannel(ctx context.Context, in *TLChannelsDeleteChannel, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_deleteChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsExportMessageLink(ctx context.Context, in *TLChannelsExportMessageLink, opts ...grpc.CallOption) (*ExportedMessageLink, error) {
	out := new(ExportedMessageLink)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_exportMessageLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsToggleSignatures(ctx context.Context, in *TLChannelsToggleSignatures, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_toggleSignatures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetAdminedPublicChannels(ctx context.Context, in *TLChannelsGetAdminedPublicChannels, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getAdminedPublicChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditBanned(ctx context.Context, in *TLChannelsEditBanned, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editBanned", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetAdminLog(ctx context.Context, in *TLChannelsGetAdminLog, opts ...grpc.CallOption) (*Channels_AdminLogResults, error) {
	out := new(Channels_AdminLogResults)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getAdminLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsSetStickers(ctx context.Context, in *TLChannelsSetStickers, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_setStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsReadMessageContents(ctx context.Context, in *TLChannelsReadMessageContents, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_readMessageContents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsDeleteHistory(ctx context.Context, in *TLChannelsDeleteHistory, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_deleteHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsTogglePreHistoryHidden(ctx context.Context, in *TLChannelsTogglePreHistoryHidden, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_togglePreHistoryHidden", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetLeftChannels(ctx context.Context, in *TLChannelsGetLeftChannels, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getLeftChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetGroupsForDiscussion(ctx context.Context, in *TLChannelsGetGroupsForDiscussion, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getGroupsForDiscussion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsSetDiscussionGroup(ctx context.Context, in *TLChannelsSetDiscussionGroup, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_setDiscussionGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditCreator(ctx context.Context, in *TLChannelsEditCreator, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editCreator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditLocation(ctx context.Context, in *TLChannelsEditLocation, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsToggleSlowMode(ctx context.Context, in *TLChannelsToggleSlowMode, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_toggleSlowMode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetInactiveChannels(ctx context.Context, in *TLChannelsGetInactiveChannels, opts ...grpc.CallOption) (*Messages_InactiveChats, error) {
	out := new(Messages_InactiveChats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getInactiveChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetBroadcastsForDiscussion(ctx context.Context, in *TLChannelsGetBroadcastsForDiscussion, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getBroadcastsForDiscussion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditAbout(ctx context.Context, in *TLChannelsEditAbout, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editAbout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsExportInvite(ctx context.Context, in *TLChannelsExportInvite, opts ...grpc.CallOption) (*ExportedChatInvite, error) {
	out := new(ExportedChatInvite)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_exportInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsToggleInvites(ctx context.Context, in *TLChannelsToggleInvites, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_toggleInvites", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsUpdatePinnedMessage(ctx context.Context, in *TLChannelsUpdatePinnedMessage, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_updatePinnedMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetFeed(ctx context.Context, in *TLChannelsGetFeed, opts ...grpc.CallOption) (*Messages_FeedMessages, error) {
	out := new(Messages_FeedMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsSearchFeed(ctx context.Context, in *TLChannelsSearchFeed, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_searchFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetFeedSources(ctx context.Context, in *TLChannelsGetFeedSources, opts ...grpc.CallOption) (*Channels_FeedSources, error) {
	out := new(Channels_FeedSources)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getFeedSources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsChangeFeedBroadcastFFB37511(ctx context.Context, in *TLChannelsChangeFeedBroadcastFFB37511, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_changeFeedBroadcastFFB37511", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsSetFeedBroadcastsEA80BFAE(ctx context.Context, in *TLChannelsSetFeedBroadcastsEA80BFAE, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_setFeedBroadcastsEA80BFAE", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsReadFeed(ctx context.Context, in *TLChannelsReadFeed, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_readFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsChangeFeedBroadcast2528871E(ctx context.Context, in *TLChannelsChangeFeedBroadcast2528871E, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_changeFeedBroadcast2528871E", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsSetFeedBroadcasts7E91B8F2(ctx context.Context, in *TLChannelsSetFeedBroadcasts7E91B8F2, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_setFeedBroadcasts7E91B8F2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCChannelsServer is the server API for RPCChannels service.
type RPCChannelsServer interface {
	// channels.readHistory#cc104937 channel:InputChannel max_id:int = Bool;
	ChannelsReadHistory(context.Context, *TLChannelsReadHistory) (*Bool, error)
	// channels.deleteMessages#84c1fd4e channel:InputChannel id:Vector<int> = messages.AffectedMessages;
	ChannelsDeleteMessages(context.Context, *TLChannelsDeleteMessages) (*Messages_AffectedMessages, error)
	// channels.deleteUserHistory#d10dd71b channel:InputChannel user_id:InputUser = messages.AffectedHistory;
	ChannelsDeleteUserHistory(context.Context, *TLChannelsDeleteUserHistory) (*Messages_AffectedHistory, error)
	// channels.reportSpam#fe087810 channel:InputChannel user_id:InputUser id:Vector<int> = Bool;
	ChannelsReportSpam(context.Context, *TLChannelsReportSpam) (*Bool, error)
	// channels.getMessages#ad8c9a23 channel:InputChannel id:Vector<InputMessage> = messages.Messages;
	ChannelsGetMessages(context.Context, *TLChannelsGetMessages) (*Messages_Messages, error)
	// channels.getParticipants#123e05e9 channel:InputChannel filter:ChannelParticipantsFilter offset:int limit:int hash:int = channels.ChannelParticipants;
	ChannelsGetParticipants(context.Context, *TLChannelsGetParticipants) (*Channels_ChannelParticipants, error)
	// channels.getParticipant#546dd7a6 channel:InputChannel user_id:InputUser = channels.ChannelParticipant;
	ChannelsGetParticipant(context.Context, *TLChannelsGetParticipant) (*Channels_ChannelParticipant, error)
	// channels.getChannels#a7f6bbb id:Vector<InputChannel> = messages.Chats;
	ChannelsGetChannels(context.Context, *TLChannelsGetChannels) (*Messages_Chats, error)
	// channels.getFullChannel#8736a09 channel:InputChannel = messages.ChatFull;
	ChannelsGetFullChannel(context.Context, *TLChannelsGetFullChannel) (*Messages_ChatFull, error)
	// channels.createChannel#f92c8267 flags:# broadcast:flags.0?true megagroup:flags.1?true title:string about:string notice:string geo_point:flags.2?InputGeoPoint address:flags.2?string = Updates;
	ChannelsCreateChannel(context.Context, *TLChannelsCreateChannel) (*Updates, error)
	// channels.editAdmin#d33c8902 channel:InputChannel user_id:InputUser admin_rights:ChatAdminRights rank:string = Updates;
	ChannelsEditAdmin(context.Context, *TLChannelsEditAdmin) (*Updates, error)
	// channels.editTitle#566decd0 channel:InputChannel title:string = Updates;
	ChannelsEditTitle(context.Context, *TLChannelsEditTitle) (*Updates, error)
	// channels.editPhoto#f12e57c9 channel:InputChannel photo:InputChatPhoto = Updates;
	ChannelsEditPhoto(context.Context, *TLChannelsEditPhoto) (*Updates, error)
	// channels.checkUsername#10e6bd2c channel:InputChannel username:string = Bool;
	ChannelsCheckUsername(context.Context, *TLChannelsCheckUsername) (*Bool, error)
	// channels.updateUsername#3514b3de channel:InputChannel username:string = Bool;
	ChannelsUpdateUsername(context.Context, *TLChannelsUpdateUsername) (*Bool, error)
	// channels.joinChannel#24b524c5 channel:InputChannel = Updates;
	ChannelsJoinChannel(context.Context, *TLChannelsJoinChannel) (*Updates, error)
	// channels.leaveChannel#f836aa95 channel:InputChannel = Updates;
	ChannelsLeaveChannel(context.Context, *TLChannelsLeaveChannel) (*Updates, error)
	// channels.inviteToChannel#199f3a6c channel:InputChannel users:Vector<InputUser> = Updates;
	ChannelsInviteToChannel(context.Context, *TLChannelsInviteToChannel) (*Updates, error)
	// channels.deleteChannel#c0111fe3 channel:InputChannel = Updates;
	ChannelsDeleteChannel(context.Context, *TLChannelsDeleteChannel) (*Updates, error)
	// channels.exportMessageLink#e63fadeb flags:# grouped:flags.0?true thread:flags.1?true channel:InputChannel id:int = ExportedMessageLink;
	ChannelsExportMessageLink(context.Context, *TLChannelsExportMessageLink) (*ExportedMessageLink, error)
	// channels.toggleSignatures#1f69b606 channel:InputChannel enabled:Bool = Updates;
	ChannelsToggleSignatures(context.Context, *TLChannelsToggleSignatures) (*Updates, error)
	// channels.getAdminedPublicChannels#f8b036af flags:# by_location:flags.0?true check_limit:flags.1?true = messages.Chats;
	ChannelsGetAdminedPublicChannels(context.Context, *TLChannelsGetAdminedPublicChannels) (*Messages_Chats, error)
	// channels.editBanned#72796912 channel:InputChannel user_id:InputUser banned_rights:ChatBannedRights = Updates;
	ChannelsEditBanned(context.Context, *TLChannelsEditBanned) (*Updates, error)
	// channels.getAdminLog#33ddf480 flags:# channel:InputChannel q:string events_filter:flags.0?ChannelAdminLogEventsFilter admins:flags.1?Vector<InputUser> max_id:long min_id:long limit:int = channels.AdminLogResults;
	ChannelsGetAdminLog(context.Context, *TLChannelsGetAdminLog) (*Channels_AdminLogResults, error)
	// channels.setStickers#ea8ca4f9 channel:InputChannel stickerset:InputStickerSet = Bool;
	ChannelsSetStickers(context.Context, *TLChannelsSetStickers) (*Bool, error)
	// channels.readMessageContents#eab5dc38 channel:InputChannel id:Vector<int> = Bool;
	ChannelsReadMessageContents(context.Context, *TLChannelsReadMessageContents) (*Bool, error)
	// channels.deleteHistory#af369d42 channel:InputChannel max_id:int = Bool;
	ChannelsDeleteHistory(context.Context, *TLChannelsDeleteHistory) (*Bool, error)
	// channels.togglePreHistoryHidden#eabbb94c channel:InputChannel enabled:Bool = Updates;
	ChannelsTogglePreHistoryHidden(context.Context, *TLChannelsTogglePreHistoryHidden) (*Updates, error)
	// channels.getLeftChannels#8341ecc0 offset:int = messages.Chats;
	ChannelsGetLeftChannels(context.Context, *TLChannelsGetLeftChannels) (*Messages_Chats, error)
	// channels.getGroupsForDiscussion#f5dad378 = messages.Chats;
	ChannelsGetGroupsForDiscussion(context.Context, *TLChannelsGetGroupsForDiscussion) (*Messages_Chats, error)
	// channels.setDiscussionGroup#40582bb2 broadcast:InputChannel group:InputChannel = Bool;
	ChannelsSetDiscussionGroup(context.Context, *TLChannelsSetDiscussionGroup) (*Bool, error)
	// channels.editCreator#8f38cd1f channel:InputChannel user_id:InputUser password:InputCheckPasswordSRP = Updates;
	ChannelsEditCreator(context.Context, *TLChannelsEditCreator) (*Updates, error)
	// channels.editLocation#58e63f6d channel:InputChannel geo_point:InputGeoPoint address:string = Bool;
	ChannelsEditLocation(context.Context, *TLChannelsEditLocation) (*Bool, error)
	// channels.toggleSlowMode#edd49ef0 channel:InputChannel seconds:int = Updates;
	ChannelsToggleSlowMode(context.Context, *TLChannelsToggleSlowMode) (*Updates, error)
	// channels.getInactiveChannels#11e831ee = messages.InactiveChats;
	ChannelsGetInactiveChannels(context.Context, *TLChannelsGetInactiveChannels) (*Messages_InactiveChats, error)
	// channels.getBroadcastsForDiscussion#1a87f304 = messages.Chats;
	ChannelsGetBroadcastsForDiscussion(context.Context, *TLChannelsGetBroadcastsForDiscussion) (*Messages_Chats, error)
	// channels.editAbout#13e27f1e channel:InputChannel about:string = Bool;
	ChannelsEditAbout(context.Context, *TLChannelsEditAbout) (*Bool, error)
	// channels.exportInvite#c7560885 channel:InputChannel = ExportedChatInvite;
	ChannelsExportInvite(context.Context, *TLChannelsExportInvite) (*ExportedChatInvite, error)
	// channels.toggleInvites#49609307 channel:InputChannel enabled:Bool = Updates;
	ChannelsToggleInvites(context.Context, *TLChannelsToggleInvites) (*Updates, error)
	// channels.updatePinnedMessage#a72ded52 flags:# silent:flags.0?true channel:InputChannel id:int = Updates;
	ChannelsUpdatePinnedMessage(context.Context, *TLChannelsUpdatePinnedMessage) (*Updates, error)
	// channels.getFeed#b90f450 flags:# offset_to_max_read:flags.3?true feed_id:int offset_position:flags.0?FeedPosition add_offset:int limit:int max_position:flags.1?FeedPosition min_position:flags.2?FeedPosition hash:int = messages.FeedMessages;
	ChannelsGetFeed(context.Context, *TLChannelsGetFeed) (*Messages_FeedMessages, error)
	// channels.searchFeed#88325369 feed_id:int q:string offset_date:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
	ChannelsSearchFeed(context.Context, *TLChannelsSearchFeed) (*Messages_Messages, error)
	// channels.getFeedSources#d8ce236e flags:# feed_id:flags.0?int hash:int = channels.FeedSources;
	ChannelsGetFeedSources(context.Context, *TLChannelsGetFeedSources) (*Channels_FeedSources, error)
	// channels.changeFeedBroadcast#ffb37511 flags:# channel:InputChannel feed_id:flags.0?int = Updates;
	ChannelsChangeFeedBroadcastFFB37511(context.Context, *TLChannelsChangeFeedBroadcastFFB37511) (*Updates, error)
	// channels.setFeedBroadcasts#ea80bfae flags:# feed_id:int channels:flags.0?Vector<InputChannel> also_newly_joined:flags.1?Bool = Updates;
	ChannelsSetFeedBroadcastsEA80BFAE(context.Context, *TLChannelsSetFeedBroadcastsEA80BFAE) (*Updates, error)
	// channels.readFeed#9c3011d feed_id:int max_position:FeedPosition = Updates;
	ChannelsReadFeed(context.Context, *TLChannelsReadFeed) (*Updates, error)
	// channels.changeFeedBroadcast#2528871e flags:# channel:InputChannel feed_id:flags.0?int = Bool;
	ChannelsChangeFeedBroadcast2528871E(context.Context, *TLChannelsChangeFeedBroadcast2528871E) (*Bool, error)
	// channels.setFeedBroadcasts#7e91b8f2 feed_id:int channels:Vector<InputChannel> also_newly_joined:Bool = Bool;
	ChannelsSetFeedBroadcasts7E91B8F2(context.Context, *TLChannelsSetFeedBroadcasts7E91B8F2) (*Bool, error)
}

func RegisterRPCChannelsServer(s *grpc.Server, srv RPCChannelsServer) {
	s.RegisterService(&_RPCChannels_serviceDesc, srv)
}

func _RPCChannels_ChannelsReadHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsReadHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsReadHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsReadHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsReadHistory(ctx, req.(*TLChannelsReadHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsDeleteMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsDeleteMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsDeleteMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsDeleteMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsDeleteMessages(ctx, req.(*TLChannelsDeleteMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsDeleteUserHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsDeleteUserHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsDeleteUserHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsDeleteUserHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsDeleteUserHistory(ctx, req.(*TLChannelsDeleteUserHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsReportSpam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsReportSpam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsReportSpam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsReportSpam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsReportSpam(ctx, req.(*TLChannelsReportSpam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetMessages(ctx, req.(*TLChannelsGetMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetParticipants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetParticipants)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetParticipants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetParticipants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetParticipants(ctx, req.(*TLChannelsGetParticipants))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetParticipant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetParticipant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetParticipant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetParticipant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetParticipant(ctx, req.(*TLChannelsGetParticipant))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetChannels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetChannels(ctx, req.(*TLChannelsGetChannels))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetFullChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetFullChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetFullChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetFullChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetFullChannel(ctx, req.(*TLChannelsGetFullChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsCreateChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsCreateChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsCreateChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsCreateChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsCreateChannel(ctx, req.(*TLChannelsCreateChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditAdmin(ctx, req.(*TLChannelsEditAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditTitle(ctx, req.(*TLChannelsEditTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditPhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditPhoto(ctx, req.(*TLChannelsEditPhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsCheckUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsCheckUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsCheckUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsCheckUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsCheckUsername(ctx, req.(*TLChannelsCheckUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsUpdateUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsUpdateUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsUpdateUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsUpdateUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsUpdateUsername(ctx, req.(*TLChannelsUpdateUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsJoinChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsJoinChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsJoinChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsJoinChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsJoinChannel(ctx, req.(*TLChannelsJoinChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsLeaveChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsLeaveChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsLeaveChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsLeaveChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsLeaveChannel(ctx, req.(*TLChannelsLeaveChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsInviteToChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsInviteToChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsInviteToChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsInviteToChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsInviteToChannel(ctx, req.(*TLChannelsInviteToChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsDeleteChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsDeleteChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsDeleteChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsDeleteChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsDeleteChannel(ctx, req.(*TLChannelsDeleteChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsExportMessageLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsExportMessageLink)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsExportMessageLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsExportMessageLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsExportMessageLink(ctx, req.(*TLChannelsExportMessageLink))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsToggleSignatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsToggleSignatures)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsToggleSignatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsToggleSignatures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsToggleSignatures(ctx, req.(*TLChannelsToggleSignatures))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetAdminedPublicChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetAdminedPublicChannels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetAdminedPublicChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetAdminedPublicChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetAdminedPublicChannels(ctx, req.(*TLChannelsGetAdminedPublicChannels))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditBanned_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditBanned)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditBanned(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditBanned",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditBanned(ctx, req.(*TLChannelsEditBanned))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetAdminLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetAdminLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetAdminLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetAdminLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetAdminLog(ctx, req.(*TLChannelsGetAdminLog))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsSetStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsSetStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsSetStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsSetStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsSetStickers(ctx, req.(*TLChannelsSetStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsReadMessageContents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsReadMessageContents)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsReadMessageContents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsReadMessageContents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsReadMessageContents(ctx, req.(*TLChannelsReadMessageContents))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsDeleteHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsDeleteHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsDeleteHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsDeleteHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsDeleteHistory(ctx, req.(*TLChannelsDeleteHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsTogglePreHistoryHidden_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsTogglePreHistoryHidden)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsTogglePreHistoryHidden(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsTogglePreHistoryHidden",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsTogglePreHistoryHidden(ctx, req.(*TLChannelsTogglePreHistoryHidden))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetLeftChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetLeftChannels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetLeftChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetLeftChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetLeftChannels(ctx, req.(*TLChannelsGetLeftChannels))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetGroupsForDiscussion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetGroupsForDiscussion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetGroupsForDiscussion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetGroupsForDiscussion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetGroupsForDiscussion(ctx, req.(*TLChannelsGetGroupsForDiscussion))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsSetDiscussionGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsSetDiscussionGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsSetDiscussionGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsSetDiscussionGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsSetDiscussionGroup(ctx, req.(*TLChannelsSetDiscussionGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditCreator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditCreator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditCreator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditCreator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditCreator(ctx, req.(*TLChannelsEditCreator))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditLocation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditLocation(ctx, req.(*TLChannelsEditLocation))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsToggleSlowMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsToggleSlowMode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsToggleSlowMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsToggleSlowMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsToggleSlowMode(ctx, req.(*TLChannelsToggleSlowMode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetInactiveChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetInactiveChannels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetInactiveChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetInactiveChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetInactiveChannels(ctx, req.(*TLChannelsGetInactiveChannels))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetBroadcastsForDiscussion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetBroadcastsForDiscussion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetBroadcastsForDiscussion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetBroadcastsForDiscussion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetBroadcastsForDiscussion(ctx, req.(*TLChannelsGetBroadcastsForDiscussion))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditAbout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditAbout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditAbout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditAbout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditAbout(ctx, req.(*TLChannelsEditAbout))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsExportInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsExportInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsExportInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsExportInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsExportInvite(ctx, req.(*TLChannelsExportInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsToggleInvites_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsToggleInvites)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsToggleInvites(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsToggleInvites",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsToggleInvites(ctx, req.(*TLChannelsToggleInvites))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsUpdatePinnedMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsUpdatePinnedMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsUpdatePinnedMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsUpdatePinnedMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsUpdatePinnedMessage(ctx, req.(*TLChannelsUpdatePinnedMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetFeed)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetFeed(ctx, req.(*TLChannelsGetFeed))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsSearchFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsSearchFeed)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsSearchFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsSearchFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsSearchFeed(ctx, req.(*TLChannelsSearchFeed))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetFeedSources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetFeedSources)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetFeedSources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetFeedSources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetFeedSources(ctx, req.(*TLChannelsGetFeedSources))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsChangeFeedBroadcastFFB37511_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsChangeFeedBroadcastFFB37511)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsChangeFeedBroadcastFFB37511(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsChangeFeedBroadcastFFB37511",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsChangeFeedBroadcastFFB37511(ctx, req.(*TLChannelsChangeFeedBroadcastFFB37511))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsSetFeedBroadcastsEA80BFAE_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsSetFeedBroadcastsEA80BFAE)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsSetFeedBroadcastsEA80BFAE(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsSetFeedBroadcastsEA80BFAE",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsSetFeedBroadcastsEA80BFAE(ctx, req.(*TLChannelsSetFeedBroadcastsEA80BFAE))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsReadFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsReadFeed)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsReadFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsReadFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsReadFeed(ctx, req.(*TLChannelsReadFeed))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsChangeFeedBroadcast2528871E_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsChangeFeedBroadcast2528871E)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsChangeFeedBroadcast2528871E(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsChangeFeedBroadcast2528871E",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsChangeFeedBroadcast2528871E(ctx, req.(*TLChannelsChangeFeedBroadcast2528871E))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsSetFeedBroadcasts7E91B8F2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsSetFeedBroadcasts7E91B8F2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsSetFeedBroadcasts7E91B8F2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsSetFeedBroadcasts7E91B8F2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsSetFeedBroadcasts7E91B8F2(ctx, req.(*TLChannelsSetFeedBroadcasts7E91B8F2))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCChannels_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCChannels",
	HandlerType: (*RPCChannelsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "channels_readHistory",
			Handler:    _RPCChannels_ChannelsReadHistory_Handler,
		},
		{
			MethodName: "channels_deleteMessages",
			Handler:    _RPCChannels_ChannelsDeleteMessages_Handler,
		},
		{
			MethodName: "channels_deleteUserHistory",
			Handler:    _RPCChannels_ChannelsDeleteUserHistory_Handler,
		},
		{
			MethodName: "channels_reportSpam",
			Handler:    _RPCChannels_ChannelsReportSpam_Handler,
		},
		{
			MethodName: "channels_getMessages",
			Handler:    _RPCChannels_ChannelsGetMessages_Handler,
		},
		{
			MethodName: "channels_getParticipants",
			Handler:    _RPCChannels_ChannelsGetParticipants_Handler,
		},
		{
			MethodName: "channels_getParticipant",
			Handler:    _RPCChannels_ChannelsGetParticipant_Handler,
		},
		{
			MethodName: "channels_getChannels",
			Handler:    _RPCChannels_ChannelsGetChannels_Handler,
		},
		{
			MethodName: "channels_getFullChannel",
			Handler:    _RPCChannels_ChannelsGetFullChannel_Handler,
		},
		{
			MethodName: "channels_createChannel",
			Handler:    _RPCChannels_ChannelsCreateChannel_Handler,
		},
		{
			MethodName: "channels_editAdmin",
			Handler:    _RPCChannels_ChannelsEditAdmin_Handler,
		},
		{
			MethodName: "channels_editTitle",
			Handler:    _RPCChannels_ChannelsEditTitle_Handler,
		},
		{
			MethodName: "channels_editPhoto",
			Handler:    _RPCChannels_ChannelsEditPhoto_Handler,
		},
		{
			MethodName: "channels_checkUsername",
			Handler:    _RPCChannels_ChannelsCheckUsername_Handler,
		},
		{
			MethodName: "channels_updateUsername",
			Handler:    _RPCChannels_ChannelsUpdateUsername_Handler,
		},
		{
			MethodName: "channels_joinChannel",
			Handler:    _RPCChannels_ChannelsJoinChannel_Handler,
		},
		{
			MethodName: "channels_leaveChannel",
			Handler:    _RPCChannels_ChannelsLeaveChannel_Handler,
		},
		{
			MethodName: "channels_inviteToChannel",
			Handler:    _RPCChannels_ChannelsInviteToChannel_Handler,
		},
		{
			MethodName: "channels_deleteChannel",
			Handler:    _RPCChannels_ChannelsDeleteChannel_Handler,
		},
		{
			MethodName: "channels_exportMessageLink",
			Handler:    _RPCChannels_ChannelsExportMessageLink_Handler,
		},
		{
			MethodName: "channels_toggleSignatures",
			Handler:    _RPCChannels_ChannelsToggleSignatures_Handler,
		},
		{
			MethodName: "channels_getAdminedPublicChannels",
			Handler:    _RPCChannels_ChannelsGetAdminedPublicChannels_Handler,
		},
		{
			MethodName: "channels_editBanned",
			Handler:    _RPCChannels_ChannelsEditBanned_Handler,
		},
		{
			MethodName: "channels_getAdminLog",
			Handler:    _RPCChannels_ChannelsGetAdminLog_Handler,
		},
		{
			MethodName: "channels_setStickers",
			Handler:    _RPCChannels_ChannelsSetStickers_Handler,
		},
		{
			MethodName: "channels_readMessageContents",
			Handler:    _RPCChannels_ChannelsReadMessageContents_Handler,
		},
		{
			MethodName: "channels_deleteHistory",
			Handler:    _RPCChannels_ChannelsDeleteHistory_Handler,
		},
		{
			MethodName: "channels_togglePreHistoryHidden",
			Handler:    _RPCChannels_ChannelsTogglePreHistoryHidden_Handler,
		},
		{
			MethodName: "channels_getLeftChannels",
			Handler:    _RPCChannels_ChannelsGetLeftChannels_Handler,
		},
		{
			MethodName: "channels_getGroupsForDiscussion",
			Handler:    _RPCChannels_ChannelsGetGroupsForDiscussion_Handler,
		},
		{
			MethodName: "channels_setDiscussionGroup",
			Handler:    _RPCChannels_ChannelsSetDiscussionGroup_Handler,
		},
		{
			MethodName: "channels_editCreator",
			Handler:    _RPCChannels_ChannelsEditCreator_Handler,
		},
		{
			MethodName: "channels_editLocation",
			Handler:    _RPCChannels_ChannelsEditLocation_Handler,
		},
		{
			MethodName: "channels_toggleSlowMode",
			Handler:    _RPCChannels_ChannelsToggleSlowMode_Handler,
		},
		{
			MethodName: "channels_getInactiveChannels",
			Handler:    _RPCChannels_ChannelsGetInactiveChannels_Handler,
		},
		{
			MethodName: "channels_getBroadcastsForDiscussion",
			Handler:    _RPCChannels_ChannelsGetBroadcastsForDiscussion_Handler,
		},
		{
			MethodName: "channels_editAbout",
			Handler:    _RPCChannels_ChannelsEditAbout_Handler,
		},
		{
			MethodName: "channels_exportInvite",
			Handler:    _RPCChannels_ChannelsExportInvite_Handler,
		},
		{
			MethodName: "channels_toggleInvites",
			Handler:    _RPCChannels_ChannelsToggleInvites_Handler,
		},
		{
			MethodName: "channels_updatePinnedMessage",
			Handler:    _RPCChannels_ChannelsUpdatePinnedMessage_Handler,
		},
		{
			MethodName: "channels_getFeed",
			Handler:    _RPCChannels_ChannelsGetFeed_Handler,
		},
		{
			MethodName: "channels_searchFeed",
			Handler:    _RPCChannels_ChannelsSearchFeed_Handler,
		},
		{
			MethodName: "channels_getFeedSources",
			Handler:    _RPCChannels_ChannelsGetFeedSources_Handler,
		},
		{
			MethodName: "channels_changeFeedBroadcastFFB37511",
			Handler:    _RPCChannels_ChannelsChangeFeedBroadcastFFB37511_Handler,
		},
		{
			MethodName: "channels_setFeedBroadcastsEA80BFAE",
			Handler:    _RPCChannels_ChannelsSetFeedBroadcastsEA80BFAE_Handler,
		},
		{
			MethodName: "channels_readFeed",
			Handler:    _RPCChannels_ChannelsReadFeed_Handler,
		},
		{
			MethodName: "channels_changeFeedBroadcast2528871E",
			Handler:    _RPCChannels_ChannelsChangeFeedBroadcast2528871E_Handler,
		},
		{
			MethodName: "channels_setFeedBroadcasts7E91B8F2",
			Handler:    _RPCChannels_ChannelsSetFeedBroadcasts7E91B8F2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCPhotosClient is the client API for RPCPhotos service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPhotosClient interface {
	// photos.updateProfilePhoto#72d4742c id:InputPhoto = photos.Photo;
	PhotosUpdateProfilePhoto72D4742C(ctx context.Context, in *TLPhotosUpdateProfilePhoto72D4742C, opts ...grpc.CallOption) (*Photos_Photo, error)
	// photos.uploadProfilePhoto#89f30f69 flags:# file:flags.0?InputFile video:flags.1?InputFile video_start_ts:flags.2?double = photos.Photo;
	PhotosUploadProfilePhoto(ctx context.Context, in *TLPhotosUploadProfilePhoto, opts ...grpc.CallOption) (*Photos_Photo, error)
	// photos.deletePhotos#87cf7f2f id:Vector<InputPhoto> = Vector<long>;
	PhotosDeletePhotos(ctx context.Context, in *TLPhotosDeletePhotos, opts ...grpc.CallOption) (*Vector_Long, error)
	// photos.getUserPhotos#91cd32a8 user_id:InputUser offset:int max_id:long limit:int = photos.Photos;
	PhotosGetUserPhotos(ctx context.Context, in *TLPhotosGetUserPhotos, opts ...grpc.CallOption) (*Photos_Photos, error)
	// photos.updateProfilePhoto#f0bb5152 id:InputPhoto = UserProfilePhoto;
	PhotosUpdateProfilePhotoF0BB5152(ctx context.Context, in *TLPhotosUpdateProfilePhotoF0BB5152, opts ...grpc.CallOption) (*UserProfilePhoto, error)
}

type rPCPhotosClient struct {
	cc *grpc.ClientConn
}

func NewRPCPhotosClient(cc *grpc.ClientConn) RPCPhotosClient {
	return &rPCPhotosClient{cc}
}

func (c *rPCPhotosClient) PhotosUpdateProfilePhoto72D4742C(ctx context.Context, in *TLPhotosUpdateProfilePhoto72D4742C, opts ...grpc.CallOption) (*Photos_Photo, error) {
	out := new(Photos_Photo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhotos/photos_updateProfilePhoto72D4742C", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhotosClient) PhotosUploadProfilePhoto(ctx context.Context, in *TLPhotosUploadProfilePhoto, opts ...grpc.CallOption) (*Photos_Photo, error) {
	out := new(Photos_Photo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhotos/photos_uploadProfilePhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhotosClient) PhotosDeletePhotos(ctx context.Context, in *TLPhotosDeletePhotos, opts ...grpc.CallOption) (*Vector_Long, error) {
	out := new(Vector_Long)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhotos/photos_deletePhotos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhotosClient) PhotosGetUserPhotos(ctx context.Context, in *TLPhotosGetUserPhotos, opts ...grpc.CallOption) (*Photos_Photos, error) {
	out := new(Photos_Photos)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhotos/photos_getUserPhotos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhotosClient) PhotosUpdateProfilePhotoF0BB5152(ctx context.Context, in *TLPhotosUpdateProfilePhotoF0BB5152, opts ...grpc.CallOption) (*UserProfilePhoto, error) {
	out := new(UserProfilePhoto)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhotos/photos_updateProfilePhotoF0BB5152", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPhotosServer is the server API for RPCPhotos service.
type RPCPhotosServer interface {
	// photos.updateProfilePhoto#72d4742c id:InputPhoto = photos.Photo;
	PhotosUpdateProfilePhoto72D4742C(context.Context, *TLPhotosUpdateProfilePhoto72D4742C) (*Photos_Photo, error)
	// photos.uploadProfilePhoto#89f30f69 flags:# file:flags.0?InputFile video:flags.1?InputFile video_start_ts:flags.2?double = photos.Photo;
	PhotosUploadProfilePhoto(context.Context, *TLPhotosUploadProfilePhoto) (*Photos_Photo, error)
	// photos.deletePhotos#87cf7f2f id:Vector<InputPhoto> = Vector<long>;
	PhotosDeletePhotos(context.Context, *TLPhotosDeletePhotos) (*Vector_Long, error)
	// photos.getUserPhotos#91cd32a8 user_id:InputUser offset:int max_id:long limit:int = photos.Photos;
	PhotosGetUserPhotos(context.Context, *TLPhotosGetUserPhotos) (*Photos_Photos, error)
	// photos.updateProfilePhoto#f0bb5152 id:InputPhoto = UserProfilePhoto;
	PhotosUpdateProfilePhotoF0BB5152(context.Context, *TLPhotosUpdateProfilePhotoF0BB5152) (*UserProfilePhoto, error)
}

func RegisterRPCPhotosServer(s *grpc.Server, srv RPCPhotosServer) {
	s.RegisterService(&_RPCPhotos_serviceDesc, srv)
}

func _RPCPhotos_PhotosUpdateProfilePhoto72D4742C_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhotosUpdateProfilePhoto72D4742C)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhotosServer).PhotosUpdateProfilePhoto72D4742C(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhotos/PhotosUpdateProfilePhoto72D4742C",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhotosServer).PhotosUpdateProfilePhoto72D4742C(ctx, req.(*TLPhotosUpdateProfilePhoto72D4742C))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhotos_PhotosUploadProfilePhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhotosUploadProfilePhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhotosServer).PhotosUploadProfilePhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhotos/PhotosUploadProfilePhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhotosServer).PhotosUploadProfilePhoto(ctx, req.(*TLPhotosUploadProfilePhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhotos_PhotosDeletePhotos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhotosDeletePhotos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhotosServer).PhotosDeletePhotos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhotos/PhotosDeletePhotos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhotosServer).PhotosDeletePhotos(ctx, req.(*TLPhotosDeletePhotos))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhotos_PhotosGetUserPhotos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhotosGetUserPhotos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhotosServer).PhotosGetUserPhotos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhotos/PhotosGetUserPhotos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhotosServer).PhotosGetUserPhotos(ctx, req.(*TLPhotosGetUserPhotos))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhotos_PhotosUpdateProfilePhotoF0BB5152_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhotosUpdateProfilePhotoF0BB5152)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhotosServer).PhotosUpdateProfilePhotoF0BB5152(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhotos/PhotosUpdateProfilePhotoF0BB5152",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhotosServer).PhotosUpdateProfilePhotoF0BB5152(ctx, req.(*TLPhotosUpdateProfilePhotoF0BB5152))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPhotos_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCPhotos",
	HandlerType: (*RPCPhotosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "photos_updateProfilePhoto72D4742C",
			Handler:    _RPCPhotos_PhotosUpdateProfilePhoto72D4742C_Handler,
		},
		{
			MethodName: "photos_uploadProfilePhoto",
			Handler:    _RPCPhotos_PhotosUploadProfilePhoto_Handler,
		},
		{
			MethodName: "photos_deletePhotos",
			Handler:    _RPCPhotos_PhotosDeletePhotos_Handler,
		},
		{
			MethodName: "photos_getUserPhotos",
			Handler:    _RPCPhotos_PhotosGetUserPhotos_Handler,
		},
		{
			MethodName: "photos_updateProfilePhotoF0BB5152",
			Handler:    _RPCPhotos_PhotosUpdateProfilePhotoF0BB5152_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCPaymentsClient is the client API for RPCPayments service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPaymentsClient interface {
	// payments.getPaymentForm#99f09745 msg_id:int = payments.PaymentForm;
	PaymentsGetPaymentForm(ctx context.Context, in *TLPaymentsGetPaymentForm, opts ...grpc.CallOption) (*Payments_PaymentForm, error)
	// payments.getPaymentReceipt#a092a980 msg_id:int = payments.PaymentReceipt;
	PaymentsGetPaymentReceipt(ctx context.Context, in *TLPaymentsGetPaymentReceipt, opts ...grpc.CallOption) (*Payments_PaymentReceipt, error)
	// payments.validateRequestedInfo#770a8e74 flags:# save:flags.0?true msg_id:int info:PaymentRequestedInfo = payments.ValidatedRequestedInfo;
	PaymentsValidateRequestedInfo(ctx context.Context, in *TLPaymentsValidateRequestedInfo, opts ...grpc.CallOption) (*Payments_ValidatedRequestedInfo, error)
	// payments.sendPaymentForm#2b8879b3 flags:# msg_id:int requested_info_id:flags.0?string shipping_option_id:flags.1?string credentials:InputPaymentCredentials = payments.PaymentResult;
	PaymentsSendPaymentForm(ctx context.Context, in *TLPaymentsSendPaymentForm, opts ...grpc.CallOption) (*Payments_PaymentResult, error)
	// payments.getSavedInfo#227d824b = payments.SavedInfo;
	PaymentsGetSavedInfo(ctx context.Context, in *TLPaymentsGetSavedInfo, opts ...grpc.CallOption) (*Payments_SavedInfo, error)
	// payments.clearSavedInfo#d83d70c1 flags:# credentials:flags.0?true info:flags.1?true = Bool;
	PaymentsClearSavedInfo(ctx context.Context, in *TLPaymentsClearSavedInfo, opts ...grpc.CallOption) (*Bool, error)
	// payments.getBankCardData#2e79d779 number:string = payments.BankCardData;
	PaymentsGetBankCardData(ctx context.Context, in *TLPaymentsGetBankCardData, opts ...grpc.CallOption) (*Payments_BankCardData, error)
}

type rPCPaymentsClient struct {
	cc *grpc.ClientConn
}

func NewRPCPaymentsClient(cc *grpc.ClientConn) RPCPaymentsClient {
	return &rPCPaymentsClient{cc}
}

func (c *rPCPaymentsClient) PaymentsGetPaymentForm(ctx context.Context, in *TLPaymentsGetPaymentForm, opts ...grpc.CallOption) (*Payments_PaymentForm, error) {
	out := new(Payments_PaymentForm)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_getPaymentForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsGetPaymentReceipt(ctx context.Context, in *TLPaymentsGetPaymentReceipt, opts ...grpc.CallOption) (*Payments_PaymentReceipt, error) {
	out := new(Payments_PaymentReceipt)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_getPaymentReceipt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsValidateRequestedInfo(ctx context.Context, in *TLPaymentsValidateRequestedInfo, opts ...grpc.CallOption) (*Payments_ValidatedRequestedInfo, error) {
	out := new(Payments_ValidatedRequestedInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_validateRequestedInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsSendPaymentForm(ctx context.Context, in *TLPaymentsSendPaymentForm, opts ...grpc.CallOption) (*Payments_PaymentResult, error) {
	out := new(Payments_PaymentResult)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_sendPaymentForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsGetSavedInfo(ctx context.Context, in *TLPaymentsGetSavedInfo, opts ...grpc.CallOption) (*Payments_SavedInfo, error) {
	out := new(Payments_SavedInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_getSavedInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsClearSavedInfo(ctx context.Context, in *TLPaymentsClearSavedInfo, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_clearSavedInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsGetBankCardData(ctx context.Context, in *TLPaymentsGetBankCardData, opts ...grpc.CallOption) (*Payments_BankCardData, error) {
	out := new(Payments_BankCardData)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_getBankCardData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPaymentsServer is the server API for RPCPayments service.
type RPCPaymentsServer interface {
	// payments.getPaymentForm#99f09745 msg_id:int = payments.PaymentForm;
	PaymentsGetPaymentForm(context.Context, *TLPaymentsGetPaymentForm) (*Payments_PaymentForm, error)
	// payments.getPaymentReceipt#a092a980 msg_id:int = payments.PaymentReceipt;
	PaymentsGetPaymentReceipt(context.Context, *TLPaymentsGetPaymentReceipt) (*Payments_PaymentReceipt, error)
	// payments.validateRequestedInfo#770a8e74 flags:# save:flags.0?true msg_id:int info:PaymentRequestedInfo = payments.ValidatedRequestedInfo;
	PaymentsValidateRequestedInfo(context.Context, *TLPaymentsValidateRequestedInfo) (*Payments_ValidatedRequestedInfo, error)
	// payments.sendPaymentForm#2b8879b3 flags:# msg_id:int requested_info_id:flags.0?string shipping_option_id:flags.1?string credentials:InputPaymentCredentials = payments.PaymentResult;
	PaymentsSendPaymentForm(context.Context, *TLPaymentsSendPaymentForm) (*Payments_PaymentResult, error)
	// payments.getSavedInfo#227d824b = payments.SavedInfo;
	PaymentsGetSavedInfo(context.Context, *TLPaymentsGetSavedInfo) (*Payments_SavedInfo, error)
	// payments.clearSavedInfo#d83d70c1 flags:# credentials:flags.0?true info:flags.1?true = Bool;
	PaymentsClearSavedInfo(context.Context, *TLPaymentsClearSavedInfo) (*Bool, error)
	// payments.getBankCardData#2e79d779 number:string = payments.BankCardData;
	PaymentsGetBankCardData(context.Context, *TLPaymentsGetBankCardData) (*Payments_BankCardData, error)
}

func RegisterRPCPaymentsServer(s *grpc.Server, srv RPCPaymentsServer) {
	s.RegisterService(&_RPCPayments_serviceDesc, srv)
}

func _RPCPayments_PaymentsGetPaymentForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsGetPaymentForm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsGetPaymentForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsGetPaymentForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsGetPaymentForm(ctx, req.(*TLPaymentsGetPaymentForm))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsGetPaymentReceipt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsGetPaymentReceipt)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsGetPaymentReceipt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsGetPaymentReceipt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsGetPaymentReceipt(ctx, req.(*TLPaymentsGetPaymentReceipt))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsValidateRequestedInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsValidateRequestedInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsValidateRequestedInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsValidateRequestedInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsValidateRequestedInfo(ctx, req.(*TLPaymentsValidateRequestedInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsSendPaymentForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsSendPaymentForm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsSendPaymentForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsSendPaymentForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsSendPaymentForm(ctx, req.(*TLPaymentsSendPaymentForm))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsGetSavedInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsGetSavedInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsGetSavedInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsGetSavedInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsGetSavedInfo(ctx, req.(*TLPaymentsGetSavedInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsClearSavedInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsClearSavedInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsClearSavedInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsClearSavedInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsClearSavedInfo(ctx, req.(*TLPaymentsClearSavedInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsGetBankCardData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsGetBankCardData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsGetBankCardData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsGetBankCardData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsGetBankCardData(ctx, req.(*TLPaymentsGetBankCardData))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPayments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCPayments",
	HandlerType: (*RPCPaymentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "payments_getPaymentForm",
			Handler:    _RPCPayments_PaymentsGetPaymentForm_Handler,
		},
		{
			MethodName: "payments_getPaymentReceipt",
			Handler:    _RPCPayments_PaymentsGetPaymentReceipt_Handler,
		},
		{
			MethodName: "payments_validateRequestedInfo",
			Handler:    _RPCPayments_PaymentsValidateRequestedInfo_Handler,
		},
		{
			MethodName: "payments_sendPaymentForm",
			Handler:    _RPCPayments_PaymentsSendPaymentForm_Handler,
		},
		{
			MethodName: "payments_getSavedInfo",
			Handler:    _RPCPayments_PaymentsGetSavedInfo_Handler,
		},
		{
			MethodName: "payments_clearSavedInfo",
			Handler:    _RPCPayments_PaymentsClearSavedInfo_Handler,
		},
		{
			MethodName: "payments_getBankCardData",
			Handler:    _RPCPayments_PaymentsGetBankCardData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCBlogsClient is the client API for RPCBlogs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCBlogsClient interface {
	// blogs.getUser#dd7cabf8 peer:InputPeer = blogs.User;
	BlogsGetUser(ctx context.Context, in *TLBlogsGetUser, opts ...grpc.CallOption) (*Blogs_User, error)
	// blogs.follow#45d768c1 flags:# peer:InputPeer followed:flags.0?true = Updates;
	BlogsFollow(ctx context.Context, in *TLBlogsFollow, opts ...grpc.CallOption) (*Updates, error)
	// blogs.like#4c835b23 flags:# id:blogs.IdType liked:flags.0?true = Updates;
	BlogsLike(ctx context.Context, in *TLBlogsLike, opts ...grpc.CallOption) (*Updates, error)
	// blogs.sendComment#e61dc4cd id:blogs.IdType text:string = Updates;
	BlogsSendComment(ctx context.Context, in *TLBlogsSendComment, opts ...grpc.CallOption) (*Updates, error)
	// blogs.reward#a1a73acd flags:# user:int blog:int payment_password:flags.0?string amount:double = Updates;
	BlogsReward(ctx context.Context, in *TLBlogsReward, opts ...grpc.CallOption) (*Updates, error)
	// blogs.getFollows#b6152f28 peer:InputPeer offset:int limit:int = blogs.UserDates;
	BlogsGetFollows(ctx context.Context, in *TLBlogsGetFollows, opts ...grpc.CallOption) (*Blogs_UserDates, error)
	// blogs.getFans#d15ca197 peer:InputPeer offset:int limit:int = blogs.UserDates;
	BlogsGetFans(ctx context.Context, in *TLBlogsGetFans, opts ...grpc.CallOption) (*Blogs_UserDates, error)
	// blogs.createGroupTag#64b2a32e title:string users:Vector<int> = Updates;
	BlogsCreateGroupTag(ctx context.Context, in *TLBlogsCreateGroupTag, opts ...grpc.CallOption) (*Updates, error)
	// blogs.deleteGroupTag#21dffb22 tag_ids:Vector<int> = Updates;
	BlogsDeleteGroupTag(ctx context.Context, in *TLBlogsDeleteGroupTag, opts ...grpc.CallOption) (*Updates, error)
	// blogs.editGroupTag#12dd4287 tag_id:int title:string = Bool;
	BlogsEditGroupTag(ctx context.Context, in *TLBlogsEditGroupTag, opts ...grpc.CallOption) (*Bool, error)
	// blogs.addGroupTagMember#56dabf3a tag_id:int users:Vector<int> = Updates;
	BlogsAddGroupTagMember(ctx context.Context, in *TLBlogsAddGroupTagMember, opts ...grpc.CallOption) (*Updates, error)
	// blogs.deleteGroupTagMember#fd914080 tag_id:int users:Vector<int> = Updates;
	BlogsDeleteGroupTagMember(ctx context.Context, in *TLBlogsDeleteGroupTagMember, opts ...grpc.CallOption) (*Updates, error)
	// blogs.getGroupTags#c636efb6 = blogs.GroupTags;
	BlogsGetGroupTags(ctx context.Context, in *TLBlogsGetGroupTags, opts ...grpc.CallOption) (*Blogs_GroupTags, error)
	// blogs.sendBlog#db1df059 flags:# visible_type:VisibleType mention_users:Vector<int> text:flags.0?string entities:flags.0?Vector<MessageEntity> random_id:long content:InputBlogContent geo_point:flags.1?InputGeoPoint address:flags.1?string topics:flags.2?Vector<string> = Updates;
	BlogsSendBlog(ctx context.Context, in *TLBlogsSendBlog, opts ...grpc.CallOption) (*Updates, error)
	// blogs.deleteBlog#c3e55a42 blogs:Vector<int> = Updates;
	BlogsDeleteBlog(ctx context.Context, in *TLBlogsDeleteBlog, opts ...grpc.CallOption) (*Updates, error)
	// blogs.getBlogs#7f44d787 blogs:Vector<int> = MicroBlogs;
	BlogsGetBlogs(ctx context.Context, in *TLBlogsGetBlogs, opts ...grpc.CallOption) (*MicroBlogs, error)
	// blogs.getCommentList#6af5634f comments:Vector<int> = blogs.Comments;
	BlogsGetCommentList(ctx context.Context, in *TLBlogsGetCommentList, opts ...grpc.CallOption) (*Blogs_Comments, error)
	// blogs.readHistory#a3c20ca8 flags:# pts:flags.0?int read_id:flags.1?blogs.IdType = Bool;
	BlogsReadHistory(ctx context.Context, in *TLBlogsReadHistory, opts ...grpc.CallOption) (*Bool, error)
	// blogs.getHistory#8386e43c visible_type:VisibleType offset_id:int add_offset:int limit:int hash:int = MicroBlogs;
	BlogsGetHistory(ctx context.Context, in *TLBlogsGetHistory, opts ...grpc.CallOption) (*MicroBlogs, error)
	// blogs.getComments#5d4ce4dd id:blogs.IdType offset_id:int limit:int = blogs.Comments;
	BlogsGetComments(ctx context.Context, in *TLBlogsGetComments, opts ...grpc.CallOption) (*Blogs_Comments, error)
	// blogs.getLikes#2490ae31 id:blogs.IdType offset_id:int limit:int = blogs.UserDates;
	BlogsGetLikes(ctx context.Context, in *TLBlogsGetLikes, opts ...grpc.CallOption) (*Blogs_UserDates, error)
	// blogs.getUnreads#f00410ba pts:int limit:int = blogs.Unreads;
	BlogsGetUnreads(ctx context.Context, in *TLBlogsGetUnreads, opts ...grpc.CallOption) (*Blogs_Unreads, error)
	// blogs.getTopics#1964edbd from_topic_id:int limit:int = blogs.Topics;
	BlogsGetTopics(ctx context.Context, in *TLBlogsGetTopics, opts ...grpc.CallOption) (*Blogs_Topics, error)
	// blogs.getHotTopics#074f6bf9 limit:int = blogs.Topics;
	BlogsGetHotTopics(ctx context.Context, in *TLBlogsGetHotTopics, opts ...grpc.CallOption) (*Blogs_Topics, error)
}

type rPCBlogsClient struct {
	cc *grpc.ClientConn
}

func NewRPCBlogsClient(cc *grpc.ClientConn) RPCBlogsClient {
	return &rPCBlogsClient{cc}
}

func (c *rPCBlogsClient) BlogsGetUser(ctx context.Context, in *TLBlogsGetUser, opts ...grpc.CallOption) (*Blogs_User, error) {
	out := new(Blogs_User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsFollow(ctx context.Context, in *TLBlogsFollow, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_follow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsLike(ctx context.Context, in *TLBlogsLike, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_like", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsSendComment(ctx context.Context, in *TLBlogsSendComment, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_sendComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsReward(ctx context.Context, in *TLBlogsReward, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_reward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetFollows(ctx context.Context, in *TLBlogsGetFollows, opts ...grpc.CallOption) (*Blogs_UserDates, error) {
	out := new(Blogs_UserDates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getFollows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetFans(ctx context.Context, in *TLBlogsGetFans, opts ...grpc.CallOption) (*Blogs_UserDates, error) {
	out := new(Blogs_UserDates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getFans", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsCreateGroupTag(ctx context.Context, in *TLBlogsCreateGroupTag, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_createGroupTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsDeleteGroupTag(ctx context.Context, in *TLBlogsDeleteGroupTag, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_deleteGroupTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsEditGroupTag(ctx context.Context, in *TLBlogsEditGroupTag, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_editGroupTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsAddGroupTagMember(ctx context.Context, in *TLBlogsAddGroupTagMember, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_addGroupTagMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsDeleteGroupTagMember(ctx context.Context, in *TLBlogsDeleteGroupTagMember, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_deleteGroupTagMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetGroupTags(ctx context.Context, in *TLBlogsGetGroupTags, opts ...grpc.CallOption) (*Blogs_GroupTags, error) {
	out := new(Blogs_GroupTags)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getGroupTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsSendBlog(ctx context.Context, in *TLBlogsSendBlog, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_sendBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsDeleteBlog(ctx context.Context, in *TLBlogsDeleteBlog, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_deleteBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetBlogs(ctx context.Context, in *TLBlogsGetBlogs, opts ...grpc.CallOption) (*MicroBlogs, error) {
	out := new(MicroBlogs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getBlogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetCommentList(ctx context.Context, in *TLBlogsGetCommentList, opts ...grpc.CallOption) (*Blogs_Comments, error) {
	out := new(Blogs_Comments)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getCommentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsReadHistory(ctx context.Context, in *TLBlogsReadHistory, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_readHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetHistory(ctx context.Context, in *TLBlogsGetHistory, opts ...grpc.CallOption) (*MicroBlogs, error) {
	out := new(MicroBlogs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetComments(ctx context.Context, in *TLBlogsGetComments, opts ...grpc.CallOption) (*Blogs_Comments, error) {
	out := new(Blogs_Comments)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetLikes(ctx context.Context, in *TLBlogsGetLikes, opts ...grpc.CallOption) (*Blogs_UserDates, error) {
	out := new(Blogs_UserDates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getLikes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetUnreads(ctx context.Context, in *TLBlogsGetUnreads, opts ...grpc.CallOption) (*Blogs_Unreads, error) {
	out := new(Blogs_Unreads)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getUnreads", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetTopics(ctx context.Context, in *TLBlogsGetTopics, opts ...grpc.CallOption) (*Blogs_Topics, error) {
	out := new(Blogs_Topics)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getTopics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBlogsClient) BlogsGetHotTopics(ctx context.Context, in *TLBlogsGetHotTopics, opts ...grpc.CallOption) (*Blogs_Topics, error) {
	out := new(Blogs_Topics)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBlogs/blogs_getHotTopics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCBlogsServer is the server API for RPCBlogs service.
type RPCBlogsServer interface {
	// blogs.getUser#dd7cabf8 peer:InputPeer = blogs.User;
	BlogsGetUser(context.Context, *TLBlogsGetUser) (*Blogs_User, error)
	// blogs.follow#45d768c1 flags:# peer:InputPeer followed:flags.0?true = Updates;
	BlogsFollow(context.Context, *TLBlogsFollow) (*Updates, error)
	// blogs.like#4c835b23 flags:# id:blogs.IdType liked:flags.0?true = Updates;
	BlogsLike(context.Context, *TLBlogsLike) (*Updates, error)
	// blogs.sendComment#e61dc4cd id:blogs.IdType text:string = Updates;
	BlogsSendComment(context.Context, *TLBlogsSendComment) (*Updates, error)
	// blogs.reward#a1a73acd flags:# user:int blog:int payment_password:flags.0?string amount:double = Updates;
	BlogsReward(context.Context, *TLBlogsReward) (*Updates, error)
	// blogs.getFollows#b6152f28 peer:InputPeer offset:int limit:int = blogs.UserDates;
	BlogsGetFollows(context.Context, *TLBlogsGetFollows) (*Blogs_UserDates, error)
	// blogs.getFans#d15ca197 peer:InputPeer offset:int limit:int = blogs.UserDates;
	BlogsGetFans(context.Context, *TLBlogsGetFans) (*Blogs_UserDates, error)
	// blogs.createGroupTag#64b2a32e title:string users:Vector<int> = Updates;
	BlogsCreateGroupTag(context.Context, *TLBlogsCreateGroupTag) (*Updates, error)
	// blogs.deleteGroupTag#21dffb22 tag_ids:Vector<int> = Updates;
	BlogsDeleteGroupTag(context.Context, *TLBlogsDeleteGroupTag) (*Updates, error)
	// blogs.editGroupTag#12dd4287 tag_id:int title:string = Bool;
	BlogsEditGroupTag(context.Context, *TLBlogsEditGroupTag) (*Bool, error)
	// blogs.addGroupTagMember#56dabf3a tag_id:int users:Vector<int> = Updates;
	BlogsAddGroupTagMember(context.Context, *TLBlogsAddGroupTagMember) (*Updates, error)
	// blogs.deleteGroupTagMember#fd914080 tag_id:int users:Vector<int> = Updates;
	BlogsDeleteGroupTagMember(context.Context, *TLBlogsDeleteGroupTagMember) (*Updates, error)
	// blogs.getGroupTags#c636efb6 = blogs.GroupTags;
	BlogsGetGroupTags(context.Context, *TLBlogsGetGroupTags) (*Blogs_GroupTags, error)
	// blogs.sendBlog#db1df059 flags:# visible_type:VisibleType mention_users:Vector<int> text:flags.0?string entities:flags.0?Vector<MessageEntity> random_id:long content:InputBlogContent geo_point:flags.1?InputGeoPoint address:flags.1?string topics:flags.2?Vector<string> = Updates;
	BlogsSendBlog(context.Context, *TLBlogsSendBlog) (*Updates, error)
	// blogs.deleteBlog#c3e55a42 blogs:Vector<int> = Updates;
	BlogsDeleteBlog(context.Context, *TLBlogsDeleteBlog) (*Updates, error)
	// blogs.getBlogs#7f44d787 blogs:Vector<int> = MicroBlogs;
	BlogsGetBlogs(context.Context, *TLBlogsGetBlogs) (*MicroBlogs, error)
	// blogs.getCommentList#6af5634f comments:Vector<int> = blogs.Comments;
	BlogsGetCommentList(context.Context, *TLBlogsGetCommentList) (*Blogs_Comments, error)
	// blogs.readHistory#a3c20ca8 flags:# pts:flags.0?int read_id:flags.1?blogs.IdType = Bool;
	BlogsReadHistory(context.Context, *TLBlogsReadHistory) (*Bool, error)
	// blogs.getHistory#8386e43c visible_type:VisibleType offset_id:int add_offset:int limit:int hash:int = MicroBlogs;
	BlogsGetHistory(context.Context, *TLBlogsGetHistory) (*MicroBlogs, error)
	// blogs.getComments#5d4ce4dd id:blogs.IdType offset_id:int limit:int = blogs.Comments;
	BlogsGetComments(context.Context, *TLBlogsGetComments) (*Blogs_Comments, error)
	// blogs.getLikes#2490ae31 id:blogs.IdType offset_id:int limit:int = blogs.UserDates;
	BlogsGetLikes(context.Context, *TLBlogsGetLikes) (*Blogs_UserDates, error)
	// blogs.getUnreads#f00410ba pts:int limit:int = blogs.Unreads;
	BlogsGetUnreads(context.Context, *TLBlogsGetUnreads) (*Blogs_Unreads, error)
	// blogs.getTopics#1964edbd from_topic_id:int limit:int = blogs.Topics;
	BlogsGetTopics(context.Context, *TLBlogsGetTopics) (*Blogs_Topics, error)
	// blogs.getHotTopics#074f6bf9 limit:int = blogs.Topics;
	BlogsGetHotTopics(context.Context, *TLBlogsGetHotTopics) (*Blogs_Topics, error)
}

func RegisterRPCBlogsServer(s *grpc.Server, srv RPCBlogsServer) {
	s.RegisterService(&_RPCBlogs_serviceDesc, srv)
}

func _RPCBlogs_BlogsGetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetUser(ctx, req.(*TLBlogsGetUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsFollow)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsFollow(ctx, req.(*TLBlogsFollow))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsLike)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsLike(ctx, req.(*TLBlogsLike))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsSendComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsSendComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsSendComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsSendComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsSendComment(ctx, req.(*TLBlogsSendComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsReward(ctx, req.(*TLBlogsReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetFollows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetFollows)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetFollows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetFollows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetFollows(ctx, req.(*TLBlogsGetFollows))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetFans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetFans)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetFans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetFans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetFans(ctx, req.(*TLBlogsGetFans))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsCreateGroupTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsCreateGroupTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsCreateGroupTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsCreateGroupTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsCreateGroupTag(ctx, req.(*TLBlogsCreateGroupTag))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsDeleteGroupTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsDeleteGroupTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsDeleteGroupTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsDeleteGroupTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsDeleteGroupTag(ctx, req.(*TLBlogsDeleteGroupTag))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsEditGroupTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsEditGroupTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsEditGroupTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsEditGroupTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsEditGroupTag(ctx, req.(*TLBlogsEditGroupTag))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsAddGroupTagMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsAddGroupTagMember)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsAddGroupTagMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsAddGroupTagMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsAddGroupTagMember(ctx, req.(*TLBlogsAddGroupTagMember))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsDeleteGroupTagMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsDeleteGroupTagMember)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsDeleteGroupTagMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsDeleteGroupTagMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsDeleteGroupTagMember(ctx, req.(*TLBlogsDeleteGroupTagMember))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetGroupTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetGroupTags)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetGroupTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetGroupTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetGroupTags(ctx, req.(*TLBlogsGetGroupTags))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsSendBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsSendBlog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsSendBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsSendBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsSendBlog(ctx, req.(*TLBlogsSendBlog))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsDeleteBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsDeleteBlog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsDeleteBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsDeleteBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsDeleteBlog(ctx, req.(*TLBlogsDeleteBlog))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetBlogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetBlogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetBlogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetBlogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetBlogs(ctx, req.(*TLBlogsGetBlogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetCommentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetCommentList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetCommentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetCommentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetCommentList(ctx, req.(*TLBlogsGetCommentList))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsReadHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsReadHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsReadHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsReadHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsReadHistory(ctx, req.(*TLBlogsReadHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetHistory(ctx, req.(*TLBlogsGetHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetComments)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetComments(ctx, req.(*TLBlogsGetComments))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetLikes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetLikes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetLikes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetLikes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetLikes(ctx, req.(*TLBlogsGetLikes))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetUnreads_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetUnreads)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetUnreads(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetUnreads",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetUnreads(ctx, req.(*TLBlogsGetUnreads))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetTopics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetTopics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetTopics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetTopics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetTopics(ctx, req.(*TLBlogsGetTopics))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBlogs_BlogsGetHotTopics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBlogsGetHotTopics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBlogsServer).BlogsGetHotTopics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBlogs/BlogsGetHotTopics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBlogsServer).BlogsGetHotTopics(ctx, req.(*TLBlogsGetHotTopics))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCBlogs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCBlogs",
	HandlerType: (*RPCBlogsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "blogs_getUser",
			Handler:    _RPCBlogs_BlogsGetUser_Handler,
		},
		{
			MethodName: "blogs_follow",
			Handler:    _RPCBlogs_BlogsFollow_Handler,
		},
		{
			MethodName: "blogs_like",
			Handler:    _RPCBlogs_BlogsLike_Handler,
		},
		{
			MethodName: "blogs_sendComment",
			Handler:    _RPCBlogs_BlogsSendComment_Handler,
		},
		{
			MethodName: "blogs_reward",
			Handler:    _RPCBlogs_BlogsReward_Handler,
		},
		{
			MethodName: "blogs_getFollows",
			Handler:    _RPCBlogs_BlogsGetFollows_Handler,
		},
		{
			MethodName: "blogs_getFans",
			Handler:    _RPCBlogs_BlogsGetFans_Handler,
		},
		{
			MethodName: "blogs_createGroupTag",
			Handler:    _RPCBlogs_BlogsCreateGroupTag_Handler,
		},
		{
			MethodName: "blogs_deleteGroupTag",
			Handler:    _RPCBlogs_BlogsDeleteGroupTag_Handler,
		},
		{
			MethodName: "blogs_editGroupTag",
			Handler:    _RPCBlogs_BlogsEditGroupTag_Handler,
		},
		{
			MethodName: "blogs_addGroupTagMember",
			Handler:    _RPCBlogs_BlogsAddGroupTagMember_Handler,
		},
		{
			MethodName: "blogs_deleteGroupTagMember",
			Handler:    _RPCBlogs_BlogsDeleteGroupTagMember_Handler,
		},
		{
			MethodName: "blogs_getGroupTags",
			Handler:    _RPCBlogs_BlogsGetGroupTags_Handler,
		},
		{
			MethodName: "blogs_sendBlog",
			Handler:    _RPCBlogs_BlogsSendBlog_Handler,
		},
		{
			MethodName: "blogs_deleteBlog",
			Handler:    _RPCBlogs_BlogsDeleteBlog_Handler,
		},
		{
			MethodName: "blogs_getBlogs",
			Handler:    _RPCBlogs_BlogsGetBlogs_Handler,
		},
		{
			MethodName: "blogs_getCommentList",
			Handler:    _RPCBlogs_BlogsGetCommentList_Handler,
		},
		{
			MethodName: "blogs_readHistory",
			Handler:    _RPCBlogs_BlogsReadHistory_Handler,
		},
		{
			MethodName: "blogs_getHistory",
			Handler:    _RPCBlogs_BlogsGetHistory_Handler,
		},
		{
			MethodName: "blogs_getComments",
			Handler:    _RPCBlogs_BlogsGetComments_Handler,
		},
		{
			MethodName: "blogs_getLikes",
			Handler:    _RPCBlogs_BlogsGetLikes_Handler,
		},
		{
			MethodName: "blogs_getUnreads",
			Handler:    _RPCBlogs_BlogsGetUnreads_Handler,
		},
		{
			MethodName: "blogs_getTopics",
			Handler:    _RPCBlogs_BlogsGetTopics_Handler,
		},
		{
			MethodName: "blogs_getHotTopics",
			Handler:    _RPCBlogs_BlogsGetHotTopics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCContactsClient is the client API for RPCContacts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCContactsClient interface {
	// contacts.getContactIDs#2caa4a42 hash:int = Vector<int>;
	ContactsGetContactIDs(ctx context.Context, in *TLContactsGetContactIDs, opts ...grpc.CallOption) (*Vector_Int, error)
	// contacts.getStatuses#c4a353ee = Vector<ContactStatus>;
	ContactsGetStatuses(ctx context.Context, in *TLContactsGetStatuses, opts ...grpc.CallOption) (*Vector_ContactStatus, error)
	// contacts.getContacts#c023849f hash:int = contacts.Contacts;
	ContactsGetContacts(ctx context.Context, in *TLContactsGetContacts, opts ...grpc.CallOption) (*Contacts_Contacts, error)
	// contacts.importContacts#2c800be5 contacts:Vector<InputContact> = contacts.ImportedContacts;
	ContactsImportContacts(ctx context.Context, in *TLContactsImportContacts, opts ...grpc.CallOption) (*Contacts_ImportedContacts, error)
	// contacts.deleteContacts#96a0e00 id:Vector<InputUser> = Updates;
	ContactsDeleteContacts96A0E00(ctx context.Context, in *TLContactsDeleteContacts96A0E00, opts ...grpc.CallOption) (*Updates, error)
	// contacts.deleteByPhones#1013fd9e phones:Vector<string> = Bool;
	ContactsDeleteByPhones(ctx context.Context, in *TLContactsDeleteByPhones, opts ...grpc.CallOption) (*Bool, error)
	// contacts.block#68cc1411 id:InputPeer = Bool;
	ContactsBlock(ctx context.Context, in *TLContactsBlock, opts ...grpc.CallOption) (*Bool, error)
	// contacts.unblock#bea65d50 id:InputPeer = Bool;
	ContactsUnblock(ctx context.Context, in *TLContactsUnblock, opts ...grpc.CallOption) (*Bool, error)
	// contacts.getBlocked#f57c350f offset:int limit:int = contacts.Blocked;
	ContactsGetBlocked(ctx context.Context, in *TLContactsGetBlocked, opts ...grpc.CallOption) (*Contacts_Blocked, error)
	// contacts.search#11f812d8 q:string limit:int = contacts.Found;
	ContactsSearch(ctx context.Context, in *TLContactsSearch, opts ...grpc.CallOption) (*Contacts_Found, error)
	// contacts.resolveUsername#f93ccba3 username:string = contacts.ResolvedPeer;
	ContactsResolveUsername(ctx context.Context, in *TLContactsResolveUsername, opts ...grpc.CallOption) (*Contacts_ResolvedPeer, error)
	// contacts.getTopPeers#d4982db5 flags:# correspondents:flags.0?true bots_pm:flags.1?true bots_inline:flags.2?true phone_calls:flags.3?true forward_users:flags.4?true forward_chats:flags.5?true groups:flags.10?true channels:flags.15?true offset:int limit:int hash:int = contacts.TopPeers;
	ContactsGetTopPeers(ctx context.Context, in *TLContactsGetTopPeers, opts ...grpc.CallOption) (*Contacts_TopPeers, error)
	// contacts.resetTopPeerRating#1ae373ac category:TopPeerCategory peer:InputPeer = Bool;
	ContactsResetTopPeerRating(ctx context.Context, in *TLContactsResetTopPeerRating, opts ...grpc.CallOption) (*Bool, error)
	// contacts.resetSaved#879537f1 = Bool;
	ContactsResetSaved(ctx context.Context, in *TLContactsResetSaved, opts ...grpc.CallOption) (*Bool, error)
	// contacts.getSaved#82f1e39f = Vector<SavedContact>;
	ContactsGetSaved(ctx context.Context, in *TLContactsGetSaved, opts ...grpc.CallOption) (*Vector_SavedContact, error)
	// contacts.toggleTopPeers#8514bdda enabled:Bool = Bool;
	ContactsToggleTopPeers(ctx context.Context, in *TLContactsToggleTopPeers, opts ...grpc.CallOption) (*Bool, error)
	// contacts.addContact#e8f463d0 flags:# add_phone_privacy_exception:flags.0?true id:InputUser first_name:string last_name:string phone:string = Updates;
	ContactsAddContact(ctx context.Context, in *TLContactsAddContact, opts ...grpc.CallOption) (*Updates, error)
	// contacts.acceptContact#f831a20f id:InputUser = Updates;
	ContactsAcceptContact(ctx context.Context, in *TLContactsAcceptContact, opts ...grpc.CallOption) (*Updates, error)
	// contacts.getLocated#d348bc44 flags:# background:flags.1?true geo_point:InputGeoPoint self_expires:flags.0?int = Updates;
	ContactsGetLocated(ctx context.Context, in *TLContactsGetLocated, opts ...grpc.CallOption) (*Updates, error)
	// contacts.blockFromReplies#29a8962c flags:# delete_message:flags.0?true delete_history:flags.1?true report_spam:flags.2?true msg_id:int = Updates;
	ContactsBlockFromReplies(ctx context.Context, in *TLContactsBlockFromReplies, opts ...grpc.CallOption) (*Updates, error)
	// contacts.deleteContact#8e953744 id:InputUser = contacts.Link;
	ContactsDeleteContact(ctx context.Context, in *TLContactsDeleteContact, opts ...grpc.CallOption) (*Contacts_Link, error)
	// contacts.deleteContacts#59ab389e id:Vector<InputUser> = Bool;
	ContactsDeleteContacts59AB389E(ctx context.Context, in *TLContactsDeleteContacts59AB389E, opts ...grpc.CallOption) (*Bool, error)
	// contacts.exportCard#84e53737 = Vector<int>;
	ContactsExportCard(ctx context.Context, in *TLContactsExportCard, opts ...grpc.CallOption) (*Vector_Int, error)
	// contacts.importCard#4fe196fe export_card:Vector<int> = User;
	ContactsImportCard(ctx context.Context, in *TLContactsImportCard, opts ...grpc.CallOption) (*User, error)
}

type rPCContactsClient struct {
	cc *grpc.ClientConn
}

func NewRPCContactsClient(cc *grpc.ClientConn) RPCContactsClient {
	return &rPCContactsClient{cc}
}

func (c *rPCContactsClient) ContactsGetContactIDs(ctx context.Context, in *TLContactsGetContactIDs, opts ...grpc.CallOption) (*Vector_Int, error) {
	out := new(Vector_Int)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getContactIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetStatuses(ctx context.Context, in *TLContactsGetStatuses, opts ...grpc.CallOption) (*Vector_ContactStatus, error) {
	out := new(Vector_ContactStatus)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getStatuses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetContacts(ctx context.Context, in *TLContactsGetContacts, opts ...grpc.CallOption) (*Contacts_Contacts, error) {
	out := new(Contacts_Contacts)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsImportContacts(ctx context.Context, in *TLContactsImportContacts, opts ...grpc.CallOption) (*Contacts_ImportedContacts, error) {
	out := new(Contacts_ImportedContacts)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_importContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsDeleteContacts96A0E00(ctx context.Context, in *TLContactsDeleteContacts96A0E00, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_deleteContacts96A0E00", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsDeleteByPhones(ctx context.Context, in *TLContactsDeleteByPhones, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_deleteByPhones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsBlock(ctx context.Context, in *TLContactsBlock, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_block", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsUnblock(ctx context.Context, in *TLContactsUnblock, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_unblock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetBlocked(ctx context.Context, in *TLContactsGetBlocked, opts ...grpc.CallOption) (*Contacts_Blocked, error) {
	out := new(Contacts_Blocked)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getBlocked", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsSearch(ctx context.Context, in *TLContactsSearch, opts ...grpc.CallOption) (*Contacts_Found, error) {
	out := new(Contacts_Found)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsResolveUsername(ctx context.Context, in *TLContactsResolveUsername, opts ...grpc.CallOption) (*Contacts_ResolvedPeer, error) {
	out := new(Contacts_ResolvedPeer)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_resolveUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetTopPeers(ctx context.Context, in *TLContactsGetTopPeers, opts ...grpc.CallOption) (*Contacts_TopPeers, error) {
	out := new(Contacts_TopPeers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getTopPeers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsResetTopPeerRating(ctx context.Context, in *TLContactsResetTopPeerRating, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_resetTopPeerRating", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsResetSaved(ctx context.Context, in *TLContactsResetSaved, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_resetSaved", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetSaved(ctx context.Context, in *TLContactsGetSaved, opts ...grpc.CallOption) (*Vector_SavedContact, error) {
	out := new(Vector_SavedContact)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getSaved", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsToggleTopPeers(ctx context.Context, in *TLContactsToggleTopPeers, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_toggleTopPeers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsAddContact(ctx context.Context, in *TLContactsAddContact, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_addContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsAcceptContact(ctx context.Context, in *TLContactsAcceptContact, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_acceptContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetLocated(ctx context.Context, in *TLContactsGetLocated, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getLocated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsBlockFromReplies(ctx context.Context, in *TLContactsBlockFromReplies, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_blockFromReplies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsDeleteContact(ctx context.Context, in *TLContactsDeleteContact, opts ...grpc.CallOption) (*Contacts_Link, error) {
	out := new(Contacts_Link)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_deleteContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsDeleteContacts59AB389E(ctx context.Context, in *TLContactsDeleteContacts59AB389E, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_deleteContacts59AB389E", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsExportCard(ctx context.Context, in *TLContactsExportCard, opts ...grpc.CallOption) (*Vector_Int, error) {
	out := new(Vector_Int)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_exportCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsImportCard(ctx context.Context, in *TLContactsImportCard, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_importCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCContactsServer is the server API for RPCContacts service.
type RPCContactsServer interface {
	// contacts.getContactIDs#2caa4a42 hash:int = Vector<int>;
	ContactsGetContactIDs(context.Context, *TLContactsGetContactIDs) (*Vector_Int, error)
	// contacts.getStatuses#c4a353ee = Vector<ContactStatus>;
	ContactsGetStatuses(context.Context, *TLContactsGetStatuses) (*Vector_ContactStatus, error)
	// contacts.getContacts#c023849f hash:int = contacts.Contacts;
	ContactsGetContacts(context.Context, *TLContactsGetContacts) (*Contacts_Contacts, error)
	// contacts.importContacts#2c800be5 contacts:Vector<InputContact> = contacts.ImportedContacts;
	ContactsImportContacts(context.Context, *TLContactsImportContacts) (*Contacts_ImportedContacts, error)
	// contacts.deleteContacts#96a0e00 id:Vector<InputUser> = Updates;
	ContactsDeleteContacts96A0E00(context.Context, *TLContactsDeleteContacts96A0E00) (*Updates, error)
	// contacts.deleteByPhones#1013fd9e phones:Vector<string> = Bool;
	ContactsDeleteByPhones(context.Context, *TLContactsDeleteByPhones) (*Bool, error)
	// contacts.block#68cc1411 id:InputPeer = Bool;
	ContactsBlock(context.Context, *TLContactsBlock) (*Bool, error)
	// contacts.unblock#bea65d50 id:InputPeer = Bool;
	ContactsUnblock(context.Context, *TLContactsUnblock) (*Bool, error)
	// contacts.getBlocked#f57c350f offset:int limit:int = contacts.Blocked;
	ContactsGetBlocked(context.Context, *TLContactsGetBlocked) (*Contacts_Blocked, error)
	// contacts.search#11f812d8 q:string limit:int = contacts.Found;
	ContactsSearch(context.Context, *TLContactsSearch) (*Contacts_Found, error)
	// contacts.resolveUsername#f93ccba3 username:string = contacts.ResolvedPeer;
	ContactsResolveUsername(context.Context, *TLContactsResolveUsername) (*Contacts_ResolvedPeer, error)
	// contacts.getTopPeers#d4982db5 flags:# correspondents:flags.0?true bots_pm:flags.1?true bots_inline:flags.2?true phone_calls:flags.3?true forward_users:flags.4?true forward_chats:flags.5?true groups:flags.10?true channels:flags.15?true offset:int limit:int hash:int = contacts.TopPeers;
	ContactsGetTopPeers(context.Context, *TLContactsGetTopPeers) (*Contacts_TopPeers, error)
	// contacts.resetTopPeerRating#1ae373ac category:TopPeerCategory peer:InputPeer = Bool;
	ContactsResetTopPeerRating(context.Context, *TLContactsResetTopPeerRating) (*Bool, error)
	// contacts.resetSaved#879537f1 = Bool;
	ContactsResetSaved(context.Context, *TLContactsResetSaved) (*Bool, error)
	// contacts.getSaved#82f1e39f = Vector<SavedContact>;
	ContactsGetSaved(context.Context, *TLContactsGetSaved) (*Vector_SavedContact, error)
	// contacts.toggleTopPeers#8514bdda enabled:Bool = Bool;
	ContactsToggleTopPeers(context.Context, *TLContactsToggleTopPeers) (*Bool, error)
	// contacts.addContact#e8f463d0 flags:# add_phone_privacy_exception:flags.0?true id:InputUser first_name:string last_name:string phone:string = Updates;
	ContactsAddContact(context.Context, *TLContactsAddContact) (*Updates, error)
	// contacts.acceptContact#f831a20f id:InputUser = Updates;
	ContactsAcceptContact(context.Context, *TLContactsAcceptContact) (*Updates, error)
	// contacts.getLocated#d348bc44 flags:# background:flags.1?true geo_point:InputGeoPoint self_expires:flags.0?int = Updates;
	ContactsGetLocated(context.Context, *TLContactsGetLocated) (*Updates, error)
	// contacts.blockFromReplies#29a8962c flags:# delete_message:flags.0?true delete_history:flags.1?true report_spam:flags.2?true msg_id:int = Updates;
	ContactsBlockFromReplies(context.Context, *TLContactsBlockFromReplies) (*Updates, error)
	// contacts.deleteContact#8e953744 id:InputUser = contacts.Link;
	ContactsDeleteContact(context.Context, *TLContactsDeleteContact) (*Contacts_Link, error)
	// contacts.deleteContacts#59ab389e id:Vector<InputUser> = Bool;
	ContactsDeleteContacts59AB389E(context.Context, *TLContactsDeleteContacts59AB389E) (*Bool, error)
	// contacts.exportCard#84e53737 = Vector<int>;
	ContactsExportCard(context.Context, *TLContactsExportCard) (*Vector_Int, error)
	// contacts.importCard#4fe196fe export_card:Vector<int> = User;
	ContactsImportCard(context.Context, *TLContactsImportCard) (*User, error)
}

func RegisterRPCContactsServer(s *grpc.Server, srv RPCContactsServer) {
	s.RegisterService(&_RPCContacts_serviceDesc, srv)
}

func _RPCContacts_ContactsGetContactIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetContactIDs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetContactIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetContactIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetContactIDs(ctx, req.(*TLContactsGetContactIDs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetStatuses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetStatuses)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetStatuses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetStatuses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetStatuses(ctx, req.(*TLContactsGetStatuses))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetContacts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetContacts(ctx, req.(*TLContactsGetContacts))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsImportContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsImportContacts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsImportContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsImportContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsImportContacts(ctx, req.(*TLContactsImportContacts))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsDeleteContacts96A0E00_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsDeleteContacts96A0E00)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsDeleteContacts96A0E00(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsDeleteContacts96A0E00",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsDeleteContacts96A0E00(ctx, req.(*TLContactsDeleteContacts96A0E00))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsDeleteByPhones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsDeleteByPhones)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsDeleteByPhones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsDeleteByPhones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsDeleteByPhones(ctx, req.(*TLContactsDeleteByPhones))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsBlock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsBlock(ctx, req.(*TLContactsBlock))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsUnblock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsUnblock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsUnblock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsUnblock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsUnblock(ctx, req.(*TLContactsUnblock))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetBlocked_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetBlocked)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetBlocked(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetBlocked",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetBlocked(ctx, req.(*TLContactsGetBlocked))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsSearch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsSearch(ctx, req.(*TLContactsSearch))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsResolveUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsResolveUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsResolveUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsResolveUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsResolveUsername(ctx, req.(*TLContactsResolveUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetTopPeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetTopPeers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetTopPeers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetTopPeers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetTopPeers(ctx, req.(*TLContactsGetTopPeers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsResetTopPeerRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsResetTopPeerRating)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsResetTopPeerRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsResetTopPeerRating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsResetTopPeerRating(ctx, req.(*TLContactsResetTopPeerRating))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsResetSaved_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsResetSaved)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsResetSaved(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsResetSaved",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsResetSaved(ctx, req.(*TLContactsResetSaved))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetSaved_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetSaved)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetSaved(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetSaved",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetSaved(ctx, req.(*TLContactsGetSaved))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsToggleTopPeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsToggleTopPeers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsToggleTopPeers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsToggleTopPeers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsToggleTopPeers(ctx, req.(*TLContactsToggleTopPeers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsAddContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsAddContact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsAddContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsAddContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsAddContact(ctx, req.(*TLContactsAddContact))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsAcceptContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsAcceptContact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsAcceptContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsAcceptContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsAcceptContact(ctx, req.(*TLContactsAcceptContact))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetLocated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetLocated)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetLocated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetLocated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetLocated(ctx, req.(*TLContactsGetLocated))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsBlockFromReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsBlockFromReplies)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsBlockFromReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsBlockFromReplies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsBlockFromReplies(ctx, req.(*TLContactsBlockFromReplies))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsDeleteContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsDeleteContact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsDeleteContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsDeleteContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsDeleteContact(ctx, req.(*TLContactsDeleteContact))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsDeleteContacts59AB389E_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsDeleteContacts59AB389E)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsDeleteContacts59AB389E(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsDeleteContacts59AB389E",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsDeleteContacts59AB389E(ctx, req.(*TLContactsDeleteContacts59AB389E))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsExportCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsExportCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsExportCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsExportCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsExportCard(ctx, req.(*TLContactsExportCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsImportCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsImportCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsImportCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsImportCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsImportCard(ctx, req.(*TLContactsImportCard))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCContacts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCContacts",
	HandlerType: (*RPCContactsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "contacts_getContactIDs",
			Handler:    _RPCContacts_ContactsGetContactIDs_Handler,
		},
		{
			MethodName: "contacts_getStatuses",
			Handler:    _RPCContacts_ContactsGetStatuses_Handler,
		},
		{
			MethodName: "contacts_getContacts",
			Handler:    _RPCContacts_ContactsGetContacts_Handler,
		},
		{
			MethodName: "contacts_importContacts",
			Handler:    _RPCContacts_ContactsImportContacts_Handler,
		},
		{
			MethodName: "contacts_deleteContacts96A0E00",
			Handler:    _RPCContacts_ContactsDeleteContacts96A0E00_Handler,
		},
		{
			MethodName: "contacts_deleteByPhones",
			Handler:    _RPCContacts_ContactsDeleteByPhones_Handler,
		},
		{
			MethodName: "contacts_block",
			Handler:    _RPCContacts_ContactsBlock_Handler,
		},
		{
			MethodName: "contacts_unblock",
			Handler:    _RPCContacts_ContactsUnblock_Handler,
		},
		{
			MethodName: "contacts_getBlocked",
			Handler:    _RPCContacts_ContactsGetBlocked_Handler,
		},
		{
			MethodName: "contacts_search",
			Handler:    _RPCContacts_ContactsSearch_Handler,
		},
		{
			MethodName: "contacts_resolveUsername",
			Handler:    _RPCContacts_ContactsResolveUsername_Handler,
		},
		{
			MethodName: "contacts_getTopPeers",
			Handler:    _RPCContacts_ContactsGetTopPeers_Handler,
		},
		{
			MethodName: "contacts_resetTopPeerRating",
			Handler:    _RPCContacts_ContactsResetTopPeerRating_Handler,
		},
		{
			MethodName: "contacts_resetSaved",
			Handler:    _RPCContacts_ContactsResetSaved_Handler,
		},
		{
			MethodName: "contacts_getSaved",
			Handler:    _RPCContacts_ContactsGetSaved_Handler,
		},
		{
			MethodName: "contacts_toggleTopPeers",
			Handler:    _RPCContacts_ContactsToggleTopPeers_Handler,
		},
		{
			MethodName: "contacts_addContact",
			Handler:    _RPCContacts_ContactsAddContact_Handler,
		},
		{
			MethodName: "contacts_acceptContact",
			Handler:    _RPCContacts_ContactsAcceptContact_Handler,
		},
		{
			MethodName: "contacts_getLocated",
			Handler:    _RPCContacts_ContactsGetLocated_Handler,
		},
		{
			MethodName: "contacts_blockFromReplies",
			Handler:    _RPCContacts_ContactsBlockFromReplies_Handler,
		},
		{
			MethodName: "contacts_deleteContact",
			Handler:    _RPCContacts_ContactsDeleteContact_Handler,
		},
		{
			MethodName: "contacts_deleteContacts59AB389E",
			Handler:    _RPCContacts_ContactsDeleteContacts59AB389E_Handler,
		},
		{
			MethodName: "contacts_exportCard",
			Handler:    _RPCContacts_ContactsExportCard_Handler,
		},
		{
			MethodName: "contacts_importCard",
			Handler:    _RPCContacts_ContactsImportCard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCUsersClient is the client API for RPCUsers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCUsersClient interface {
	// users.getUsers#d91a548 id:Vector<InputUser> = Vector<User>;
	UsersGetUsers(ctx context.Context, in *TLUsersGetUsers, opts ...grpc.CallOption) (*Vector_User, error)
	// users.getFullUser#ca30a5b1 id:InputUser = UserFull;
	UsersGetFullUser(ctx context.Context, in *TLUsersGetFullUser, opts ...grpc.CallOption) (*UserFull, error)
	// users.setSecureValueErrors#90c894b5 id:InputUser errors:Vector<SecureValueError> = Bool;
	UsersSetSecureValueErrors(ctx context.Context, in *TLUsersSetSecureValueErrors, opts ...grpc.CallOption) (*Bool, error)
	// users.getPredefinedUser phone:string = PredefinedUser;
	UsersGetPredefinedUser(ctx context.Context, in *TLUsersGetPredefinedUser, opts ...grpc.CallOption) (*PredefinedUser, error)
	// users.getPredefinedUsers = Vector<PredefinedUser>;
	UsersGetPredefinedUsers(ctx context.Context, in *TLUsersGetPredefinedUsers, opts ...grpc.CallOption) (*Vector_PredefinedUser, error)
	// users.getMe id:int token:string = User;
	UsersGetMe(ctx context.Context, in *TLUsersGetMe, opts ...grpc.CallOption) (*User, error)
}

type rPCUsersClient struct {
	cc *grpc.ClientConn
}

func NewRPCUsersClient(cc *grpc.ClientConn) RPCUsersClient {
	return &rPCUsersClient{cc}
}

func (c *rPCUsersClient) UsersGetUsers(ctx context.Context, in *TLUsersGetUsers, opts ...grpc.CallOption) (*Vector_User, error) {
	out := new(Vector_User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/users_getUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsersClient) UsersGetFullUser(ctx context.Context, in *TLUsersGetFullUser, opts ...grpc.CallOption) (*UserFull, error) {
	out := new(UserFull)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/users_getFullUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsersClient) UsersSetSecureValueErrors(ctx context.Context, in *TLUsersSetSecureValueErrors, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/users_setSecureValueErrors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsersClient) UsersGetPredefinedUser(ctx context.Context, in *TLUsersGetPredefinedUser, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/users_getPredefinedUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsersClient) UsersGetPredefinedUsers(ctx context.Context, in *TLUsersGetPredefinedUsers, opts ...grpc.CallOption) (*Vector_PredefinedUser, error) {
	out := new(Vector_PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/users_getPredefinedUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsersClient) UsersGetMe(ctx context.Context, in *TLUsersGetMe, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/users_getMe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCUsersServer is the server API for RPCUsers service.
type RPCUsersServer interface {
	// users.getUsers#d91a548 id:Vector<InputUser> = Vector<User>;
	UsersGetUsers(context.Context, *TLUsersGetUsers) (*Vector_User, error)
	// users.getFullUser#ca30a5b1 id:InputUser = UserFull;
	UsersGetFullUser(context.Context, *TLUsersGetFullUser) (*UserFull, error)
	// users.setSecureValueErrors#90c894b5 id:InputUser errors:Vector<SecureValueError> = Bool;
	UsersSetSecureValueErrors(context.Context, *TLUsersSetSecureValueErrors) (*Bool, error)
	// users.getPredefinedUser phone:string = PredefinedUser;
	UsersGetPredefinedUser(context.Context, *TLUsersGetPredefinedUser) (*PredefinedUser, error)
	// users.getPredefinedUsers = Vector<PredefinedUser>;
	UsersGetPredefinedUsers(context.Context, *TLUsersGetPredefinedUsers) (*Vector_PredefinedUser, error)
	// users.getMe id:int token:string = User;
	UsersGetMe(context.Context, *TLUsersGetMe) (*User, error)
}

func RegisterRPCUsersServer(s *grpc.Server, srv RPCUsersServer) {
	s.RegisterService(&_RPCUsers_serviceDesc, srv)
}

func _RPCUsers_UsersGetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersGetUsers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).UsersGetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/UsersGetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).UsersGetUsers(ctx, req.(*TLUsersGetUsers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsers_UsersGetFullUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersGetFullUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).UsersGetFullUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/UsersGetFullUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).UsersGetFullUser(ctx, req.(*TLUsersGetFullUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsers_UsersSetSecureValueErrors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersSetSecureValueErrors)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).UsersSetSecureValueErrors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/UsersSetSecureValueErrors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).UsersSetSecureValueErrors(ctx, req.(*TLUsersSetSecureValueErrors))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsers_UsersGetPredefinedUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersGetPredefinedUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).UsersGetPredefinedUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/UsersGetPredefinedUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).UsersGetPredefinedUser(ctx, req.(*TLUsersGetPredefinedUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsers_UsersGetPredefinedUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersGetPredefinedUsers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).UsersGetPredefinedUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/UsersGetPredefinedUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).UsersGetPredefinedUsers(ctx, req.(*TLUsersGetPredefinedUsers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsers_UsersGetMe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersGetMe)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).UsersGetMe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/UsersGetMe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).UsersGetMe(ctx, req.(*TLUsersGetMe))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCUsers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCUsers",
	HandlerType: (*RPCUsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "users_getUsers",
			Handler:    _RPCUsers_UsersGetUsers_Handler,
		},
		{
			MethodName: "users_getFullUser",
			Handler:    _RPCUsers_UsersGetFullUser_Handler,
		},
		{
			MethodName: "users_setSecureValueErrors",
			Handler:    _RPCUsers_UsersSetSecureValueErrors_Handler,
		},
		{
			MethodName: "users_getPredefinedUser",
			Handler:    _RPCUsers_UsersGetPredefinedUser_Handler,
		},
		{
			MethodName: "users_getPredefinedUsers",
			Handler:    _RPCUsers_UsersGetPredefinedUsers_Handler,
		},
		{
			MethodName: "users_getMe",
			Handler:    _RPCUsers_UsersGetMe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCUpdatesClient is the client API for RPCUpdates service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCUpdatesClient interface {
	// updates.getState#edd4882a = updates.State;
	UpdatesGetState(ctx context.Context, in *TLUpdatesGetState, opts ...grpc.CallOption) (*Updates_State, error)
	// updates.getDifference#25939651 flags:# pts:int pts_total_limit:flags.0?int date:int qts:int = updates.Difference;
	UpdatesGetDifference(ctx context.Context, in *TLUpdatesGetDifference, opts ...grpc.CallOption) (*Updates_Difference, error)
	// updates.getChannelDifference#3173d78 flags:# force:flags.0?true channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
	UpdatesGetChannelDifference(ctx context.Context, in *TLUpdatesGetChannelDifference, opts ...grpc.CallOption) (*Updates_ChannelDifference, error)
}

type rPCUpdatesClient struct {
	cc *grpc.ClientConn
}

func NewRPCUpdatesClient(cc *grpc.ClientConn) RPCUpdatesClient {
	return &rPCUpdatesClient{cc}
}

func (c *rPCUpdatesClient) UpdatesGetState(ctx context.Context, in *TLUpdatesGetState, opts ...grpc.CallOption) (*Updates_State, error) {
	out := new(Updates_State)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpdates/updates_getState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUpdatesClient) UpdatesGetDifference(ctx context.Context, in *TLUpdatesGetDifference, opts ...grpc.CallOption) (*Updates_Difference, error) {
	out := new(Updates_Difference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpdates/updates_getDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUpdatesClient) UpdatesGetChannelDifference(ctx context.Context, in *TLUpdatesGetChannelDifference, opts ...grpc.CallOption) (*Updates_ChannelDifference, error) {
	out := new(Updates_ChannelDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpdates/updates_getChannelDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCUpdatesServer is the server API for RPCUpdates service.
type RPCUpdatesServer interface {
	// updates.getState#edd4882a = updates.State;
	UpdatesGetState(context.Context, *TLUpdatesGetState) (*Updates_State, error)
	// updates.getDifference#25939651 flags:# pts:int pts_total_limit:flags.0?int date:int qts:int = updates.Difference;
	UpdatesGetDifference(context.Context, *TLUpdatesGetDifference) (*Updates_Difference, error)
	// updates.getChannelDifference#3173d78 flags:# force:flags.0?true channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
	UpdatesGetChannelDifference(context.Context, *TLUpdatesGetChannelDifference) (*Updates_ChannelDifference, error)
}

func RegisterRPCUpdatesServer(s *grpc.Server, srv RPCUpdatesServer) {
	s.RegisterService(&_RPCUpdates_serviceDesc, srv)
}

func _RPCUpdates_UpdatesGetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUpdatesGetState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUpdatesServer).UpdatesGetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpdates/UpdatesGetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUpdatesServer).UpdatesGetState(ctx, req.(*TLUpdatesGetState))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpdates_UpdatesGetDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUpdatesGetDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUpdatesServer).UpdatesGetDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpdates/UpdatesGetDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUpdatesServer).UpdatesGetDifference(ctx, req.(*TLUpdatesGetDifference))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpdates_UpdatesGetChannelDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUpdatesGetChannelDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUpdatesServer).UpdatesGetChannelDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpdates/UpdatesGetChannelDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUpdatesServer).UpdatesGetChannelDifference(ctx, req.(*TLUpdatesGetChannelDifference))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCUpdates_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCUpdates",
	HandlerType: (*RPCUpdatesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "updates_getState",
			Handler:    _RPCUpdates_UpdatesGetState_Handler,
		},
		{
			MethodName: "updates_getDifference",
			Handler:    _RPCUpdates_UpdatesGetDifference_Handler,
		},
		{
			MethodName: "updates_getChannelDifference",
			Handler:    _RPCUpdates_UpdatesGetChannelDifference_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCPhoneClient is the client API for RPCPhone service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPhoneClient interface {
	// phone.getCallConfig#55451fa9 = DataJSON;
	PhoneGetCallConfig(ctx context.Context, in *TLPhoneGetCallConfig, opts ...grpc.CallOption) (*DataJSON, error)
	// phone.requestCall#42ff96ed flags:# video:flags.0?true user_id:InputUser random_id:int g_a_hash:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
	PhoneRequestCall(ctx context.Context, in *TLPhoneRequestCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error)
	// phone.acceptCall#3bd2b4a0 peer:InputPhoneCall g_b:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
	PhoneAcceptCall(ctx context.Context, in *TLPhoneAcceptCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error)
	// phone.confirmCall#2efe1722 peer:InputPhoneCall g_a:bytes key_fingerprint:long protocol:PhoneCallProtocol = phone.PhoneCall;
	PhoneConfirmCall(ctx context.Context, in *TLPhoneConfirmCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error)
	// phone.receivedCall#17d54f61 peer:InputPhoneCall = Bool;
	PhoneReceivedCall(ctx context.Context, in *TLPhoneReceivedCall, opts ...grpc.CallOption) (*Bool, error)
	// phone.discardCall#b2cbc1c0 flags:# video:flags.0?true peer:InputPhoneCall duration:int reason:PhoneCallDiscardReason connection_id:long = Updates;
	PhoneDiscardCall(ctx context.Context, in *TLPhoneDiscardCall, opts ...grpc.CallOption) (*Updates, error)
	// phone.setCallRating#59ead627 flags:# user_initiative:flags.0?true peer:InputPhoneCall rating:int comment:string = Updates;
	PhoneSetCallRating(ctx context.Context, in *TLPhoneSetCallRating, opts ...grpc.CallOption) (*Updates, error)
	// phone.saveCallDebug#277add7e peer:InputPhoneCall debug:DataJSON = Bool;
	PhoneSaveCallDebug(ctx context.Context, in *TLPhoneSaveCallDebug, opts ...grpc.CallOption) (*Bool, error)
	// phone.sendSignalingData#ff7a9383 peer:InputPhoneCall data:bytes = Bool;
	PhoneSendSignalingData(ctx context.Context, in *TLPhoneSendSignalingData, opts ...grpc.CallOption) (*Bool, error)
}

type rPCPhoneClient struct {
	cc *grpc.ClientConn
}

func NewRPCPhoneClient(cc *grpc.ClientConn) RPCPhoneClient {
	return &rPCPhoneClient{cc}
}

func (c *rPCPhoneClient) PhoneGetCallConfig(ctx context.Context, in *TLPhoneGetCallConfig, opts ...grpc.CallOption) (*DataJSON, error) {
	out := new(DataJSON)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhone/phone_getCallConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhoneClient) PhoneRequestCall(ctx context.Context, in *TLPhoneRequestCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error) {
	out := new(Phone_PhoneCall)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhone/phone_requestCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhoneClient) PhoneAcceptCall(ctx context.Context, in *TLPhoneAcceptCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error) {
	out := new(Phone_PhoneCall)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhone/phone_acceptCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhoneClient) PhoneConfirmCall(ctx context.Context, in *TLPhoneConfirmCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error) {
	out := new(Phone_PhoneCall)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhone/phone_confirmCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhoneClient) PhoneReceivedCall(ctx context.Context, in *TLPhoneReceivedCall, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhone/phone_receivedCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhoneClient) PhoneDiscardCall(ctx context.Context, in *TLPhoneDiscardCall, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhone/phone_discardCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhoneClient) PhoneSetCallRating(ctx context.Context, in *TLPhoneSetCallRating, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhone/phone_setCallRating", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhoneClient) PhoneSaveCallDebug(ctx context.Context, in *TLPhoneSaveCallDebug, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhone/phone_saveCallDebug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhoneClient) PhoneSendSignalingData(ctx context.Context, in *TLPhoneSendSignalingData, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhone/phone_sendSignalingData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPhoneServer is the server API for RPCPhone service.
type RPCPhoneServer interface {
	// phone.getCallConfig#55451fa9 = DataJSON;
	PhoneGetCallConfig(context.Context, *TLPhoneGetCallConfig) (*DataJSON, error)
	// phone.requestCall#42ff96ed flags:# video:flags.0?true user_id:InputUser random_id:int g_a_hash:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
	PhoneRequestCall(context.Context, *TLPhoneRequestCall) (*Phone_PhoneCall, error)
	// phone.acceptCall#3bd2b4a0 peer:InputPhoneCall g_b:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
	PhoneAcceptCall(context.Context, *TLPhoneAcceptCall) (*Phone_PhoneCall, error)
	// phone.confirmCall#2efe1722 peer:InputPhoneCall g_a:bytes key_fingerprint:long protocol:PhoneCallProtocol = phone.PhoneCall;
	PhoneConfirmCall(context.Context, *TLPhoneConfirmCall) (*Phone_PhoneCall, error)
	// phone.receivedCall#17d54f61 peer:InputPhoneCall = Bool;
	PhoneReceivedCall(context.Context, *TLPhoneReceivedCall) (*Bool, error)
	// phone.discardCall#b2cbc1c0 flags:# video:flags.0?true peer:InputPhoneCall duration:int reason:PhoneCallDiscardReason connection_id:long = Updates;
	PhoneDiscardCall(context.Context, *TLPhoneDiscardCall) (*Updates, error)
	// phone.setCallRating#59ead627 flags:# user_initiative:flags.0?true peer:InputPhoneCall rating:int comment:string = Updates;
	PhoneSetCallRating(context.Context, *TLPhoneSetCallRating) (*Updates, error)
	// phone.saveCallDebug#277add7e peer:InputPhoneCall debug:DataJSON = Bool;
	PhoneSaveCallDebug(context.Context, *TLPhoneSaveCallDebug) (*Bool, error)
	// phone.sendSignalingData#ff7a9383 peer:InputPhoneCall data:bytes = Bool;
	PhoneSendSignalingData(context.Context, *TLPhoneSendSignalingData) (*Bool, error)
}

func RegisterRPCPhoneServer(s *grpc.Server, srv RPCPhoneServer) {
	s.RegisterService(&_RPCPhone_serviceDesc, srv)
}

func _RPCPhone_PhoneGetCallConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneGetCallConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneServer).PhoneGetCallConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhone/PhoneGetCallConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneServer).PhoneGetCallConfig(ctx, req.(*TLPhoneGetCallConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhone_PhoneRequestCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneRequestCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneServer).PhoneRequestCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhone/PhoneRequestCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneServer).PhoneRequestCall(ctx, req.(*TLPhoneRequestCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhone_PhoneAcceptCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneAcceptCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneServer).PhoneAcceptCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhone/PhoneAcceptCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneServer).PhoneAcceptCall(ctx, req.(*TLPhoneAcceptCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhone_PhoneConfirmCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneConfirmCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneServer).PhoneConfirmCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhone/PhoneConfirmCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneServer).PhoneConfirmCall(ctx, req.(*TLPhoneConfirmCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhone_PhoneReceivedCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneReceivedCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneServer).PhoneReceivedCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhone/PhoneReceivedCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneServer).PhoneReceivedCall(ctx, req.(*TLPhoneReceivedCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhone_PhoneDiscardCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneDiscardCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneServer).PhoneDiscardCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhone/PhoneDiscardCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneServer).PhoneDiscardCall(ctx, req.(*TLPhoneDiscardCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhone_PhoneSetCallRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneSetCallRating)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneServer).PhoneSetCallRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhone/PhoneSetCallRating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneServer).PhoneSetCallRating(ctx, req.(*TLPhoneSetCallRating))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhone_PhoneSaveCallDebug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneSaveCallDebug)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneServer).PhoneSaveCallDebug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhone/PhoneSaveCallDebug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneServer).PhoneSaveCallDebug(ctx, req.(*TLPhoneSaveCallDebug))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhone_PhoneSendSignalingData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneSendSignalingData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhoneServer).PhoneSendSignalingData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhone/PhoneSendSignalingData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhoneServer).PhoneSendSignalingData(ctx, req.(*TLPhoneSendSignalingData))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPhone_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCPhone",
	HandlerType: (*RPCPhoneServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "phone_getCallConfig",
			Handler:    _RPCPhone_PhoneGetCallConfig_Handler,
		},
		{
			MethodName: "phone_requestCall",
			Handler:    _RPCPhone_PhoneRequestCall_Handler,
		},
		{
			MethodName: "phone_acceptCall",
			Handler:    _RPCPhone_PhoneAcceptCall_Handler,
		},
		{
			MethodName: "phone_confirmCall",
			Handler:    _RPCPhone_PhoneConfirmCall_Handler,
		},
		{
			MethodName: "phone_receivedCall",
			Handler:    _RPCPhone_PhoneReceivedCall_Handler,
		},
		{
			MethodName: "phone_discardCall",
			Handler:    _RPCPhone_PhoneDiscardCall_Handler,
		},
		{
			MethodName: "phone_setCallRating",
			Handler:    _RPCPhone_PhoneSetCallRating_Handler,
		},
		{
			MethodName: "phone_saveCallDebug",
			Handler:    _RPCPhone_PhoneSaveCallDebug_Handler,
		},
		{
			MethodName: "phone_sendSignalingData",
			Handler:    _RPCPhone_PhoneSendSignalingData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCAuthClient is the client API for RPCAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCAuthClient interface {
	// auth.sendCode#a677244f phone_number:string api_id:int api_hash:string settings:CodeSettings = auth.SentCode;
	AuthSendCode(ctx context.Context, in *TLAuthSendCode, opts ...grpc.CallOption) (*Auth_SentCode, error)
	// auth.signUp#80eee427 phone_number:string phone_code_hash:string first_name:string last_name:string = auth.Authorization;
	AuthSignUp(ctx context.Context, in *TLAuthSignUp, opts ...grpc.CallOption) (*Auth_Authorization, error)
	// auth.signIn#bcd51581 phone_number:string phone_code_hash:string phone_code:string = auth.Authorization;
	AuthSignIn(ctx context.Context, in *TLAuthSignIn, opts ...grpc.CallOption) (*Auth_Authorization, error)
	// auth.logOut#5717da40 = Bool;
	AuthLogOut(ctx context.Context, in *TLAuthLogOut, opts ...grpc.CallOption) (*Bool, error)
	// auth.resetAuthorizations#9fab0d1a = Bool;
	AuthResetAuthorizations(ctx context.Context, in *TLAuthResetAuthorizations, opts ...grpc.CallOption) (*Bool, error)
	// auth.exportAuthorization#e5bfffcd dc_id:int = auth.ExportedAuthorization;
	AuthExportAuthorization(ctx context.Context, in *TLAuthExportAuthorization, opts ...grpc.CallOption) (*Auth_ExportedAuthorization, error)
	// auth.importAuthorization#e3ef9613 id:int bytes:bytes = auth.Authorization;
	AuthImportAuthorization(ctx context.Context, in *TLAuthImportAuthorization, opts ...grpc.CallOption) (*Auth_Authorization, error)
	// auth.bindTempAuthKey#cdd42a05 perm_auth_key_id:long nonce:long expires_at:int encrypted_message:bytes = Bool;
	AuthBindTempAuthKey(ctx context.Context, in *TLAuthBindTempAuthKey, opts ...grpc.CallOption) (*Bool, error)
	// auth.importBotAuthorization#67a3ff2c flags:int api_id:int api_hash:string bot_auth_token:string = auth.Authorization;
	AuthImportBotAuthorization(ctx context.Context, in *TLAuthImportBotAuthorization, opts ...grpc.CallOption) (*Auth_Authorization, error)
	// auth.checkPassword#d18b4d16 password:InputCheckPasswordSRP = auth.Authorization;
	AuthCheckPassword(ctx context.Context, in *TLAuthCheckPassword, opts ...grpc.CallOption) (*Auth_Authorization, error)
	// auth.requestPasswordRecovery#d897bc66 = auth.PasswordRecovery;
	AuthRequestPasswordRecovery(ctx context.Context, in *TLAuthRequestPasswordRecovery, opts ...grpc.CallOption) (*Auth_PasswordRecovery, error)
	// auth.recoverPassword#4ea56e92 code:string = auth.Authorization;
	AuthRecoverPassword(ctx context.Context, in *TLAuthRecoverPassword, opts ...grpc.CallOption) (*Auth_Authorization, error)
	// auth.resendCode#3ef1a9bf phone_number:string phone_code_hash:string = auth.SentCode;
	AuthResendCode(ctx context.Context, in *TLAuthResendCode, opts ...grpc.CallOption) (*Auth_SentCode, error)
	// auth.cancelCode#1f040578 phone_number:string phone_code_hash:string = Bool;
	AuthCancelCode(ctx context.Context, in *TLAuthCancelCode, opts ...grpc.CallOption) (*Bool, error)
	// auth.dropTempAuthKeys#8e48a188 except_auth_keys:Vector<long> = Bool;
	AuthDropTempAuthKeys(ctx context.Context, in *TLAuthDropTempAuthKeys, opts ...grpc.CallOption) (*Bool, error)
	// auth.exportLoginToken#b1b41517 api_id:int api_hash:string except_ids:Vector<int> = auth.LoginToken;
	AuthExportLoginToken(ctx context.Context, in *TLAuthExportLoginToken, opts ...grpc.CallOption) (*Auth_LoginToken, error)
	// auth.importLoginToken#95ac5ce4 token:bytes = auth.LoginToken;
	AuthImportLoginToken(ctx context.Context, in *TLAuthImportLoginToken, opts ...grpc.CallOption) (*Auth_LoginToken, error)
	// auth.acceptLoginToken#e894ad4d token:bytes = Authorization;
	AuthAcceptLoginToken(ctx context.Context, in *TLAuthAcceptLoginToken, opts ...grpc.CallOption) (*Authorization, error)
	// auth.sendInvites#771c1d97 phone_numbers:Vector<string> message:string = Bool;
	AuthSendInvites(ctx context.Context, in *TLAuthSendInvites, opts ...grpc.CallOption) (*Bool, error)
	// auth.checkPhone#6fe51dfb phone_number:string = auth.CheckedPhone;
	AuthCheckPhone(ctx context.Context, in *TLAuthCheckPhone, opts ...grpc.CallOption) (*Auth_CheckedPhone, error)
	// auth.toggleBan flags:# phone:string predefined:flags.0?bool expires:flags.1?int reason:flags.1?string = PredefinedUser;
	AuthToggleBan(ctx context.Context, in *TLAuthToggleBan, opts ...grpc.CallOption) (*PredefinedUser, error)
}

type rPCAuthClient struct {
	cc *grpc.ClientConn
}

func NewRPCAuthClient(cc *grpc.ClientConn) RPCAuthClient {
	return &rPCAuthClient{cc}
}

func (c *rPCAuthClient) AuthSendCode(ctx context.Context, in *TLAuthSendCode, opts ...grpc.CallOption) (*Auth_SentCode, error) {
	out := new(Auth_SentCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_sendCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthSignUp(ctx context.Context, in *TLAuthSignUp, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_signUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthSignIn(ctx context.Context, in *TLAuthSignIn, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_signIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthLogOut(ctx context.Context, in *TLAuthLogOut, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_logOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthResetAuthorizations(ctx context.Context, in *TLAuthResetAuthorizations, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_resetAuthorizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthExportAuthorization(ctx context.Context, in *TLAuthExportAuthorization, opts ...grpc.CallOption) (*Auth_ExportedAuthorization, error) {
	out := new(Auth_ExportedAuthorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_exportAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthImportAuthorization(ctx context.Context, in *TLAuthImportAuthorization, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_importAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthBindTempAuthKey(ctx context.Context, in *TLAuthBindTempAuthKey, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_bindTempAuthKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthImportBotAuthorization(ctx context.Context, in *TLAuthImportBotAuthorization, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_importBotAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthCheckPassword(ctx context.Context, in *TLAuthCheckPassword, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_checkPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthRequestPasswordRecovery(ctx context.Context, in *TLAuthRequestPasswordRecovery, opts ...grpc.CallOption) (*Auth_PasswordRecovery, error) {
	out := new(Auth_PasswordRecovery)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_requestPasswordRecovery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthRecoverPassword(ctx context.Context, in *TLAuthRecoverPassword, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_recoverPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthResendCode(ctx context.Context, in *TLAuthResendCode, opts ...grpc.CallOption) (*Auth_SentCode, error) {
	out := new(Auth_SentCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_resendCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthCancelCode(ctx context.Context, in *TLAuthCancelCode, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_cancelCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthDropTempAuthKeys(ctx context.Context, in *TLAuthDropTempAuthKeys, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_dropTempAuthKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthExportLoginToken(ctx context.Context, in *TLAuthExportLoginToken, opts ...grpc.CallOption) (*Auth_LoginToken, error) {
	out := new(Auth_LoginToken)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_exportLoginToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthImportLoginToken(ctx context.Context, in *TLAuthImportLoginToken, opts ...grpc.CallOption) (*Auth_LoginToken, error) {
	out := new(Auth_LoginToken)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_importLoginToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthAcceptLoginToken(ctx context.Context, in *TLAuthAcceptLoginToken, opts ...grpc.CallOption) (*Authorization, error) {
	out := new(Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_acceptLoginToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthSendInvites(ctx context.Context, in *TLAuthSendInvites, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_sendInvites", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthCheckPhone(ctx context.Context, in *TLAuthCheckPhone, opts ...grpc.CallOption) (*Auth_CheckedPhone, error) {
	out := new(Auth_CheckedPhone)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_checkPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthClient) AuthToggleBan(ctx context.Context, in *TLAuthToggleBan, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuth/auth_toggleBan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCAuthServer is the server API for RPCAuth service.
type RPCAuthServer interface {
	// auth.sendCode#a677244f phone_number:string api_id:int api_hash:string settings:CodeSettings = auth.SentCode;
	AuthSendCode(context.Context, *TLAuthSendCode) (*Auth_SentCode, error)
	// auth.signUp#80eee427 phone_number:string phone_code_hash:string first_name:string last_name:string = auth.Authorization;
	AuthSignUp(context.Context, *TLAuthSignUp) (*Auth_Authorization, error)
	// auth.signIn#bcd51581 phone_number:string phone_code_hash:string phone_code:string = auth.Authorization;
	AuthSignIn(context.Context, *TLAuthSignIn) (*Auth_Authorization, error)
	// auth.logOut#5717da40 = Bool;
	AuthLogOut(context.Context, *TLAuthLogOut) (*Bool, error)
	// auth.resetAuthorizations#9fab0d1a = Bool;
	AuthResetAuthorizations(context.Context, *TLAuthResetAuthorizations) (*Bool, error)
	// auth.exportAuthorization#e5bfffcd dc_id:int = auth.ExportedAuthorization;
	AuthExportAuthorization(context.Context, *TLAuthExportAuthorization) (*Auth_ExportedAuthorization, error)
	// auth.importAuthorization#e3ef9613 id:int bytes:bytes = auth.Authorization;
	AuthImportAuthorization(context.Context, *TLAuthImportAuthorization) (*Auth_Authorization, error)
	// auth.bindTempAuthKey#cdd42a05 perm_auth_key_id:long nonce:long expires_at:int encrypted_message:bytes = Bool;
	AuthBindTempAuthKey(context.Context, *TLAuthBindTempAuthKey) (*Bool, error)
	// auth.importBotAuthorization#67a3ff2c flags:int api_id:int api_hash:string bot_auth_token:string = auth.Authorization;
	AuthImportBotAuthorization(context.Context, *TLAuthImportBotAuthorization) (*Auth_Authorization, error)
	// auth.checkPassword#d18b4d16 password:InputCheckPasswordSRP = auth.Authorization;
	AuthCheckPassword(context.Context, *TLAuthCheckPassword) (*Auth_Authorization, error)
	// auth.requestPasswordRecovery#d897bc66 = auth.PasswordRecovery;
	AuthRequestPasswordRecovery(context.Context, *TLAuthRequestPasswordRecovery) (*Auth_PasswordRecovery, error)
	// auth.recoverPassword#4ea56e92 code:string = auth.Authorization;
	AuthRecoverPassword(context.Context, *TLAuthRecoverPassword) (*Auth_Authorization, error)
	// auth.resendCode#3ef1a9bf phone_number:string phone_code_hash:string = auth.SentCode;
	AuthResendCode(context.Context, *TLAuthResendCode) (*Auth_SentCode, error)
	// auth.cancelCode#1f040578 phone_number:string phone_code_hash:string = Bool;
	AuthCancelCode(context.Context, *TLAuthCancelCode) (*Bool, error)
	// auth.dropTempAuthKeys#8e48a188 except_auth_keys:Vector<long> = Bool;
	AuthDropTempAuthKeys(context.Context, *TLAuthDropTempAuthKeys) (*Bool, error)
	// auth.exportLoginToken#b1b41517 api_id:int api_hash:string except_ids:Vector<int> = auth.LoginToken;
	AuthExportLoginToken(context.Context, *TLAuthExportLoginToken) (*Auth_LoginToken, error)
	// auth.importLoginToken#95ac5ce4 token:bytes = auth.LoginToken;
	AuthImportLoginToken(context.Context, *TLAuthImportLoginToken) (*Auth_LoginToken, error)
	// auth.acceptLoginToken#e894ad4d token:bytes = Authorization;
	AuthAcceptLoginToken(context.Context, *TLAuthAcceptLoginToken) (*Authorization, error)
	// auth.sendInvites#771c1d97 phone_numbers:Vector<string> message:string = Bool;
	AuthSendInvites(context.Context, *TLAuthSendInvites) (*Bool, error)
	// auth.checkPhone#6fe51dfb phone_number:string = auth.CheckedPhone;
	AuthCheckPhone(context.Context, *TLAuthCheckPhone) (*Auth_CheckedPhone, error)
	// auth.toggleBan flags:# phone:string predefined:flags.0?bool expires:flags.1?int reason:flags.1?string = PredefinedUser;
	AuthToggleBan(context.Context, *TLAuthToggleBan) (*PredefinedUser, error)
}

func RegisterRPCAuthServer(s *grpc.Server, srv RPCAuthServer) {
	s.RegisterService(&_RPCAuth_serviceDesc, srv)
}

func _RPCAuth_AuthSendCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthSendCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthSendCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthSendCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthSendCode(ctx, req.(*TLAuthSendCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthSignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthSignUp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthSignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthSignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthSignUp(ctx, req.(*TLAuthSignUp))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthSignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthSignIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthSignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthSignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthSignIn(ctx, req.(*TLAuthSignIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthLogOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthLogOut)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthLogOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthLogOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthLogOut(ctx, req.(*TLAuthLogOut))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthResetAuthorizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthResetAuthorizations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthResetAuthorizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthResetAuthorizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthResetAuthorizations(ctx, req.(*TLAuthResetAuthorizations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthExportAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthExportAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthExportAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthExportAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthExportAuthorization(ctx, req.(*TLAuthExportAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthImportAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthImportAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthImportAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthImportAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthImportAuthorization(ctx, req.(*TLAuthImportAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthBindTempAuthKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthBindTempAuthKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthBindTempAuthKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthBindTempAuthKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthBindTempAuthKey(ctx, req.(*TLAuthBindTempAuthKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthImportBotAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthImportBotAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthImportBotAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthImportBotAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthImportBotAuthorization(ctx, req.(*TLAuthImportBotAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthCheckPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthCheckPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthCheckPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthCheckPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthCheckPassword(ctx, req.(*TLAuthCheckPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthRequestPasswordRecovery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthRequestPasswordRecovery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthRequestPasswordRecovery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthRequestPasswordRecovery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthRequestPasswordRecovery(ctx, req.(*TLAuthRequestPasswordRecovery))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthRecoverPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthRecoverPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthRecoverPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthRecoverPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthRecoverPassword(ctx, req.(*TLAuthRecoverPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthResendCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthResendCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthResendCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthResendCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthResendCode(ctx, req.(*TLAuthResendCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthCancelCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthCancelCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthCancelCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthCancelCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthCancelCode(ctx, req.(*TLAuthCancelCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthDropTempAuthKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthDropTempAuthKeys)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthDropTempAuthKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthDropTempAuthKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthDropTempAuthKeys(ctx, req.(*TLAuthDropTempAuthKeys))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthExportLoginToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthExportLoginToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthExportLoginToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthExportLoginToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthExportLoginToken(ctx, req.(*TLAuthExportLoginToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthImportLoginToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthImportLoginToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthImportLoginToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthImportLoginToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthImportLoginToken(ctx, req.(*TLAuthImportLoginToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthAcceptLoginToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthAcceptLoginToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthAcceptLoginToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthAcceptLoginToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthAcceptLoginToken(ctx, req.(*TLAuthAcceptLoginToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthSendInvites_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthSendInvites)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthSendInvites(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthSendInvites",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthSendInvites(ctx, req.(*TLAuthSendInvites))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthCheckPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthCheckPhone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthCheckPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthCheckPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthCheckPhone(ctx, req.(*TLAuthCheckPhone))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuth_AuthToggleBan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthToggleBan)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthServer).AuthToggleBan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuth/AuthToggleBan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthServer).AuthToggleBan(ctx, req.(*TLAuthToggleBan))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCAuth",
	HandlerType: (*RPCAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "auth_sendCode",
			Handler:    _RPCAuth_AuthSendCode_Handler,
		},
		{
			MethodName: "auth_signUp",
			Handler:    _RPCAuth_AuthSignUp_Handler,
		},
		{
			MethodName: "auth_signIn",
			Handler:    _RPCAuth_AuthSignIn_Handler,
		},
		{
			MethodName: "auth_logOut",
			Handler:    _RPCAuth_AuthLogOut_Handler,
		},
		{
			MethodName: "auth_resetAuthorizations",
			Handler:    _RPCAuth_AuthResetAuthorizations_Handler,
		},
		{
			MethodName: "auth_exportAuthorization",
			Handler:    _RPCAuth_AuthExportAuthorization_Handler,
		},
		{
			MethodName: "auth_importAuthorization",
			Handler:    _RPCAuth_AuthImportAuthorization_Handler,
		},
		{
			MethodName: "auth_bindTempAuthKey",
			Handler:    _RPCAuth_AuthBindTempAuthKey_Handler,
		},
		{
			MethodName: "auth_importBotAuthorization",
			Handler:    _RPCAuth_AuthImportBotAuthorization_Handler,
		},
		{
			MethodName: "auth_checkPassword",
			Handler:    _RPCAuth_AuthCheckPassword_Handler,
		},
		{
			MethodName: "auth_requestPasswordRecovery",
			Handler:    _RPCAuth_AuthRequestPasswordRecovery_Handler,
		},
		{
			MethodName: "auth_recoverPassword",
			Handler:    _RPCAuth_AuthRecoverPassword_Handler,
		},
		{
			MethodName: "auth_resendCode",
			Handler:    _RPCAuth_AuthResendCode_Handler,
		},
		{
			MethodName: "auth_cancelCode",
			Handler:    _RPCAuth_AuthCancelCode_Handler,
		},
		{
			MethodName: "auth_dropTempAuthKeys",
			Handler:    _RPCAuth_AuthDropTempAuthKeys_Handler,
		},
		{
			MethodName: "auth_exportLoginToken",
			Handler:    _RPCAuth_AuthExportLoginToken_Handler,
		},
		{
			MethodName: "auth_importLoginToken",
			Handler:    _RPCAuth_AuthImportLoginToken_Handler,
		},
		{
			MethodName: "auth_acceptLoginToken",
			Handler:    _RPCAuth_AuthAcceptLoginToken_Handler,
		},
		{
			MethodName: "auth_sendInvites",
			Handler:    _RPCAuth_AuthSendInvites_Handler,
		},
		{
			MethodName: "auth_checkPhone",
			Handler:    _RPCAuth_AuthCheckPhone_Handler,
		},
		{
			MethodName: "auth_toggleBan",
			Handler:    _RPCAuth_AuthToggleBan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCUploadClient is the client API for RPCUpload service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCUploadClient interface {
	// upload.saveFilePart#b304a621 file_id:long file_part:int bytes:bytes = Bool;
	UploadSaveFilePart(ctx context.Context, in *TLUploadSaveFilePart, opts ...grpc.CallOption) (*Bool, error)
	// upload.getFile#b15a9afc flags:# precise:flags.0?true cdn_supported:flags.1?true location:InputFileLocation offset:int limit:int = upload.File;
	UploadGetFile(ctx context.Context, in *TLUploadGetFile, opts ...grpc.CallOption) (*Upload_File, error)
	// upload.saveBigFilePart#de7b673d file_id:long file_part:int file_total_parts:int bytes:bytes = Bool;
	UploadSaveBigFilePart(ctx context.Context, in *TLUploadSaveBigFilePart, opts ...grpc.CallOption) (*Bool, error)
	// upload.getWebFile#24e6818d location:InputWebFileLocation offset:int limit:int = upload.WebFile;
	UploadGetWebFile(ctx context.Context, in *TLUploadGetWebFile, opts ...grpc.CallOption) (*Upload_WebFile, error)
	// upload.getCdnFile#2000bcc3 file_token:bytes offset:int limit:int = upload.CdnFile;
	UploadGetCdnFile(ctx context.Context, in *TLUploadGetCdnFile, opts ...grpc.CallOption) (*Upload_CdnFile, error)
	// upload.reuploadCdnFile#9b2754a8 file_token:bytes request_token:bytes = Vector<FileHash>;
	UploadReuploadCdnFile9B2754A8(ctx context.Context, in *TLUploadReuploadCdnFile9B2754A8, opts ...grpc.CallOption) (*Vector_FileHash, error)
	// upload.getCdnFileHashes#4da54231 file_token:bytes offset:int = Vector<FileHash>;
	UploadGetCdnFileHashes4DA54231(ctx context.Context, in *TLUploadGetCdnFileHashes4DA54231, opts ...grpc.CallOption) (*Vector_FileHash, error)
	// upload.getFileHashes#c7025931 location:InputFileLocation offset:int = Vector<FileHash>;
	UploadGetFileHashes(ctx context.Context, in *TLUploadGetFileHashes, opts ...grpc.CallOption) (*Vector_FileHash, error)
	// upload.reuploadCdnFile#1af91c09 file_token:bytes request_token:bytes = Vector<CdnFileHash>;
	UploadReuploadCdnFile1AF91C09(ctx context.Context, in *TLUploadReuploadCdnFile1AF91C09, opts ...grpc.CallOption) (*Vector_CdnFileHash, error)
	// upload.getCdnFileHashes#f715c87b file_token:bytes offset:int = Vector<CdnFileHash>;
	UploadGetCdnFileHashesF715C87B(ctx context.Context, in *TLUploadGetCdnFileHashesF715C87B, opts ...grpc.CallOption) (*Vector_CdnFileHash, error)
}

type rPCUploadClient struct {
	cc *grpc.ClientConn
}

func NewRPCUploadClient(cc *grpc.ClientConn) RPCUploadClient {
	return &rPCUploadClient{cc}
}

func (c *rPCUploadClient) UploadSaveFilePart(ctx context.Context, in *TLUploadSaveFilePart, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpload/upload_saveFilePart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUploadClient) UploadGetFile(ctx context.Context, in *TLUploadGetFile, opts ...grpc.CallOption) (*Upload_File, error) {
	out := new(Upload_File)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpload/upload_getFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUploadClient) UploadSaveBigFilePart(ctx context.Context, in *TLUploadSaveBigFilePart, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpload/upload_saveBigFilePart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUploadClient) UploadGetWebFile(ctx context.Context, in *TLUploadGetWebFile, opts ...grpc.CallOption) (*Upload_WebFile, error) {
	out := new(Upload_WebFile)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpload/upload_getWebFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUploadClient) UploadGetCdnFile(ctx context.Context, in *TLUploadGetCdnFile, opts ...grpc.CallOption) (*Upload_CdnFile, error) {
	out := new(Upload_CdnFile)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpload/upload_getCdnFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUploadClient) UploadReuploadCdnFile9B2754A8(ctx context.Context, in *TLUploadReuploadCdnFile9B2754A8, opts ...grpc.CallOption) (*Vector_FileHash, error) {
	out := new(Vector_FileHash)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpload/upload_reuploadCdnFile9B2754A8", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUploadClient) UploadGetCdnFileHashes4DA54231(ctx context.Context, in *TLUploadGetCdnFileHashes4DA54231, opts ...grpc.CallOption) (*Vector_FileHash, error) {
	out := new(Vector_FileHash)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpload/upload_getCdnFileHashes4DA54231", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUploadClient) UploadGetFileHashes(ctx context.Context, in *TLUploadGetFileHashes, opts ...grpc.CallOption) (*Vector_FileHash, error) {
	out := new(Vector_FileHash)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpload/upload_getFileHashes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUploadClient) UploadReuploadCdnFile1AF91C09(ctx context.Context, in *TLUploadReuploadCdnFile1AF91C09, opts ...grpc.CallOption) (*Vector_CdnFileHash, error) {
	out := new(Vector_CdnFileHash)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpload/upload_reuploadCdnFile1AF91C09", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUploadClient) UploadGetCdnFileHashesF715C87B(ctx context.Context, in *TLUploadGetCdnFileHashesF715C87B, opts ...grpc.CallOption) (*Vector_CdnFileHash, error) {
	out := new(Vector_CdnFileHash)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpload/upload_getCdnFileHashesF715C87B", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCUploadServer is the server API for RPCUpload service.
type RPCUploadServer interface {
	// upload.saveFilePart#b304a621 file_id:long file_part:int bytes:bytes = Bool;
	UploadSaveFilePart(context.Context, *TLUploadSaveFilePart) (*Bool, error)
	// upload.getFile#b15a9afc flags:# precise:flags.0?true cdn_supported:flags.1?true location:InputFileLocation offset:int limit:int = upload.File;
	UploadGetFile(context.Context, *TLUploadGetFile) (*Upload_File, error)
	// upload.saveBigFilePart#de7b673d file_id:long file_part:int file_total_parts:int bytes:bytes = Bool;
	UploadSaveBigFilePart(context.Context, *TLUploadSaveBigFilePart) (*Bool, error)
	// upload.getWebFile#24e6818d location:InputWebFileLocation offset:int limit:int = upload.WebFile;
	UploadGetWebFile(context.Context, *TLUploadGetWebFile) (*Upload_WebFile, error)
	// upload.getCdnFile#2000bcc3 file_token:bytes offset:int limit:int = upload.CdnFile;
	UploadGetCdnFile(context.Context, *TLUploadGetCdnFile) (*Upload_CdnFile, error)
	// upload.reuploadCdnFile#9b2754a8 file_token:bytes request_token:bytes = Vector<FileHash>;
	UploadReuploadCdnFile9B2754A8(context.Context, *TLUploadReuploadCdnFile9B2754A8) (*Vector_FileHash, error)
	// upload.getCdnFileHashes#4da54231 file_token:bytes offset:int = Vector<FileHash>;
	UploadGetCdnFileHashes4DA54231(context.Context, *TLUploadGetCdnFileHashes4DA54231) (*Vector_FileHash, error)
	// upload.getFileHashes#c7025931 location:InputFileLocation offset:int = Vector<FileHash>;
	UploadGetFileHashes(context.Context, *TLUploadGetFileHashes) (*Vector_FileHash, error)
	// upload.reuploadCdnFile#1af91c09 file_token:bytes request_token:bytes = Vector<CdnFileHash>;
	UploadReuploadCdnFile1AF91C09(context.Context, *TLUploadReuploadCdnFile1AF91C09) (*Vector_CdnFileHash, error)
	// upload.getCdnFileHashes#f715c87b file_token:bytes offset:int = Vector<CdnFileHash>;
	UploadGetCdnFileHashesF715C87B(context.Context, *TLUploadGetCdnFileHashesF715C87B) (*Vector_CdnFileHash, error)
}

func RegisterRPCUploadServer(s *grpc.Server, srv RPCUploadServer) {
	s.RegisterService(&_RPCUpload_serviceDesc, srv)
}

func _RPCUpload_UploadSaveFilePart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadSaveFilePart)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUploadServer).UploadSaveFilePart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpload/UploadSaveFilePart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUploadServer).UploadSaveFilePart(ctx, req.(*TLUploadSaveFilePart))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpload_UploadGetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUploadServer).UploadGetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpload/UploadGetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUploadServer).UploadGetFile(ctx, req.(*TLUploadGetFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpload_UploadSaveBigFilePart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadSaveBigFilePart)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUploadServer).UploadSaveBigFilePart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpload/UploadSaveBigFilePart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUploadServer).UploadSaveBigFilePart(ctx, req.(*TLUploadSaveBigFilePart))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpload_UploadGetWebFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetWebFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUploadServer).UploadGetWebFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpload/UploadGetWebFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUploadServer).UploadGetWebFile(ctx, req.(*TLUploadGetWebFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpload_UploadGetCdnFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetCdnFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUploadServer).UploadGetCdnFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpload/UploadGetCdnFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUploadServer).UploadGetCdnFile(ctx, req.(*TLUploadGetCdnFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpload_UploadReuploadCdnFile9B2754A8_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadReuploadCdnFile9B2754A8)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUploadServer).UploadReuploadCdnFile9B2754A8(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpload/UploadReuploadCdnFile9B2754A8",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUploadServer).UploadReuploadCdnFile9B2754A8(ctx, req.(*TLUploadReuploadCdnFile9B2754A8))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpload_UploadGetCdnFileHashes4DA54231_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetCdnFileHashes4DA54231)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUploadServer).UploadGetCdnFileHashes4DA54231(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpload/UploadGetCdnFileHashes4DA54231",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUploadServer).UploadGetCdnFileHashes4DA54231(ctx, req.(*TLUploadGetCdnFileHashes4DA54231))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpload_UploadGetFileHashes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetFileHashes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUploadServer).UploadGetFileHashes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpload/UploadGetFileHashes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUploadServer).UploadGetFileHashes(ctx, req.(*TLUploadGetFileHashes))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpload_UploadReuploadCdnFile1AF91C09_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadReuploadCdnFile1AF91C09)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUploadServer).UploadReuploadCdnFile1AF91C09(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpload/UploadReuploadCdnFile1AF91C09",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUploadServer).UploadReuploadCdnFile1AF91C09(ctx, req.(*TLUploadReuploadCdnFile1AF91C09))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpload_UploadGetCdnFileHashesF715C87B_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetCdnFileHashesF715C87B)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUploadServer).UploadGetCdnFileHashesF715C87B(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpload/UploadGetCdnFileHashesF715C87B",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUploadServer).UploadGetCdnFileHashesF715C87B(ctx, req.(*TLUploadGetCdnFileHashesF715C87B))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCUpload_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCUpload",
	HandlerType: (*RPCUploadServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "upload_saveFilePart",
			Handler:    _RPCUpload_UploadSaveFilePart_Handler,
		},
		{
			MethodName: "upload_getFile",
			Handler:    _RPCUpload_UploadGetFile_Handler,
		},
		{
			MethodName: "upload_saveBigFilePart",
			Handler:    _RPCUpload_UploadSaveBigFilePart_Handler,
		},
		{
			MethodName: "upload_getWebFile",
			Handler:    _RPCUpload_UploadGetWebFile_Handler,
		},
		{
			MethodName: "upload_getCdnFile",
			Handler:    _RPCUpload_UploadGetCdnFile_Handler,
		},
		{
			MethodName: "upload_reuploadCdnFile9B2754A8",
			Handler:    _RPCUpload_UploadReuploadCdnFile9B2754A8_Handler,
		},
		{
			MethodName: "upload_getCdnFileHashes4DA54231",
			Handler:    _RPCUpload_UploadGetCdnFileHashes4DA54231_Handler,
		},
		{
			MethodName: "upload_getFileHashes",
			Handler:    _RPCUpload_UploadGetFileHashes_Handler,
		},
		{
			MethodName: "upload_reuploadCdnFile1AF91C09",
			Handler:    _RPCUpload_UploadReuploadCdnFile1AF91C09_Handler,
		},
		{
			MethodName: "upload_getCdnFileHashesF715C87B",
			Handler:    _RPCUpload_UploadGetCdnFileHashesF715C87B_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCLangpackClient is the client API for RPCLangpack service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCLangpackClient interface {
	// langpack.getLangPack#f2f2330a lang_pack:string lang_code:string = LangPackDifference;
	LangpackGetLangPack(ctx context.Context, in *TLLangpackGetLangPack, opts ...grpc.CallOption) (*LangPackDifference, error)
	// langpack.getStrings#efea3803 lang_pack:string lang_code:string keys:Vector<string> = Vector<LangPackString>;
	LangpackGetStrings(ctx context.Context, in *TLLangpackGetStrings, opts ...grpc.CallOption) (*Vector_LangPackString, error)
	// langpack.getDifference#cd984aa5 lang_pack:string lang_code:string from_version:int = LangPackDifference;
	LangpackGetDifference(ctx context.Context, in *TLLangpackGetDifference, opts ...grpc.CallOption) (*LangPackDifference, error)
	// langpack.getLanguages#42c6978f lang_pack:string = Vector<LangPackLanguage>;
	LangpackGetLanguages(ctx context.Context, in *TLLangpackGetLanguages, opts ...grpc.CallOption) (*Vector_LangPackLanguage, error)
	// langpack.getLanguage#6a596502 lang_pack:string lang_code:string = LangPackLanguage;
	LangpackGetLanguage(ctx context.Context, in *TLLangpackGetLanguage, opts ...grpc.CallOption) (*LangPackLanguage, error)
}

type rPCLangpackClient struct {
	cc *grpc.ClientConn
}

func NewRPCLangpackClient(cc *grpc.ClientConn) RPCLangpackClient {
	return &rPCLangpackClient{cc}
}

func (c *rPCLangpackClient) LangpackGetLangPack(ctx context.Context, in *TLLangpackGetLangPack, opts ...grpc.CallOption) (*LangPackDifference, error) {
	out := new(LangPackDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCLangpack/langpack_getLangPack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCLangpackClient) LangpackGetStrings(ctx context.Context, in *TLLangpackGetStrings, opts ...grpc.CallOption) (*Vector_LangPackString, error) {
	out := new(Vector_LangPackString)
	err := c.cc.Invoke(ctx, "/mtproto.RPCLangpack/langpack_getStrings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCLangpackClient) LangpackGetDifference(ctx context.Context, in *TLLangpackGetDifference, opts ...grpc.CallOption) (*LangPackDifference, error) {
	out := new(LangPackDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCLangpack/langpack_getDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCLangpackClient) LangpackGetLanguages(ctx context.Context, in *TLLangpackGetLanguages, opts ...grpc.CallOption) (*Vector_LangPackLanguage, error) {
	out := new(Vector_LangPackLanguage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCLangpack/langpack_getLanguages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCLangpackClient) LangpackGetLanguage(ctx context.Context, in *TLLangpackGetLanguage, opts ...grpc.CallOption) (*LangPackLanguage, error) {
	out := new(LangPackLanguage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCLangpack/langpack_getLanguage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCLangpackServer is the server API for RPCLangpack service.
type RPCLangpackServer interface {
	// langpack.getLangPack#f2f2330a lang_pack:string lang_code:string = LangPackDifference;
	LangpackGetLangPack(context.Context, *TLLangpackGetLangPack) (*LangPackDifference, error)
	// langpack.getStrings#efea3803 lang_pack:string lang_code:string keys:Vector<string> = Vector<LangPackString>;
	LangpackGetStrings(context.Context, *TLLangpackGetStrings) (*Vector_LangPackString, error)
	// langpack.getDifference#cd984aa5 lang_pack:string lang_code:string from_version:int = LangPackDifference;
	LangpackGetDifference(context.Context, *TLLangpackGetDifference) (*LangPackDifference, error)
	// langpack.getLanguages#42c6978f lang_pack:string = Vector<LangPackLanguage>;
	LangpackGetLanguages(context.Context, *TLLangpackGetLanguages) (*Vector_LangPackLanguage, error)
	// langpack.getLanguage#6a596502 lang_pack:string lang_code:string = LangPackLanguage;
	LangpackGetLanguage(context.Context, *TLLangpackGetLanguage) (*LangPackLanguage, error)
}

func RegisterRPCLangpackServer(s *grpc.Server, srv RPCLangpackServer) {
	s.RegisterService(&_RPCLangpack_serviceDesc, srv)
}

func _RPCLangpack_LangpackGetLangPack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLLangpackGetLangPack)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCLangpackServer).LangpackGetLangPack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCLangpack/LangpackGetLangPack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCLangpackServer).LangpackGetLangPack(ctx, req.(*TLLangpackGetLangPack))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCLangpack_LangpackGetStrings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLLangpackGetStrings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCLangpackServer).LangpackGetStrings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCLangpack/LangpackGetStrings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCLangpackServer).LangpackGetStrings(ctx, req.(*TLLangpackGetStrings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCLangpack_LangpackGetDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLLangpackGetDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCLangpackServer).LangpackGetDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCLangpack/LangpackGetDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCLangpackServer).LangpackGetDifference(ctx, req.(*TLLangpackGetDifference))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCLangpack_LangpackGetLanguages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLLangpackGetLanguages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCLangpackServer).LangpackGetLanguages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCLangpack/LangpackGetLanguages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCLangpackServer).LangpackGetLanguages(ctx, req.(*TLLangpackGetLanguages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCLangpack_LangpackGetLanguage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLLangpackGetLanguage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCLangpackServer).LangpackGetLanguage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCLangpack/LangpackGetLanguage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCLangpackServer).LangpackGetLanguage(ctx, req.(*TLLangpackGetLanguage))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCLangpack_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCLangpack",
	HandlerType: (*RPCLangpackServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "langpack_getLangPack",
			Handler:    _RPCLangpack_LangpackGetLangPack_Handler,
		},
		{
			MethodName: "langpack_getStrings",
			Handler:    _RPCLangpack_LangpackGetStrings_Handler,
		},
		{
			MethodName: "langpack_getDifference",
			Handler:    _RPCLangpack_LangpackGetDifference_Handler,
		},
		{
			MethodName: "langpack_getLanguages",
			Handler:    _RPCLangpack_LangpackGetLanguages_Handler,
		},
		{
			MethodName: "langpack_getLanguage",
			Handler:    _RPCLangpack_LangpackGetLanguage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCBizClient is the client API for RPCBiz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCBizClient interface {
	// biz.invokeBizDataRaw biz_data:BizDataRaw = BizDataRaw;
	BizInvokeBizDataRaw(ctx context.Context, in *TLBizInvokeBizDataRaw, opts ...grpc.CallOption) (*BizDataRaw, error)
}

type rPCBizClient struct {
	cc *grpc.ClientConn
}

func NewRPCBizClient(cc *grpc.ClientConn) RPCBizClient {
	return &rPCBizClient{cc}
}

func (c *rPCBizClient) BizInvokeBizDataRaw(ctx context.Context, in *TLBizInvokeBizDataRaw, opts ...grpc.CallOption) (*BizDataRaw, error) {
	out := new(BizDataRaw)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBiz/biz_invokeBizDataRaw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCBizServer is the server API for RPCBiz service.
type RPCBizServer interface {
	// biz.invokeBizDataRaw biz_data:BizDataRaw = BizDataRaw;
	BizInvokeBizDataRaw(context.Context, *TLBizInvokeBizDataRaw) (*BizDataRaw, error)
}

func RegisterRPCBizServer(s *grpc.Server, srv RPCBizServer) {
	s.RegisterService(&_RPCBiz_serviceDesc, srv)
}

func _RPCBiz_BizInvokeBizDataRaw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBizInvokeBizDataRaw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBizServer).BizInvokeBizDataRaw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBiz/BizInvokeBizDataRaw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBizServer).BizInvokeBizDataRaw(ctx, req.(*TLBizInvokeBizDataRaw))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCBiz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCBiz",
	HandlerType: (*RPCBizServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "biz_invokeBizDataRaw",
			Handler:    _RPCBiz_BizInvokeBizDataRaw_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCAccountClient is the client API for RPCAccount service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCAccountClient interface {
	// account.registerDevice#68976c6f flags:# no_muted:flags.0?true token_type:int token:string app_sandbox:Bool secret:bytes other_uids:Vector<int> = Bool;
	AccountRegisterDevice(ctx context.Context, in *TLAccountRegisterDevice, opts ...grpc.CallOption) (*Bool, error)
	// account.unregisterDevice#3076c4bf token_type:int token:string other_uids:Vector<int> = Bool;
	AccountUnregisterDevice(ctx context.Context, in *TLAccountUnregisterDevice, opts ...grpc.CallOption) (*Bool, error)
	// account.updateNotifySettings#84be5b93 peer:InputNotifyPeer settings:InputPeerNotifySettings = Bool;
	AccountUpdateNotifySettings(ctx context.Context, in *TLAccountUpdateNotifySettings, opts ...grpc.CallOption) (*Bool, error)
	// account.getNotifySettings#12b3ad31 peer:InputNotifyPeer = PeerNotifySettings;
	AccountGetNotifySettings(ctx context.Context, in *TLAccountGetNotifySettings, opts ...grpc.CallOption) (*PeerNotifySettings, error)
	// account.resetNotifySettings#db7e1747 = Bool;
	AccountResetNotifySettings(ctx context.Context, in *TLAccountResetNotifySettings, opts ...grpc.CallOption) (*Bool, error)
	// account.updateProfile#78515775 flags:# first_name:flags.0?string last_name:flags.1?string about:flags.2?string = User;
	AccountUpdateProfile(ctx context.Context, in *TLAccountUpdateProfile, opts ...grpc.CallOption) (*User, error)
	// account.updateStatus#6628562c offline:Bool = Bool;
	AccountUpdateStatus(ctx context.Context, in *TLAccountUpdateStatus, opts ...grpc.CallOption) (*Bool, error)
	// account.getWallPapers#aabb1763 hash:int = account.WallPapers;
	AccountGetWallPapersAABB1763(ctx context.Context, in *TLAccountGetWallPapersAABB1763, opts ...grpc.CallOption) (*Account_WallPapers, error)
	// account.reportPeer#ae189d5f peer:InputPeer reason:ReportReason = Bool;
	AccountReportPeer(ctx context.Context, in *TLAccountReportPeer, opts ...grpc.CallOption) (*Bool, error)
	// account.checkUsername#2714d86c username:string = Bool;
	AccountCheckUsername(ctx context.Context, in *TLAccountCheckUsername, opts ...grpc.CallOption) (*Bool, error)
	// account.updateUsername#3e0bdd7c username:string = User;
	AccountUpdateUsername(ctx context.Context, in *TLAccountUpdateUsername, opts ...grpc.CallOption) (*User, error)
	// account.getPrivacy#dadbc950 key:InputPrivacyKey = account.PrivacyRules;
	AccountGetPrivacy(ctx context.Context, in *TLAccountGetPrivacy, opts ...grpc.CallOption) (*Account_PrivacyRules, error)
	// account.setPrivacy#c9f81ce8 key:InputPrivacyKey rules:Vector<InputPrivacyRule> = account.PrivacyRules;
	AccountSetPrivacy(ctx context.Context, in *TLAccountSetPrivacy, opts ...grpc.CallOption) (*Account_PrivacyRules, error)
	// account.deleteAccount#418d4e0b reason:string = Bool;
	AccountDeleteAccount(ctx context.Context, in *TLAccountDeleteAccount, opts ...grpc.CallOption) (*Bool, error)
	// account.getAccountTTL#8fc711d = AccountDaysTTL;
	AccountGetAccountTTL(ctx context.Context, in *TLAccountGetAccountTTL, opts ...grpc.CallOption) (*AccountDaysTTL, error)
	// account.setAccountTTL#2442485e ttl:AccountDaysTTL = Bool;
	AccountSetAccountTTL(ctx context.Context, in *TLAccountSetAccountTTL, opts ...grpc.CallOption) (*Bool, error)
	// account.sendChangePhoneCode#82574ae5 phone_number:string settings:CodeSettings = auth.SentCode;
	AccountSendChangePhoneCode(ctx context.Context, in *TLAccountSendChangePhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error)
	// account.changePhone#70c32edb phone_number:string phone_code_hash:string phone_code:string = User;
	AccountChangePhone(ctx context.Context, in *TLAccountChangePhone, opts ...grpc.CallOption) (*User, error)
	// account.updateDeviceLocked#38df3532 period:int = Bool;
	AccountUpdateDeviceLocked(ctx context.Context, in *TLAccountUpdateDeviceLocked, opts ...grpc.CallOption) (*Bool, error)
	// account.getAuthorizations#e320c158 = account.Authorizations;
	AccountGetAuthorizations(ctx context.Context, in *TLAccountGetAuthorizations, opts ...grpc.CallOption) (*Account_Authorizations, error)
	// account.resetAuthorization#df77f3bc hash:long = Bool;
	AccountResetAuthorization(ctx context.Context, in *TLAccountResetAuthorization, opts ...grpc.CallOption) (*Bool, error)
	// account.getPassword#548a30f5 = account.Password;
	AccountGetPassword(ctx context.Context, in *TLAccountGetPassword, opts ...grpc.CallOption) (*Account_Password, error)
	// account.getPasswordSettings#9cd4eaf9 password:InputCheckPasswordSRP = account.PasswordSettings;
	AccountGetPasswordSettings(ctx context.Context, in *TLAccountGetPasswordSettings, opts ...grpc.CallOption) (*Account_PasswordSettings, error)
	// account.updatePasswordSettings#a59b102f password:InputCheckPasswordSRP new_settings:account.PasswordInputSettings = Bool;
	AccountUpdatePasswordSettings(ctx context.Context, in *TLAccountUpdatePasswordSettings, opts ...grpc.CallOption) (*Bool, error)
	// account.sendConfirmPhoneCode#1b3faa88 hash:string settings:CodeSettings = auth.SentCode;
	AccountSendConfirmPhoneCode(ctx context.Context, in *TLAccountSendConfirmPhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error)
	// account.confirmPhone#5f2178c3 phone_code_hash:string phone_code:string = Bool;
	AccountConfirmPhone(ctx context.Context, in *TLAccountConfirmPhone, opts ...grpc.CallOption) (*Bool, error)
	// account.getTmpPassword#449e0b51 password:InputCheckPasswordSRP period:int = account.TmpPassword;
	AccountGetTmpPassword(ctx context.Context, in *TLAccountGetTmpPassword, opts ...grpc.CallOption) (*Account_TmpPassword, error)
	// account.getWebAuthorizations#182e6d6f = account.WebAuthorizations;
	AccountGetWebAuthorizations(ctx context.Context, in *TLAccountGetWebAuthorizations, opts ...grpc.CallOption) (*Account_WebAuthorizations, error)
	// account.resetWebAuthorization#2d01b9ef hash:long = Bool;
	AccountResetWebAuthorization(ctx context.Context, in *TLAccountResetWebAuthorization, opts ...grpc.CallOption) (*Bool, error)
	// account.resetWebAuthorizations#682d2594 = Bool;
	AccountResetWebAuthorizations(ctx context.Context, in *TLAccountResetWebAuthorizations, opts ...grpc.CallOption) (*Bool, error)
	// account.getAllSecureValues#b288bc7d = Vector<SecureValue>;
	AccountGetAllSecureValues(ctx context.Context, in *TLAccountGetAllSecureValues, opts ...grpc.CallOption) (*Vector_SecureValue, error)
	// account.getSecureValue#73665bc2 types:Vector<SecureValueType> = Vector<SecureValue>;
	AccountGetSecureValue(ctx context.Context, in *TLAccountGetSecureValue, opts ...grpc.CallOption) (*Vector_SecureValue, error)
	// account.saveSecureValue#899fe31d value:InputSecureValue secure_secret_id:long = SecureValue;
	AccountSaveSecureValue(ctx context.Context, in *TLAccountSaveSecureValue, opts ...grpc.CallOption) (*SecureValue, error)
	// account.deleteSecureValue#b880bc4b types:Vector<SecureValueType> = Bool;
	AccountDeleteSecureValue(ctx context.Context, in *TLAccountDeleteSecureValue, opts ...grpc.CallOption) (*Bool, error)
	// account.getAuthorizationForm#b86ba8e1 bot_id:int scope:string public_key:string = account.AuthorizationForm;
	AccountGetAuthorizationForm(ctx context.Context, in *TLAccountGetAuthorizationForm, opts ...grpc.CallOption) (*Account_AuthorizationForm, error)
	// account.acceptAuthorization#e7027c94 bot_id:int scope:string public_key:string value_hashes:Vector<SecureValueHash> credentials:SecureCredentialsEncrypted = Bool;
	AccountAcceptAuthorization(ctx context.Context, in *TLAccountAcceptAuthorization, opts ...grpc.CallOption) (*Bool, error)
	// account.sendVerifyPhoneCode#a5a356f9 phone_number:string settings:CodeSettings = auth.SentCode;
	AccountSendVerifyPhoneCode(ctx context.Context, in *TLAccountSendVerifyPhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error)
	// account.verifyPhone#4dd3a7f6 phone_number:string phone_code_hash:string phone_code:string = Bool;
	AccountVerifyPhone(ctx context.Context, in *TLAccountVerifyPhone, opts ...grpc.CallOption) (*Bool, error)
	// account.sendVerifyEmailCode#7011509f email:string = account.SentEmailCode;
	AccountSendVerifyEmailCode(ctx context.Context, in *TLAccountSendVerifyEmailCode, opts ...grpc.CallOption) (*Account_SentEmailCode, error)
	// account.verifyEmail#ecba39db email:string code:string = Bool;
	AccountVerifyEmail(ctx context.Context, in *TLAccountVerifyEmail, opts ...grpc.CallOption) (*Bool, error)
	// account.initTakeoutSession#f05b4804 flags:# contacts:flags.0?true message_users:flags.1?true message_chats:flags.2?true message_megagroups:flags.3?true message_channels:flags.4?true files:flags.5?true file_max_size:flags.5?int = account.Takeout;
	AccountInitTakeoutSession(ctx context.Context, in *TLAccountInitTakeoutSession, opts ...grpc.CallOption) (*Account_Takeout, error)
	// account.finishTakeoutSession#1d2652ee flags:# success:flags.0?true = Bool;
	AccountFinishTakeoutSession(ctx context.Context, in *TLAccountFinishTakeoutSession, opts ...grpc.CallOption) (*Bool, error)
	// account.confirmPasswordEmail#8fdf1920 code:string = Bool;
	AccountConfirmPasswordEmail(ctx context.Context, in *TLAccountConfirmPasswordEmail, opts ...grpc.CallOption) (*Bool, error)
	// account.resendPasswordEmail#7a7f2a15 = Bool;
	AccountResendPasswordEmail(ctx context.Context, in *TLAccountResendPasswordEmail, opts ...grpc.CallOption) (*Bool, error)
	// account.cancelPasswordEmail#c1cbd5b6 = Bool;
	AccountCancelPasswordEmail(ctx context.Context, in *TLAccountCancelPasswordEmail, opts ...grpc.CallOption) (*Bool, error)
	// account.getContactSignUpNotification#9f07c728 = Bool;
	AccountGetContactSignUpNotification(ctx context.Context, in *TLAccountGetContactSignUpNotification, opts ...grpc.CallOption) (*Bool, error)
	// account.setContactSignUpNotification#cff43f61 silent:Bool = Bool;
	AccountSetContactSignUpNotification(ctx context.Context, in *TLAccountSetContactSignUpNotification, opts ...grpc.CallOption) (*Bool, error)
	// account.getNotifyExceptions#53577479 flags:# compare_sound:flags.1?true peer:flags.0?InputNotifyPeer = Updates;
	AccountGetNotifyExceptions(ctx context.Context, in *TLAccountGetNotifyExceptions, opts ...grpc.CallOption) (*Updates, error)
	// account.getWallPaper#fc8ddbea wallpaper:InputWallPaper = WallPaper;
	AccountGetWallPaper(ctx context.Context, in *TLAccountGetWallPaper, opts ...grpc.CallOption) (*WallPaper, error)
	// account.uploadWallPaper#dd853661 file:InputFile mime_type:string settings:WallPaperSettings = WallPaper;
	AccountUploadWallPaper(ctx context.Context, in *TLAccountUploadWallPaper, opts ...grpc.CallOption) (*WallPaper, error)
	// account.saveWallPaper#6c5a5b37 wallpaper:InputWallPaper unsave:Bool settings:WallPaperSettings = Bool;
	AccountSaveWallPaper(ctx context.Context, in *TLAccountSaveWallPaper, opts ...grpc.CallOption) (*Bool, error)
	// account.installWallPaper#feed5769 wallpaper:InputWallPaper settings:WallPaperSettings = Bool;
	AccountInstallWallPaper(ctx context.Context, in *TLAccountInstallWallPaper, opts ...grpc.CallOption) (*Bool, error)
	// account.resetWallPapers#bb3b9804 = Bool;
	AccountResetWallPapers(ctx context.Context, in *TLAccountResetWallPapers, opts ...grpc.CallOption) (*Bool, error)
	// account.getAutoDownloadSettings#56da0b3f = account.AutoDownloadSettings;
	AccountGetAutoDownloadSettings(ctx context.Context, in *TLAccountGetAutoDownloadSettings, opts ...grpc.CallOption) (*Account_AutoDownloadSettings, error)
	// account.saveAutoDownloadSettings#76f36233 flags:# low:flags.0?true high:flags.1?true settings:AutoDownloadSettings = Bool;
	AccountSaveAutoDownloadSettings(ctx context.Context, in *TLAccountSaveAutoDownloadSettings, opts ...grpc.CallOption) (*Bool, error)
	// account.uploadTheme#1c3db333 flags:# file:InputFile thumb:flags.0?InputFile file_name:string mime_type:string = Document;
	AccountUploadTheme(ctx context.Context, in *TLAccountUploadTheme, opts ...grpc.CallOption) (*Document, error)
	// account.createTheme#8432c21f flags:# slug:string title:string document:flags.2?InputDocument settings:flags.3?InputThemeSettings = Theme;
	AccountCreateTheme(ctx context.Context, in *TLAccountCreateTheme, opts ...grpc.CallOption) (*Theme, error)
	// account.updateTheme#5cb367d5 flags:# format:string theme:InputTheme slug:flags.0?string title:flags.1?string document:flags.2?InputDocument settings:flags.3?InputThemeSettings = Theme;
	AccountUpdateTheme(ctx context.Context, in *TLAccountUpdateTheme, opts ...grpc.CallOption) (*Theme, error)
	// account.saveTheme#f257106c theme:InputTheme unsave:Bool = Bool;
	AccountSaveTheme(ctx context.Context, in *TLAccountSaveTheme, opts ...grpc.CallOption) (*Bool, error)
	// account.installTheme#7ae43737 flags:# dark:flags.0?true format:flags.1?string theme:flags.1?InputTheme = Bool;
	AccountInstallTheme(ctx context.Context, in *TLAccountInstallTheme, opts ...grpc.CallOption) (*Bool, error)
	// account.getTheme#8d9d742b format:string theme:InputTheme document_id:long = Theme;
	AccountGetTheme(ctx context.Context, in *TLAccountGetTheme, opts ...grpc.CallOption) (*Theme, error)
	// account.getThemes#285946f8 format:string hash:int = account.Themes;
	AccountGetThemes(ctx context.Context, in *TLAccountGetThemes, opts ...grpc.CallOption) (*Account_Themes, error)
	// account.setContentSettings#b574b16b flags:# sensitive_enabled:flags.0?true = Bool;
	AccountSetContentSettings(ctx context.Context, in *TLAccountSetContentSettings, opts ...grpc.CallOption) (*Bool, error)
	// account.getContentSettings#8b9b4dae = account.ContentSettings;
	AccountGetContentSettings(ctx context.Context, in *TLAccountGetContentSettings, opts ...grpc.CallOption) (*Account_ContentSettings, error)
	// account.getMultiWallPapers#65ad71dc wallpapers:Vector<InputWallPaper> = Vector<WallPaper>;
	AccountGetMultiWallPapers(ctx context.Context, in *TLAccountGetMultiWallPapers, opts ...grpc.CallOption) (*Vector_WallPaper, error)
	// account.getGlobalPrivacySettings#eb2b4cf6 = GlobalPrivacySettings;
	AccountGetGlobalPrivacySettings(ctx context.Context, in *TLAccountGetGlobalPrivacySettings, opts ...grpc.CallOption) (*GlobalPrivacySettings, error)
	// account.setGlobalPrivacySettings#1edaaac2 settings:GlobalPrivacySettings = GlobalPrivacySettings;
	AccountSetGlobalPrivacySettings(ctx context.Context, in *TLAccountSetGlobalPrivacySettings, opts ...grpc.CallOption) (*GlobalPrivacySettings, error)
	// account.getWallPapers#c04cfac2 = Vector<WallPaper>;
	AccountGetWallPapersC04CFAC2(ctx context.Context, in *TLAccountGetWallPapersC04CFAC2, opts ...grpc.CallOption) (*Vector_WallPaper, error)
	// account.createPredefinedUser flags:# phone:string first_name:flags.0?string last_name:flags.1?string username:flags.2?string code:string verified:flags.3?bool = PredefinedUser;
	AccountCreatePredefinedUser(ctx context.Context, in *TLAccountCreatePredefinedUser, opts ...grpc.CallOption) (*PredefinedUser, error)
	// account.updatePredefinedUsername phone:string username:string = PredefinedUser;
	AccountUpdatePredefinedUsername(ctx context.Context, in *TLAccountUpdatePredefinedUsername, opts ...grpc.CallOption) (*PredefinedUser, error)
	// account.updatePredefinedProfile flags:# phone:string first_name:flags.0?string last_name:flags.1?string about:flags.2?string = PredefinedUser;
	AccountUpdatePredefinedProfile(ctx context.Context, in *TLAccountUpdatePredefinedProfile, opts ...grpc.CallOption) (*PredefinedUser, error)
	// account.updateVerified flags:# id:int verified:flags.0?bool = User;
	AccountUpdateVerified(ctx context.Context, in *TLAccountUpdateVerified, opts ...grpc.CallOption) (*User, error)
	// account.updatePredefinedVerified flags:# phone:string verified:flags.0?bool = PredefinedUser;
	AccountUpdatePredefinedVerified(ctx context.Context, in *TLAccountUpdatePredefinedVerified, opts ...grpc.CallOption) (*PredefinedUser, error)
	// account.updatePredefinedCode phone:string code:string = PredefinedUser;
	AccountUpdatePredefinedCode(ctx context.Context, in *TLAccountUpdatePredefinedCode, opts ...grpc.CallOption) (*PredefinedUser, error)
}

type rPCAccountClient struct {
	cc *grpc.ClientConn
}

func NewRPCAccountClient(cc *grpc.ClientConn) RPCAccountClient {
	return &rPCAccountClient{cc}
}

func (c *rPCAccountClient) AccountRegisterDevice(ctx context.Context, in *TLAccountRegisterDevice, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_registerDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUnregisterDevice(ctx context.Context, in *TLAccountUnregisterDevice, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_unregisterDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdateNotifySettings(ctx context.Context, in *TLAccountUpdateNotifySettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updateNotifySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetNotifySettings(ctx context.Context, in *TLAccountGetNotifySettings, opts ...grpc.CallOption) (*PeerNotifySettings, error) {
	out := new(PeerNotifySettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getNotifySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountResetNotifySettings(ctx context.Context, in *TLAccountResetNotifySettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_resetNotifySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdateProfile(ctx context.Context, in *TLAccountUpdateProfile, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updateProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdateStatus(ctx context.Context, in *TLAccountUpdateStatus, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetWallPapersAABB1763(ctx context.Context, in *TLAccountGetWallPapersAABB1763, opts ...grpc.CallOption) (*Account_WallPapers, error) {
	out := new(Account_WallPapers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getWallPapersAABB1763", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountReportPeer(ctx context.Context, in *TLAccountReportPeer, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_reportPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountCheckUsername(ctx context.Context, in *TLAccountCheckUsername, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_checkUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdateUsername(ctx context.Context, in *TLAccountUpdateUsername, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updateUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetPrivacy(ctx context.Context, in *TLAccountGetPrivacy, opts ...grpc.CallOption) (*Account_PrivacyRules, error) {
	out := new(Account_PrivacyRules)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getPrivacy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSetPrivacy(ctx context.Context, in *TLAccountSetPrivacy, opts ...grpc.CallOption) (*Account_PrivacyRules, error) {
	out := new(Account_PrivacyRules)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_setPrivacy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountDeleteAccount(ctx context.Context, in *TLAccountDeleteAccount, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_deleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetAccountTTL(ctx context.Context, in *TLAccountGetAccountTTL, opts ...grpc.CallOption) (*AccountDaysTTL, error) {
	out := new(AccountDaysTTL)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getAccountTTL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSetAccountTTL(ctx context.Context, in *TLAccountSetAccountTTL, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_setAccountTTL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSendChangePhoneCode(ctx context.Context, in *TLAccountSendChangePhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error) {
	out := new(Auth_SentCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_sendChangePhoneCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountChangePhone(ctx context.Context, in *TLAccountChangePhone, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_changePhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdateDeviceLocked(ctx context.Context, in *TLAccountUpdateDeviceLocked, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updateDeviceLocked", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetAuthorizations(ctx context.Context, in *TLAccountGetAuthorizations, opts ...grpc.CallOption) (*Account_Authorizations, error) {
	out := new(Account_Authorizations)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getAuthorizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountResetAuthorization(ctx context.Context, in *TLAccountResetAuthorization, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_resetAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetPassword(ctx context.Context, in *TLAccountGetPassword, opts ...grpc.CallOption) (*Account_Password, error) {
	out := new(Account_Password)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetPasswordSettings(ctx context.Context, in *TLAccountGetPasswordSettings, opts ...grpc.CallOption) (*Account_PasswordSettings, error) {
	out := new(Account_PasswordSettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getPasswordSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdatePasswordSettings(ctx context.Context, in *TLAccountUpdatePasswordSettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updatePasswordSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSendConfirmPhoneCode(ctx context.Context, in *TLAccountSendConfirmPhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error) {
	out := new(Auth_SentCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_sendConfirmPhoneCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountConfirmPhone(ctx context.Context, in *TLAccountConfirmPhone, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_confirmPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetTmpPassword(ctx context.Context, in *TLAccountGetTmpPassword, opts ...grpc.CallOption) (*Account_TmpPassword, error) {
	out := new(Account_TmpPassword)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getTmpPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetWebAuthorizations(ctx context.Context, in *TLAccountGetWebAuthorizations, opts ...grpc.CallOption) (*Account_WebAuthorizations, error) {
	out := new(Account_WebAuthorizations)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getWebAuthorizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountResetWebAuthorization(ctx context.Context, in *TLAccountResetWebAuthorization, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_resetWebAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountResetWebAuthorizations(ctx context.Context, in *TLAccountResetWebAuthorizations, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_resetWebAuthorizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetAllSecureValues(ctx context.Context, in *TLAccountGetAllSecureValues, opts ...grpc.CallOption) (*Vector_SecureValue, error) {
	out := new(Vector_SecureValue)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getAllSecureValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetSecureValue(ctx context.Context, in *TLAccountGetSecureValue, opts ...grpc.CallOption) (*Vector_SecureValue, error) {
	out := new(Vector_SecureValue)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getSecureValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSaveSecureValue(ctx context.Context, in *TLAccountSaveSecureValue, opts ...grpc.CallOption) (*SecureValue, error) {
	out := new(SecureValue)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_saveSecureValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountDeleteSecureValue(ctx context.Context, in *TLAccountDeleteSecureValue, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_deleteSecureValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetAuthorizationForm(ctx context.Context, in *TLAccountGetAuthorizationForm, opts ...grpc.CallOption) (*Account_AuthorizationForm, error) {
	out := new(Account_AuthorizationForm)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getAuthorizationForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountAcceptAuthorization(ctx context.Context, in *TLAccountAcceptAuthorization, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_acceptAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSendVerifyPhoneCode(ctx context.Context, in *TLAccountSendVerifyPhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error) {
	out := new(Auth_SentCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_sendVerifyPhoneCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountVerifyPhone(ctx context.Context, in *TLAccountVerifyPhone, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_verifyPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSendVerifyEmailCode(ctx context.Context, in *TLAccountSendVerifyEmailCode, opts ...grpc.CallOption) (*Account_SentEmailCode, error) {
	out := new(Account_SentEmailCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_sendVerifyEmailCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountVerifyEmail(ctx context.Context, in *TLAccountVerifyEmail, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_verifyEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountInitTakeoutSession(ctx context.Context, in *TLAccountInitTakeoutSession, opts ...grpc.CallOption) (*Account_Takeout, error) {
	out := new(Account_Takeout)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_initTakeoutSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountFinishTakeoutSession(ctx context.Context, in *TLAccountFinishTakeoutSession, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_finishTakeoutSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountConfirmPasswordEmail(ctx context.Context, in *TLAccountConfirmPasswordEmail, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_confirmPasswordEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountResendPasswordEmail(ctx context.Context, in *TLAccountResendPasswordEmail, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_resendPasswordEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountCancelPasswordEmail(ctx context.Context, in *TLAccountCancelPasswordEmail, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_cancelPasswordEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetContactSignUpNotification(ctx context.Context, in *TLAccountGetContactSignUpNotification, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getContactSignUpNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSetContactSignUpNotification(ctx context.Context, in *TLAccountSetContactSignUpNotification, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_setContactSignUpNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetNotifyExceptions(ctx context.Context, in *TLAccountGetNotifyExceptions, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getNotifyExceptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetWallPaper(ctx context.Context, in *TLAccountGetWallPaper, opts ...grpc.CallOption) (*WallPaper, error) {
	out := new(WallPaper)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getWallPaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUploadWallPaper(ctx context.Context, in *TLAccountUploadWallPaper, opts ...grpc.CallOption) (*WallPaper, error) {
	out := new(WallPaper)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_uploadWallPaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSaveWallPaper(ctx context.Context, in *TLAccountSaveWallPaper, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_saveWallPaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountInstallWallPaper(ctx context.Context, in *TLAccountInstallWallPaper, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_installWallPaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountResetWallPapers(ctx context.Context, in *TLAccountResetWallPapers, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_resetWallPapers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetAutoDownloadSettings(ctx context.Context, in *TLAccountGetAutoDownloadSettings, opts ...grpc.CallOption) (*Account_AutoDownloadSettings, error) {
	out := new(Account_AutoDownloadSettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getAutoDownloadSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSaveAutoDownloadSettings(ctx context.Context, in *TLAccountSaveAutoDownloadSettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_saveAutoDownloadSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUploadTheme(ctx context.Context, in *TLAccountUploadTheme, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_uploadTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountCreateTheme(ctx context.Context, in *TLAccountCreateTheme, opts ...grpc.CallOption) (*Theme, error) {
	out := new(Theme)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_createTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdateTheme(ctx context.Context, in *TLAccountUpdateTheme, opts ...grpc.CallOption) (*Theme, error) {
	out := new(Theme)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updateTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSaveTheme(ctx context.Context, in *TLAccountSaveTheme, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_saveTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountInstallTheme(ctx context.Context, in *TLAccountInstallTheme, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_installTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetTheme(ctx context.Context, in *TLAccountGetTheme, opts ...grpc.CallOption) (*Theme, error) {
	out := new(Theme)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetThemes(ctx context.Context, in *TLAccountGetThemes, opts ...grpc.CallOption) (*Account_Themes, error) {
	out := new(Account_Themes)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getThemes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSetContentSettings(ctx context.Context, in *TLAccountSetContentSettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_setContentSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetContentSettings(ctx context.Context, in *TLAccountGetContentSettings, opts ...grpc.CallOption) (*Account_ContentSettings, error) {
	out := new(Account_ContentSettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getContentSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetMultiWallPapers(ctx context.Context, in *TLAccountGetMultiWallPapers, opts ...grpc.CallOption) (*Vector_WallPaper, error) {
	out := new(Vector_WallPaper)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getMultiWallPapers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetGlobalPrivacySettings(ctx context.Context, in *TLAccountGetGlobalPrivacySettings, opts ...grpc.CallOption) (*GlobalPrivacySettings, error) {
	out := new(GlobalPrivacySettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getGlobalPrivacySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSetGlobalPrivacySettings(ctx context.Context, in *TLAccountSetGlobalPrivacySettings, opts ...grpc.CallOption) (*GlobalPrivacySettings, error) {
	out := new(GlobalPrivacySettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_setGlobalPrivacySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetWallPapersC04CFAC2(ctx context.Context, in *TLAccountGetWallPapersC04CFAC2, opts ...grpc.CallOption) (*Vector_WallPaper, error) {
	out := new(Vector_WallPaper)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getWallPapersC04CFAC2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountCreatePredefinedUser(ctx context.Context, in *TLAccountCreatePredefinedUser, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_createPredefinedUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdatePredefinedUsername(ctx context.Context, in *TLAccountUpdatePredefinedUsername, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updatePredefinedUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdatePredefinedProfile(ctx context.Context, in *TLAccountUpdatePredefinedProfile, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updatePredefinedProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdateVerified(ctx context.Context, in *TLAccountUpdateVerified, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updateVerified", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdatePredefinedVerified(ctx context.Context, in *TLAccountUpdatePredefinedVerified, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updatePredefinedVerified", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdatePredefinedCode(ctx context.Context, in *TLAccountUpdatePredefinedCode, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updatePredefinedCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCAccountServer is the server API for RPCAccount service.
type RPCAccountServer interface {
	// account.registerDevice#68976c6f flags:# no_muted:flags.0?true token_type:int token:string app_sandbox:Bool secret:bytes other_uids:Vector<int> = Bool;
	AccountRegisterDevice(context.Context, *TLAccountRegisterDevice) (*Bool, error)
	// account.unregisterDevice#3076c4bf token_type:int token:string other_uids:Vector<int> = Bool;
	AccountUnregisterDevice(context.Context, *TLAccountUnregisterDevice) (*Bool, error)
	// account.updateNotifySettings#84be5b93 peer:InputNotifyPeer settings:InputPeerNotifySettings = Bool;
	AccountUpdateNotifySettings(context.Context, *TLAccountUpdateNotifySettings) (*Bool, error)
	// account.getNotifySettings#12b3ad31 peer:InputNotifyPeer = PeerNotifySettings;
	AccountGetNotifySettings(context.Context, *TLAccountGetNotifySettings) (*PeerNotifySettings, error)
	// account.resetNotifySettings#db7e1747 = Bool;
	AccountResetNotifySettings(context.Context, *TLAccountResetNotifySettings) (*Bool, error)
	// account.updateProfile#78515775 flags:# first_name:flags.0?string last_name:flags.1?string about:flags.2?string = User;
	AccountUpdateProfile(context.Context, *TLAccountUpdateProfile) (*User, error)
	// account.updateStatus#6628562c offline:Bool = Bool;
	AccountUpdateStatus(context.Context, *TLAccountUpdateStatus) (*Bool, error)
	// account.getWallPapers#aabb1763 hash:int = account.WallPapers;
	AccountGetWallPapersAABB1763(context.Context, *TLAccountGetWallPapersAABB1763) (*Account_WallPapers, error)
	// account.reportPeer#ae189d5f peer:InputPeer reason:ReportReason = Bool;
	AccountReportPeer(context.Context, *TLAccountReportPeer) (*Bool, error)
	// account.checkUsername#2714d86c username:string = Bool;
	AccountCheckUsername(context.Context, *TLAccountCheckUsername) (*Bool, error)
	// account.updateUsername#3e0bdd7c username:string = User;
	AccountUpdateUsername(context.Context, *TLAccountUpdateUsername) (*User, error)
	// account.getPrivacy#dadbc950 key:InputPrivacyKey = account.PrivacyRules;
	AccountGetPrivacy(context.Context, *TLAccountGetPrivacy) (*Account_PrivacyRules, error)
	// account.setPrivacy#c9f81ce8 key:InputPrivacyKey rules:Vector<InputPrivacyRule> = account.PrivacyRules;
	AccountSetPrivacy(context.Context, *TLAccountSetPrivacy) (*Account_PrivacyRules, error)
	// account.deleteAccount#418d4e0b reason:string = Bool;
	AccountDeleteAccount(context.Context, *TLAccountDeleteAccount) (*Bool, error)
	// account.getAccountTTL#8fc711d = AccountDaysTTL;
	AccountGetAccountTTL(context.Context, *TLAccountGetAccountTTL) (*AccountDaysTTL, error)
	// account.setAccountTTL#2442485e ttl:AccountDaysTTL = Bool;
	AccountSetAccountTTL(context.Context, *TLAccountSetAccountTTL) (*Bool, error)
	// account.sendChangePhoneCode#82574ae5 phone_number:string settings:CodeSettings = auth.SentCode;
	AccountSendChangePhoneCode(context.Context, *TLAccountSendChangePhoneCode) (*Auth_SentCode, error)
	// account.changePhone#70c32edb phone_number:string phone_code_hash:string phone_code:string = User;
	AccountChangePhone(context.Context, *TLAccountChangePhone) (*User, error)
	// account.updateDeviceLocked#38df3532 period:int = Bool;
	AccountUpdateDeviceLocked(context.Context, *TLAccountUpdateDeviceLocked) (*Bool, error)
	// account.getAuthorizations#e320c158 = account.Authorizations;
	AccountGetAuthorizations(context.Context, *TLAccountGetAuthorizations) (*Account_Authorizations, error)
	// account.resetAuthorization#df77f3bc hash:long = Bool;
	AccountResetAuthorization(context.Context, *TLAccountResetAuthorization) (*Bool, error)
	// account.getPassword#548a30f5 = account.Password;
	AccountGetPassword(context.Context, *TLAccountGetPassword) (*Account_Password, error)
	// account.getPasswordSettings#9cd4eaf9 password:InputCheckPasswordSRP = account.PasswordSettings;
	AccountGetPasswordSettings(context.Context, *TLAccountGetPasswordSettings) (*Account_PasswordSettings, error)
	// account.updatePasswordSettings#a59b102f password:InputCheckPasswordSRP new_settings:account.PasswordInputSettings = Bool;
	AccountUpdatePasswordSettings(context.Context, *TLAccountUpdatePasswordSettings) (*Bool, error)
	// account.sendConfirmPhoneCode#1b3faa88 hash:string settings:CodeSettings = auth.SentCode;
	AccountSendConfirmPhoneCode(context.Context, *TLAccountSendConfirmPhoneCode) (*Auth_SentCode, error)
	// account.confirmPhone#5f2178c3 phone_code_hash:string phone_code:string = Bool;
	AccountConfirmPhone(context.Context, *TLAccountConfirmPhone) (*Bool, error)
	// account.getTmpPassword#449e0b51 password:InputCheckPasswordSRP period:int = account.TmpPassword;
	AccountGetTmpPassword(context.Context, *TLAccountGetTmpPassword) (*Account_TmpPassword, error)
	// account.getWebAuthorizations#182e6d6f = account.WebAuthorizations;
	AccountGetWebAuthorizations(context.Context, *TLAccountGetWebAuthorizations) (*Account_WebAuthorizations, error)
	// account.resetWebAuthorization#2d01b9ef hash:long = Bool;
	AccountResetWebAuthorization(context.Context, *TLAccountResetWebAuthorization) (*Bool, error)
	// account.resetWebAuthorizations#682d2594 = Bool;
	AccountResetWebAuthorizations(context.Context, *TLAccountResetWebAuthorizations) (*Bool, error)
	// account.getAllSecureValues#b288bc7d = Vector<SecureValue>;
	AccountGetAllSecureValues(context.Context, *TLAccountGetAllSecureValues) (*Vector_SecureValue, error)
	// account.getSecureValue#73665bc2 types:Vector<SecureValueType> = Vector<SecureValue>;
	AccountGetSecureValue(context.Context, *TLAccountGetSecureValue) (*Vector_SecureValue, error)
	// account.saveSecureValue#899fe31d value:InputSecureValue secure_secret_id:long = SecureValue;
	AccountSaveSecureValue(context.Context, *TLAccountSaveSecureValue) (*SecureValue, error)
	// account.deleteSecureValue#b880bc4b types:Vector<SecureValueType> = Bool;
	AccountDeleteSecureValue(context.Context, *TLAccountDeleteSecureValue) (*Bool, error)
	// account.getAuthorizationForm#b86ba8e1 bot_id:int scope:string public_key:string = account.AuthorizationForm;
	AccountGetAuthorizationForm(context.Context, *TLAccountGetAuthorizationForm) (*Account_AuthorizationForm, error)
	// account.acceptAuthorization#e7027c94 bot_id:int scope:string public_key:string value_hashes:Vector<SecureValueHash> credentials:SecureCredentialsEncrypted = Bool;
	AccountAcceptAuthorization(context.Context, *TLAccountAcceptAuthorization) (*Bool, error)
	// account.sendVerifyPhoneCode#a5a356f9 phone_number:string settings:CodeSettings = auth.SentCode;
	AccountSendVerifyPhoneCode(context.Context, *TLAccountSendVerifyPhoneCode) (*Auth_SentCode, error)
	// account.verifyPhone#4dd3a7f6 phone_number:string phone_code_hash:string phone_code:string = Bool;
	AccountVerifyPhone(context.Context, *TLAccountVerifyPhone) (*Bool, error)
	// account.sendVerifyEmailCode#7011509f email:string = account.SentEmailCode;
	AccountSendVerifyEmailCode(context.Context, *TLAccountSendVerifyEmailCode) (*Account_SentEmailCode, error)
	// account.verifyEmail#ecba39db email:string code:string = Bool;
	AccountVerifyEmail(context.Context, *TLAccountVerifyEmail) (*Bool, error)
	// account.initTakeoutSession#f05b4804 flags:# contacts:flags.0?true message_users:flags.1?true message_chats:flags.2?true message_megagroups:flags.3?true message_channels:flags.4?true files:flags.5?true file_max_size:flags.5?int = account.Takeout;
	AccountInitTakeoutSession(context.Context, *TLAccountInitTakeoutSession) (*Account_Takeout, error)
	// account.finishTakeoutSession#1d2652ee flags:# success:flags.0?true = Bool;
	AccountFinishTakeoutSession(context.Context, *TLAccountFinishTakeoutSession) (*Bool, error)
	// account.confirmPasswordEmail#8fdf1920 code:string = Bool;
	AccountConfirmPasswordEmail(context.Context, *TLAccountConfirmPasswordEmail) (*Bool, error)
	// account.resendPasswordEmail#7a7f2a15 = Bool;
	AccountResendPasswordEmail(context.Context, *TLAccountResendPasswordEmail) (*Bool, error)
	// account.cancelPasswordEmail#c1cbd5b6 = Bool;
	AccountCancelPasswordEmail(context.Context, *TLAccountCancelPasswordEmail) (*Bool, error)
	// account.getContactSignUpNotification#9f07c728 = Bool;
	AccountGetContactSignUpNotification(context.Context, *TLAccountGetContactSignUpNotification) (*Bool, error)
	// account.setContactSignUpNotification#cff43f61 silent:Bool = Bool;
	AccountSetContactSignUpNotification(context.Context, *TLAccountSetContactSignUpNotification) (*Bool, error)
	// account.getNotifyExceptions#53577479 flags:# compare_sound:flags.1?true peer:flags.0?InputNotifyPeer = Updates;
	AccountGetNotifyExceptions(context.Context, *TLAccountGetNotifyExceptions) (*Updates, error)
	// account.getWallPaper#fc8ddbea wallpaper:InputWallPaper = WallPaper;
	AccountGetWallPaper(context.Context, *TLAccountGetWallPaper) (*WallPaper, error)
	// account.uploadWallPaper#dd853661 file:InputFile mime_type:string settings:WallPaperSettings = WallPaper;
	AccountUploadWallPaper(context.Context, *TLAccountUploadWallPaper) (*WallPaper, error)
	// account.saveWallPaper#6c5a5b37 wallpaper:InputWallPaper unsave:Bool settings:WallPaperSettings = Bool;
	AccountSaveWallPaper(context.Context, *TLAccountSaveWallPaper) (*Bool, error)
	// account.installWallPaper#feed5769 wallpaper:InputWallPaper settings:WallPaperSettings = Bool;
	AccountInstallWallPaper(context.Context, *TLAccountInstallWallPaper) (*Bool, error)
	// account.resetWallPapers#bb3b9804 = Bool;
	AccountResetWallPapers(context.Context, *TLAccountResetWallPapers) (*Bool, error)
	// account.getAutoDownloadSettings#56da0b3f = account.AutoDownloadSettings;
	AccountGetAutoDownloadSettings(context.Context, *TLAccountGetAutoDownloadSettings) (*Account_AutoDownloadSettings, error)
	// account.saveAutoDownloadSettings#76f36233 flags:# low:flags.0?true high:flags.1?true settings:AutoDownloadSettings = Bool;
	AccountSaveAutoDownloadSettings(context.Context, *TLAccountSaveAutoDownloadSettings) (*Bool, error)
	// account.uploadTheme#1c3db333 flags:# file:InputFile thumb:flags.0?InputFile file_name:string mime_type:string = Document;
	AccountUploadTheme(context.Context, *TLAccountUploadTheme) (*Document, error)
	// account.createTheme#8432c21f flags:# slug:string title:string document:flags.2?InputDocument settings:flags.3?InputThemeSettings = Theme;
	AccountCreateTheme(context.Context, *TLAccountCreateTheme) (*Theme, error)
	// account.updateTheme#5cb367d5 flags:# format:string theme:InputTheme slug:flags.0?string title:flags.1?string document:flags.2?InputDocument settings:flags.3?InputThemeSettings = Theme;
	AccountUpdateTheme(context.Context, *TLAccountUpdateTheme) (*Theme, error)
	// account.saveTheme#f257106c theme:InputTheme unsave:Bool = Bool;
	AccountSaveTheme(context.Context, *TLAccountSaveTheme) (*Bool, error)
	// account.installTheme#7ae43737 flags:# dark:flags.0?true format:flags.1?string theme:flags.1?InputTheme = Bool;
	AccountInstallTheme(context.Context, *TLAccountInstallTheme) (*Bool, error)
	// account.getTheme#8d9d742b format:string theme:InputTheme document_id:long = Theme;
	AccountGetTheme(context.Context, *TLAccountGetTheme) (*Theme, error)
	// account.getThemes#285946f8 format:string hash:int = account.Themes;
	AccountGetThemes(context.Context, *TLAccountGetThemes) (*Account_Themes, error)
	// account.setContentSettings#b574b16b flags:# sensitive_enabled:flags.0?true = Bool;
	AccountSetContentSettings(context.Context, *TLAccountSetContentSettings) (*Bool, error)
	// account.getContentSettings#8b9b4dae = account.ContentSettings;
	AccountGetContentSettings(context.Context, *TLAccountGetContentSettings) (*Account_ContentSettings, error)
	// account.getMultiWallPapers#65ad71dc wallpapers:Vector<InputWallPaper> = Vector<WallPaper>;
	AccountGetMultiWallPapers(context.Context, *TLAccountGetMultiWallPapers) (*Vector_WallPaper, error)
	// account.getGlobalPrivacySettings#eb2b4cf6 = GlobalPrivacySettings;
	AccountGetGlobalPrivacySettings(context.Context, *TLAccountGetGlobalPrivacySettings) (*GlobalPrivacySettings, error)
	// account.setGlobalPrivacySettings#1edaaac2 settings:GlobalPrivacySettings = GlobalPrivacySettings;
	AccountSetGlobalPrivacySettings(context.Context, *TLAccountSetGlobalPrivacySettings) (*GlobalPrivacySettings, error)
	// account.getWallPapers#c04cfac2 = Vector<WallPaper>;
	AccountGetWallPapersC04CFAC2(context.Context, *TLAccountGetWallPapersC04CFAC2) (*Vector_WallPaper, error)
	// account.createPredefinedUser flags:# phone:string first_name:flags.0?string last_name:flags.1?string username:flags.2?string code:string verified:flags.3?bool = PredefinedUser;
	AccountCreatePredefinedUser(context.Context, *TLAccountCreatePredefinedUser) (*PredefinedUser, error)
	// account.updatePredefinedUsername phone:string username:string = PredefinedUser;
	AccountUpdatePredefinedUsername(context.Context, *TLAccountUpdatePredefinedUsername) (*PredefinedUser, error)
	// account.updatePredefinedProfile flags:# phone:string first_name:flags.0?string last_name:flags.1?string about:flags.2?string = PredefinedUser;
	AccountUpdatePredefinedProfile(context.Context, *TLAccountUpdatePredefinedProfile) (*PredefinedUser, error)
	// account.updateVerified flags:# id:int verified:flags.0?bool = User;
	AccountUpdateVerified(context.Context, *TLAccountUpdateVerified) (*User, error)
	// account.updatePredefinedVerified flags:# phone:string verified:flags.0?bool = PredefinedUser;
	AccountUpdatePredefinedVerified(context.Context, *TLAccountUpdatePredefinedVerified) (*PredefinedUser, error)
	// account.updatePredefinedCode phone:string code:string = PredefinedUser;
	AccountUpdatePredefinedCode(context.Context, *TLAccountUpdatePredefinedCode) (*PredefinedUser, error)
}

func RegisterRPCAccountServer(s *grpc.Server, srv RPCAccountServer) {
	s.RegisterService(&_RPCAccount_serviceDesc, srv)
}

func _RPCAccount_AccountRegisterDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountRegisterDevice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountRegisterDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountRegisterDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountRegisterDevice(ctx, req.(*TLAccountRegisterDevice))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUnregisterDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUnregisterDevice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUnregisterDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUnregisterDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUnregisterDevice(ctx, req.(*TLAccountUnregisterDevice))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdateNotifySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateNotifySettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdateNotifySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdateNotifySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdateNotifySettings(ctx, req.(*TLAccountUpdateNotifySettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetNotifySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetNotifySettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetNotifySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetNotifySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetNotifySettings(ctx, req.(*TLAccountGetNotifySettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountResetNotifySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetNotifySettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountResetNotifySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountResetNotifySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountResetNotifySettings(ctx, req.(*TLAccountResetNotifySettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdateProfile(ctx, req.(*TLAccountUpdateProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdateStatus(ctx, req.(*TLAccountUpdateStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetWallPapersAABB1763_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetWallPapersAABB1763)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetWallPapersAABB1763(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetWallPapersAABB1763",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetWallPapersAABB1763(ctx, req.(*TLAccountGetWallPapersAABB1763))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountReportPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountReportPeer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountReportPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountReportPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountReportPeer(ctx, req.(*TLAccountReportPeer))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountCheckUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountCheckUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountCheckUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountCheckUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountCheckUsername(ctx, req.(*TLAccountCheckUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdateUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdateUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdateUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdateUsername(ctx, req.(*TLAccountUpdateUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetPrivacy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetPrivacy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetPrivacy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetPrivacy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetPrivacy(ctx, req.(*TLAccountGetPrivacy))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSetPrivacy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetPrivacy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSetPrivacy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSetPrivacy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSetPrivacy(ctx, req.(*TLAccountSetPrivacy))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountDeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountDeleteAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountDeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountDeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountDeleteAccount(ctx, req.(*TLAccountDeleteAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetAccountTTL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetAccountTTL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetAccountTTL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetAccountTTL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetAccountTTL(ctx, req.(*TLAccountGetAccountTTL))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSetAccountTTL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetAccountTTL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSetAccountTTL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSetAccountTTL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSetAccountTTL(ctx, req.(*TLAccountSetAccountTTL))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSendChangePhoneCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSendChangePhoneCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSendChangePhoneCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSendChangePhoneCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSendChangePhoneCode(ctx, req.(*TLAccountSendChangePhoneCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountChangePhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountChangePhone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountChangePhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountChangePhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountChangePhone(ctx, req.(*TLAccountChangePhone))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdateDeviceLocked_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateDeviceLocked)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdateDeviceLocked(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdateDeviceLocked",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdateDeviceLocked(ctx, req.(*TLAccountUpdateDeviceLocked))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetAuthorizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetAuthorizations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetAuthorizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetAuthorizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetAuthorizations(ctx, req.(*TLAccountGetAuthorizations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountResetAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountResetAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountResetAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountResetAuthorization(ctx, req.(*TLAccountResetAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetPassword(ctx, req.(*TLAccountGetPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetPasswordSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetPasswordSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetPasswordSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetPasswordSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetPasswordSettings(ctx, req.(*TLAccountGetPasswordSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdatePasswordSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdatePasswordSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdatePasswordSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdatePasswordSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdatePasswordSettings(ctx, req.(*TLAccountUpdatePasswordSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSendConfirmPhoneCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSendConfirmPhoneCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSendConfirmPhoneCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSendConfirmPhoneCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSendConfirmPhoneCode(ctx, req.(*TLAccountSendConfirmPhoneCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountConfirmPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountConfirmPhone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountConfirmPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountConfirmPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountConfirmPhone(ctx, req.(*TLAccountConfirmPhone))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetTmpPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetTmpPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetTmpPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetTmpPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetTmpPassword(ctx, req.(*TLAccountGetTmpPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetWebAuthorizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetWebAuthorizations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetWebAuthorizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetWebAuthorizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetWebAuthorizations(ctx, req.(*TLAccountGetWebAuthorizations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountResetWebAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetWebAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountResetWebAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountResetWebAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountResetWebAuthorization(ctx, req.(*TLAccountResetWebAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountResetWebAuthorizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetWebAuthorizations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountResetWebAuthorizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountResetWebAuthorizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountResetWebAuthorizations(ctx, req.(*TLAccountResetWebAuthorizations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetAllSecureValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetAllSecureValues)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetAllSecureValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetAllSecureValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetAllSecureValues(ctx, req.(*TLAccountGetAllSecureValues))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetSecureValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetSecureValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetSecureValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetSecureValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetSecureValue(ctx, req.(*TLAccountGetSecureValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSaveSecureValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSaveSecureValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSaveSecureValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSaveSecureValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSaveSecureValue(ctx, req.(*TLAccountSaveSecureValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountDeleteSecureValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountDeleteSecureValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountDeleteSecureValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountDeleteSecureValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountDeleteSecureValue(ctx, req.(*TLAccountDeleteSecureValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetAuthorizationForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetAuthorizationForm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetAuthorizationForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetAuthorizationForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetAuthorizationForm(ctx, req.(*TLAccountGetAuthorizationForm))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountAcceptAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountAcceptAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountAcceptAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountAcceptAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountAcceptAuthorization(ctx, req.(*TLAccountAcceptAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSendVerifyPhoneCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSendVerifyPhoneCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSendVerifyPhoneCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSendVerifyPhoneCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSendVerifyPhoneCode(ctx, req.(*TLAccountSendVerifyPhoneCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountVerifyPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountVerifyPhone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountVerifyPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountVerifyPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountVerifyPhone(ctx, req.(*TLAccountVerifyPhone))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSendVerifyEmailCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSendVerifyEmailCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSendVerifyEmailCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSendVerifyEmailCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSendVerifyEmailCode(ctx, req.(*TLAccountSendVerifyEmailCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountVerifyEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountVerifyEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountVerifyEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountVerifyEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountVerifyEmail(ctx, req.(*TLAccountVerifyEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountInitTakeoutSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountInitTakeoutSession)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountInitTakeoutSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountInitTakeoutSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountInitTakeoutSession(ctx, req.(*TLAccountInitTakeoutSession))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountFinishTakeoutSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountFinishTakeoutSession)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountFinishTakeoutSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountFinishTakeoutSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountFinishTakeoutSession(ctx, req.(*TLAccountFinishTakeoutSession))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountConfirmPasswordEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountConfirmPasswordEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountConfirmPasswordEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountConfirmPasswordEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountConfirmPasswordEmail(ctx, req.(*TLAccountConfirmPasswordEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountResendPasswordEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResendPasswordEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountResendPasswordEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountResendPasswordEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountResendPasswordEmail(ctx, req.(*TLAccountResendPasswordEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountCancelPasswordEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountCancelPasswordEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountCancelPasswordEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountCancelPasswordEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountCancelPasswordEmail(ctx, req.(*TLAccountCancelPasswordEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetContactSignUpNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetContactSignUpNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetContactSignUpNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetContactSignUpNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetContactSignUpNotification(ctx, req.(*TLAccountGetContactSignUpNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSetContactSignUpNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetContactSignUpNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSetContactSignUpNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSetContactSignUpNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSetContactSignUpNotification(ctx, req.(*TLAccountSetContactSignUpNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetNotifyExceptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetNotifyExceptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetNotifyExceptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetNotifyExceptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetNotifyExceptions(ctx, req.(*TLAccountGetNotifyExceptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetWallPaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetWallPaper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetWallPaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetWallPaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetWallPaper(ctx, req.(*TLAccountGetWallPaper))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUploadWallPaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUploadWallPaper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUploadWallPaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUploadWallPaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUploadWallPaper(ctx, req.(*TLAccountUploadWallPaper))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSaveWallPaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSaveWallPaper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSaveWallPaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSaveWallPaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSaveWallPaper(ctx, req.(*TLAccountSaveWallPaper))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountInstallWallPaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountInstallWallPaper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountInstallWallPaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountInstallWallPaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountInstallWallPaper(ctx, req.(*TLAccountInstallWallPaper))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountResetWallPapers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetWallPapers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountResetWallPapers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountResetWallPapers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountResetWallPapers(ctx, req.(*TLAccountResetWallPapers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetAutoDownloadSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetAutoDownloadSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetAutoDownloadSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetAutoDownloadSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetAutoDownloadSettings(ctx, req.(*TLAccountGetAutoDownloadSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSaveAutoDownloadSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSaveAutoDownloadSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSaveAutoDownloadSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSaveAutoDownloadSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSaveAutoDownloadSettings(ctx, req.(*TLAccountSaveAutoDownloadSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUploadTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUploadTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUploadTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUploadTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUploadTheme(ctx, req.(*TLAccountUploadTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountCreateTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountCreateTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountCreateTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountCreateTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountCreateTheme(ctx, req.(*TLAccountCreateTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdateTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdateTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdateTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdateTheme(ctx, req.(*TLAccountUpdateTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSaveTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSaveTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSaveTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSaveTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSaveTheme(ctx, req.(*TLAccountSaveTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountInstallTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountInstallTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountInstallTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountInstallTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountInstallTheme(ctx, req.(*TLAccountInstallTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetTheme(ctx, req.(*TLAccountGetTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetThemes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetThemes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetThemes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetThemes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetThemes(ctx, req.(*TLAccountGetThemes))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSetContentSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetContentSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSetContentSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSetContentSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSetContentSettings(ctx, req.(*TLAccountSetContentSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetContentSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetContentSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetContentSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetContentSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetContentSettings(ctx, req.(*TLAccountGetContentSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetMultiWallPapers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetMultiWallPapers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetMultiWallPapers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetMultiWallPapers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetMultiWallPapers(ctx, req.(*TLAccountGetMultiWallPapers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetGlobalPrivacySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetGlobalPrivacySettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetGlobalPrivacySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetGlobalPrivacySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetGlobalPrivacySettings(ctx, req.(*TLAccountGetGlobalPrivacySettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSetGlobalPrivacySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetGlobalPrivacySettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSetGlobalPrivacySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSetGlobalPrivacySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSetGlobalPrivacySettings(ctx, req.(*TLAccountSetGlobalPrivacySettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetWallPapersC04CFAC2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetWallPapersC04CFAC2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetWallPapersC04CFAC2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetWallPapersC04CFAC2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetWallPapersC04CFAC2(ctx, req.(*TLAccountGetWallPapersC04CFAC2))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountCreatePredefinedUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountCreatePredefinedUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountCreatePredefinedUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountCreatePredefinedUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountCreatePredefinedUser(ctx, req.(*TLAccountCreatePredefinedUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdatePredefinedUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdatePredefinedUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdatePredefinedUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdatePredefinedUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdatePredefinedUsername(ctx, req.(*TLAccountUpdatePredefinedUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdatePredefinedProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdatePredefinedProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdatePredefinedProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdatePredefinedProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdatePredefinedProfile(ctx, req.(*TLAccountUpdatePredefinedProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdateVerified_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateVerified)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdateVerified(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdateVerified",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdateVerified(ctx, req.(*TLAccountUpdateVerified))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdatePredefinedVerified_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdatePredefinedVerified)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdatePredefinedVerified(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdatePredefinedVerified",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdatePredefinedVerified(ctx, req.(*TLAccountUpdatePredefinedVerified))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdatePredefinedCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdatePredefinedCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdatePredefinedCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdatePredefinedCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdatePredefinedCode(ctx, req.(*TLAccountUpdatePredefinedCode))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCAccount_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCAccount",
	HandlerType: (*RPCAccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_registerDevice",
			Handler:    _RPCAccount_AccountRegisterDevice_Handler,
		},
		{
			MethodName: "account_unregisterDevice",
			Handler:    _RPCAccount_AccountUnregisterDevice_Handler,
		},
		{
			MethodName: "account_updateNotifySettings",
			Handler:    _RPCAccount_AccountUpdateNotifySettings_Handler,
		},
		{
			MethodName: "account_getNotifySettings",
			Handler:    _RPCAccount_AccountGetNotifySettings_Handler,
		},
		{
			MethodName: "account_resetNotifySettings",
			Handler:    _RPCAccount_AccountResetNotifySettings_Handler,
		},
		{
			MethodName: "account_updateProfile",
			Handler:    _RPCAccount_AccountUpdateProfile_Handler,
		},
		{
			MethodName: "account_updateStatus",
			Handler:    _RPCAccount_AccountUpdateStatus_Handler,
		},
		{
			MethodName: "account_getWallPapersAABB1763",
			Handler:    _RPCAccount_AccountGetWallPapersAABB1763_Handler,
		},
		{
			MethodName: "account_reportPeer",
			Handler:    _RPCAccount_AccountReportPeer_Handler,
		},
		{
			MethodName: "account_checkUsername",
			Handler:    _RPCAccount_AccountCheckUsername_Handler,
		},
		{
			MethodName: "account_updateUsername",
			Handler:    _RPCAccount_AccountUpdateUsername_Handler,
		},
		{
			MethodName: "account_getPrivacy",
			Handler:    _RPCAccount_AccountGetPrivacy_Handler,
		},
		{
			MethodName: "account_setPrivacy",
			Handler:    _RPCAccount_AccountSetPrivacy_Handler,
		},
		{
			MethodName: "account_deleteAccount",
			Handler:    _RPCAccount_AccountDeleteAccount_Handler,
		},
		{
			MethodName: "account_getAccountTTL",
			Handler:    _RPCAccount_AccountGetAccountTTL_Handler,
		},
		{
			MethodName: "account_setAccountTTL",
			Handler:    _RPCAccount_AccountSetAccountTTL_Handler,
		},
		{
			MethodName: "account_sendChangePhoneCode",
			Handler:    _RPCAccount_AccountSendChangePhoneCode_Handler,
		},
		{
			MethodName: "account_changePhone",
			Handler:    _RPCAccount_AccountChangePhone_Handler,
		},
		{
			MethodName: "account_updateDeviceLocked",
			Handler:    _RPCAccount_AccountUpdateDeviceLocked_Handler,
		},
		{
			MethodName: "account_getAuthorizations",
			Handler:    _RPCAccount_AccountGetAuthorizations_Handler,
		},
		{
			MethodName: "account_resetAuthorization",
			Handler:    _RPCAccount_AccountResetAuthorization_Handler,
		},
		{
			MethodName: "account_getPassword",
			Handler:    _RPCAccount_AccountGetPassword_Handler,
		},
		{
			MethodName: "account_getPasswordSettings",
			Handler:    _RPCAccount_AccountGetPasswordSettings_Handler,
		},
		{
			MethodName: "account_updatePasswordSettings",
			Handler:    _RPCAccount_AccountUpdatePasswordSettings_Handler,
		},
		{
			MethodName: "account_sendConfirmPhoneCode",
			Handler:    _RPCAccount_AccountSendConfirmPhoneCode_Handler,
		},
		{
			MethodName: "account_confirmPhone",
			Handler:    _RPCAccount_AccountConfirmPhone_Handler,
		},
		{
			MethodName: "account_getTmpPassword",
			Handler:    _RPCAccount_AccountGetTmpPassword_Handler,
		},
		{
			MethodName: "account_getWebAuthorizations",
			Handler:    _RPCAccount_AccountGetWebAuthorizations_Handler,
		},
		{
			MethodName: "account_resetWebAuthorization",
			Handler:    _RPCAccount_AccountResetWebAuthorization_Handler,
		},
		{
			MethodName: "account_resetWebAuthorizations",
			Handler:    _RPCAccount_AccountResetWebAuthorizations_Handler,
		},
		{
			MethodName: "account_getAllSecureValues",
			Handler:    _RPCAccount_AccountGetAllSecureValues_Handler,
		},
		{
			MethodName: "account_getSecureValue",
			Handler:    _RPCAccount_AccountGetSecureValue_Handler,
		},
		{
			MethodName: "account_saveSecureValue",
			Handler:    _RPCAccount_AccountSaveSecureValue_Handler,
		},
		{
			MethodName: "account_deleteSecureValue",
			Handler:    _RPCAccount_AccountDeleteSecureValue_Handler,
		},
		{
			MethodName: "account_getAuthorizationForm",
			Handler:    _RPCAccount_AccountGetAuthorizationForm_Handler,
		},
		{
			MethodName: "account_acceptAuthorization",
			Handler:    _RPCAccount_AccountAcceptAuthorization_Handler,
		},
		{
			MethodName: "account_sendVerifyPhoneCode",
			Handler:    _RPCAccount_AccountSendVerifyPhoneCode_Handler,
		},
		{
			MethodName: "account_verifyPhone",
			Handler:    _RPCAccount_AccountVerifyPhone_Handler,
		},
		{
			MethodName: "account_sendVerifyEmailCode",
			Handler:    _RPCAccount_AccountSendVerifyEmailCode_Handler,
		},
		{
			MethodName: "account_verifyEmail",
			Handler:    _RPCAccount_AccountVerifyEmail_Handler,
		},
		{
			MethodName: "account_initTakeoutSession",
			Handler:    _RPCAccount_AccountInitTakeoutSession_Handler,
		},
		{
			MethodName: "account_finishTakeoutSession",
			Handler:    _RPCAccount_AccountFinishTakeoutSession_Handler,
		},
		{
			MethodName: "account_confirmPasswordEmail",
			Handler:    _RPCAccount_AccountConfirmPasswordEmail_Handler,
		},
		{
			MethodName: "account_resendPasswordEmail",
			Handler:    _RPCAccount_AccountResendPasswordEmail_Handler,
		},
		{
			MethodName: "account_cancelPasswordEmail",
			Handler:    _RPCAccount_AccountCancelPasswordEmail_Handler,
		},
		{
			MethodName: "account_getContactSignUpNotification",
			Handler:    _RPCAccount_AccountGetContactSignUpNotification_Handler,
		},
		{
			MethodName: "account_setContactSignUpNotification",
			Handler:    _RPCAccount_AccountSetContactSignUpNotification_Handler,
		},
		{
			MethodName: "account_getNotifyExceptions",
			Handler:    _RPCAccount_AccountGetNotifyExceptions_Handler,
		},
		{
			MethodName: "account_getWallPaper",
			Handler:    _RPCAccount_AccountGetWallPaper_Handler,
		},
		{
			MethodName: "account_uploadWallPaper",
			Handler:    _RPCAccount_AccountUploadWallPaper_Handler,
		},
		{
			MethodName: "account_saveWallPaper",
			Handler:    _RPCAccount_AccountSaveWallPaper_Handler,
		},
		{
			MethodName: "account_installWallPaper",
			Handler:    _RPCAccount_AccountInstallWallPaper_Handler,
		},
		{
			MethodName: "account_resetWallPapers",
			Handler:    _RPCAccount_AccountResetWallPapers_Handler,
		},
		{
			MethodName: "account_getAutoDownloadSettings",
			Handler:    _RPCAccount_AccountGetAutoDownloadSettings_Handler,
		},
		{
			MethodName: "account_saveAutoDownloadSettings",
			Handler:    _RPCAccount_AccountSaveAutoDownloadSettings_Handler,
		},
		{
			MethodName: "account_uploadTheme",
			Handler:    _RPCAccount_AccountUploadTheme_Handler,
		},
		{
			MethodName: "account_createTheme",
			Handler:    _RPCAccount_AccountCreateTheme_Handler,
		},
		{
			MethodName: "account_updateTheme",
			Handler:    _RPCAccount_AccountUpdateTheme_Handler,
		},
		{
			MethodName: "account_saveTheme",
			Handler:    _RPCAccount_AccountSaveTheme_Handler,
		},
		{
			MethodName: "account_installTheme",
			Handler:    _RPCAccount_AccountInstallTheme_Handler,
		},
		{
			MethodName: "account_getTheme",
			Handler:    _RPCAccount_AccountGetTheme_Handler,
		},
		{
			MethodName: "account_getThemes",
			Handler:    _RPCAccount_AccountGetThemes_Handler,
		},
		{
			MethodName: "account_setContentSettings",
			Handler:    _RPCAccount_AccountSetContentSettings_Handler,
		},
		{
			MethodName: "account_getContentSettings",
			Handler:    _RPCAccount_AccountGetContentSettings_Handler,
		},
		{
			MethodName: "account_getMultiWallPapers",
			Handler:    _RPCAccount_AccountGetMultiWallPapers_Handler,
		},
		{
			MethodName: "account_getGlobalPrivacySettings",
			Handler:    _RPCAccount_AccountGetGlobalPrivacySettings_Handler,
		},
		{
			MethodName: "account_setGlobalPrivacySettings",
			Handler:    _RPCAccount_AccountSetGlobalPrivacySettings_Handler,
		},
		{
			MethodName: "account_getWallPapersC04CFAC2",
			Handler:    _RPCAccount_AccountGetWallPapersC04CFAC2_Handler,
		},
		{
			MethodName: "account_createPredefinedUser",
			Handler:    _RPCAccount_AccountCreatePredefinedUser_Handler,
		},
		{
			MethodName: "account_updatePredefinedUsername",
			Handler:    _RPCAccount_AccountUpdatePredefinedUsername_Handler,
		},
		{
			MethodName: "account_updatePredefinedProfile",
			Handler:    _RPCAccount_AccountUpdatePredefinedProfile_Handler,
		},
		{
			MethodName: "account_updateVerified",
			Handler:    _RPCAccount_AccountUpdateVerified_Handler,
		},
		{
			MethodName: "account_updatePredefinedVerified",
			Handler:    _RPCAccount_AccountUpdatePredefinedVerified_Handler,
		},
		{
			MethodName: "account_updatePredefinedCode",
			Handler:    _RPCAccount_AccountUpdatePredefinedCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCMessagesChatClient is the client API for RPCMessagesChat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCMessagesChatClient interface {
	// messages.getChats#3c6aa187 id:Vector<int> = messages.Chats;
	MessagesGetChats(ctx context.Context, in *TLMessagesGetChats, opts ...grpc.CallOption) (*Messages_Chats, error)
	// messages.getFullChat#3b831c66 chat_id:int = messages.ChatFull;
	MessagesGetFullChat(ctx context.Context, in *TLMessagesGetFullChat, opts ...grpc.CallOption) (*Messages_ChatFull, error)
	// messages.editChatTitle#dc452855 chat_id:int title:string = Updates;
	MessagesEditChatTitle(ctx context.Context, in *TLMessagesEditChatTitle, opts ...grpc.CallOption) (*Updates, error)
	// messages.editChatPhoto#ca4c79d8 chat_id:int photo:InputChatPhoto = Updates;
	MessagesEditChatPhoto(ctx context.Context, in *TLMessagesEditChatPhoto, opts ...grpc.CallOption) (*Updates, error)
	// messages.addChatUser#f9a0aa09 chat_id:int user_id:InputUser fwd_limit:int = Updates;
	MessagesAddChatUser(ctx context.Context, in *TLMessagesAddChatUser, opts ...grpc.CallOption) (*Updates, error)
	// messages.deleteChatUser#e0611f16 chat_id:int user_id:InputUser = Updates;
	MessagesDeleteChatUser(ctx context.Context, in *TLMessagesDeleteChatUser, opts ...grpc.CallOption) (*Updates, error)
	// messages.createChat#9cb126e users:Vector<InputUser> title:string = Updates;
	MessagesCreateChat(ctx context.Context, in *TLMessagesCreateChat, opts ...grpc.CallOption) (*Updates, error)
	// messages.exportChatInvite#df7534c peer:InputPeer = ExportedChatInvite;
	MessagesExportChatInvite(ctx context.Context, in *TLMessagesExportChatInvite, opts ...grpc.CallOption) (*ExportedChatInvite, error)
	// messages.checkChatInvite#3eadb1bb hash:string = ChatInvite;
	MessagesCheckChatInvite(ctx context.Context, in *TLMessagesCheckChatInvite, opts ...grpc.CallOption) (*ChatInvite, error)
	// messages.importChatInvite#6c50051c hash:string = Updates;
	MessagesImportChatInvite(ctx context.Context, in *TLMessagesImportChatInvite, opts ...grpc.CallOption) (*Updates, error)
	// messages.editChatAdmin#a9e69f2e chat_id:int user_id:InputUser is_admin:Bool = Bool;
	MessagesEditChatAdmin(ctx context.Context, in *TLMessagesEditChatAdmin, opts ...grpc.CallOption) (*Bool, error)
	// messages.migrateChat#15a3b8e3 chat_id:int = Updates;
	MessagesMigrateChat(ctx context.Context, in *TLMessagesMigrateChat, opts ...grpc.CallOption) (*Updates, error)
	// messages.getCommonChats#d0a48c4 user_id:InputUser max_id:int limit:int = messages.Chats;
	MessagesGetCommonChats(ctx context.Context, in *TLMessagesGetCommonChats, opts ...grpc.CallOption) (*Messages_Chats, error)
	// messages.getAllChats#eba80ff0 except_ids:Vector<int> = messages.Chats;
	MessagesGetAllChats(ctx context.Context, in *TLMessagesGetAllChats, opts ...grpc.CallOption) (*Messages_Chats, error)
	// messages.editChatAbout#def60797 peer:InputPeer about:string = Bool;
	MessagesEditChatAbout(ctx context.Context, in *TLMessagesEditChatAbout, opts ...grpc.CallOption) (*Bool, error)
	// messages.editChatNotice#8ca0d616 peer:InputPeer notice:string = Bool;
	MessagesEditChatNotice(ctx context.Context, in *TLMessagesEditChatNotice, opts ...grpc.CallOption) (*Bool, error)
	// messages.editChatDefaultBannedRights#a5866b41 peer:InputPeer banned_rights:ChatBannedRights = Updates;
	MessagesEditChatDefaultBannedRights(ctx context.Context, in *TLMessagesEditChatDefaultBannedRights, opts ...grpc.CallOption) (*Updates, error)
	// messages.toggleChatAdmins#ec8bd9e1 chat_id:int enabled:Bool = Updates;
	MessagesToggleChatAdmins(ctx context.Context, in *TLMessagesToggleChatAdmins, opts ...grpc.CallOption) (*Updates, error)
}

type rPCMessagesChatClient struct {
	cc *grpc.ClientConn
}

func NewRPCMessagesChatClient(cc *grpc.ClientConn) RPCMessagesChatClient {
	return &rPCMessagesChatClient{cc}
}

func (c *rPCMessagesChatClient) MessagesGetChats(ctx context.Context, in *TLMessagesGetChats, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_getChats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesGetFullChat(ctx context.Context, in *TLMessagesGetFullChat, opts ...grpc.CallOption) (*Messages_ChatFull, error) {
	out := new(Messages_ChatFull)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_getFullChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesEditChatTitle(ctx context.Context, in *TLMessagesEditChatTitle, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_editChatTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesEditChatPhoto(ctx context.Context, in *TLMessagesEditChatPhoto, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_editChatPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesAddChatUser(ctx context.Context, in *TLMessagesAddChatUser, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_addChatUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesDeleteChatUser(ctx context.Context, in *TLMessagesDeleteChatUser, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_deleteChatUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesCreateChat(ctx context.Context, in *TLMessagesCreateChat, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_createChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesExportChatInvite(ctx context.Context, in *TLMessagesExportChatInvite, opts ...grpc.CallOption) (*ExportedChatInvite, error) {
	out := new(ExportedChatInvite)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_exportChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesCheckChatInvite(ctx context.Context, in *TLMessagesCheckChatInvite, opts ...grpc.CallOption) (*ChatInvite, error) {
	out := new(ChatInvite)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_checkChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesImportChatInvite(ctx context.Context, in *TLMessagesImportChatInvite, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_importChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesEditChatAdmin(ctx context.Context, in *TLMessagesEditChatAdmin, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_editChatAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesMigrateChat(ctx context.Context, in *TLMessagesMigrateChat, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_migrateChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesGetCommonChats(ctx context.Context, in *TLMessagesGetCommonChats, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_getCommonChats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesGetAllChats(ctx context.Context, in *TLMessagesGetAllChats, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_getAllChats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesEditChatAbout(ctx context.Context, in *TLMessagesEditChatAbout, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_editChatAbout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesEditChatNotice(ctx context.Context, in *TLMessagesEditChatNotice, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_editChatNotice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesEditChatDefaultBannedRights(ctx context.Context, in *TLMessagesEditChatDefaultBannedRights, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_editChatDefaultBannedRights", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesChatClient) MessagesToggleChatAdmins(ctx context.Context, in *TLMessagesToggleChatAdmins, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesChat/messages_toggleChatAdmins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCMessagesChatServer is the server API for RPCMessagesChat service.
type RPCMessagesChatServer interface {
	// messages.getChats#3c6aa187 id:Vector<int> = messages.Chats;
	MessagesGetChats(context.Context, *TLMessagesGetChats) (*Messages_Chats, error)
	// messages.getFullChat#3b831c66 chat_id:int = messages.ChatFull;
	MessagesGetFullChat(context.Context, *TLMessagesGetFullChat) (*Messages_ChatFull, error)
	// messages.editChatTitle#dc452855 chat_id:int title:string = Updates;
	MessagesEditChatTitle(context.Context, *TLMessagesEditChatTitle) (*Updates, error)
	// messages.editChatPhoto#ca4c79d8 chat_id:int photo:InputChatPhoto = Updates;
	MessagesEditChatPhoto(context.Context, *TLMessagesEditChatPhoto) (*Updates, error)
	// messages.addChatUser#f9a0aa09 chat_id:int user_id:InputUser fwd_limit:int = Updates;
	MessagesAddChatUser(context.Context, *TLMessagesAddChatUser) (*Updates, error)
	// messages.deleteChatUser#e0611f16 chat_id:int user_id:InputUser = Updates;
	MessagesDeleteChatUser(context.Context, *TLMessagesDeleteChatUser) (*Updates, error)
	// messages.createChat#9cb126e users:Vector<InputUser> title:string = Updates;
	MessagesCreateChat(context.Context, *TLMessagesCreateChat) (*Updates, error)
	// messages.exportChatInvite#df7534c peer:InputPeer = ExportedChatInvite;
	MessagesExportChatInvite(context.Context, *TLMessagesExportChatInvite) (*ExportedChatInvite, error)
	// messages.checkChatInvite#3eadb1bb hash:string = ChatInvite;
	MessagesCheckChatInvite(context.Context, *TLMessagesCheckChatInvite) (*ChatInvite, error)
	// messages.importChatInvite#6c50051c hash:string = Updates;
	MessagesImportChatInvite(context.Context, *TLMessagesImportChatInvite) (*Updates, error)
	// messages.editChatAdmin#a9e69f2e chat_id:int user_id:InputUser is_admin:Bool = Bool;
	MessagesEditChatAdmin(context.Context, *TLMessagesEditChatAdmin) (*Bool, error)
	// messages.migrateChat#15a3b8e3 chat_id:int = Updates;
	MessagesMigrateChat(context.Context, *TLMessagesMigrateChat) (*Updates, error)
	// messages.getCommonChats#d0a48c4 user_id:InputUser max_id:int limit:int = messages.Chats;
	MessagesGetCommonChats(context.Context, *TLMessagesGetCommonChats) (*Messages_Chats, error)
	// messages.getAllChats#eba80ff0 except_ids:Vector<int> = messages.Chats;
	MessagesGetAllChats(context.Context, *TLMessagesGetAllChats) (*Messages_Chats, error)
	// messages.editChatAbout#def60797 peer:InputPeer about:string = Bool;
	MessagesEditChatAbout(context.Context, *TLMessagesEditChatAbout) (*Bool, error)
	// messages.editChatNotice#8ca0d616 peer:InputPeer notice:string = Bool;
	MessagesEditChatNotice(context.Context, *TLMessagesEditChatNotice) (*Bool, error)
	// messages.editChatDefaultBannedRights#a5866b41 peer:InputPeer banned_rights:ChatBannedRights = Updates;
	MessagesEditChatDefaultBannedRights(context.Context, *TLMessagesEditChatDefaultBannedRights) (*Updates, error)
	// messages.toggleChatAdmins#ec8bd9e1 chat_id:int enabled:Bool = Updates;
	MessagesToggleChatAdmins(context.Context, *TLMessagesToggleChatAdmins) (*Updates, error)
}

func RegisterRPCMessagesChatServer(s *grpc.Server, srv RPCMessagesChatServer) {
	s.RegisterService(&_RPCMessagesChat_serviceDesc, srv)
}

func _RPCMessagesChat_MessagesGetChats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetChats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesGetChats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesGetChats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesGetChats(ctx, req.(*TLMessagesGetChats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesGetFullChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetFullChat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesGetFullChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesGetFullChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesGetFullChat(ctx, req.(*TLMessagesGetFullChat))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesEditChatTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesEditChatTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesEditChatTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesEditChatTitle(ctx, req.(*TLMessagesEditChatTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesEditChatPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatPhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesEditChatPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesEditChatPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesEditChatPhoto(ctx, req.(*TLMessagesEditChatPhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesAddChatUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesAddChatUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesAddChatUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesAddChatUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesAddChatUser(ctx, req.(*TLMessagesAddChatUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesDeleteChatUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteChatUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesDeleteChatUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesDeleteChatUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesDeleteChatUser(ctx, req.(*TLMessagesDeleteChatUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesCreateChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesCreateChat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesCreateChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesCreateChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesCreateChat(ctx, req.(*TLMessagesCreateChat))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesExportChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesExportChatInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesExportChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesExportChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesExportChatInvite(ctx, req.(*TLMessagesExportChatInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesCheckChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesCheckChatInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesCheckChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesCheckChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesCheckChatInvite(ctx, req.(*TLMessagesCheckChatInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesImportChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesImportChatInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesImportChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesImportChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesImportChatInvite(ctx, req.(*TLMessagesImportChatInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesEditChatAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesEditChatAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesEditChatAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesEditChatAdmin(ctx, req.(*TLMessagesEditChatAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesMigrateChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesMigrateChat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesMigrateChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesMigrateChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesMigrateChat(ctx, req.(*TLMessagesMigrateChat))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesGetCommonChats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetCommonChats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesGetCommonChats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesGetCommonChats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesGetCommonChats(ctx, req.(*TLMessagesGetCommonChats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesGetAllChats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetAllChats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesGetAllChats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesGetAllChats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesGetAllChats(ctx, req.(*TLMessagesGetAllChats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesEditChatAbout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatAbout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesEditChatAbout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesEditChatAbout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesEditChatAbout(ctx, req.(*TLMessagesEditChatAbout))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesEditChatNotice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatNotice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesEditChatNotice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesEditChatNotice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesEditChatNotice(ctx, req.(*TLMessagesEditChatNotice))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesEditChatDefaultBannedRights_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatDefaultBannedRights)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesEditChatDefaultBannedRights(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesEditChatDefaultBannedRights",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesEditChatDefaultBannedRights(ctx, req.(*TLMessagesEditChatDefaultBannedRights))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesChat_MessagesToggleChatAdmins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesToggleChatAdmins)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesChatServer).MessagesToggleChatAdmins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesChat/MessagesToggleChatAdmins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesChatServer).MessagesToggleChatAdmins(ctx, req.(*TLMessagesToggleChatAdmins))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCMessagesChat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCMessagesChat",
	HandlerType: (*RPCMessagesChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getChats",
			Handler:    _RPCMessagesChat_MessagesGetChats_Handler,
		},
		{
			MethodName: "messages_getFullChat",
			Handler:    _RPCMessagesChat_MessagesGetFullChat_Handler,
		},
		{
			MethodName: "messages_editChatTitle",
			Handler:    _RPCMessagesChat_MessagesEditChatTitle_Handler,
		},
		{
			MethodName: "messages_editChatPhoto",
			Handler:    _RPCMessagesChat_MessagesEditChatPhoto_Handler,
		},
		{
			MethodName: "messages_addChatUser",
			Handler:    _RPCMessagesChat_MessagesAddChatUser_Handler,
		},
		{
			MethodName: "messages_deleteChatUser",
			Handler:    _RPCMessagesChat_MessagesDeleteChatUser_Handler,
		},
		{
			MethodName: "messages_createChat",
			Handler:    _RPCMessagesChat_MessagesCreateChat_Handler,
		},
		{
			MethodName: "messages_exportChatInvite",
			Handler:    _RPCMessagesChat_MessagesExportChatInvite_Handler,
		},
		{
			MethodName: "messages_checkChatInvite",
			Handler:    _RPCMessagesChat_MessagesCheckChatInvite_Handler,
		},
		{
			MethodName: "messages_importChatInvite",
			Handler:    _RPCMessagesChat_MessagesImportChatInvite_Handler,
		},
		{
			MethodName: "messages_editChatAdmin",
			Handler:    _RPCMessagesChat_MessagesEditChatAdmin_Handler,
		},
		{
			MethodName: "messages_migrateChat",
			Handler:    _RPCMessagesChat_MessagesMigrateChat_Handler,
		},
		{
			MethodName: "messages_getCommonChats",
			Handler:    _RPCMessagesChat_MessagesGetCommonChats_Handler,
		},
		{
			MethodName: "messages_getAllChats",
			Handler:    _RPCMessagesChat_MessagesGetAllChats_Handler,
		},
		{
			MethodName: "messages_editChatAbout",
			Handler:    _RPCMessagesChat_MessagesEditChatAbout_Handler,
		},
		{
			MethodName: "messages_editChatNotice",
			Handler:    _RPCMessagesChat_MessagesEditChatNotice_Handler,
		},
		{
			MethodName: "messages_editChatDefaultBannedRights",
			Handler:    _RPCMessagesChat_MessagesEditChatDefaultBannedRights_Handler,
		},
		{
			MethodName: "messages_toggleChatAdmins",
			Handler:    _RPCMessagesChat_MessagesToggleChatAdmins_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCMessagesStickerClient is the client API for RPCMessagesSticker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCMessagesStickerClient interface {
	// messages.getStickers#43d4f2c emoticon:string hash:int = messages.Stickers;
	MessagesGetStickers(ctx context.Context, in *TLMessagesGetStickers, opts ...grpc.CallOption) (*Messages_Stickers, error)
	// messages.getAllStickers#1c9618b1 hash:int = messages.AllStickers;
	MessagesGetAllStickers(ctx context.Context, in *TLMessagesGetAllStickers, opts ...grpc.CallOption) (*Messages_AllStickers, error)
	// messages.getStickerSet#2619a90e stickerset:InputStickerSet = messages.StickerSet;
	MessagesGetStickerSet(ctx context.Context, in *TLMessagesGetStickerSet, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	// messages.installStickerSet#c78fe460 stickerset:InputStickerSet archived:Bool = messages.StickerSetInstallResult;
	MessagesInstallStickerSet(ctx context.Context, in *TLMessagesInstallStickerSet, opts ...grpc.CallOption) (*Messages_StickerSetInstallResult, error)
	// messages.uninstallStickerSet#f96e55de stickerset:InputStickerSet = Bool;
	MessagesUninstallStickerSet(ctx context.Context, in *TLMessagesUninstallStickerSet, opts ...grpc.CallOption) (*Bool, error)
	// messages.reorderStickerSets#78337739 flags:# masks:flags.0?true order:Vector<long> = Bool;
	MessagesReorderStickerSets(ctx context.Context, in *TLMessagesReorderStickerSets, opts ...grpc.CallOption) (*Bool, error)
	// messages.getSavedGifs#83bf3d52 hash:int = messages.SavedGifs;
	MessagesGetSavedGifs(ctx context.Context, in *TLMessagesGetSavedGifs, opts ...grpc.CallOption) (*Messages_SavedGifs, error)
	// messages.saveGif#327a30cb id:InputDocument unsave:Bool = Bool;
	MessagesSaveGif(ctx context.Context, in *TLMessagesSaveGif, opts ...grpc.CallOption) (*Bool, error)
	// messages.getFeaturedStickers#2dacca4f hash:int = messages.FeaturedStickers;
	MessagesGetFeaturedStickers(ctx context.Context, in *TLMessagesGetFeaturedStickers, opts ...grpc.CallOption) (*Messages_FeaturedStickers, error)
	// messages.readFeaturedStickers#5b118126 id:Vector<long> = Bool;
	MessagesReadFeaturedStickers(ctx context.Context, in *TLMessagesReadFeaturedStickers, opts ...grpc.CallOption) (*Bool, error)
	// messages.getRecentStickers#5ea192c9 flags:# attached:flags.0?true hash:int = messages.RecentStickers;
	MessagesGetRecentStickers(ctx context.Context, in *TLMessagesGetRecentStickers, opts ...grpc.CallOption) (*Messages_RecentStickers, error)
	// messages.saveRecentSticker#392718f8 flags:# attached:flags.0?true id:InputDocument unsave:Bool = Bool;
	MessagesSaveRecentSticker(ctx context.Context, in *TLMessagesSaveRecentSticker, opts ...grpc.CallOption) (*Bool, error)
	// messages.clearRecentStickers#8999602d flags:# attached:flags.0?true = Bool;
	MessagesClearRecentStickers(ctx context.Context, in *TLMessagesClearRecentStickers, opts ...grpc.CallOption) (*Bool, error)
	// messages.getArchivedStickers#57f17692 flags:# masks:flags.0?true offset_id:long limit:int = messages.ArchivedStickers;
	MessagesGetArchivedStickers(ctx context.Context, in *TLMessagesGetArchivedStickers, opts ...grpc.CallOption) (*Messages_ArchivedStickers, error)
	// messages.getMaskStickers#65b8c79f hash:int = messages.AllStickers;
	MessagesGetMaskStickers(ctx context.Context, in *TLMessagesGetMaskStickers, opts ...grpc.CallOption) (*Messages_AllStickers, error)
	// messages.getAttachedStickers#cc5b67cc media:InputStickeredMedia = Vector<StickerSetCovered>;
	MessagesGetAttachedStickers(ctx context.Context, in *TLMessagesGetAttachedStickers, opts ...grpc.CallOption) (*Vector_StickerSetCovered, error)
	// messages.getFavedStickers#21ce0b0e hash:int = messages.FavedStickers;
	MessagesGetFavedStickers(ctx context.Context, in *TLMessagesGetFavedStickers, opts ...grpc.CallOption) (*Messages_FavedStickers, error)
	// messages.faveSticker#b9ffc55b id:InputDocument unfave:Bool = Bool;
	MessagesFaveSticker(ctx context.Context, in *TLMessagesFaveSticker, opts ...grpc.CallOption) (*Bool, error)
	// messages.searchStickerSets#c2b7d08b flags:# exclude_featured:flags.0?true q:string hash:int = messages.FoundStickerSets;
	MessagesSearchStickerSets(ctx context.Context, in *TLMessagesSearchStickerSets, opts ...grpc.CallOption) (*Messages_FoundStickerSets, error)
	// messages.toggleStickerSets#b5052fea flags:# uninstall:flags.0?true archive:flags.1?true unarchive:flags.2?true stickersets:Vector<InputStickerSet> = Bool;
	MessagesToggleStickerSets(ctx context.Context, in *TLMessagesToggleStickerSets, opts ...grpc.CallOption) (*Bool, error)
	// messages.getOldFeaturedStickers#5fe7025b offset:int limit:int hash:int = messages.FeaturedStickers;
	MessagesGetOldFeaturedStickers(ctx context.Context, in *TLMessagesGetOldFeaturedStickers, opts ...grpc.CallOption) (*Messages_FeaturedStickers, error)
	// messages.searchGifs#bf9a776b q:string offset:int = messages.FoundGifs;
	MessagesSearchGifs(ctx context.Context, in *TLMessagesSearchGifs, opts ...grpc.CallOption) (*Messages_FoundGifs, error)
}

type rPCMessagesStickerClient struct {
	cc *grpc.ClientConn
}

func NewRPCMessagesStickerClient(cc *grpc.ClientConn) RPCMessagesStickerClient {
	return &rPCMessagesStickerClient{cc}
}

func (c *rPCMessagesStickerClient) MessagesGetStickers(ctx context.Context, in *TLMessagesGetStickers, opts ...grpc.CallOption) (*Messages_Stickers, error) {
	out := new(Messages_Stickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesGetAllStickers(ctx context.Context, in *TLMessagesGetAllStickers, opts ...grpc.CallOption) (*Messages_AllStickers, error) {
	out := new(Messages_AllStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getAllStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesGetStickerSet(ctx context.Context, in *TLMessagesGetStickerSet, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getStickerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesInstallStickerSet(ctx context.Context, in *TLMessagesInstallStickerSet, opts ...grpc.CallOption) (*Messages_StickerSetInstallResult, error) {
	out := new(Messages_StickerSetInstallResult)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_installStickerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesUninstallStickerSet(ctx context.Context, in *TLMessagesUninstallStickerSet, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_uninstallStickerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesReorderStickerSets(ctx context.Context, in *TLMessagesReorderStickerSets, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_reorderStickerSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesGetSavedGifs(ctx context.Context, in *TLMessagesGetSavedGifs, opts ...grpc.CallOption) (*Messages_SavedGifs, error) {
	out := new(Messages_SavedGifs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getSavedGifs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesSaveGif(ctx context.Context, in *TLMessagesSaveGif, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_saveGif", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesGetFeaturedStickers(ctx context.Context, in *TLMessagesGetFeaturedStickers, opts ...grpc.CallOption) (*Messages_FeaturedStickers, error) {
	out := new(Messages_FeaturedStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getFeaturedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesReadFeaturedStickers(ctx context.Context, in *TLMessagesReadFeaturedStickers, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_readFeaturedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesGetRecentStickers(ctx context.Context, in *TLMessagesGetRecentStickers, opts ...grpc.CallOption) (*Messages_RecentStickers, error) {
	out := new(Messages_RecentStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getRecentStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesSaveRecentSticker(ctx context.Context, in *TLMessagesSaveRecentSticker, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_saveRecentSticker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesClearRecentStickers(ctx context.Context, in *TLMessagesClearRecentStickers, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_clearRecentStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesGetArchivedStickers(ctx context.Context, in *TLMessagesGetArchivedStickers, opts ...grpc.CallOption) (*Messages_ArchivedStickers, error) {
	out := new(Messages_ArchivedStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getArchivedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesGetMaskStickers(ctx context.Context, in *TLMessagesGetMaskStickers, opts ...grpc.CallOption) (*Messages_AllStickers, error) {
	out := new(Messages_AllStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getMaskStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesGetAttachedStickers(ctx context.Context, in *TLMessagesGetAttachedStickers, opts ...grpc.CallOption) (*Vector_StickerSetCovered, error) {
	out := new(Vector_StickerSetCovered)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getAttachedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesGetFavedStickers(ctx context.Context, in *TLMessagesGetFavedStickers, opts ...grpc.CallOption) (*Messages_FavedStickers, error) {
	out := new(Messages_FavedStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getFavedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesFaveSticker(ctx context.Context, in *TLMessagesFaveSticker, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_faveSticker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesSearchStickerSets(ctx context.Context, in *TLMessagesSearchStickerSets, opts ...grpc.CallOption) (*Messages_FoundStickerSets, error) {
	out := new(Messages_FoundStickerSets)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_searchStickerSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesToggleStickerSets(ctx context.Context, in *TLMessagesToggleStickerSets, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_toggleStickerSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesGetOldFeaturedStickers(ctx context.Context, in *TLMessagesGetOldFeaturedStickers, opts ...grpc.CallOption) (*Messages_FeaturedStickers, error) {
	out := new(Messages_FeaturedStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_getOldFeaturedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesStickerClient) MessagesSearchGifs(ctx context.Context, in *TLMessagesSearchGifs, opts ...grpc.CallOption) (*Messages_FoundGifs, error) {
	out := new(Messages_FoundGifs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesSticker/messages_searchGifs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCMessagesStickerServer is the server API for RPCMessagesSticker service.
type RPCMessagesStickerServer interface {
	// messages.getStickers#43d4f2c emoticon:string hash:int = messages.Stickers;
	MessagesGetStickers(context.Context, *TLMessagesGetStickers) (*Messages_Stickers, error)
	// messages.getAllStickers#1c9618b1 hash:int = messages.AllStickers;
	MessagesGetAllStickers(context.Context, *TLMessagesGetAllStickers) (*Messages_AllStickers, error)
	// messages.getStickerSet#2619a90e stickerset:InputStickerSet = messages.StickerSet;
	MessagesGetStickerSet(context.Context, *TLMessagesGetStickerSet) (*Messages_StickerSet, error)
	// messages.installStickerSet#c78fe460 stickerset:InputStickerSet archived:Bool = messages.StickerSetInstallResult;
	MessagesInstallStickerSet(context.Context, *TLMessagesInstallStickerSet) (*Messages_StickerSetInstallResult, error)
	// messages.uninstallStickerSet#f96e55de stickerset:InputStickerSet = Bool;
	MessagesUninstallStickerSet(context.Context, *TLMessagesUninstallStickerSet) (*Bool, error)
	// messages.reorderStickerSets#78337739 flags:# masks:flags.0?true order:Vector<long> = Bool;
	MessagesReorderStickerSets(context.Context, *TLMessagesReorderStickerSets) (*Bool, error)
	// messages.getSavedGifs#83bf3d52 hash:int = messages.SavedGifs;
	MessagesGetSavedGifs(context.Context, *TLMessagesGetSavedGifs) (*Messages_SavedGifs, error)
	// messages.saveGif#327a30cb id:InputDocument unsave:Bool = Bool;
	MessagesSaveGif(context.Context, *TLMessagesSaveGif) (*Bool, error)
	// messages.getFeaturedStickers#2dacca4f hash:int = messages.FeaturedStickers;
	MessagesGetFeaturedStickers(context.Context, *TLMessagesGetFeaturedStickers) (*Messages_FeaturedStickers, error)
	// messages.readFeaturedStickers#5b118126 id:Vector<long> = Bool;
	MessagesReadFeaturedStickers(context.Context, *TLMessagesReadFeaturedStickers) (*Bool, error)
	// messages.getRecentStickers#5ea192c9 flags:# attached:flags.0?true hash:int = messages.RecentStickers;
	MessagesGetRecentStickers(context.Context, *TLMessagesGetRecentStickers) (*Messages_RecentStickers, error)
	// messages.saveRecentSticker#392718f8 flags:# attached:flags.0?true id:InputDocument unsave:Bool = Bool;
	MessagesSaveRecentSticker(context.Context, *TLMessagesSaveRecentSticker) (*Bool, error)
	// messages.clearRecentStickers#8999602d flags:# attached:flags.0?true = Bool;
	MessagesClearRecentStickers(context.Context, *TLMessagesClearRecentStickers) (*Bool, error)
	// messages.getArchivedStickers#57f17692 flags:# masks:flags.0?true offset_id:long limit:int = messages.ArchivedStickers;
	MessagesGetArchivedStickers(context.Context, *TLMessagesGetArchivedStickers) (*Messages_ArchivedStickers, error)
	// messages.getMaskStickers#65b8c79f hash:int = messages.AllStickers;
	MessagesGetMaskStickers(context.Context, *TLMessagesGetMaskStickers) (*Messages_AllStickers, error)
	// messages.getAttachedStickers#cc5b67cc media:InputStickeredMedia = Vector<StickerSetCovered>;
	MessagesGetAttachedStickers(context.Context, *TLMessagesGetAttachedStickers) (*Vector_StickerSetCovered, error)
	// messages.getFavedStickers#21ce0b0e hash:int = messages.FavedStickers;
	MessagesGetFavedStickers(context.Context, *TLMessagesGetFavedStickers) (*Messages_FavedStickers, error)
	// messages.faveSticker#b9ffc55b id:InputDocument unfave:Bool = Bool;
	MessagesFaveSticker(context.Context, *TLMessagesFaveSticker) (*Bool, error)
	// messages.searchStickerSets#c2b7d08b flags:# exclude_featured:flags.0?true q:string hash:int = messages.FoundStickerSets;
	MessagesSearchStickerSets(context.Context, *TLMessagesSearchStickerSets) (*Messages_FoundStickerSets, error)
	// messages.toggleStickerSets#b5052fea flags:# uninstall:flags.0?true archive:flags.1?true unarchive:flags.2?true stickersets:Vector<InputStickerSet> = Bool;
	MessagesToggleStickerSets(context.Context, *TLMessagesToggleStickerSets) (*Bool, error)
	// messages.getOldFeaturedStickers#5fe7025b offset:int limit:int hash:int = messages.FeaturedStickers;
	MessagesGetOldFeaturedStickers(context.Context, *TLMessagesGetOldFeaturedStickers) (*Messages_FeaturedStickers, error)
	// messages.searchGifs#bf9a776b q:string offset:int = messages.FoundGifs;
	MessagesSearchGifs(context.Context, *TLMessagesSearchGifs) (*Messages_FoundGifs, error)
}

func RegisterRPCMessagesStickerServer(s *grpc.Server, srv RPCMessagesStickerServer) {
	s.RegisterService(&_RPCMessagesSticker_serviceDesc, srv)
}

func _RPCMessagesSticker_MessagesGetStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetStickers(ctx, req.(*TLMessagesGetStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesGetAllStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetAllStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetAllStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetAllStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetAllStickers(ctx, req.(*TLMessagesGetAllStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesGetStickerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetStickerSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetStickerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetStickerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetStickerSet(ctx, req.(*TLMessagesGetStickerSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesInstallStickerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesInstallStickerSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesInstallStickerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesInstallStickerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesInstallStickerSet(ctx, req.(*TLMessagesInstallStickerSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesUninstallStickerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUninstallStickerSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesUninstallStickerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesUninstallStickerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesUninstallStickerSet(ctx, req.(*TLMessagesUninstallStickerSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesReorderStickerSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReorderStickerSets)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesReorderStickerSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesReorderStickerSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesReorderStickerSets(ctx, req.(*TLMessagesReorderStickerSets))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesGetSavedGifs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetSavedGifs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetSavedGifs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetSavedGifs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetSavedGifs(ctx, req.(*TLMessagesGetSavedGifs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesSaveGif_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSaveGif)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesSaveGif(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesSaveGif",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesSaveGif(ctx, req.(*TLMessagesSaveGif))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesGetFeaturedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetFeaturedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetFeaturedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetFeaturedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetFeaturedStickers(ctx, req.(*TLMessagesGetFeaturedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesReadFeaturedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadFeaturedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesReadFeaturedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesReadFeaturedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesReadFeaturedStickers(ctx, req.(*TLMessagesReadFeaturedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesGetRecentStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetRecentStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetRecentStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetRecentStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetRecentStickers(ctx, req.(*TLMessagesGetRecentStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesSaveRecentSticker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSaveRecentSticker)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesSaveRecentSticker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesSaveRecentSticker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesSaveRecentSticker(ctx, req.(*TLMessagesSaveRecentSticker))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesClearRecentStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesClearRecentStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesClearRecentStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesClearRecentStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesClearRecentStickers(ctx, req.(*TLMessagesClearRecentStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesGetArchivedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetArchivedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetArchivedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetArchivedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetArchivedStickers(ctx, req.(*TLMessagesGetArchivedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesGetMaskStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMaskStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetMaskStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetMaskStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetMaskStickers(ctx, req.(*TLMessagesGetMaskStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesGetAttachedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetAttachedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetAttachedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetAttachedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetAttachedStickers(ctx, req.(*TLMessagesGetAttachedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesGetFavedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetFavedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetFavedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetFavedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetFavedStickers(ctx, req.(*TLMessagesGetFavedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesFaveSticker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesFaveSticker)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesFaveSticker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesFaveSticker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesFaveSticker(ctx, req.(*TLMessagesFaveSticker))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesSearchStickerSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSearchStickerSets)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesSearchStickerSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesSearchStickerSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesSearchStickerSets(ctx, req.(*TLMessagesSearchStickerSets))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesToggleStickerSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesToggleStickerSets)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesToggleStickerSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesToggleStickerSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesToggleStickerSets(ctx, req.(*TLMessagesToggleStickerSets))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesGetOldFeaturedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetOldFeaturedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesGetOldFeaturedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesGetOldFeaturedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesGetOldFeaturedStickers(ctx, req.(*TLMessagesGetOldFeaturedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesSticker_MessagesSearchGifs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSearchGifs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesStickerServer).MessagesSearchGifs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesSticker/MessagesSearchGifs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesStickerServer).MessagesSearchGifs(ctx, req.(*TLMessagesSearchGifs))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCMessagesSticker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCMessagesSticker",
	HandlerType: (*RPCMessagesStickerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getStickers",
			Handler:    _RPCMessagesSticker_MessagesGetStickers_Handler,
		},
		{
			MethodName: "messages_getAllStickers",
			Handler:    _RPCMessagesSticker_MessagesGetAllStickers_Handler,
		},
		{
			MethodName: "messages_getStickerSet",
			Handler:    _RPCMessagesSticker_MessagesGetStickerSet_Handler,
		},
		{
			MethodName: "messages_installStickerSet",
			Handler:    _RPCMessagesSticker_MessagesInstallStickerSet_Handler,
		},
		{
			MethodName: "messages_uninstallStickerSet",
			Handler:    _RPCMessagesSticker_MessagesUninstallStickerSet_Handler,
		},
		{
			MethodName: "messages_reorderStickerSets",
			Handler:    _RPCMessagesSticker_MessagesReorderStickerSets_Handler,
		},
		{
			MethodName: "messages_getSavedGifs",
			Handler:    _RPCMessagesSticker_MessagesGetSavedGifs_Handler,
		},
		{
			MethodName: "messages_saveGif",
			Handler:    _RPCMessagesSticker_MessagesSaveGif_Handler,
		},
		{
			MethodName: "messages_getFeaturedStickers",
			Handler:    _RPCMessagesSticker_MessagesGetFeaturedStickers_Handler,
		},
		{
			MethodName: "messages_readFeaturedStickers",
			Handler:    _RPCMessagesSticker_MessagesReadFeaturedStickers_Handler,
		},
		{
			MethodName: "messages_getRecentStickers",
			Handler:    _RPCMessagesSticker_MessagesGetRecentStickers_Handler,
		},
		{
			MethodName: "messages_saveRecentSticker",
			Handler:    _RPCMessagesSticker_MessagesSaveRecentSticker_Handler,
		},
		{
			MethodName: "messages_clearRecentStickers",
			Handler:    _RPCMessagesSticker_MessagesClearRecentStickers_Handler,
		},
		{
			MethodName: "messages_getArchivedStickers",
			Handler:    _RPCMessagesSticker_MessagesGetArchivedStickers_Handler,
		},
		{
			MethodName: "messages_getMaskStickers",
			Handler:    _RPCMessagesSticker_MessagesGetMaskStickers_Handler,
		},
		{
			MethodName: "messages_getAttachedStickers",
			Handler:    _RPCMessagesSticker_MessagesGetAttachedStickers_Handler,
		},
		{
			MethodName: "messages_getFavedStickers",
			Handler:    _RPCMessagesSticker_MessagesGetFavedStickers_Handler,
		},
		{
			MethodName: "messages_faveSticker",
			Handler:    _RPCMessagesSticker_MessagesFaveSticker_Handler,
		},
		{
			MethodName: "messages_searchStickerSets",
			Handler:    _RPCMessagesSticker_MessagesSearchStickerSets_Handler,
		},
		{
			MethodName: "messages_toggleStickerSets",
			Handler:    _RPCMessagesSticker_MessagesToggleStickerSets_Handler,
		},
		{
			MethodName: "messages_getOldFeaturedStickers",
			Handler:    _RPCMessagesSticker_MessagesGetOldFeaturedStickers_Handler,
		},
		{
			MethodName: "messages_searchGifs",
			Handler:    _RPCMessagesSticker_MessagesSearchGifs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCMessagesBotClient is the client API for RPCMessagesBot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCMessagesBotClient interface {
	// messages.startBot#e6df7378 bot:InputUser peer:InputPeer random_id:long start_param:string = Updates;
	MessagesStartBot(ctx context.Context, in *TLMessagesStartBot, opts ...grpc.CallOption) (*Updates, error)
	// messages.getInlineBotResults#514e999d flags:# bot:InputUser peer:InputPeer geo_point:flags.0?InputGeoPoint query:string offset:string = messages.BotResults;
	MessagesGetInlineBotResults(ctx context.Context, in *TLMessagesGetInlineBotResults, opts ...grpc.CallOption) (*Messages_BotResults, error)
	// messages.setInlineBotResults#eb5ea206 flags:# gallery:flags.0?true private:flags.1?true query_id:long results:Vector<InputBotInlineResult> cache_time:int next_offset:flags.2?string switch_pm:flags.3?InlineBotSwitchPM = Bool;
	MessagesSetInlineBotResults(ctx context.Context, in *TLMessagesSetInlineBotResults, opts ...grpc.CallOption) (*Bool, error)
	// messages.sendInlineBotResult#220815b0 flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true hide_via:flags.11?true peer:InputPeer reply_to_msg_id:flags.0?int random_id:long query_id:long id:string schedule_date:flags.10?int = Updates;
	MessagesSendInlineBotResult(ctx context.Context, in *TLMessagesSendInlineBotResult, opts ...grpc.CallOption) (*Updates, error)
	// messages.editInlineBotMessage#83557dba flags:# no_webpage:flags.1?true id:InputBotInlineMessageID message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Bool;
	MessagesEditInlineBotMessage(ctx context.Context, in *TLMessagesEditInlineBotMessage, opts ...grpc.CallOption) (*Bool, error)
	// messages.getBotCallbackAnswer#9342ca07 flags:# game:flags.1?true peer:InputPeer msg_id:int data:flags.0?bytes password:flags.2?InputCheckPasswordSRP = messages.BotCallbackAnswer;
	MessagesGetBotCallbackAnswer(ctx context.Context, in *TLMessagesGetBotCallbackAnswer, opts ...grpc.CallOption) (*Messages_BotCallbackAnswer, error)
	// messages.setBotCallbackAnswer#d58f130a flags:# alert:flags.1?true query_id:long message:flags.0?string url:flags.2?string cache_time:int = Bool;
	MessagesSetBotCallbackAnswer(ctx context.Context, in *TLMessagesSetBotCallbackAnswer, opts ...grpc.CallOption) (*Bool, error)
	// messages.setGameScore#8ef8ecc0 flags:# edit_message:flags.0?true force:flags.1?true peer:InputPeer id:int user_id:InputUser score:int = Updates;
	MessagesSetGameScore(ctx context.Context, in *TLMessagesSetGameScore, opts ...grpc.CallOption) (*Updates, error)
	// messages.setInlineGameScore#15ad9f64 flags:# edit_message:flags.0?true force:flags.1?true id:InputBotInlineMessageID user_id:InputUser score:int = Bool;
	MessagesSetInlineGameScore(ctx context.Context, in *TLMessagesSetInlineGameScore, opts ...grpc.CallOption) (*Bool, error)
	// messages.getGameHighScores#e822649d peer:InputPeer id:int user_id:InputUser = messages.HighScores;
	MessagesGetGameHighScores(ctx context.Context, in *TLMessagesGetGameHighScores, opts ...grpc.CallOption) (*Messages_HighScores, error)
	// messages.getInlineGameHighScores#f635e1b id:InputBotInlineMessageID user_id:InputUser = messages.HighScores;
	MessagesGetInlineGameHighScores(ctx context.Context, in *TLMessagesGetInlineGameHighScores, opts ...grpc.CallOption) (*Messages_HighScores, error)
	// messages.setBotShippingResults#e5f672fa flags:# query_id:long error:flags.0?string shipping_options:flags.1?Vector<ShippingOption> = Bool;
	MessagesSetBotShippingResults(ctx context.Context, in *TLMessagesSetBotShippingResults, opts ...grpc.CallOption) (*Bool, error)
	// messages.setBotPrecheckoutResults#9c2dd95 flags:# success:flags.1?true query_id:long error:flags.0?string = Bool;
	MessagesSetBotPrecheckoutResults(ctx context.Context, in *TLMessagesSetBotPrecheckoutResults, opts ...grpc.CallOption) (*Bool, error)
}

type rPCMessagesBotClient struct {
	cc *grpc.ClientConn
}

func NewRPCMessagesBotClient(cc *grpc.ClientConn) RPCMessagesBotClient {
	return &rPCMessagesBotClient{cc}
}

func (c *rPCMessagesBotClient) MessagesStartBot(ctx context.Context, in *TLMessagesStartBot, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_startBot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesGetInlineBotResults(ctx context.Context, in *TLMessagesGetInlineBotResults, opts ...grpc.CallOption) (*Messages_BotResults, error) {
	out := new(Messages_BotResults)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_getInlineBotResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesSetInlineBotResults(ctx context.Context, in *TLMessagesSetInlineBotResults, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_setInlineBotResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesSendInlineBotResult(ctx context.Context, in *TLMessagesSendInlineBotResult, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_sendInlineBotResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesEditInlineBotMessage(ctx context.Context, in *TLMessagesEditInlineBotMessage, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_editInlineBotMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesGetBotCallbackAnswer(ctx context.Context, in *TLMessagesGetBotCallbackAnswer, opts ...grpc.CallOption) (*Messages_BotCallbackAnswer, error) {
	out := new(Messages_BotCallbackAnswer)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_getBotCallbackAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesSetBotCallbackAnswer(ctx context.Context, in *TLMessagesSetBotCallbackAnswer, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_setBotCallbackAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesSetGameScore(ctx context.Context, in *TLMessagesSetGameScore, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_setGameScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesSetInlineGameScore(ctx context.Context, in *TLMessagesSetInlineGameScore, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_setInlineGameScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesGetGameHighScores(ctx context.Context, in *TLMessagesGetGameHighScores, opts ...grpc.CallOption) (*Messages_HighScores, error) {
	out := new(Messages_HighScores)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_getGameHighScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesGetInlineGameHighScores(ctx context.Context, in *TLMessagesGetInlineGameHighScores, opts ...grpc.CallOption) (*Messages_HighScores, error) {
	out := new(Messages_HighScores)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_getInlineGameHighScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesSetBotShippingResults(ctx context.Context, in *TLMessagesSetBotShippingResults, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_setBotShippingResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesBotClient) MessagesSetBotPrecheckoutResults(ctx context.Context, in *TLMessagesSetBotPrecheckoutResults, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessagesBot/messages_setBotPrecheckoutResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCMessagesBotServer is the server API for RPCMessagesBot service.
type RPCMessagesBotServer interface {
	// messages.startBot#e6df7378 bot:InputUser peer:InputPeer random_id:long start_param:string = Updates;
	MessagesStartBot(context.Context, *TLMessagesStartBot) (*Updates, error)
	// messages.getInlineBotResults#514e999d flags:# bot:InputUser peer:InputPeer geo_point:flags.0?InputGeoPoint query:string offset:string = messages.BotResults;
	MessagesGetInlineBotResults(context.Context, *TLMessagesGetInlineBotResults) (*Messages_BotResults, error)
	// messages.setInlineBotResults#eb5ea206 flags:# gallery:flags.0?true private:flags.1?true query_id:long results:Vector<InputBotInlineResult> cache_time:int next_offset:flags.2?string switch_pm:flags.3?InlineBotSwitchPM = Bool;
	MessagesSetInlineBotResults(context.Context, *TLMessagesSetInlineBotResults) (*Bool, error)
	// messages.sendInlineBotResult#220815b0 flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true hide_via:flags.11?true peer:InputPeer reply_to_msg_id:flags.0?int random_id:long query_id:long id:string schedule_date:flags.10?int = Updates;
	MessagesSendInlineBotResult(context.Context, *TLMessagesSendInlineBotResult) (*Updates, error)
	// messages.editInlineBotMessage#83557dba flags:# no_webpage:flags.1?true id:InputBotInlineMessageID message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Bool;
	MessagesEditInlineBotMessage(context.Context, *TLMessagesEditInlineBotMessage) (*Bool, error)
	// messages.getBotCallbackAnswer#9342ca07 flags:# game:flags.1?true peer:InputPeer msg_id:int data:flags.0?bytes password:flags.2?InputCheckPasswordSRP = messages.BotCallbackAnswer;
	MessagesGetBotCallbackAnswer(context.Context, *TLMessagesGetBotCallbackAnswer) (*Messages_BotCallbackAnswer, error)
	// messages.setBotCallbackAnswer#d58f130a flags:# alert:flags.1?true query_id:long message:flags.0?string url:flags.2?string cache_time:int = Bool;
	MessagesSetBotCallbackAnswer(context.Context, *TLMessagesSetBotCallbackAnswer) (*Bool, error)
	// messages.setGameScore#8ef8ecc0 flags:# edit_message:flags.0?true force:flags.1?true peer:InputPeer id:int user_id:InputUser score:int = Updates;
	MessagesSetGameScore(context.Context, *TLMessagesSetGameScore) (*Updates, error)
	// messages.setInlineGameScore#15ad9f64 flags:# edit_message:flags.0?true force:flags.1?true id:InputBotInlineMessageID user_id:InputUser score:int = Bool;
	MessagesSetInlineGameScore(context.Context, *TLMessagesSetInlineGameScore) (*Bool, error)
	// messages.getGameHighScores#e822649d peer:InputPeer id:int user_id:InputUser = messages.HighScores;
	MessagesGetGameHighScores(context.Context, *TLMessagesGetGameHighScores) (*Messages_HighScores, error)
	// messages.getInlineGameHighScores#f635e1b id:InputBotInlineMessageID user_id:InputUser = messages.HighScores;
	MessagesGetInlineGameHighScores(context.Context, *TLMessagesGetInlineGameHighScores) (*Messages_HighScores, error)
	// messages.setBotShippingResults#e5f672fa flags:# query_id:long error:flags.0?string shipping_options:flags.1?Vector<ShippingOption> = Bool;
	MessagesSetBotShippingResults(context.Context, *TLMessagesSetBotShippingResults) (*Bool, error)
	// messages.setBotPrecheckoutResults#9c2dd95 flags:# success:flags.1?true query_id:long error:flags.0?string = Bool;
	MessagesSetBotPrecheckoutResults(context.Context, *TLMessagesSetBotPrecheckoutResults) (*Bool, error)
}

func RegisterRPCMessagesBotServer(s *grpc.Server, srv RPCMessagesBotServer) {
	s.RegisterService(&_RPCMessagesBot_serviceDesc, srv)
}

func _RPCMessagesBot_MessagesStartBot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesStartBot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesStartBot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesStartBot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesStartBot(ctx, req.(*TLMessagesStartBot))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesGetInlineBotResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetInlineBotResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesGetInlineBotResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesGetInlineBotResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesGetInlineBotResults(ctx, req.(*TLMessagesGetInlineBotResults))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesSetInlineBotResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetInlineBotResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesSetInlineBotResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesSetInlineBotResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesSetInlineBotResults(ctx, req.(*TLMessagesSetInlineBotResults))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesSendInlineBotResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendInlineBotResult)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesSendInlineBotResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesSendInlineBotResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesSendInlineBotResult(ctx, req.(*TLMessagesSendInlineBotResult))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesEditInlineBotMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditInlineBotMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesEditInlineBotMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesEditInlineBotMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesEditInlineBotMessage(ctx, req.(*TLMessagesEditInlineBotMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesGetBotCallbackAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetBotCallbackAnswer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesGetBotCallbackAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesGetBotCallbackAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesGetBotCallbackAnswer(ctx, req.(*TLMessagesGetBotCallbackAnswer))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesSetBotCallbackAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetBotCallbackAnswer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesSetBotCallbackAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesSetBotCallbackAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesSetBotCallbackAnswer(ctx, req.(*TLMessagesSetBotCallbackAnswer))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesSetGameScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetGameScore)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesSetGameScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesSetGameScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesSetGameScore(ctx, req.(*TLMessagesSetGameScore))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesSetInlineGameScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetInlineGameScore)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesSetInlineGameScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesSetInlineGameScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesSetInlineGameScore(ctx, req.(*TLMessagesSetInlineGameScore))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesGetGameHighScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetGameHighScores)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesGetGameHighScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesGetGameHighScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesGetGameHighScores(ctx, req.(*TLMessagesGetGameHighScores))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesGetInlineGameHighScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetInlineGameHighScores)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesGetInlineGameHighScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesGetInlineGameHighScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesGetInlineGameHighScores(ctx, req.(*TLMessagesGetInlineGameHighScores))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesSetBotShippingResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetBotShippingResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesSetBotShippingResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesSetBotShippingResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesSetBotShippingResults(ctx, req.(*TLMessagesSetBotShippingResults))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessagesBot_MessagesSetBotPrecheckoutResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetBotPrecheckoutResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesBotServer).MessagesSetBotPrecheckoutResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessagesBot/MessagesSetBotPrecheckoutResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesBotServer).MessagesSetBotPrecheckoutResults(ctx, req.(*TLMessagesSetBotPrecheckoutResults))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCMessagesBot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCMessagesBot",
	HandlerType: (*RPCMessagesBotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_startBot",
			Handler:    _RPCMessagesBot_MessagesStartBot_Handler,
		},
		{
			MethodName: "messages_getInlineBotResults",
			Handler:    _RPCMessagesBot_MessagesGetInlineBotResults_Handler,
		},
		{
			MethodName: "messages_setInlineBotResults",
			Handler:    _RPCMessagesBot_MessagesSetInlineBotResults_Handler,
		},
		{
			MethodName: "messages_sendInlineBotResult",
			Handler:    _RPCMessagesBot_MessagesSendInlineBotResult_Handler,
		},
		{
			MethodName: "messages_editInlineBotMessage",
			Handler:    _RPCMessagesBot_MessagesEditInlineBotMessage_Handler,
		},
		{
			MethodName: "messages_getBotCallbackAnswer",
			Handler:    _RPCMessagesBot_MessagesGetBotCallbackAnswer_Handler,
		},
		{
			MethodName: "messages_setBotCallbackAnswer",
			Handler:    _RPCMessagesBot_MessagesSetBotCallbackAnswer_Handler,
		},
		{
			MethodName: "messages_setGameScore",
			Handler:    _RPCMessagesBot_MessagesSetGameScore_Handler,
		},
		{
			MethodName: "messages_setInlineGameScore",
			Handler:    _RPCMessagesBot_MessagesSetInlineGameScore_Handler,
		},
		{
			MethodName: "messages_getGameHighScores",
			Handler:    _RPCMessagesBot_MessagesGetGameHighScores_Handler,
		},
		{
			MethodName: "messages_getInlineGameHighScores",
			Handler:    _RPCMessagesBot_MessagesGetInlineGameHighScores_Handler,
		},
		{
			MethodName: "messages_setBotShippingResults",
			Handler:    _RPCMessagesBot_MessagesSetBotShippingResults_Handler,
		},
		{
			MethodName: "messages_setBotPrecheckoutResults",
			Handler:    _RPCMessagesBot_MessagesSetBotPrecheckoutResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCHelpClient is the client API for RPCHelp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCHelpClient interface {
	// help.getConfig#c4f9186b = Config;
	HelpGetConfig(ctx context.Context, in *TLHelpGetConfig, opts ...grpc.CallOption) (*Config, error)
	// help.getNearestDc#1fb33026 = NearestDc;
	HelpGetNearestDc(ctx context.Context, in *TLHelpGetNearestDc, opts ...grpc.CallOption) (*NearestDc, error)
	// help.getAppUpdate#522d5a7d source:string = help.AppUpdate;
	HelpGetAppUpdate(ctx context.Context, in *TLHelpGetAppUpdate, opts ...grpc.CallOption) (*Help_AppUpdate, error)
	// help.getInviteText#4d392343 = help.InviteText;
	HelpGetInviteText(ctx context.Context, in *TLHelpGetInviteText, opts ...grpc.CallOption) (*Help_InviteText, error)
	// help.getSupport#9cdf08cd = help.Support;
	HelpGetSupport(ctx context.Context, in *TLHelpGetSupport, opts ...grpc.CallOption) (*Help_Support, error)
	// help.getAppChangelog#9010ef6f prev_app_version:string = Updates;
	HelpGetAppChangelog(ctx context.Context, in *TLHelpGetAppChangelog, opts ...grpc.CallOption) (*Updates, error)
	// help.setBotUpdatesStatus#ec22cfcd pending_updates_count:int message:string = Bool;
	HelpSetBotUpdatesStatus(ctx context.Context, in *TLHelpSetBotUpdatesStatus, opts ...grpc.CallOption) (*Bool, error)
	// help.getCdnConfig#52029342 = CdnConfig;
	HelpGetCdnConfig(ctx context.Context, in *TLHelpGetCdnConfig, opts ...grpc.CallOption) (*CdnConfig, error)
	// help.getRecentMeUrls#3dc0f114 referer:string = help.RecentMeUrls;
	HelpGetRecentMeUrls(ctx context.Context, in *TLHelpGetRecentMeUrls, opts ...grpc.CallOption) (*Help_RecentMeUrls, error)
	// help.getTermsOfServiceUpdate#2ca51fd1 = help.TermsOfServiceUpdate;
	HelpGetTermsOfServiceUpdate(ctx context.Context, in *TLHelpGetTermsOfServiceUpdate, opts ...grpc.CallOption) (*Help_TermsOfServiceUpdate, error)
	// help.acceptTermsOfService#ee72f79a id:DataJSON = Bool;
	HelpAcceptTermsOfService(ctx context.Context, in *TLHelpAcceptTermsOfService, opts ...grpc.CallOption) (*Bool, error)
	// help.getDeepLinkInfo#3fedc75f path:string = help.DeepLinkInfo;
	HelpGetDeepLinkInfo(ctx context.Context, in *TLHelpGetDeepLinkInfo, opts ...grpc.CallOption) (*Help_DeepLinkInfo, error)
	// help.getAppConfig#98914110 = JSONValue;
	HelpGetAppConfig(ctx context.Context, in *TLHelpGetAppConfig, opts ...grpc.CallOption) (*JSONValue, error)
	// help.saveAppLog#6f02f748 events:Vector<InputAppEvent> = Bool;
	HelpSaveAppLog(ctx context.Context, in *TLHelpSaveAppLog, opts ...grpc.CallOption) (*Bool, error)
	// help.getPassportConfig#c661ad08 hash:int = help.PassportConfig;
	HelpGetPassportConfig(ctx context.Context, in *TLHelpGetPassportConfig, opts ...grpc.CallOption) (*Help_PassportConfig, error)
	// help.getSupportName#d360e72c = help.SupportName;
	HelpGetSupportName(ctx context.Context, in *TLHelpGetSupportName, opts ...grpc.CallOption) (*Help_SupportName, error)
	// help.getUserInfo#38a08d3 user_id:InputUser = help.UserInfo;
	HelpGetUserInfo(ctx context.Context, in *TLHelpGetUserInfo, opts ...grpc.CallOption) (*Help_UserInfo, error)
	// help.editUserInfo#66b91b70 user_id:InputUser message:string entities:Vector<MessageEntity> = help.UserInfo;
	HelpEditUserInfo(ctx context.Context, in *TLHelpEditUserInfo, opts ...grpc.CallOption) (*Help_UserInfo, error)
	// help.getPromoData#c0977421 = help.PromoData;
	HelpGetPromoData(ctx context.Context, in *TLHelpGetPromoData, opts ...grpc.CallOption) (*Help_PromoData, error)
	// help.hidePromoData#1e251c95 peer:InputPeer = Bool;
	HelpHidePromoData(ctx context.Context, in *TLHelpHidePromoData, opts ...grpc.CallOption) (*Bool, error)
	// help.dismissSuggestion#77fa99f suggestion:string = Bool;
	HelpDismissSuggestion(ctx context.Context, in *TLHelpDismissSuggestion, opts ...grpc.CallOption) (*Bool, error)
	// help.getCountriesList#735787a8 lang_code:string hash:int = help.CountriesList;
	HelpGetCountriesList(ctx context.Context, in *TLHelpGetCountriesList, opts ...grpc.CallOption) (*Help_CountriesList, error)
	// help.getProxyData#3d7758e1 = help.ProxyData;
	HelpGetProxyData(ctx context.Context, in *TLHelpGetProxyData, opts ...grpc.CallOption) (*Help_ProxyData, error)
	// help.getTermsOfService#8e59b7e7 country_iso2:string = help.TermsOfService;
	HelpGetTermsOfService(ctx context.Context, in *TLHelpGetTermsOfService, opts ...grpc.CallOption) (*Help_TermsOfService, error)
	// help.getScheme#dbb69a9e version:int = Scheme;
	HelpGetScheme(ctx context.Context, in *TLHelpGetScheme, opts ...grpc.CallOption) (*Scheme, error)
	// help.test#c0e202f7 = Bool;
	HelpTest(ctx context.Context, in *TLHelpTest, opts ...grpc.CallOption) (*Bool, error)
}

type rPCHelpClient struct {
	cc *grpc.ClientConn
}

func NewRPCHelpClient(cc *grpc.ClientConn) RPCHelpClient {
	return &rPCHelpClient{cc}
}

func (c *rPCHelpClient) HelpGetConfig(ctx context.Context, in *TLHelpGetConfig, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetNearestDc(ctx context.Context, in *TLHelpGetNearestDc, opts ...grpc.CallOption) (*NearestDc, error) {
	out := new(NearestDc)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getNearestDc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetAppUpdate(ctx context.Context, in *TLHelpGetAppUpdate, opts ...grpc.CallOption) (*Help_AppUpdate, error) {
	out := new(Help_AppUpdate)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getAppUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetInviteText(ctx context.Context, in *TLHelpGetInviteText, opts ...grpc.CallOption) (*Help_InviteText, error) {
	out := new(Help_InviteText)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getInviteText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetSupport(ctx context.Context, in *TLHelpGetSupport, opts ...grpc.CallOption) (*Help_Support, error) {
	out := new(Help_Support)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getSupport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetAppChangelog(ctx context.Context, in *TLHelpGetAppChangelog, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getAppChangelog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpSetBotUpdatesStatus(ctx context.Context, in *TLHelpSetBotUpdatesStatus, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_setBotUpdatesStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetCdnConfig(ctx context.Context, in *TLHelpGetCdnConfig, opts ...grpc.CallOption) (*CdnConfig, error) {
	out := new(CdnConfig)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getCdnConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetRecentMeUrls(ctx context.Context, in *TLHelpGetRecentMeUrls, opts ...grpc.CallOption) (*Help_RecentMeUrls, error) {
	out := new(Help_RecentMeUrls)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getRecentMeUrls", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetTermsOfServiceUpdate(ctx context.Context, in *TLHelpGetTermsOfServiceUpdate, opts ...grpc.CallOption) (*Help_TermsOfServiceUpdate, error) {
	out := new(Help_TermsOfServiceUpdate)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getTermsOfServiceUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpAcceptTermsOfService(ctx context.Context, in *TLHelpAcceptTermsOfService, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_acceptTermsOfService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetDeepLinkInfo(ctx context.Context, in *TLHelpGetDeepLinkInfo, opts ...grpc.CallOption) (*Help_DeepLinkInfo, error) {
	out := new(Help_DeepLinkInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getDeepLinkInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetAppConfig(ctx context.Context, in *TLHelpGetAppConfig, opts ...grpc.CallOption) (*JSONValue, error) {
	out := new(JSONValue)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getAppConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpSaveAppLog(ctx context.Context, in *TLHelpSaveAppLog, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_saveAppLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetPassportConfig(ctx context.Context, in *TLHelpGetPassportConfig, opts ...grpc.CallOption) (*Help_PassportConfig, error) {
	out := new(Help_PassportConfig)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getPassportConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetSupportName(ctx context.Context, in *TLHelpGetSupportName, opts ...grpc.CallOption) (*Help_SupportName, error) {
	out := new(Help_SupportName)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getSupportName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetUserInfo(ctx context.Context, in *TLHelpGetUserInfo, opts ...grpc.CallOption) (*Help_UserInfo, error) {
	out := new(Help_UserInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpEditUserInfo(ctx context.Context, in *TLHelpEditUserInfo, opts ...grpc.CallOption) (*Help_UserInfo, error) {
	out := new(Help_UserInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_editUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetPromoData(ctx context.Context, in *TLHelpGetPromoData, opts ...grpc.CallOption) (*Help_PromoData, error) {
	out := new(Help_PromoData)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getPromoData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpHidePromoData(ctx context.Context, in *TLHelpHidePromoData, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_hidePromoData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpDismissSuggestion(ctx context.Context, in *TLHelpDismissSuggestion, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_dismissSuggestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetCountriesList(ctx context.Context, in *TLHelpGetCountriesList, opts ...grpc.CallOption) (*Help_CountriesList, error) {
	out := new(Help_CountriesList)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getCountriesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetProxyData(ctx context.Context, in *TLHelpGetProxyData, opts ...grpc.CallOption) (*Help_ProxyData, error) {
	out := new(Help_ProxyData)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getProxyData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetTermsOfService(ctx context.Context, in *TLHelpGetTermsOfService, opts ...grpc.CallOption) (*Help_TermsOfService, error) {
	out := new(Help_TermsOfService)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getTermsOfService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpGetScheme(ctx context.Context, in *TLHelpGetScheme, opts ...grpc.CallOption) (*Scheme, error) {
	out := new(Scheme)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_getScheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCHelpClient) HelpTest(ctx context.Context, in *TLHelpTest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCHelp/help_test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCHelpServer is the server API for RPCHelp service.
type RPCHelpServer interface {
	// help.getConfig#c4f9186b = Config;
	HelpGetConfig(context.Context, *TLHelpGetConfig) (*Config, error)
	// help.getNearestDc#1fb33026 = NearestDc;
	HelpGetNearestDc(context.Context, *TLHelpGetNearestDc) (*NearestDc, error)
	// help.getAppUpdate#522d5a7d source:string = help.AppUpdate;
	HelpGetAppUpdate(context.Context, *TLHelpGetAppUpdate) (*Help_AppUpdate, error)
	// help.getInviteText#4d392343 = help.InviteText;
	HelpGetInviteText(context.Context, *TLHelpGetInviteText) (*Help_InviteText, error)
	// help.getSupport#9cdf08cd = help.Support;
	HelpGetSupport(context.Context, *TLHelpGetSupport) (*Help_Support, error)
	// help.getAppChangelog#9010ef6f prev_app_version:string = Updates;
	HelpGetAppChangelog(context.Context, *TLHelpGetAppChangelog) (*Updates, error)
	// help.setBotUpdatesStatus#ec22cfcd pending_updates_count:int message:string = Bool;
	HelpSetBotUpdatesStatus(context.Context, *TLHelpSetBotUpdatesStatus) (*Bool, error)
	// help.getCdnConfig#52029342 = CdnConfig;
	HelpGetCdnConfig(context.Context, *TLHelpGetCdnConfig) (*CdnConfig, error)
	// help.getRecentMeUrls#3dc0f114 referer:string = help.RecentMeUrls;
	HelpGetRecentMeUrls(context.Context, *TLHelpGetRecentMeUrls) (*Help_RecentMeUrls, error)
	// help.getTermsOfServiceUpdate#2ca51fd1 = help.TermsOfServiceUpdate;
	HelpGetTermsOfServiceUpdate(context.Context, *TLHelpGetTermsOfServiceUpdate) (*Help_TermsOfServiceUpdate, error)
	// help.acceptTermsOfService#ee72f79a id:DataJSON = Bool;
	HelpAcceptTermsOfService(context.Context, *TLHelpAcceptTermsOfService) (*Bool, error)
	// help.getDeepLinkInfo#3fedc75f path:string = help.DeepLinkInfo;
	HelpGetDeepLinkInfo(context.Context, *TLHelpGetDeepLinkInfo) (*Help_DeepLinkInfo, error)
	// help.getAppConfig#98914110 = JSONValue;
	HelpGetAppConfig(context.Context, *TLHelpGetAppConfig) (*JSONValue, error)
	// help.saveAppLog#6f02f748 events:Vector<InputAppEvent> = Bool;
	HelpSaveAppLog(context.Context, *TLHelpSaveAppLog) (*Bool, error)
	// help.getPassportConfig#c661ad08 hash:int = help.PassportConfig;
	HelpGetPassportConfig(context.Context, *TLHelpGetPassportConfig) (*Help_PassportConfig, error)
	// help.getSupportName#d360e72c = help.SupportName;
	HelpGetSupportName(context.Context, *TLHelpGetSupportName) (*Help_SupportName, error)
	// help.getUserInfo#38a08d3 user_id:InputUser = help.UserInfo;
	HelpGetUserInfo(context.Context, *TLHelpGetUserInfo) (*Help_UserInfo, error)
	// help.editUserInfo#66b91b70 user_id:InputUser message:string entities:Vector<MessageEntity> = help.UserInfo;
	HelpEditUserInfo(context.Context, *TLHelpEditUserInfo) (*Help_UserInfo, error)
	// help.getPromoData#c0977421 = help.PromoData;
	HelpGetPromoData(context.Context, *TLHelpGetPromoData) (*Help_PromoData, error)
	// help.hidePromoData#1e251c95 peer:InputPeer = Bool;
	HelpHidePromoData(context.Context, *TLHelpHidePromoData) (*Bool, error)
	// help.dismissSuggestion#77fa99f suggestion:string = Bool;
	HelpDismissSuggestion(context.Context, *TLHelpDismissSuggestion) (*Bool, error)
	// help.getCountriesList#735787a8 lang_code:string hash:int = help.CountriesList;
	HelpGetCountriesList(context.Context, *TLHelpGetCountriesList) (*Help_CountriesList, error)
	// help.getProxyData#3d7758e1 = help.ProxyData;
	HelpGetProxyData(context.Context, *TLHelpGetProxyData) (*Help_ProxyData, error)
	// help.getTermsOfService#8e59b7e7 country_iso2:string = help.TermsOfService;
	HelpGetTermsOfService(context.Context, *TLHelpGetTermsOfService) (*Help_TermsOfService, error)
	// help.getScheme#dbb69a9e version:int = Scheme;
	HelpGetScheme(context.Context, *TLHelpGetScheme) (*Scheme, error)
	// help.test#c0e202f7 = Bool;
	HelpTest(context.Context, *TLHelpTest) (*Bool, error)
}

func RegisterRPCHelpServer(s *grpc.Server, srv RPCHelpServer) {
	s.RegisterService(&_RPCHelp_serviceDesc, srv)
}

func _RPCHelp_HelpGetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetConfig(ctx, req.(*TLHelpGetConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetNearestDc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetNearestDc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetNearestDc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetNearestDc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetNearestDc(ctx, req.(*TLHelpGetNearestDc))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetAppUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetAppUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetAppUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetAppUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetAppUpdate(ctx, req.(*TLHelpGetAppUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetInviteText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetInviteText)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetInviteText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetInviteText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetInviteText(ctx, req.(*TLHelpGetInviteText))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetSupport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetSupport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetSupport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetSupport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetSupport(ctx, req.(*TLHelpGetSupport))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetAppChangelog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetAppChangelog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetAppChangelog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetAppChangelog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetAppChangelog(ctx, req.(*TLHelpGetAppChangelog))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpSetBotUpdatesStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpSetBotUpdatesStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpSetBotUpdatesStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpSetBotUpdatesStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpSetBotUpdatesStatus(ctx, req.(*TLHelpSetBotUpdatesStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetCdnConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetCdnConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetCdnConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetCdnConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetCdnConfig(ctx, req.(*TLHelpGetCdnConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetRecentMeUrls_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetRecentMeUrls)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetRecentMeUrls(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetRecentMeUrls",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetRecentMeUrls(ctx, req.(*TLHelpGetRecentMeUrls))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetTermsOfServiceUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetTermsOfServiceUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetTermsOfServiceUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetTermsOfServiceUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetTermsOfServiceUpdate(ctx, req.(*TLHelpGetTermsOfServiceUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpAcceptTermsOfService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpAcceptTermsOfService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpAcceptTermsOfService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpAcceptTermsOfService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpAcceptTermsOfService(ctx, req.(*TLHelpAcceptTermsOfService))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetDeepLinkInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetDeepLinkInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetDeepLinkInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetDeepLinkInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetDeepLinkInfo(ctx, req.(*TLHelpGetDeepLinkInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetAppConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetAppConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetAppConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetAppConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetAppConfig(ctx, req.(*TLHelpGetAppConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpSaveAppLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpSaveAppLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpSaveAppLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpSaveAppLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpSaveAppLog(ctx, req.(*TLHelpSaveAppLog))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetPassportConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetPassportConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetPassportConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetPassportConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetPassportConfig(ctx, req.(*TLHelpGetPassportConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetSupportName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetSupportName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetSupportName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetSupportName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetSupportName(ctx, req.(*TLHelpGetSupportName))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetUserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetUserInfo(ctx, req.(*TLHelpGetUserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpEditUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpEditUserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpEditUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpEditUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpEditUserInfo(ctx, req.(*TLHelpEditUserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetPromoData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetPromoData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetPromoData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetPromoData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetPromoData(ctx, req.(*TLHelpGetPromoData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpHidePromoData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpHidePromoData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpHidePromoData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpHidePromoData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpHidePromoData(ctx, req.(*TLHelpHidePromoData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpDismissSuggestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpDismissSuggestion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpDismissSuggestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpDismissSuggestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpDismissSuggestion(ctx, req.(*TLHelpDismissSuggestion))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetCountriesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetCountriesList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetCountriesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetCountriesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetCountriesList(ctx, req.(*TLHelpGetCountriesList))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetProxyData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetProxyData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetProxyData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetProxyData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetProxyData(ctx, req.(*TLHelpGetProxyData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetTermsOfService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetTermsOfService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetTermsOfService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetTermsOfService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetTermsOfService(ctx, req.(*TLHelpGetTermsOfService))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpGetScheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetScheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpGetScheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpGetScheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpGetScheme(ctx, req.(*TLHelpGetScheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCHelp_HelpTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpTest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCHelpServer).HelpTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCHelp/HelpTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCHelpServer).HelpTest(ctx, req.(*TLHelpTest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCHelp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCHelp",
	HandlerType: (*RPCHelpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "help_getConfig",
			Handler:    _RPCHelp_HelpGetConfig_Handler,
		},
		{
			MethodName: "help_getNearestDc",
			Handler:    _RPCHelp_HelpGetNearestDc_Handler,
		},
		{
			MethodName: "help_getAppUpdate",
			Handler:    _RPCHelp_HelpGetAppUpdate_Handler,
		},
		{
			MethodName: "help_getInviteText",
			Handler:    _RPCHelp_HelpGetInviteText_Handler,
		},
		{
			MethodName: "help_getSupport",
			Handler:    _RPCHelp_HelpGetSupport_Handler,
		},
		{
			MethodName: "help_getAppChangelog",
			Handler:    _RPCHelp_HelpGetAppChangelog_Handler,
		},
		{
			MethodName: "help_setBotUpdatesStatus",
			Handler:    _RPCHelp_HelpSetBotUpdatesStatus_Handler,
		},
		{
			MethodName: "help_getCdnConfig",
			Handler:    _RPCHelp_HelpGetCdnConfig_Handler,
		},
		{
			MethodName: "help_getRecentMeUrls",
			Handler:    _RPCHelp_HelpGetRecentMeUrls_Handler,
		},
		{
			MethodName: "help_getTermsOfServiceUpdate",
			Handler:    _RPCHelp_HelpGetTermsOfServiceUpdate_Handler,
		},
		{
			MethodName: "help_acceptTermsOfService",
			Handler:    _RPCHelp_HelpAcceptTermsOfService_Handler,
		},
		{
			MethodName: "help_getDeepLinkInfo",
			Handler:    _RPCHelp_HelpGetDeepLinkInfo_Handler,
		},
		{
			MethodName: "help_getAppConfig",
			Handler:    _RPCHelp_HelpGetAppConfig_Handler,
		},
		{
			MethodName: "help_saveAppLog",
			Handler:    _RPCHelp_HelpSaveAppLog_Handler,
		},
		{
			MethodName: "help_getPassportConfig",
			Handler:    _RPCHelp_HelpGetPassportConfig_Handler,
		},
		{
			MethodName: "help_getSupportName",
			Handler:    _RPCHelp_HelpGetSupportName_Handler,
		},
		{
			MethodName: "help_getUserInfo",
			Handler:    _RPCHelp_HelpGetUserInfo_Handler,
		},
		{
			MethodName: "help_editUserInfo",
			Handler:    _RPCHelp_HelpEditUserInfo_Handler,
		},
		{
			MethodName: "help_getPromoData",
			Handler:    _RPCHelp_HelpGetPromoData_Handler,
		},
		{
			MethodName: "help_hidePromoData",
			Handler:    _RPCHelp_HelpHidePromoData_Handler,
		},
		{
			MethodName: "help_dismissSuggestion",
			Handler:    _RPCHelp_HelpDismissSuggestion_Handler,
		},
		{
			MethodName: "help_getCountriesList",
			Handler:    _RPCHelp_HelpGetCountriesList_Handler,
		},
		{
			MethodName: "help_getProxyData",
			Handler:    _RPCHelp_HelpGetProxyData_Handler,
		},
		{
			MethodName: "help_getTermsOfService",
			Handler:    _RPCHelp_HelpGetTermsOfService_Handler,
		},
		{
			MethodName: "help_getScheme",
			Handler:    _RPCHelp_HelpGetScheme_Handler,
		},
		{
			MethodName: "help_test",
			Handler:    _RPCHelp_HelpTest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCFoldersClient is the client API for RPCFolders service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCFoldersClient interface {
	// folders.editPeerFolders#6847d0ab folder_peers:Vector<InputFolderPeer> = Updates;
	FoldersEditPeerFolders(ctx context.Context, in *TLFoldersEditPeerFolders, opts ...grpc.CallOption) (*Updates, error)
	// folders.deleteFolder#1c295881 folder_id:int = Updates;
	FoldersDeleteFolder(ctx context.Context, in *TLFoldersDeleteFolder, opts ...grpc.CallOption) (*Updates, error)
}

type rPCFoldersClient struct {
	cc *grpc.ClientConn
}

func NewRPCFoldersClient(cc *grpc.ClientConn) RPCFoldersClient {
	return &rPCFoldersClient{cc}
}

func (c *rPCFoldersClient) FoldersEditPeerFolders(ctx context.Context, in *TLFoldersEditPeerFolders, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFolders/folders_editPeerFolders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFoldersClient) FoldersDeleteFolder(ctx context.Context, in *TLFoldersDeleteFolder, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFolders/folders_deleteFolder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCFoldersServer is the server API for RPCFolders service.
type RPCFoldersServer interface {
	// folders.editPeerFolders#6847d0ab folder_peers:Vector<InputFolderPeer> = Updates;
	FoldersEditPeerFolders(context.Context, *TLFoldersEditPeerFolders) (*Updates, error)
	// folders.deleteFolder#1c295881 folder_id:int = Updates;
	FoldersDeleteFolder(context.Context, *TLFoldersDeleteFolder) (*Updates, error)
}

func RegisterRPCFoldersServer(s *grpc.Server, srv RPCFoldersServer) {
	s.RegisterService(&_RPCFolders_serviceDesc, srv)
}

func _RPCFolders_FoldersEditPeerFolders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLFoldersEditPeerFolders)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFoldersServer).FoldersEditPeerFolders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFolders/FoldersEditPeerFolders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFoldersServer).FoldersEditPeerFolders(ctx, req.(*TLFoldersEditPeerFolders))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFolders_FoldersDeleteFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLFoldersDeleteFolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFoldersServer).FoldersDeleteFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFolders/FoldersDeleteFolder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFoldersServer).FoldersDeleteFolder(ctx, req.(*TLFoldersDeleteFolder))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCFolders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCFolders",
	HandlerType: (*RPCFoldersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "folders_editPeerFolders",
			Handler:    _RPCFolders_FoldersEditPeerFolders_Handler,
		},
		{
			MethodName: "folders_deleteFolder",
			Handler:    _RPCFolders_FoldersDeleteFolder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCStatsClient is the client API for RPCStats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCStatsClient interface {
	// stats.getBroadcastStats#ab42441a flags:# dark:flags.0?true channel:InputChannel = stats.BroadcastStats;
	StatsGetBroadcastStats(ctx context.Context, in *TLStatsGetBroadcastStats, opts ...grpc.CallOption) (*Stats_BroadcastStats, error)
	// stats.loadAsyncGraph#621d5fa0 flags:# token:string x:flags.0?long = StatsGraph;
	StatsLoadAsyncGraph(ctx context.Context, in *TLStatsLoadAsyncGraph, opts ...grpc.CallOption) (*StatsGraph, error)
	// stats.getMegagroupStats#dcdf8607 flags:# dark:flags.0?true channel:InputChannel = stats.MegagroupStats;
	StatsGetMegagroupStats(ctx context.Context, in *TLStatsGetMegagroupStats, opts ...grpc.CallOption) (*Stats_MegagroupStats, error)
	// stats.getMessagePublicForwards#5630281b channel:InputChannel msg_id:int offset_rate:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
	StatsGetMessagePublicForwards(ctx context.Context, in *TLStatsGetMessagePublicForwards, opts ...grpc.CallOption) (*Messages_Messages, error)
	// stats.getMessageStats#b6e0a3f5 flags:# dark:flags.0?true channel:InputChannel msg_id:int = stats.MessageStats;
	StatsGetMessageStats(ctx context.Context, in *TLStatsGetMessageStats, opts ...grpc.CallOption) (*Stats_MessageStats, error)
}

type rPCStatsClient struct {
	cc *grpc.ClientConn
}

func NewRPCStatsClient(cc *grpc.ClientConn) RPCStatsClient {
	return &rPCStatsClient{cc}
}

func (c *rPCStatsClient) StatsGetBroadcastStats(ctx context.Context, in *TLStatsGetBroadcastStats, opts ...grpc.CallOption) (*Stats_BroadcastStats, error) {
	out := new(Stats_BroadcastStats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStats/stats_getBroadcastStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStatsClient) StatsLoadAsyncGraph(ctx context.Context, in *TLStatsLoadAsyncGraph, opts ...grpc.CallOption) (*StatsGraph, error) {
	out := new(StatsGraph)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStats/stats_loadAsyncGraph", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStatsClient) StatsGetMegagroupStats(ctx context.Context, in *TLStatsGetMegagroupStats, opts ...grpc.CallOption) (*Stats_MegagroupStats, error) {
	out := new(Stats_MegagroupStats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStats/stats_getMegagroupStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStatsClient) StatsGetMessagePublicForwards(ctx context.Context, in *TLStatsGetMessagePublicForwards, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStats/stats_getMessagePublicForwards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStatsClient) StatsGetMessageStats(ctx context.Context, in *TLStatsGetMessageStats, opts ...grpc.CallOption) (*Stats_MessageStats, error) {
	out := new(Stats_MessageStats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStats/stats_getMessageStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCStatsServer is the server API for RPCStats service.
type RPCStatsServer interface {
	// stats.getBroadcastStats#ab42441a flags:# dark:flags.0?true channel:InputChannel = stats.BroadcastStats;
	StatsGetBroadcastStats(context.Context, *TLStatsGetBroadcastStats) (*Stats_BroadcastStats, error)
	// stats.loadAsyncGraph#621d5fa0 flags:# token:string x:flags.0?long = StatsGraph;
	StatsLoadAsyncGraph(context.Context, *TLStatsLoadAsyncGraph) (*StatsGraph, error)
	// stats.getMegagroupStats#dcdf8607 flags:# dark:flags.0?true channel:InputChannel = stats.MegagroupStats;
	StatsGetMegagroupStats(context.Context, *TLStatsGetMegagroupStats) (*Stats_MegagroupStats, error)
	// stats.getMessagePublicForwards#5630281b channel:InputChannel msg_id:int offset_rate:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
	StatsGetMessagePublicForwards(context.Context, *TLStatsGetMessagePublicForwards) (*Messages_Messages, error)
	// stats.getMessageStats#b6e0a3f5 flags:# dark:flags.0?true channel:InputChannel msg_id:int = stats.MessageStats;
	StatsGetMessageStats(context.Context, *TLStatsGetMessageStats) (*Stats_MessageStats, error)
}

func RegisterRPCStatsServer(s *grpc.Server, srv RPCStatsServer) {
	s.RegisterService(&_RPCStats_serviceDesc, srv)
}

func _RPCStats_StatsGetBroadcastStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStatsGetBroadcastStats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatsServer).StatsGetBroadcastStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStats/StatsGetBroadcastStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatsServer).StatsGetBroadcastStats(ctx, req.(*TLStatsGetBroadcastStats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStats_StatsLoadAsyncGraph_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStatsLoadAsyncGraph)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatsServer).StatsLoadAsyncGraph(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStats/StatsLoadAsyncGraph",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatsServer).StatsLoadAsyncGraph(ctx, req.(*TLStatsLoadAsyncGraph))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStats_StatsGetMegagroupStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStatsGetMegagroupStats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatsServer).StatsGetMegagroupStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStats/StatsGetMegagroupStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatsServer).StatsGetMegagroupStats(ctx, req.(*TLStatsGetMegagroupStats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStats_StatsGetMessagePublicForwards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStatsGetMessagePublicForwards)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatsServer).StatsGetMessagePublicForwards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStats/StatsGetMessagePublicForwards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatsServer).StatsGetMessagePublicForwards(ctx, req.(*TLStatsGetMessagePublicForwards))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStats_StatsGetMessageStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStatsGetMessageStats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatsServer).StatsGetMessageStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStats/StatsGetMessageStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatsServer).StatsGetMessageStats(ctx, req.(*TLStatsGetMessageStats))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCStats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCStats",
	HandlerType: (*RPCStatsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "stats_getBroadcastStats",
			Handler:    _RPCStats_StatsGetBroadcastStats_Handler,
		},
		{
			MethodName: "stats_loadAsyncGraph",
			Handler:    _RPCStats_StatsLoadAsyncGraph_Handler,
		},
		{
			MethodName: "stats_getMegagroupStats",
			Handler:    _RPCStats_StatsGetMegagroupStats_Handler,
		},
		{
			MethodName: "stats_getMessagePublicForwards",
			Handler:    _RPCStats_StatsGetMessagePublicForwards_Handler,
		},
		{
			MethodName: "stats_getMessageStats",
			Handler:    _RPCStats_StatsGetMessageStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

func (m *TLInvokeAfterMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeAfterMsg) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if len(m.Query) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i += copy(dAtA[i:], m.Query)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLInvokeAfterMsgs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeAfterMsgs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.MsgIds) > 0 {
		dAtA2 := make([]byte, len(m.MsgIds)*10)
		var j1 int
		for _, num1 := range m.MsgIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j1))
		i += copy(dAtA[i:], dAtA2[:j1])
	}
	if len(m.Query) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i += copy(dAtA[i:], m.Query)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLInitConnection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInitConnection) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ApiId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
	}
	if len(m.DeviceModel) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.DeviceModel)))
		i += copy(dAtA[i:], m.DeviceModel)
	}
	if len(m.SystemVersion) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.SystemVersion)))
		i += copy(dAtA[i:], m.SystemVersion)
	}
	if len(m.AppVersion) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.AppVersion)))
		i += copy(dAtA[i:], m.AppVersion)
	}
	if len(m.SystemLangCode) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.SystemLangCode)))
		i += copy(dAtA[i:], m.SystemLangCode)
	}
	if len(m.LangPack) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i += copy(dAtA[i:], m.LangPack)
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.Proxy != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Proxy.Size()))
		n3, err := m.Proxy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.Params != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Params.Size()))
		n4, err := m.Params.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if len(m.Query) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i += copy(dAtA[i:], m.Query)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLInvokeWithLayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeWithLayer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Layer != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Layer))
	}
	if len(m.Query) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i += copy(dAtA[i:], m.Query)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLInvokeWithoutUpdates) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeWithoutUpdates) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Query) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i += copy(dAtA[i:], m.Query)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLInvokeWithMessagesRange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeWithMessagesRange) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Range != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Range.Size()))
		n5, err := m.Range.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if len(m.Query) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i += copy(dAtA[i:], m.Query)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLInvokeWithTakeout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeWithTakeout) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.TakeoutId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TakeoutId))
	}
	if len(m.Query) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i += copy(dAtA[i:], m.Query)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthSendCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSendCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if m.ApiId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
	}
	if len(m.ApiHash) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ApiHash)))
		i += copy(dAtA[i:], m.ApiHash)
	}
	if m.Settings != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n6, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	if m.AllowFlashcall {
		dAtA[i] = 0x30
		i++
		if m.AllowFlashcall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CurrentNumber != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.CurrentNumber.Size()))
		n7, err := m.CurrentNumber.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthSignUp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSignUp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if len(m.PhoneCodeHash) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i += copy(dAtA[i:], m.PhoneCodeHash)
	}
	if len(m.FirstName) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FirstName)))
		i += copy(dAtA[i:], m.FirstName)
	}
	if len(m.LastName) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LastName)))
		i += copy(dAtA[i:], m.LastName)
	}
	if len(m.PhoneCode) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i += copy(dAtA[i:], m.PhoneCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthSignIn) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSignIn) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if len(m.PhoneCodeHash) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i += copy(dAtA[i:], m.PhoneCodeHash)
	}
	if len(m.PhoneCode) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i += copy(dAtA[i:], m.PhoneCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthLogOut) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthLogOut) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthResetAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthResetAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthExportAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthExportAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.DcId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.DcId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthImportAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthImportAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if len(m.Bytes) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Bytes)))
		i += copy(dAtA[i:], m.Bytes)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthBindTempAuthKey) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthBindTempAuthKey) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.PermAuthKeyId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.PermAuthKeyId))
	}
	if m.Nonce != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Nonce))
	}
	if m.ExpiresAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ExpiresAt))
	}
	if len(m.EncryptedMessage) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.EncryptedMessage)))
		i += copy(dAtA[i:], m.EncryptedMessage)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthImportBotAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthImportBotAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Flags != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
	}
	if m.ApiId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
	}
	if len(m.ApiHash) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ApiHash)))
		i += copy(dAtA[i:], m.ApiHash)
	}
	if len(m.BotAuthToken) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.BotAuthToken)))
		i += copy(dAtA[i:], m.BotAuthToken)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthCheckPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthCheckPassword) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Password != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Password.Size()))
		n8, err := m.Password.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	if len(m.PasswordHash) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PasswordHash)))
		i += copy(dAtA[i:], m.PasswordHash)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthRequestPasswordRecovery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthRequestPasswordRecovery) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthRecoverPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthRecoverPassword) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Code) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i += copy(dAtA[i:], m.Code)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthResendCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthResendCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if len(m.PhoneCodeHash) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i += copy(dAtA[i:], m.PhoneCodeHash)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthCancelCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthCancelCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if len(m.PhoneCodeHash) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i += copy(dAtA[i:], m.PhoneCodeHash)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthDropTempAuthKeys) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthDropTempAuthKeys) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.ExceptAuthKeys) > 0 {
		dAtA10 := make([]byte, len(m.ExceptAuthKeys)*10)
		var j9 int
		for _, num1 := range m.ExceptAuthKeys {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA10[j9] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j9++
			}
			dAtA10[j9] = uint8(num)
			j9++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j9))
		i += copy(dAtA[i:], dAtA10[:j9])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthExportLoginToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthExportLoginToken) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ApiId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
	}
	if len(m.ApiHash) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ApiHash)))
		i += copy(dAtA[i:], m.ApiHash)
	}
	if len(m.ExceptIds) > 0 {
		dAtA12 := make([]byte, len(m.ExceptIds)*10)
		var j11 int
		for _, num1 := range m.ExceptIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA12[j11] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j11++
			}
			dAtA12[j11] = uint8(num)
			j11++
		}
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j11))
		i += copy(dAtA[i:], dAtA12[:j11])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthImportLoginToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthImportLoginToken) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthAcceptLoginToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthAcceptLoginToken) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountRegisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountRegisterDevice) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.NoMuted {
		dAtA[i] = 0x10
		i++
		if m.NoMuted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.TokenType != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TokenType))
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.AppSandbox != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AppSandbox.Size()))
		n13, err := m.AppSandbox.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	if len(m.Secret) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Secret)))
		i += copy(dAtA[i:], m.Secret)
	}
	if len(m.OtherUids) > 0 {
		dAtA15 := make([]byte, len(m.OtherUids)*10)
		var j14 int
		for _, num1 := range m.OtherUids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA15[j14] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j14++
			}
			dAtA15[j14] = uint8(num)
			j14++
		}
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j14))
		i += copy(dAtA[i:], dAtA15[:j14])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUnregisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUnregisterDevice) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.TokenType != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TokenType))
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if len(m.OtherUids) > 0 {
		dAtA17 := make([]byte, len(m.OtherUids)*10)
		var j16 int
		for _, num1 := range m.OtherUids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA17[j16] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j16++
			}
			dAtA17[j16] = uint8(num)
			j16++
		}
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j16))
		i += copy(dAtA[i:], dAtA17[:j16])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdateNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n18, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n18
	}
	if m.Settings != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n19, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n19
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n20, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n20
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountResetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdateProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateProfile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FirstName != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FirstName.Size()))
		n21, err := m.FirstName.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n21
	}
	if m.LastName != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.LastName.Size()))
		n22, err := m.LastName.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n22
	}
	if m.About != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.About.Size()))
		n23, err := m.About.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n23
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdateStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateStatus) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Offline != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offline.Size()))
		n24, err := m.Offline.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n24
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetWallPapersAABB1763) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetWallPapersAABB1763) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountReportPeer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountReportPeer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n25, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n25
	}
	if m.Reason != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Reason.Size()))
		n26, err := m.Reason.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n26
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountCheckUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountCheckUsername) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Username) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i += copy(dAtA[i:], m.Username)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdateUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateUsername) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Username) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i += copy(dAtA[i:], m.Username)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Key != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Key.Size()))
		n27, err := m.Key.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n27
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Key != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Key.Size()))
		n28, err := m.Key.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n28
	}
	if len(m.Rules) > 0 {
		for _, msg := range m.Rules {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountDeleteAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountDeleteAccount) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Reason) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Reason)))
		i += copy(dAtA[i:], m.Reason)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetAccountTTL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAccountTTL) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSetAccountTTL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetAccountTTL) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Ttl != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Ttl.Size()))
		n29, err := m.Ttl.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n29
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSendChangePhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendChangePhoneCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if m.Settings != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n30, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n30
	}
	if m.AllowFlashcall {
		dAtA[i] = 0x20
		i++
		if m.AllowFlashcall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CurrentNumber != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.CurrentNumber.Size()))
		n31, err := m.CurrentNumber.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n31
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountChangePhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountChangePhone) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if len(m.PhoneCodeHash) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i += copy(dAtA[i:], m.PhoneCodeHash)
	}
	if len(m.PhoneCode) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i += copy(dAtA[i:], m.PhoneCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdateDeviceLocked) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateDeviceLocked) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Period != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Period))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountResetAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetPassword) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetPasswordSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetPasswordSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Password != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Password.Size()))
		n32, err := m.Password.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n32
	}
	if len(m.CurrentPasswordHash) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.CurrentPasswordHash)))
		i += copy(dAtA[i:], m.CurrentPasswordHash)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdatePasswordSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdatePasswordSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Password != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Password.Size()))
		n33, err := m.Password.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n33
	}
	if m.NewSettings != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.NewSettings.Size()))
		n34, err := m.NewSettings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n34
	}
	if len(m.CurrentPasswordHash) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.CurrentPasswordHash)))
		i += copy(dAtA[i:], m.CurrentPasswordHash)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSendConfirmPhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendConfirmPhoneCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Hash) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash)))
		i += copy(dAtA[i:], m.Hash)
	}
	if m.Settings != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n35, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n35
	}
	if m.AllowFlashcall {
		dAtA[i] = 0x20
		i++
		if m.AllowFlashcall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CurrentNumber != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.CurrentNumber.Size()))
		n36, err := m.CurrentNumber.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n36
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountConfirmPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountConfirmPhone) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneCodeHash) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i += copy(dAtA[i:], m.PhoneCodeHash)
	}
	if len(m.PhoneCode) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i += copy(dAtA[i:], m.PhoneCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetTmpPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetTmpPassword) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Password != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Password.Size()))
		n37, err := m.Password.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n37
	}
	if m.Period != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Period))
	}
	if len(m.PasswordHash) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PasswordHash)))
		i += copy(dAtA[i:], m.PasswordHash)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetWebAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetWebAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountResetWebAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetWebAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountResetWebAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetWebAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetAllSecureValues) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAllSecureValues) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetSecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetSecureValue) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Types) > 0 {
		for _, msg := range m.Types {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSaveSecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveSecureValue) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Value != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Value.Size()))
		n38, err := m.Value.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n38
	}
	if m.SecureSecretId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.SecureSecretId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountDeleteSecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountDeleteSecureValue) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Types) > 0 {
		for _, msg := range m.Types {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetAuthorizationForm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAuthorizationForm) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.BotId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.BotId))
	}
	if len(m.Scope) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Scope)))
		i += copy(dAtA[i:], m.Scope)
	}
	if len(m.PublicKey) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PublicKey)))
		i += copy(dAtA[i:], m.PublicKey)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountAcceptAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountAcceptAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.BotId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.BotId))
	}
	if len(m.Scope) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Scope)))
		i += copy(dAtA[i:], m.Scope)
	}
	if len(m.PublicKey) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PublicKey)))
		i += copy(dAtA[i:], m.PublicKey)
	}
	if len(m.ValueHashes) > 0 {
		for _, msg := range m.ValueHashes {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Credentials != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Credentials.Size()))
		n39, err := m.Credentials.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n39
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSendVerifyPhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendVerifyPhoneCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if m.Settings != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n40, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n40
	}
	if m.AllowFlashcall {
		dAtA[i] = 0x20
		i++
		if m.AllowFlashcall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CurrentNumber != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.CurrentNumber.Size()))
		n41, err := m.CurrentNumber.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n41
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountVerifyPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountVerifyPhone) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if len(m.PhoneCodeHash) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i += copy(dAtA[i:], m.PhoneCodeHash)
	}
	if len(m.PhoneCode) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i += copy(dAtA[i:], m.PhoneCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSendVerifyEmailCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendVerifyEmailCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountVerifyEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountVerifyEmail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.Code) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i += copy(dAtA[i:], m.Code)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountInitTakeoutSession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountInitTakeoutSession) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Contacts {
		dAtA[i] = 0x10
		i++
		if m.Contacts {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MessageUsers {
		dAtA[i] = 0x18
		i++
		if m.MessageUsers {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MessageChats {
		dAtA[i] = 0x20
		i++
		if m.MessageChats {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MessageMegagroups {
		dAtA[i] = 0x28
		i++
		if m.MessageMegagroups {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MessageChannels {
		dAtA[i] = 0x30
		i++
		if m.MessageChannels {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Files {
		dAtA[i] = 0x38
		i++
		if m.Files {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.FileMaxSize != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileMaxSize.Size()))
		n42, err := m.FileMaxSize.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n42
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountFinishTakeoutSession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountFinishTakeoutSession) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Success {
		dAtA[i] = 0x10
		i++
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountConfirmPasswordEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountConfirmPasswordEmail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Code) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i += copy(dAtA[i:], m.Code)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountResendPasswordEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResendPasswordEmail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountCancelPasswordEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountCancelPasswordEmail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetContactSignUpNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetContactSignUpNotification) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSetContactSignUpNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetContactSignUpNotification) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Silent != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Silent.Size()))
		n43, err := m.Silent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n43
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetNotifyExceptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetNotifyExceptions) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.CompareSound {
		dAtA[i] = 0x10
		i++
		if m.CompareSound {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n44, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n44
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetWallPaper) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Wallpaper != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Wallpaper.Size()))
		n45, err := m.Wallpaper.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n45
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUploadWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUploadWallPaper) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.File != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.File.Size()))
		n46, err := m.File.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n46
	}
	if len(m.MimeType) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.MimeType)))
		i += copy(dAtA[i:], m.MimeType)
	}
	if m.Settings != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n47, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n47
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSaveWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveWallPaper) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Wallpaper != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Wallpaper.Size()))
		n48, err := m.Wallpaper.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n48
	}
	if m.Unsave != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Unsave.Size()))
		n49, err := m.Unsave.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n49
	}
	if m.Settings != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n50, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n50
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountInstallWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountInstallWallPaper) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Wallpaper != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Wallpaper.Size()))
		n51, err := m.Wallpaper.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n51
	}
	if m.Settings != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n52, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n52
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountResetWallPapers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetWallPapers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetAutoDownloadSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAutoDownloadSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSaveAutoDownloadSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveAutoDownloadSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Low {
		dAtA[i] = 0x10
		i++
		if m.Low {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.High {
		dAtA[i] = 0x18
		i++
		if m.High {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Settings != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n53, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n53
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUploadTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUploadTheme) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.File != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.File.Size()))
		n54, err := m.File.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n54
	}
	if m.Thumb != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Thumb.Size()))
		n55, err := m.Thumb.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n55
	}
	if len(m.FileName) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileName)))
		i += copy(dAtA[i:], m.FileName)
	}
	if len(m.MimeType) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.MimeType)))
		i += copy(dAtA[i:], m.MimeType)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountCreateTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountCreateTheme) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Slug) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Slug)))
		i += copy(dAtA[i:], m.Slug)
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.Document != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Document.Size()))
		n56, err := m.Document.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n56
	}
	if m.Settings != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n57, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n57
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdateTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateTheme) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Format) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Format)))
		i += copy(dAtA[i:], m.Format)
	}
	if m.Theme != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Theme.Size()))
		n58, err := m.Theme.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n58
	}
	if m.Slug != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Slug.Size()))
		n59, err := m.Slug.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n59
	}
	if m.Title != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Title.Size()))
		n60, err := m.Title.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n60
	}
	if m.Document != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Document.Size()))
		n61, err := m.Document.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n61
	}
	if m.Settings != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n62, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n62
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSaveTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveTheme) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Theme != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Theme.Size()))
		n63, err := m.Theme.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n63
	}
	if m.Unsave != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Unsave.Size()))
		n64, err := m.Unsave.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n64
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountInstallTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountInstallTheme) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Dark {
		dAtA[i] = 0x10
		i++
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Format != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Format.Size()))
		n65, err := m.Format.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n65
	}
	if m.Theme != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Theme.Size()))
		n66, err := m.Theme.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n66
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetTheme) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Format) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Format)))
		i += copy(dAtA[i:], m.Format)
	}
	if m.Theme != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Theme.Size()))
		n67, err := m.Theme.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n67
	}
	if m.DocumentId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.DocumentId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetThemes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetThemes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Format) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Format)))
		i += copy(dAtA[i:], m.Format)
	}
	if m.Hash != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSetContentSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetContentSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.SensitiveEnabled {
		dAtA[i] = 0x10
		i++
		if m.SensitiveEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetContentSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetContentSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetMultiWallPapers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetMultiWallPapers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Wallpapers) > 0 {
		for _, msg := range m.Wallpapers {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetGlobalPrivacySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetGlobalPrivacySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountSetGlobalPrivacySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetGlobalPrivacySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Settings != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Settings.Size()))
		n68, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n68
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUsersGetUsers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetUsers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, msg := range m.Id {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUsersGetFullUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetFullUser) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n69, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n69
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUsersSetSecureValueErrors) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersSetSecureValueErrors) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n70, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n70
	}
	if len(m.Errors) > 0 {
		for _, msg := range m.Errors {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsGetContactIDs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetContactIDs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsGetStatuses) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetStatuses) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsGetContacts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetContacts) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsImportContacts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsImportContacts) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Contacts) > 0 {
		for _, msg := range m.Contacts {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsDeleteContacts96A0E00) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsDeleteContacts96A0E00) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, msg := range m.Id {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsDeleteByPhones) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsDeleteByPhones) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Phones) > 0 {
		for _, s := range m.Phones {
			dAtA[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsBlock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsBlock) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id_INPUTPEER != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id_INPUTPEER.Size()))
		n71, err := m.Id_INPUTPEER.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n71
	}
	if m.Id_INPUTUSER != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id_INPUTUSER.Size()))
		n72, err := m.Id_INPUTUSER.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n72
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsUnblock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsUnblock) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id_INPUTPEER != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id_INPUTPEER.Size()))
		n73, err := m.Id_INPUTPEER.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n73
	}
	if m.Id_INPUTUSER != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id_INPUTUSER.Size()))
		n74, err := m.Id_INPUTUSER.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n74
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsGetBlocked) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetBlocked) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Offset != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsSearch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsSearch) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.Limit != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsResolveUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsResolveUsername) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Username) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i += copy(dAtA[i:], m.Username)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsGetTopPeers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetTopPeers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Correspondents {
		dAtA[i] = 0x10
		i++
		if m.Correspondents {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.BotsPm {
		dAtA[i] = 0x18
		i++
		if m.BotsPm {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.BotsInline {
		dAtA[i] = 0x20
		i++
		if m.BotsInline {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.PhoneCalls {
		dAtA[i] = 0x28
		i++
		if m.PhoneCalls {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ForwardUsers {
		dAtA[i] = 0x30
		i++
		if m.ForwardUsers {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ForwardChats {
		dAtA[i] = 0x38
		i++
		if m.ForwardChats {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Groups {
		dAtA[i] = 0x40
		i++
		if m.Groups {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Channels {
		dAtA[i] = 0x48
		i++
		if m.Channels {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Offset != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsResetTopPeerRating) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsResetTopPeerRating) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Category != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Category.Size()))
		n75, err := m.Category.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n75
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n76, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n76
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsResetSaved) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsResetSaved) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsGetSaved) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetSaved) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsToggleTopPeers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsToggleTopPeers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Enabled != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Enabled.Size()))
		n77, err := m.Enabled.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n77
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsAddContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsAddContact) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.AddPhonePrivacyException {
		dAtA[i] = 0x10
		i++
		if m.AddPhonePrivacyException {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Id != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n78, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n78
	}
	if len(m.FirstName) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FirstName)))
		i += copy(dAtA[i:], m.FirstName)
	}
	if len(m.LastName) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LastName)))
		i += copy(dAtA[i:], m.LastName)
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsAcceptContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsAcceptContact) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n79, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n79
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsGetLocated) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetLocated) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Background {
		dAtA[i] = 0x10
		i++
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.GeoPoint != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.GeoPoint.Size()))
		n80, err := m.GeoPoint.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n80
	}
	if m.SelfExpires != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.SelfExpires.Size()))
		n81, err := m.SelfExpires.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n81
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsBlockFromReplies) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsBlockFromReplies) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.DeleteMessage {
		dAtA[i] = 0x10
		i++
		if m.DeleteMessage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.DeleteHistory {
		dAtA[i] = 0x18
		i++
		if m.DeleteHistory {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ReportSpam {
		dAtA[i] = 0x20
		i++
		if m.ReportSpam {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Id_VECTORINPUTMESSAGE) > 0 {
		for _, msg := range m.Id_VECTORINPUTMESSAGE {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Id_VECTORINT32) > 0 {
		dAtA83 := make([]byte, len(m.Id_VECTORINT32)*10)
		var j82 int
		for _, num1 := range m.Id_VECTORINT32 {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA83[j82] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j82++
			}
			dAtA83[j82] = uint8(num)
			j82++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j82))
		i += copy(dAtA[i:], dAtA83[:j82])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDialogs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ExcludePinned {
		dAtA[i] = 0x10
		i++
		if m.ExcludePinned {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.FolderId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId.Size()))
		n84, err := m.FolderId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n84
	}
	if m.OffsetDate != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.OffsetPeer != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetPeer.Size()))
		n85, err := m.OffsetPeer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n85
	}
	if m.Limit != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.FeedId != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FeedId.Size()))
		n86, err := m.FeedId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n86
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetHistory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n87, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n87
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.OffsetDate != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
	}
	if m.AddOffset != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.MinId != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSearch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearch) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n88, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n88
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.FromId_FLAGINPUTPEER != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FromId_FLAGINPUTPEER.Size()))
		n89, err := m.FromId_FLAGINPUTPEER.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n89
	}
	if m.TopMsgId != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TopMsgId.Size()))
		n90, err := m.TopMsgId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n90
	}
	if m.Filter != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Filter.Size()))
		n91, err := m.Filter.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n91
	}
	if m.MinDate != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinDate))
	}
	if m.MaxDate != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxDate))
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.MinId != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.FromId_FLAGINPUTUSER != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FromId_FLAGINPUTUSER.Size()))
		n92, err := m.FromId_FLAGINPUTUSER.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n92
	}
	if m.Offset != 0 {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReadHistoryE306D3A) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadHistoryE306D3A) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n93, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n93
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesDeleteHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteHistory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.JustClear {
		dAtA[i] = 0x10
		i++
		if m.JustClear {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Revoke {
		dAtA[i] = 0x18
		i++
		if m.Revoke {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n94, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n94
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesDeleteMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteMessages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Revoke {
		dAtA[i] = 0x10
		i++
		if m.Revoke {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Id) > 0 {
		dAtA96 := make([]byte, len(m.Id)*10)
		var j95 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA96[j95] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j95++
			}
			dAtA96[j95] = uint8(num)
			j95++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j95))
		i += copy(dAtA[i:], dAtA96[:j95])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReceivedMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReceivedMessages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSetTyping) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetTyping) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n97, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n97
	}
	if m.TopMsgId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TopMsgId.Size()))
		n98, err := m.TopMsgId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n98
	}
	if m.Action != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Action.Size()))
		n99, err := m.Action.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n99
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSendMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.NoWebpage {
		dAtA[i] = 0x10
		i++
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Silent {
		dAtA[i] = 0x18
		i++
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Background {
		dAtA[i] = 0x20
		i++
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ClearDraft {
		dAtA[i] = 0x28
		i++
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n100, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n100
	}
	if m.ReplyToMsgId != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId.Size()))
		n101, err := m.ReplyToMsgId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n101
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if m.ReplyMarkup != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyMarkup.Size()))
		n102, err := m.ReplyMarkup.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n102
	}
	if len(m.Entities) > 0 {
		for _, msg := range m.Entities {
			dAtA[i] = 0x5a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ScheduleDate != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate.Size()))
		n103, err := m.ScheduleDate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n103
	}
	if m.TtlSeconds != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TtlSeconds.Size()))
		n104, err := m.TtlSeconds.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n104
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSendMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendMedia) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Silent {
		dAtA[i] = 0x10
		i++
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Background {
		dAtA[i] = 0x18
		i++
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ClearDraft {
		dAtA[i] = 0x20
		i++
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n105, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n105
	}
	if m.ReplyToMsgId != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId.Size()))
		n106, err := m.ReplyToMsgId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n106
	}
	if m.Media != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Media.Size()))
		n107, err := m.Media.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n107
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if m.ReplyMarkup != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyMarkup.Size()))
		n108, err := m.ReplyMarkup.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n108
	}
	if len(m.Entities) > 0 {
		for _, msg := range m.Entities {
			dAtA[i] = 0x5a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ScheduleDate != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate.Size()))
		n109, err := m.ScheduleDate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n109
	}
	if m.TtlSeconds != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TtlSeconds.Size()))
		n110, err := m.TtlSeconds.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n110
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesForwardMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesForwardMessages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Silent {
		dAtA[i] = 0x10
		i++
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Background {
		dAtA[i] = 0x18
		i++
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.WithMyScore {
		dAtA[i] = 0x20
		i++
		if m.WithMyScore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.FromPeer != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FromPeer.Size()))
		n111, err := m.FromPeer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n111
	}
	if len(m.Id) > 0 {
		dAtA113 := make([]byte, len(m.Id)*10)
		var j112 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA113[j112] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j112++
			}
			dAtA113[j112] = uint8(num)
			j112++
		}
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j112))
		i += copy(dAtA[i:], dAtA113[:j112])
	}
	if len(m.RandomId) > 0 {
		dAtA115 := make([]byte, len(m.RandomId)*10)
		var j114 int
		for _, num1 := range m.RandomId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA115[j114] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j114++
			}
			dAtA115[j114] = uint8(num)
			j114++
		}
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j114))
		i += copy(dAtA[i:], dAtA115[:j114])
	}
	if m.ToPeer != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ToPeer.Size()))
		n116, err := m.ToPeer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n116
	}
	if m.ScheduleDate != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate.Size()))
		n117, err := m.ScheduleDate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n117
	}
	if m.Grouped {
		dAtA[i] = 0x50
		i++
		if m.Grouped {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReportSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReportSpam) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n118, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n118
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetPeerSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPeerSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n119, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n119
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReport) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n120, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n120
	}
	if len(m.Id) > 0 {
		dAtA122 := make([]byte, len(m.Id)*10)
		var j121 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA122[j121] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j121++
			}
			dAtA122[j121] = uint8(num)
			j121++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j121))
		i += copy(dAtA[i:], dAtA122[:j121])
	}
	if m.Reason != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Reason.Size()))
		n123, err := m.Reason.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n123
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetChats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetChats) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		dAtA125 := make([]byte, len(m.Id)*10)
		var j124 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA125[j124] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j124++
			}
			dAtA125[j124] = uint8(num)
			j124++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j124))
		i += copy(dAtA[i:], dAtA125[:j124])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetFullChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetFullChat) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesEditChatTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatTitle) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesEditChatPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatPhoto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
	}
	if m.Photo != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Photo.Size()))
		n126, err := m.Photo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n126
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesAddChatUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesAddChatUser) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n127, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n127
	}
	if m.FwdLimit != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FwdLimit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesDeleteChatUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteChatUser) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n128, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n128
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesCreateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesCreateChat) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Users) > 0 {
		for _, msg := range m.Users {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetDhConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDhConfig) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Version != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Version))
	}
	if m.RandomLength != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomLength))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesRequestEncryption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesRequestEncryption) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.UserId != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n129, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n129
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if len(m.GA) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GA)))
		i += copy(dAtA[i:], m.GA)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesAcceptEncryption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesAcceptEncryption) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n130, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n130
	}
	if len(m.GB) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GB)))
		i += copy(dAtA[i:], m.GB)
	}
	if m.KeyFingerprint != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.KeyFingerprint))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesDiscardEncryption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDiscardEncryption) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSetEncryptedTyping) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetEncryptedTyping) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n131, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n131
	}
	if m.Typing != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Typing.Size()))
		n132, err := m.Typing.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n132
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReadEncryptedHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadEncryptedHistory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n133, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n133
	}
	if m.MaxDate != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxDate))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSendEncrypted) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendEncrypted) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Silent {
		dAtA[i] = 0x10
		i++
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n134, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n134
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if len(m.Data) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSendEncryptedFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendEncryptedFile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Silent {
		dAtA[i] = 0x10
		i++
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n135, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n135
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if len(m.Data) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	if m.File != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.File.Size()))
		n136, err := m.File.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n136
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSendEncryptedService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendEncryptedService) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n137, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n137
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if len(m.Data) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReceivedQueue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReceivedQueue) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.MaxQts != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxQts))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReportEncryptedSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReportEncryptedSpam) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n138, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n138
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReadMessageContents) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadMessageContents) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		dAtA140 := make([]byte, len(m.Id)*10)
		var j139 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA140[j139] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j139++
			}
			dAtA140[j139] = uint8(num)
			j139++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j139))
		i += copy(dAtA[i:], dAtA140[:j139])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Emoticon) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Emoticon)))
		i += copy(dAtA[i:], m.Emoticon)
	}
	if m.Hash_INT32 != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash_INT32))
	}
	if m.ExcludeFeatured {
		dAtA[i] = 0x20
		i++
		if m.ExcludeFeatured {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Hash_STRING) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash_STRING)))
		i += copy(dAtA[i:], m.Hash_STRING)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetAllStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAllStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetWebPagePreview) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetWebPagePreview) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if len(m.Entities) > 0 {
		for _, msg := range m.Entities {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesExportChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesExportChatInvite) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n141, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n141
	}
	if m.ChatId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesCheckChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesCheckChatInvite) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Hash) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash)))
		i += copy(dAtA[i:], m.Hash)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesImportChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesImportChatInvite) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Hash) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash)))
		i += copy(dAtA[i:], m.Hash)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetStickerSet) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Stickerset.Size()))
		n142, err := m.Stickerset.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n142
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesInstallStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesInstallStickerSet) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Stickerset.Size()))
		n143, err := m.Stickerset.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n143
	}
	if m.Archived != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Archived.Size()))
		n144, err := m.Archived.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n144
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesUninstallStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUninstallStickerSet) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Stickerset.Size()))
		n145, err := m.Stickerset.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n145
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesStartBot) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesStartBot) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Bot != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Bot.Size()))
		n146, err := m.Bot.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n146
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n147, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n147
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if len(m.StartParam) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.StartParam)))
		i += copy(dAtA[i:], m.StartParam)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetMessagesViews5784D3E1) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessagesViews5784D3E1) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n148, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n148
	}
	if len(m.Id) > 0 {
		dAtA150 := make([]byte, len(m.Id)*10)
		var j149 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA150[j149] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j149++
			}
			dAtA150[j149] = uint8(num)
			j149++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j149))
		i += copy(dAtA[i:], dAtA150[:j149])
	}
	if m.Increment != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Increment.Size()))
		n151, err := m.Increment.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n151
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesEditChatAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n152, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n152
	}
	if m.IsAdmin != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.IsAdmin.Size()))
		n153, err := m.IsAdmin.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n153
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesMigrateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesMigrateChat) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSearchGlobal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearchGlobal) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FolderId != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId.Size()))
		n154, err := m.FolderId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n154
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.Filter != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Filter.Size()))
		n155, err := m.Filter.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n155
	}
	if m.MinDate != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinDate))
	}
	if m.MaxDate != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxDate))
	}
	if m.OffsetRate != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetRate))
	}
	if m.OffsetPeer != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetPeer.Size()))
		n156, err := m.OffsetPeer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n156
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.OffsetDate != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReorderStickerSets) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReorderStickerSets) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Masks {
		dAtA[i] = 0x10
		i++
		if m.Masks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Order) > 0 {
		dAtA158 := make([]byte, len(m.Order)*10)
		var j157 int
		for _, num1 := range m.Order {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA158[j157] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j157++
			}
			dAtA158[j157] = uint8(num)
			j157++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j157))
		i += copy(dAtA[i:], dAtA158[:j157])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetDocumentByHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDocumentByHash) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Sha256) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Sha256)))
		i += copy(dAtA[i:], m.Sha256)
	}
	if m.Size2 != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Size2))
	}
	if len(m.MimeType) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.MimeType)))
		i += copy(dAtA[i:], m.MimeType)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetSavedGifs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSavedGifs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSaveGif) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSaveGif) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n159, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n159
	}
	if m.Unsave != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Unsave.Size()))
		n160, err := m.Unsave.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n160
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetInlineBotResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetInlineBotResults) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Bot != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Bot.Size()))
		n161, err := m.Bot.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n161
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n162, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n162
	}
	if m.GeoPoint != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.GeoPoint.Size()))
		n163, err := m.GeoPoint.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n163
	}
	if len(m.Query) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i += copy(dAtA[i:], m.Query)
	}
	if len(m.Offset) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Offset)))
		i += copy(dAtA[i:], m.Offset)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSetInlineBotResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetInlineBotResults) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Gallery {
		dAtA[i] = 0x10
		i++
		if m.Gallery {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Private {
		dAtA[i] = 0x18
		i++
		if m.Private {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.QueryId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
	}
	if len(m.Results) > 0 {
		for _, msg := range m.Results {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.CacheTime != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.CacheTime))
	}
	if m.NextOffset != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.NextOffset.Size()))
		n164, err := m.NextOffset.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n164
	}
	if m.SwitchPm != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.SwitchPm.Size()))
		n165, err := m.SwitchPm.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n165
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSendInlineBotResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendInlineBotResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Silent {
		dAtA[i] = 0x10
		i++
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Background {
		dAtA[i] = 0x18
		i++
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ClearDraft {
		dAtA[i] = 0x20
		i++
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.HideVia {
		dAtA[i] = 0x28
		i++
		if m.HideVia {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n166, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n166
	}
	if m.ReplyToMsgId != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId.Size()))
		n167, err := m.ReplyToMsgId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n167
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if m.QueryId != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
	}
	if len(m.Id) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.ScheduleDate != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate.Size()))
		n168, err := m.ScheduleDate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n168
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetMessageEditData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessageEditData) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n169, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n169
	}
	if m.Id != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesEditMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.NoWebpage {
		dAtA[i] = 0x10
		i++
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n170, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n170
	}
	if m.Id != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if m.Message != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Message.Size()))
		n171, err := m.Message.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n171
	}
	if m.Media != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Media.Size()))
		n172, err := m.Media.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n172
	}
	if m.ReplyMarkup != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyMarkup.Size()))
		n173, err := m.ReplyMarkup.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n173
	}
	if len(m.Entities) > 0 {
		for _, msg := range m.Entities {
			dAtA[i] = 0x42
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ScheduleDate != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate.Size()))
		n174, err := m.ScheduleDate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n174
	}
	if m.StopGeoLive {
		dAtA[i] = 0x50
		i++
		if m.StopGeoLive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.GeoPoint != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.GeoPoint.Size()))
		n175, err := m.GeoPoint.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n175
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesEditInlineBotMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditInlineBotMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.NoWebpage {
		dAtA[i] = 0x10
		i++
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Id != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n176, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n176
	}
	if m.Message != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Message.Size()))
		n177, err := m.Message.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n177
	}
	if m.Media != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Media.Size()))
		n178, err := m.Media.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n178
	}
	if m.ReplyMarkup != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyMarkup.Size()))
		n179, err := m.ReplyMarkup.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n179
	}
	if len(m.Entities) > 0 {
		for _, msg := range m.Entities {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.StopGeoLive {
		dAtA[i] = 0x40
		i++
		if m.StopGeoLive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.GeoPoint != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.GeoPoint.Size()))
		n180, err := m.GeoPoint.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n180
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetBotCallbackAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetBotCallbackAnswer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Game {
		dAtA[i] = 0x10
		i++
		if m.Game {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n181, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n181
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if len(m.Data) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	if m.Password != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Password.Size()))
		n182, err := m.Password.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n182
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSetBotCallbackAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetBotCallbackAnswer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Alert {
		dAtA[i] = 0x10
		i++
		if m.Alert {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.QueryId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
	}
	if m.Message != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Message.Size()))
		n183, err := m.Message.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n183
	}
	if m.Url != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Url.Size()))
		n184, err := m.Url.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n184
	}
	if m.CacheTime != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.CacheTime))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetPeerDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPeerDialogs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Peers_VECTORINPUTDIALOGPEER) > 0 {
		for _, msg := range m.Peers_VECTORINPUTDIALOGPEER {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Peers_VECTORINPUTPEER) > 0 {
		for _, msg := range m.Peers_VECTORINPUTPEER {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSaveDraft) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSaveDraft) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.NoWebpage {
		dAtA[i] = 0x10
		i++
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ReplyToMsgId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId.Size()))
		n185, err := m.ReplyToMsgId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n185
	}
	if m.Peer != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n186, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n186
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if len(m.Entities) > 0 {
		for _, msg := range m.Entities {
			dAtA[i] = 0x32
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetAllDrafts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAllDrafts) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetFeaturedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetFeaturedStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReadFeaturedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadFeaturedStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		dAtA188 := make([]byte, len(m.Id)*10)
		var j187 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA188[j187] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j187++
			}
			dAtA188[j187] = uint8(num)
			j187++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j187))
		i += copy(dAtA[i:], dAtA188[:j187])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetRecentStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetRecentStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Attached {
		dAtA[i] = 0x10
		i++
		if m.Attached {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Hash != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSaveRecentSticker) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSaveRecentSticker) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Attached {
		dAtA[i] = 0x10
		i++
		if m.Attached {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Id != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n189, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n189
	}
	if m.Unsave != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Unsave.Size()))
		n190, err := m.Unsave.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n190
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesClearRecentStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesClearRecentStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Attached {
		dAtA[i] = 0x10
		i++
		if m.Attached {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetArchivedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetArchivedStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Masks {
		dAtA[i] = 0x10
		i++
		if m.Masks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetMaskStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMaskStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetAttachedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAttachedStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Media != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Media.Size()))
		n191, err := m.Media.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n191
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSetGameScore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetGameScore) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.EditMessage {
		dAtA[i] = 0x10
		i++
		if m.EditMessage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Force {
		dAtA[i] = 0x18
		i++
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n192, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n192
	}
	if m.Id != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if m.UserId != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n193, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n193
	}
	if m.Score != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Score))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSetInlineGameScore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetInlineGameScore) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.EditMessage {
		dAtA[i] = 0x10
		i++
		if m.EditMessage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Force {
		dAtA[i] = 0x18
		i++
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Id != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n194, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n194
	}
	if m.UserId != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n195, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n195
	}
	if m.Score != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Score))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetGameHighScores) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetGameHighScores) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n196, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n196
	}
	if m.Id != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if m.UserId != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n197, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n197
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetInlineGameHighScores) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetInlineGameHighScores) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n198, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n198
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n199, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n199
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetCommonChats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetCommonChats) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.UserId != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n200, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n200
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetAllChats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAllChats) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.ExceptIds) > 0 {
		dAtA202 := make([]byte, len(m.ExceptIds)*10)
		var j201 int
		for _, num1 := range m.ExceptIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA202[j201] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j201++
			}
			dAtA202[j201] = uint8(num)
			j201++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j201))
		i += copy(dAtA[i:], dAtA202[:j201])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetWebPage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetWebPage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Url) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Url)))
		i += copy(dAtA[i:], m.Url)
	}
	if m.Hash != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesToggleDialogPin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesToggleDialogPin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Pinned {
		dAtA[i] = 0x10
		i++
		if m.Pinned {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer_INPUTDIALOGPEER != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer_INPUTDIALOGPEER.Size()))
		n203, err := m.Peer_INPUTDIALOGPEER.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n203
	}
	if m.Peer_INPUTPEER != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer_INPUTPEER.Size()))
		n204, err := m.Peer_INPUTPEER.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n204
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReorderPinnedDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReorderPinnedDialogs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Force {
		dAtA[i] = 0x10
		i++
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.FolderId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
	}
	if len(m.Order_VECTORINPUTDIALOGPEER) > 0 {
		for _, msg := range m.Order_VECTORINPUTDIALOGPEER {
			dAtA[i] = 0x22
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Order_VECTORINPUTPEER) > 0 {
		for _, msg := range m.Order_VECTORINPUTPEER {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetPinnedDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPinnedDialogs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FolderId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSetBotShippingResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetBotShippingResults) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.QueryId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
	}
	if m.Error != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Error.Size()))
		n205, err := m.Error.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n205
	}
	if len(m.ShippingOptions) > 0 {
		for _, msg := range m.ShippingOptions {
			dAtA[i] = 0x22
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSetBotPrecheckoutResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetBotPrecheckoutResults) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Success {
		dAtA[i] = 0x10
		i++
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.QueryId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
	}
	if m.Error != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Error.Size()))
		n206, err := m.Error.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n206
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesUploadMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUploadMedia) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n207, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n207
	}
	if m.Media != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Media.Size()))
		n208, err := m.Media.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n208
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSendScreenshotNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendScreenshotNotification) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n209, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n209
	}
	if m.ReplyToMsgId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId))
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetFavedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetFavedStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesFaveSticker) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesFaveSticker) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n210, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n210
	}
	if m.Unfave != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Unfave.Size()))
		n211, err := m.Unfave.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n211
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetUnreadMentions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetUnreadMentions) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n212, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n212
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.MinId != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReadMentions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadMentions) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n213, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n213
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetRecentLocations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetRecentLocations) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n214, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n214
	}
	if m.Limit != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSendMultiMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendMultiMedia) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Silent {
		dAtA[i] = 0x10
		i++
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Background {
		dAtA[i] = 0x18
		i++
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ClearDraft {
		dAtA[i] = 0x20
		i++
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n215, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n215
	}
	if m.ReplyToMsgId != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId.Size()))
		n216, err := m.ReplyToMsgId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n216
	}
	if len(m.MultiMedia) > 0 {
		for _, msg := range m.MultiMedia {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ScheduleDate != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate.Size()))
		n217, err := m.ScheduleDate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n217
	}
	if m.TtlSeconds != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TtlSeconds.Size()))
		n218, err := m.TtlSeconds.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n218
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesUploadEncryptedFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUploadEncryptedFile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n219, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n219
	}
	if m.File != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.File.Size()))
		n220, err := m.File.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n220
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSearchStickerSets) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearchStickerSets) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ExcludeFeatured {
		dAtA[i] = 0x10
		i++
		if m.ExcludeFeatured {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.Hash != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetSplitRanges) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSplitRanges) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesMarkDialogUnread) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesMarkDialogUnread) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Unread {
		dAtA[i] = 0x10
		i++
		if m.Unread {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n221, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n221
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetDialogUnreadMarks) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDialogUnreadMarks) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesClearAllDrafts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesClearAllDrafts) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesUpdatePinnedMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUpdatePinnedMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Silent {
		dAtA[i] = 0x10
		i++
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Unpin {
		dAtA[i] = 0x18
		i++
		if m.Unpin {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.PmOneside {
		dAtA[i] = 0x20
		i++
		if m.PmOneside {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n222, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n222
	}
	if m.Id != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSendVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendVote) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n223, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n223
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if len(m.Options) > 0 {
		for _, b := range m.Options {
			dAtA[i] = 0x22
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(b)))
			i += copy(dAtA[i:], b)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetPollResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPollResults) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n224, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n224
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetOnlines) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetOnlines) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n225, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n225
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetStatsURL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetStatsURL) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Dark {
		dAtA[i] = 0x10
		i++
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n226, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n226
	}
	if len(m.Params) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Params)))
		i += copy(dAtA[i:], m.Params)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesEditChatAbout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatAbout) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n227, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n227
	}
	if len(m.About) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.About)))
		i += copy(dAtA[i:], m.About)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesEditChatNotice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatNotice) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n228, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n228
	}
	if len(m.Notice) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Notice)))
		i += copy(dAtA[i:], m.Notice)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesEditChatDefaultBannedRights) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatDefaultBannedRights) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n229, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n229
	}
	if m.BannedRights != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.BannedRights.Size()))
		n230, err := m.BannedRights.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n230
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetEmojiKeywords) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiKeywords) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetEmojiKeywordsDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiKeywordsDifference) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.FromVersion != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FromVersion))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetEmojiKeywordsLanguages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiKeywordsLanguages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangCodes) > 0 {
		for _, s := range m.LangCodes {
			dAtA[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetEmojiURL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiURL) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetSearchCounters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSearchCounters) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n231, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n231
	}
	if len(m.Filters) > 0 {
		for _, msg := range m.Filters {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesRequestUrlAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesRequestUrlAuth) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n232, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n232
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.ButtonId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ButtonId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesAcceptUrlAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesAcceptUrlAuth) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.WriteAllowed {
		dAtA[i] = 0x10
		i++
		if m.WriteAllowed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n233, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n233
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.ButtonId != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ButtonId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesHidePeerSettingsBar) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesHidePeerSettingsBar) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n234, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n234
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetScheduledHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetScheduledHistory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n235, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n235
	}
	if m.Hash != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetScheduledMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetScheduledMessages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n236, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n236
	}
	if len(m.Id) > 0 {
		dAtA238 := make([]byte, len(m.Id)*10)
		var j237 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA238[j237] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j237++
			}
			dAtA238[j237] = uint8(num)
			j237++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j237))
		i += copy(dAtA[i:], dAtA238[:j237])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSendScheduledMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendScheduledMessages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n239, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n239
	}
	if len(m.Id) > 0 {
		dAtA241 := make([]byte, len(m.Id)*10)
		var j240 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA241[j240] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j240++
			}
			dAtA241[j240] = uint8(num)
			j240++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j240))
		i += copy(dAtA[i:], dAtA241[:j240])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesDeleteScheduledMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteScheduledMessages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n242, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n242
	}
	if len(m.Id) > 0 {
		dAtA244 := make([]byte, len(m.Id)*10)
		var j243 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA244[j243] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j243++
			}
			dAtA244[j243] = uint8(num)
			j243++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j243))
		i += copy(dAtA[i:], dAtA244[:j243])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetPollVotes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPollVotes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n245, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n245
	}
	if m.Id != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if len(m.Option) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Option)))
		i += copy(dAtA[i:], m.Option)
	}
	if m.Offset != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset.Size()))
		n246, err := m.Offset.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n246
	}
	if m.Limit != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesToggleStickerSets) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesToggleStickerSets) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Uninstall {
		dAtA[i] = 0x10
		i++
		if m.Uninstall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Archive {
		dAtA[i] = 0x18
		i++
		if m.Archive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Unarchive {
		dAtA[i] = 0x20
		i++
		if m.Unarchive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Stickersets) > 0 {
		for _, msg := range m.Stickersets {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetDialogFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDialogFilters) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetSuggestedDialogFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSuggestedDialogFilters) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesUpdateDialogFilter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUpdateDialogFilter) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if m.Filter != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Filter.Size()))
		n247, err := m.Filter.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n247
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesUpdateDialogFiltersOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUpdateDialogFiltersOrder) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Order) > 0 {
		dAtA249 := make([]byte, len(m.Order)*10)
		var j248 int
		for _, num1 := range m.Order {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA249[j248] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j248++
			}
			dAtA249[j248] = uint8(num)
			j248++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j248))
		i += copy(dAtA[i:], dAtA249[:j248])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetOldFeaturedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetOldFeaturedStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Offset != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetReplies) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetReplies) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n250, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n250
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.OffsetDate != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
	}
	if m.AddOffset != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.MinId != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetDiscussionMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDiscussionMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n251, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n251
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReadDiscussion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadDiscussion) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n252, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n252
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.ReadMaxId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReadMaxId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesUnpinAllMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUnpinAllMessages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n253, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n253
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUpdatesGetState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUpdatesGetState) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUpdatesGetDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUpdatesGetDifference) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Pts != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Pts))
	}
	if m.PtsTotalLimit != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.PtsTotalLimit.Size()))
		n254, err := m.PtsTotalLimit.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n254
	}
	if m.Date != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Date))
	}
	if m.Qts != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Qts))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUpdatesGetChannelDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUpdatesGetChannelDifference) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Force {
		dAtA[i] = 0x10
		i++
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Channel != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n255, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n255
	}
	if m.Filter != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Filter.Size()))
		n256, err := m.Filter.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n256
	}
	if m.Pts != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Pts))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhotosUpdateProfilePhoto72D4742C) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosUpdateProfilePhoto72D4742C) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n257, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n257
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhotosUploadProfilePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosUploadProfilePhoto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.File != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.File.Size()))
		n258, err := m.File.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n258
	}
	if m.Video != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Video.Size()))
		n259, err := m.Video.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n259
	}
	if m.VideoStartTs != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.VideoStartTs.Size()))
		n260, err := m.VideoStartTs.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n260
	}
	if len(m.Caption) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Caption)))
		i += copy(dAtA[i:], m.Caption)
	}
	if m.GeoPoint != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.GeoPoint.Size()))
		n261, err := m.GeoPoint.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n261
	}
	if m.Crop != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Crop.Size()))
		n262, err := m.Crop.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n262
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhotosDeletePhotos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosDeletePhotos) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, msg := range m.Id {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhotosGetUserPhotos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosGetUserPhotos) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.UserId != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n263, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n263
	}
	if m.Offset != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUploadSaveFilePart) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadSaveFilePart) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FileId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileId))
	}
	if m.FilePart != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FilePart))
	}
	if len(m.Bytes) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Bytes)))
		i += copy(dAtA[i:], m.Bytes)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUploadGetFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetFile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Precise {
		dAtA[i] = 0x10
		i++
		if m.Precise {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CdnSupported {
		dAtA[i] = 0x18
		i++
		if m.CdnSupported {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Location != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Location.Size()))
		n264, err := m.Location.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n264
	}
	if m.Offset != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUploadSaveBigFilePart) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadSaveBigFilePart) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FileId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileId))
	}
	if m.FilePart != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FilePart))
	}
	if m.FileTotalParts != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileTotalParts))
	}
	if len(m.Bytes) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Bytes)))
		i += copy(dAtA[i:], m.Bytes)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUploadGetWebFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetWebFile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Location != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Location.Size()))
		n265, err := m.Location.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n265
	}
	if m.Offset != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUploadGetCdnFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetCdnFile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.FileToken) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i += copy(dAtA[i:], m.FileToken)
	}
	if m.Offset != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUploadReuploadCdnFile9B2754A8) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadReuploadCdnFile9B2754A8) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.FileToken) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i += copy(dAtA[i:], m.FileToken)
	}
	if len(m.RequestToken) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.RequestToken)))
		i += copy(dAtA[i:], m.RequestToken)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUploadGetCdnFileHashes4DA54231) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetCdnFileHashes4DA54231) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.FileToken) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i += copy(dAtA[i:], m.FileToken)
	}
	if m.Offset != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUploadGetFileHashes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetFileHashes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Location != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Location.Size()))
		n266, err := m.Location.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n266
	}
	if m.Offset != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetConfig) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetNearestDc) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetNearestDc) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetAppUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetAppUpdate) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Source) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Source)))
		i += copy(dAtA[i:], m.Source)
	}
	if len(m.DeviceModel) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.DeviceModel)))
		i += copy(dAtA[i:], m.DeviceModel)
	}
	if len(m.SystemVersion) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.SystemVersion)))
		i += copy(dAtA[i:], m.SystemVersion)
	}
	if len(m.AppVersion) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.AppVersion)))
		i += copy(dAtA[i:], m.AppVersion)
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetInviteText) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetInviteText) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetSupport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetSupport) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetAppChangelog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetAppChangelog) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PrevAppVersion) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PrevAppVersion)))
		i += copy(dAtA[i:], m.PrevAppVersion)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpSetBotUpdatesStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpSetBotUpdatesStatus) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.PendingUpdatesCount != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.PendingUpdatesCount))
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetCdnConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetCdnConfig) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetRecentMeUrls) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetRecentMeUrls) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Referer) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Referer)))
		i += copy(dAtA[i:], m.Referer)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetTermsOfServiceUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetTermsOfServiceUpdate) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpAcceptTermsOfService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpAcceptTermsOfService) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n267, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n267
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetDeepLinkInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetDeepLinkInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Path) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Path)))
		i += copy(dAtA[i:], m.Path)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetAppConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetAppConfig) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpSaveAppLog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpSaveAppLog) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Events) > 0 {
		for _, msg := range m.Events {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetPassportConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetPassportConfig) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetSupportName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetSupportName) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetUserInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetUserInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.UserId != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n268, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n268
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpEditUserInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpEditUserInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.UserId != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n269, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n269
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if len(m.Entities) > 0 {
		for _, msg := range m.Entities {
			dAtA[i] = 0x22
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetPromoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetPromoData) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpHidePromoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpHidePromoData) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n270, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n270
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpDismissSuggestion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpDismissSuggestion) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Suggestion) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Suggestion)))
		i += copy(dAtA[i:], m.Suggestion)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetCountriesList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetCountriesList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.Hash != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsReadHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsReadHistory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n271, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n271
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsDeleteMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteMessages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n272, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n272
	}
	if len(m.Id) > 0 {
		dAtA274 := make([]byte, len(m.Id)*10)
		var j273 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA274[j273] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j273++
			}
			dAtA274[j273] = uint8(num)
			j273++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j273))
		i += copy(dAtA[i:], dAtA274[:j273])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsDeleteUserHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteUserHistory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n275, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n275
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n276, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n276
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsReportSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsReportSpam) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n277, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n277
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n278, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n278
	}
	if len(m.Id) > 0 {
		dAtA280 := make([]byte, len(m.Id)*10)
		var j279 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA280[j279] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j279++
			}
			dAtA280[j279] = uint8(num)
			j279++
		}
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j279))
		i += copy(dAtA[i:], dAtA280[:j279])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetMessages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n281, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n281
	}
	if len(m.Id_VECTORINPUTMESSAGE) > 0 {
		for _, msg := range m.Id_VECTORINPUTMESSAGE {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Id_VECTORINT32) > 0 {
		dAtA283 := make([]byte, len(m.Id_VECTORINT32)*10)
		var j282 int
		for _, num1 := range m.Id_VECTORINT32 {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA283[j282] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j282++
			}
			dAtA283[j282] = uint8(num)
			j282++
		}
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j282))
		i += copy(dAtA[i:], dAtA283[:j282])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetParticipants) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetParticipants) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n284, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n284
	}
	if m.Filter != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Filter.Size()))
		n285, err := m.Filter.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n285
	}
	if m.Offset != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetParticipant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetParticipant) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n286, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n286
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n287, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n287
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetChannels) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, msg := range m.Id {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetFullChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetFullChannel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n288, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n288
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsCreateChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsCreateChannel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Broadcast {
		dAtA[i] = 0x10
		i++
		if m.Broadcast {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Megagroup {
		dAtA[i] = 0x18
		i++
		if m.Megagroup {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.About) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.About)))
		i += copy(dAtA[i:], m.About)
	}
	if len(m.Notice) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Notice)))
		i += copy(dAtA[i:], m.Notice)
	}
	if m.GeoPoint != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.GeoPoint.Size()))
		n289, err := m.GeoPoint.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n289
	}
	if m.Address != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Address.Size()))
		n290, err := m.Address.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n290
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsEditAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n291, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n291
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n292, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n292
	}
	if m.AdminRights_CHATADMINRIGHTS != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AdminRights_CHATADMINRIGHTS.Size()))
		n293, err := m.AdminRights_CHATADMINRIGHTS.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n293
	}
	if len(m.Rank) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Rank)))
		i += copy(dAtA[i:], m.Rank)
	}
	if m.AdminRights_CHANNELADMINRIGHTS != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AdminRights_CHANNELADMINRIGHTS.Size()))
		n294, err := m.AdminRights_CHANNELADMINRIGHTS.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n294
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsEditTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditTitle) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n295, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n295
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsEditPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditPhoto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n296, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n296
	}
	if m.Photo != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Photo.Size()))
		n297, err := m.Photo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n297
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsCheckUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsCheckUsername) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n298, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n298
	}
	if len(m.Username) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i += copy(dAtA[i:], m.Username)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsUpdateUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsUpdateUsername) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n299, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n299
	}
	if len(m.Username) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i += copy(dAtA[i:], m.Username)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsJoinChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsJoinChannel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n300, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n300
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsLeaveChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsLeaveChannel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n301, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n301
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsInviteToChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsInviteToChannel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n302, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n302
	}
	if len(m.Users) > 0 {
		for _, msg := range m.Users {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsDeleteChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteChannel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n303, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n303
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsExportMessageLink) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsExportMessageLink) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Grouped_FLAGBOOLEAN {
		dAtA[i] = 0x10
		i++
		if m.Grouped_FLAGBOOLEAN {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Thread {
		dAtA[i] = 0x18
		i++
		if m.Thread {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Channel != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n304, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n304
	}
	if m.Id != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if m.Grouped_BOOL != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Grouped_BOOL.Size()))
		n305, err := m.Grouped_BOOL.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n305
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsToggleSignatures) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsToggleSignatures) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n306, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n306
	}
	if m.Enabled != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Enabled.Size()))
		n307, err := m.Enabled.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n307
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetAdminedPublicChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetAdminedPublicChannels) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ByLocation {
		dAtA[i] = 0x10
		i++
		if m.ByLocation {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CheckLimit {
		dAtA[i] = 0x18
		i++
		if m.CheckLimit {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsEditBanned) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditBanned) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n308, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n308
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n309, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n309
	}
	if m.BannedRights_CHATBANNEDRIGHTS != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.BannedRights_CHATBANNEDRIGHTS.Size()))
		n310, err := m.BannedRights_CHATBANNEDRIGHTS.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n310
	}
	if m.BannedRights_CHANNELBANNEDRIGHTS != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.BannedRights_CHANNELBANNEDRIGHTS.Size()))
		n311, err := m.BannedRights_CHANNELBANNEDRIGHTS.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n311
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetAdminLog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetAdminLog) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n312, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n312
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.EventsFilter != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.EventsFilter.Size()))
		n313, err := m.EventsFilter.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n313
	}
	if len(m.Admins) > 0 {
		for _, msg := range m.Admins {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.MinId != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsSetStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsSetStickers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n314, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n314
	}
	if m.Stickerset != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Stickerset.Size()))
		n315, err := m.Stickerset.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n315
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsReadMessageContents) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsReadMessageContents) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n316, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n316
	}
	if len(m.Id) > 0 {
		dAtA318 := make([]byte, len(m.Id)*10)
		var j317 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA318[j317] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j317++
			}
			dAtA318[j317] = uint8(num)
			j317++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j317))
		i += copy(dAtA[i:], dAtA318[:j317])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsDeleteHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteHistory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n319, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n319
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsTogglePreHistoryHidden) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsTogglePreHistoryHidden) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n320, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n320
	}
	if m.Enabled != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Enabled.Size()))
		n321, err := m.Enabled.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n321
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetLeftChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetLeftChannels) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Offset != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetGroupsForDiscussion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetGroupsForDiscussion) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsSetDiscussionGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsSetDiscussionGroup) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Broadcast != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Broadcast.Size()))
		n322, err := m.Broadcast.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n322
	}
	if m.Group != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Group.Size()))
		n323, err := m.Group.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n323
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsEditCreator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditCreator) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n324, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n324
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n325, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n325
	}
	if m.Password != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Password.Size()))
		n326, err := m.Password.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n326
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsEditLocation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditLocation) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n327, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n327
	}
	if m.GeoPoint != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.GeoPoint.Size()))
		n328, err := m.GeoPoint.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n328
	}
	if len(m.Address) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Address)))
		i += copy(dAtA[i:], m.Address)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsToggleSlowMode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsToggleSlowMode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n329, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n329
	}
	if m.Seconds != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Seconds))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetInactiveChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetInactiveChannels) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBotsSendCustomRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsSendCustomRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.CustomMethod) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.CustomMethod)))
		i += copy(dAtA[i:], m.CustomMethod)
	}
	if m.Params != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Params.Size()))
		n330, err := m.Params.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n330
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBotsAnswerWebhookJSONQuery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsAnswerWebhookJSONQuery) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.QueryId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
	}
	if m.Data != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Data.Size()))
		n331, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n331
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBotsSetBotCommands) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsSetBotCommands) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Commands) > 0 {
		for _, msg := range m.Commands {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPaymentsGetPaymentForm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetPaymentForm) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPaymentsGetPaymentReceipt) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetPaymentReceipt) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPaymentsValidateRequestedInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsValidateRequestedInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Save {
		dAtA[i] = 0x10
		i++
		if m.Save {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.Info != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Info.Size()))
		n332, err := m.Info.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n332
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPaymentsSendPaymentForm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsSendPaymentForm) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.RequestedInfoId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RequestedInfoId.Size()))
		n333, err := m.RequestedInfoId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n333
	}
	if m.ShippingOptionId != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ShippingOptionId.Size()))
		n334, err := m.ShippingOptionId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n334
	}
	if m.Credentials != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Credentials.Size()))
		n335, err := m.Credentials.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n335
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPaymentsGetSavedInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetSavedInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPaymentsClearSavedInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsClearSavedInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Credentials {
		dAtA[i] = 0x10
		i++
		if m.Credentials {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Info {
		dAtA[i] = 0x18
		i++
		if m.Info {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPaymentsGetBankCardData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetBankCardData) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Number) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Number)))
		i += copy(dAtA[i:], m.Number)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLStickersCreateStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersCreateStickerSet) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Masks {
		dAtA[i] = 0x10
		i++
		if m.Masks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Animated {
		dAtA[i] = 0x18
		i++
		if m.Animated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.UserId != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n336, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n336
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.ShortName) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ShortName)))
		i += copy(dAtA[i:], m.ShortName)
	}
	if m.Thumb != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Thumb.Size()))
		n337, err := m.Thumb.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n337
	}
	if len(m.Stickers) > 0 {
		for _, msg := range m.Stickers {
			dAtA[i] = 0x42
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLStickersRemoveStickerFromSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersRemoveStickerFromSet) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Sticker != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Sticker.Size()))
		n338, err := m.Sticker.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n338
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLStickersChangeStickerPosition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersChangeStickerPosition) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Sticker != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Sticker.Size()))
		n339, err := m.Sticker.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n339
	}
	if m.Position != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Position))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLStickersAddStickerToSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersAddStickerToSet) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Stickerset.Size()))
		n340, err := m.Stickerset.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n340
	}
	if m.Sticker != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Sticker.Size()))
		n341, err := m.Sticker.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n341
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLStickersSetStickerSetThumb) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersSetStickerSetThumb) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Stickerset.Size()))
		n342, err := m.Stickerset.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n342
	}
	if m.Thumb != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Thumb.Size()))
		n343, err := m.Thumb.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n343
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhoneGetCallConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneGetCallConfig) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhoneRequestCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneRequestCall) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Video {
		dAtA[i] = 0x10
		i++
		if m.Video {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.UserId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.UserId.Size()))
		n344, err := m.UserId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n344
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if len(m.GAHash) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GAHash)))
		i += copy(dAtA[i:], m.GAHash)
	}
	if m.Protocol != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Protocol.Size()))
		n345, err := m.Protocol.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n345
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhoneAcceptCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneAcceptCall) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n346, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n346
	}
	if len(m.GB) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GB)))
		i += copy(dAtA[i:], m.GB)
	}
	if m.Protocol != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Protocol.Size()))
		n347, err := m.Protocol.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n347
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhoneConfirmCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneConfirmCall) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n348, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n348
	}
	if len(m.GA) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GA)))
		i += copy(dAtA[i:], m.GA)
	}
	if m.KeyFingerprint != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.KeyFingerprint))
	}
	if m.Protocol != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Protocol.Size()))
		n349, err := m.Protocol.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n349
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhoneReceivedCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneReceivedCall) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n350, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n350
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhoneDiscardCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneDiscardCall) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Video {
		dAtA[i] = 0x10
		i++
		if m.Video {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n351, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n351
	}
	if m.Duration != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Duration))
	}
	if m.Reason != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Reason.Size()))
		n352, err := m.Reason.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n352
	}
	if m.ConnectionId != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ConnectionId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhoneSetCallRating) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneSetCallRating) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.UserInitiative {
		dAtA[i] = 0x10
		i++
		if m.UserInitiative {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Peer != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n353, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n353
	}
	if m.Rating != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Rating))
	}
	if len(m.Comment) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Comment)))
		i += copy(dAtA[i:], m.Comment)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhoneSaveCallDebug) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneSaveCallDebug) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n354, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n354
	}
	if m.Debug != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Debug.Size()))
		n355, err := m.Debug.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n355
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhoneSendSignalingData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneSendSignalingData) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n356, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n356
	}
	if len(m.Data) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLLangpackGetLangPack) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetLangPack) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangPack) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i += copy(dAtA[i:], m.LangPack)
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLLangpackGetStrings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetStrings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangPack) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i += copy(dAtA[i:], m.LangPack)
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if len(m.Keys) > 0 {
		for _, s := range m.Keys {
			dAtA[i] = 0x22
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLLangpackGetDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetDifference) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangPack) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i += copy(dAtA[i:], m.LangPack)
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.FromVersion != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FromVersion))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLLangpackGetLanguages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetLanguages) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangPack) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i += copy(dAtA[i:], m.LangPack)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLLangpackGetLanguage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetLanguage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.LangPack) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i += copy(dAtA[i:], m.LangPack)
	}
	if len(m.LangCode) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i += copy(dAtA[i:], m.LangCode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLFoldersEditPeerFolders) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLFoldersEditPeerFolders) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.FolderPeers) > 0 {
		for _, msg := range m.FolderPeers {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLFoldersDeleteFolder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLFoldersDeleteFolder) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FolderId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLStatsGetBroadcastStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetBroadcastStats) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Dark {
		dAtA[i] = 0x10
		i++
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Channel != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n357, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n357
	}
	if m.TzOffset != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TzOffset))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLStatsLoadAsyncGraph) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsLoadAsyncGraph) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.X != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.X.Size()))
		n358, err := m.X.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n358
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLStatsGetMegagroupStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetMegagroupStats) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Dark {
		dAtA[i] = 0x10
		i++
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Channel != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n359, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n359
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLStatsGetMessagePublicForwards) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetMessagePublicForwards) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n360, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n360
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.OffsetRate != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetRate))
	}
	if m.OffsetPeer != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetPeer.Size()))
		n361, err := m.OffsetPeer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n361
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLStatsGetMessageStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetMessageStats) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Dark {
		dAtA[i] = 0x10
		i++
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Channel != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n362, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n362
	}
	if m.MsgId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLWalletGetInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLWalletGetInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLWalletGetRecords) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLWalletGetRecords) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Type != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Type.Size()))
		n363, err := m.Type.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n363
	}
	if m.Date != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Date.Size()))
		n364, err := m.Date.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n364
	}
	if m.Offset != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetUser) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n365, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n365
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsFollow) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsFollow) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n366, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n366
	}
	if m.Followed {
		dAtA[i] = 0x18
		i++
		if m.Followed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsLike) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsLike) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n367, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n367
	}
	if m.Liked {
		dAtA[i] = 0x18
		i++
		if m.Liked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsSendComment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsSendComment) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n368, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n368
	}
	if len(m.Text) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Text)))
		i += copy(dAtA[i:], m.Text)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsReward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsReward) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.User != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.User))
	}
	if m.Blog != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Blog))
	}
	if m.PaymentPassword != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.PaymentPassword.Size()))
		n369, err := m.PaymentPassword.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n369
	}
	if m.Amount != 0 {
		dAtA[i] = 0x29
		i++
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Amount))))
		i += 8
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetFollows) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetFollows) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n370, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n370
	}
	if m.Offset != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetFans) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetFans) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n371, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n371
	}
	if m.Offset != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsCreateGroupTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsCreateGroupTag) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.Users) > 0 {
		dAtA373 := make([]byte, len(m.Users)*10)
		var j372 int
		for _, num1 := range m.Users {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA373[j372] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j372++
			}
			dAtA373[j372] = uint8(num)
			j372++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j372))
		i += copy(dAtA[i:], dAtA373[:j372])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsDeleteGroupTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsDeleteGroupTag) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.TagIds) > 0 {
		dAtA375 := make([]byte, len(m.TagIds)*10)
		var j374 int
		for _, num1 := range m.TagIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA375[j374] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j374++
			}
			dAtA375[j374] = uint8(num)
			j374++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j374))
		i += copy(dAtA[i:], dAtA375[:j374])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsEditGroupTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsEditGroupTag) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.TagId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TagId))
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsAddGroupTagMember) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsAddGroupTagMember) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.TagId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TagId))
	}
	if len(m.Users) > 0 {
		dAtA377 := make([]byte, len(m.Users)*10)
		var j376 int
		for _, num1 := range m.Users {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA377[j376] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j376++
			}
			dAtA377[j376] = uint8(num)
			j376++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j376))
		i += copy(dAtA[i:], dAtA377[:j376])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsDeleteGroupTagMember) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsDeleteGroupTagMember) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.TagId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TagId))
	}
	if len(m.Users) > 0 {
		dAtA379 := make([]byte, len(m.Users)*10)
		var j378 int
		for _, num1 := range m.Users {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA379[j378] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j378++
			}
			dAtA379[j378] = uint8(num)
			j378++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j378))
		i += copy(dAtA[i:], dAtA379[:j378])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetGroupTags) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetGroupTags) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsSendBlog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsSendBlog) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.VisibleType != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.VisibleType.Size()))
		n380, err := m.VisibleType.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n380
	}
	if len(m.MentionUsers) > 0 {
		dAtA382 := make([]byte, len(m.MentionUsers)*10)
		var j381 int
		for _, num1 := range m.MentionUsers {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA382[j381] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j381++
			}
			dAtA382[j381] = uint8(num)
			j381++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j381))
		i += copy(dAtA[i:], dAtA382[:j381])
	}
	if m.Text != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Text.Size()))
		n383, err := m.Text.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n383
	}
	if len(m.Entities) > 0 {
		for _, msg := range m.Entities {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if m.Content != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Content.Size()))
		n384, err := m.Content.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n384
	}
	if m.GeoPoint != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.GeoPoint.Size()))
		n385, err := m.GeoPoint.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n385
	}
	if m.Address != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Address.Size()))
		n386, err := m.Address.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n386
	}
	if len(m.Topics) > 0 {
		for _, s := range m.Topics {
			dAtA[i] = 0x52
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsDeleteBlog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsDeleteBlog) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Blogs) > 0 {
		dAtA388 := make([]byte, len(m.Blogs)*10)
		var j387 int
		for _, num1 := range m.Blogs {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA388[j387] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j387++
			}
			dAtA388[j387] = uint8(num)
			j387++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j387))
		i += copy(dAtA[i:], dAtA388[:j387])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetBlogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetBlogs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Blogs) > 0 {
		dAtA390 := make([]byte, len(m.Blogs)*10)
		var j389 int
		for _, num1 := range m.Blogs {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA390[j389] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j389++
			}
			dAtA390[j389] = uint8(num)
			j389++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j389))
		i += copy(dAtA[i:], dAtA390[:j389])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetCommentList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetCommentList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Comments) > 0 {
		dAtA392 := make([]byte, len(m.Comments)*10)
		var j391 int
		for _, num1 := range m.Comments {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA392[j391] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j391++
			}
			dAtA392[j391] = uint8(num)
			j391++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j391))
		i += copy(dAtA[i:], dAtA392[:j391])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsReadHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsReadHistory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Pts != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Pts.Size()))
		n393, err := m.Pts.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n393
	}
	if m.ReadId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReadId.Size()))
		n394, err := m.ReadId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n394
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetHistory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.VisibleType != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.VisibleType.Size()))
		n395, err := m.VisibleType.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n395
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetComments) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetComments) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n396, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n396
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetLikes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetLikes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n397, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n397
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetUnreads) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetUnreads) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Pts != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Pts))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetTopics) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetTopics) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FromTopicId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FromTopicId))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBlogsGetHotTopics) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBlogsGetHotTopics) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesGetMessagesViewsC4C8A55D) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessagesViewsC4C8A55D) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n398, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n398
	}
	if len(m.Id) > 0 {
		dAtA400 := make([]byte, len(m.Id)*10)
		var j399 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA400[j399] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j399++
			}
			dAtA400[j399] = uint8(num)
			j399++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j399))
		i += copy(dAtA[i:], dAtA400[:j399])
	}
	if m.Increment != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Increment.Size()))
		n401, err := m.Increment.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n401
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLPhotosUpdateProfilePhotoF0BB5152) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosUpdateProfilePhotoF0BB5152) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n402, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n402
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesSearchGifs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearchGifs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.Offset != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetProxyData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetProxyData) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLWalletSendLiteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLWalletSendLiteRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Body) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Body)))
		i += copy(dAtA[i:], m.Body)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLWalletGetKeySecretSalt) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLWalletGetKeySecretSalt) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Revoke != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Revoke.Size()))
		n403, err := m.Revoke.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n403
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsDeleteContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsDeleteContact) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id.Size()))
		n404, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n404
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsDeleteContacts59AB389E) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsDeleteContacts59AB389E) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, msg := range m.Id {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesHideReportSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesHideReportSpam) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n405, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n405
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetBroadcastsForDiscussion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetBroadcastsForDiscussion) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountGetWallPapersC04CFAC2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetWallPapersC04CFAC2) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesToggleChatAdmins) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesToggleChatAdmins) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
	}
	if m.Enabled != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Enabled.Size()))
		n406, err := m.Enabled.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n406
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsEditAbout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditAbout) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n407, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n407
	}
	if len(m.About) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.About)))
		i += copy(dAtA[i:], m.About)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsExportInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsExportInvite) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n408, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n408
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsToggleInvites) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsToggleInvites) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n409, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n409
	}
	if m.Enabled != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Enabled.Size()))
		n410, err := m.Enabled.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n410
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsUpdatePinnedMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsUpdatePinnedMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Silent {
		dAtA[i] = 0x10
		i++
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Channel != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n411, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n411
	}
	if m.Id != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsExportCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsExportCard) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLContactsImportCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsImportCard) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.ExportCard) > 0 {
		dAtA413 := make([]byte, len(m.ExportCard)*10)
		var j412 int
		for _, num1 := range m.ExportCard {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA413[j412] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j412++
			}
			dAtA413[j412] = uint8(num)
			j412++
		}
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j412))
		i += copy(dAtA[i:], dAtA413[:j412])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthSendInvites) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSendInvites) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumbers) > 0 {
		for _, s := range m.PhoneNumbers {
			dAtA[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetTermsOfService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetTermsOfService) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.CountryIso2) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.CountryIso2)))
		i += copy(dAtA[i:], m.CountryIso2)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthCheckPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthCheckPhone) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetFeed) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetFeed) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.OffsetToMaxRead {
		dAtA[i] = 0x10
		i++
		if m.OffsetToMaxRead {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.FeedId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FeedId))
	}
	if m.OffsetPosition != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetPosition.Size()))
		n414, err := m.OffsetPosition.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n414
	}
	if m.AddOffset != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.MaxPosition != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxPosition.Size()))
		n415, err := m.MaxPosition.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n415
	}
	if m.MinPosition != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinPosition.Size()))
		n416, err := m.MinPosition.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n416
	}
	if m.Hash != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.SourcesHash != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.SourcesHash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsSearchFeed) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsSearchFeed) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FeedId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FeedId))
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.OffsetDate != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
	}
	if m.OffsetPeer != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetPeer.Size()))
		n417, err := m.OffsetPeer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n417
	}
	if m.OffsetId != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsGetFeedSources) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetFeedSources) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FeedId != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FeedId.Size()))
		n418, err := m.FeedId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n418
	}
	if m.Hash != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsChangeFeedBroadcastFFB37511) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsChangeFeedBroadcastFFB37511) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n419, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n419
	}
	if m.FeedId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FeedId.Size()))
		n420, err := m.FeedId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n420
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsSetFeedBroadcastsEA80BFAE) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsSetFeedBroadcastsEA80BFAE) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FeedId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FeedId))
	}
	if len(m.Channels) > 0 {
		for _, msg := range m.Channels {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.AlsoNewlyJoined != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AlsoNewlyJoined.Size()))
		n421, err := m.AlsoNewlyJoined.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n421
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsReadFeed) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsReadFeed) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FeedId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FeedId))
	}
	if m.MaxPosition != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxPosition.Size()))
		n422, err := m.MaxPosition.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n422
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesForwardMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesForwardMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n423, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n423
	}
	if m.Id != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if m.RandomId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUploadReuploadCdnFile1AF91C09) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadReuploadCdnFile1AF91C09) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.FileToken) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i += copy(dAtA[i:], m.FileToken)
	}
	if len(m.RequestToken) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.RequestToken)))
		i += copy(dAtA[i:], m.RequestToken)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUploadGetCdnFileHashesF715C87B) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetCdnFileHashesF715C87B) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.FileToken) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i += copy(dAtA[i:], m.FileToken)
	}
	if m.Offset != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsChangeFeedBroadcast2528871E) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsChangeFeedBroadcast2528871E) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Channel != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Channel.Size()))
		n424, err := m.Channel.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n424
	}
	if m.FeedId != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FeedId.Size()))
		n425, err := m.FeedId.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n425
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLChannelsSetFeedBroadcasts7E91B8F2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsSetFeedBroadcasts7E91B8F2) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.FeedId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FeedId))
	}
	if len(m.Channels) > 0 {
		for _, msg := range m.Channels {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.AlsoNewlyJoined != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AlsoNewlyJoined.Size()))
		n426, err := m.AlsoNewlyJoined.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n426
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLMessagesReadHistoryB04F2510) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadHistoryB04F2510) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Peer != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Peer.Size()))
		n427, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n427
	}
	if m.MaxId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
	}
	if m.Offset != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpGetScheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetScheme) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Version != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Version))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLHelpTest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpTest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountCreatePredefinedUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountCreatePredefinedUser) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if m.FirstName != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FirstName.Size()))
		n428, err := m.FirstName.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n428
	}
	if m.LastName != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.LastName.Size()))
		n429, err := m.LastName.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n429
	}
	if m.Username != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Username.Size()))
		n430, err := m.Username.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n430
	}
	if len(m.Code) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i += copy(dAtA[i:], m.Code)
	}
	if m.Verified {
		dAtA[i] = 0x38
		i++
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdatePredefinedUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdatePredefinedUsername) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if len(m.Username) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i += copy(dAtA[i:], m.Username)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdatePredefinedProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdatePredefinedProfile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if m.FirstName != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FirstName.Size()))
		n431, err := m.FirstName.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n431
	}
	if m.LastName != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.LastName.Size()))
		n432, err := m.LastName.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n432
	}
	if m.About != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.About.Size()))
		n433, err := m.About.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n433
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdateVerified) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateVerified) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if m.Verified {
		dAtA[i] = 0x18
		i++
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdatePredefinedVerified) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdatePredefinedVerified) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if m.Verified {
		dAtA[i] = 0x18
		i++
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAccountUpdatePredefinedCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdatePredefinedCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if len(m.Code) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i += copy(dAtA[i:], m.Code)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLAuthToggleBan) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthToggleBan) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if m.Predefined {
		dAtA[i] = 0x18
		i++
		if m.Predefined {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Expires != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Expires.Size()))
		n434, err := m.Expires.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n434
	}
	if m.Reason != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Reason.Size()))
		n435, err := m.Reason.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n435
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUsersGetPredefinedUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetPredefinedUser) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUsersGetPredefinedUsers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetPredefinedUsers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLUsersGetMe) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetMe) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.Id != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLBizInvokeBizDataRaw) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBizInvokeBizDataRaw) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Constructor != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
	}
	if m.BizData != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.BizData.Size()))
		n436, err := m.BizData.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n436
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_SecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_SecureValue) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_WallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_WallPaper) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_User) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_Int) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_Int) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		dAtA438 := make([]byte, len(m.Datas)*10)
		var j437 int
		for _, num1 := range m.Datas {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA438[j437] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j437++
			}
			dAtA438[j437] = uint8(num)
			j437++
		}
		dAtA[i] = 0xa
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j437))
		i += copy(dAtA[i:], dAtA438[:j437])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_ContactStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_ContactStatus) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_SavedContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_SavedContact) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_ReceivedNotifyMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_ReceivedNotifyMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_Long) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_Long) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		dAtA440 := make([]byte, len(m.Datas)*10)
		var j439 int
		for _, num1 := range m.Datas {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA440[j439] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j439++
			}
			dAtA440[j439] = uint8(num)
			j439++
		}
		dAtA[i] = 0xa
		i++
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j439))
		i += copy(dAtA[i:], dAtA440[:j439])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_StickerSetCovered) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_StickerSetCovered) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_MessageRange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_MessageRange) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_DialogPeer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_DialogPeer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_EmojiLanguage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_EmojiLanguage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_Messages_SearchCounter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_Messages_SearchCounter) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_DialogFilter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_DialogFilter) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_DialogFilterSuggested) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_DialogFilterSuggested) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_FileHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_FileHash) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_LangPackString) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_LangPackString) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_LangPackLanguage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_LangPackLanguage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_CdnFileHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_CdnFileHash) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Vector_PredefinedUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_PredefinedUser) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, msg := range m.Datas {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintSchemaTlSyncService(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *TLInvokeAfterMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInvokeAfterMsgs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.MsgIds) > 0 {
		l = 0
		for _, e := range m.MsgIds {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInitConnection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.DeviceModel)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.SystemVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.AppVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.SystemLangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Proxy != nil {
		l = m.Proxy.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInvokeWithLayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Layer != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Layer))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInvokeWithoutUpdates) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInvokeWithMessagesRange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Range != nil {
		l = m.Range.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInvokeWithTakeout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.TakeoutId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TakeoutId))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSendCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.ApiHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AllowFlashcall {
		n += 2
	}
	if m.CurrentNumber != nil {
		l = m.CurrentNumber.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSignUp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSignIn) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthLogOut) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthResetAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthExportAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.DcId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.DcId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthImportAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	l = len(m.Bytes)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthBindTempAuthKey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.PermAuthKeyId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.PermAuthKeyId))
	}
	if m.Nonce != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Nonce))
	}
	if m.ExpiresAt != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ExpiresAt))
	}
	l = len(m.EncryptedMessage)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthImportBotAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.ApiHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.BotAuthToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthCheckPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PasswordHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthRequestPasswordRecovery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthRecoverPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthResendCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthCancelCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthDropTempAuthKeys) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.ExceptAuthKeys) > 0 {
		l = 0
		for _, e := range m.ExceptAuthKeys {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthExportLoginToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.ApiHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ExceptIds) > 0 {
		l = 0
		for _, e := range m.ExceptIds {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthImportLoginToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthAcceptLoginToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountRegisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.NoMuted {
		n += 2
	}
	if m.TokenType != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TokenType))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AppSandbox != nil {
		l = m.AppSandbox.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Secret)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.OtherUids) > 0 {
		l = 0
		for _, e := range m.OtherUids {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUnregisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.TokenType != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TokenType))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.OtherUids) > 0 {
		l = 0
		for _, e := range m.OtherUids {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FirstName != nil {
		l = m.FirstName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.LastName != nil {
		l = m.LastName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.About != nil {
		l = m.About.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Offline != nil {
		l = m.Offline.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetWallPapersAABB1763) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountReportPeer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountCheckUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Rules) > 0 {
		for _, e := range m.Rules {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountDeleteAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAccountTTL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetAccountTTL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Ttl != nil {
		l = m.Ttl.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendChangePhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AllowFlashcall {
		n += 2
	}
	if m.CurrentNumber != nil {
		l = m.CurrentNumber.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountChangePhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateDeviceLocked) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Period != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Period))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetPasswordSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.CurrentPasswordHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdatePasswordSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.NewSettings != nil {
		l = m.NewSettings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.CurrentPasswordHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendConfirmPhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AllowFlashcall {
		n += 2
	}
	if m.CurrentNumber != nil {
		l = m.CurrentNumber.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountConfirmPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetTmpPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Period != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Period))
	}
	l = len(m.PasswordHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetWebAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetWebAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetWebAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAllSecureValues) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetSecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Types) > 0 {
		for _, e := range m.Types {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveSecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Value != nil {
		l = m.Value.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SecureSecretId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.SecureSecretId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountDeleteSecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Types) > 0 {
		for _, e := range m.Types {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAuthorizationForm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.BotId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.BotId))
	}
	l = len(m.Scope)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountAcceptAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.BotId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.BotId))
	}
	l = len(m.Scope)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ValueHashes) > 0 {
		for _, e := range m.ValueHashes {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.Credentials != nil {
		l = m.Credentials.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendVerifyPhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AllowFlashcall {
		n += 2
	}
	if m.CurrentNumber != nil {
		l = m.CurrentNumber.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountVerifyPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendVerifyEmailCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountVerifyEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountInitTakeoutSession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Contacts {
		n += 2
	}
	if m.MessageUsers {
		n += 2
	}
	if m.MessageChats {
		n += 2
	}
	if m.MessageMegagroups {
		n += 2
	}
	if m.MessageChannels {
		n += 2
	}
	if m.Files {
		n += 2
	}
	if m.FileMaxSize != nil {
		l = m.FileMaxSize.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountFinishTakeoutSession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Success {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountConfirmPasswordEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResendPasswordEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountCancelPasswordEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetContactSignUpNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetContactSignUpNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent != nil {
		l = m.Silent.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetNotifyExceptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.CompareSound {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Wallpaper != nil {
		l = m.Wallpaper.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUploadWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Wallpaper != nil {
		l = m.Wallpaper.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountInstallWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Wallpaper != nil {
		l = m.Wallpaper.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetWallPapers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAutoDownloadSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveAutoDownloadSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Low {
		n += 2
	}
	if m.High {
		n += 2
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUploadTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FileName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountCreateTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Slug)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Document != nil {
		l = m.Document.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Format)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Slug != nil {
		l = m.Slug.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Title != nil {
		l = m.Title.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Document != nil {
		l = m.Document.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountInstallTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Dark {
		n += 2
	}
	if m.Format != nil {
		l = m.Format.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Format)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.DocumentId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.DocumentId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetThemes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Format)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetContentSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.SensitiveEnabled {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetContentSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetMultiWallPapers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Wallpapers) > 0 {
		for _, e := range m.Wallpapers {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetGlobalPrivacySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetGlobalPrivacySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetUsers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetFullUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersSetSecureValueErrors) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Errors) > 0 {
		for _, e := range m.Errors {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetContactIDs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetStatuses) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetContacts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsImportContacts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Contacts) > 0 {
		for _, e := range m.Contacts {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsDeleteContacts96A0E00) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsDeleteByPhones) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Phones) > 0 {
		for _, s := range m.Phones {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsBlock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id_INPUTPEER != nil {
		l = m.Id_INPUTPEER.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id_INPUTUSER != nil {
		l = m.Id_INPUTUSER.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsUnblock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id_INPUTPEER != nil {
		l = m.Id_INPUTPEER.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id_INPUTUSER != nil {
		l = m.Id_INPUTUSER.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetBlocked) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsSearch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsResolveUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetTopPeers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Correspondents {
		n += 2
	}
	if m.BotsPm {
		n += 2
	}
	if m.BotsInline {
		n += 2
	}
	if m.PhoneCalls {
		n += 2
	}
	if m.ForwardUsers {
		n += 2
	}
	if m.ForwardChats {
		n += 2
	}
	if m.Groups {
		n += 2
	}
	if m.Channels {
		n += 2
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsResetTopPeerRating) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Category != nil {
		l = m.Category.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsResetSaved) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetSaved) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsToggleTopPeers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsAddContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.AddPhonePrivacyException {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsAcceptContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetLocated) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Background {
		n += 2
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SelfExpires != nil {
		l = m.SelfExpires.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsBlockFromReplies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.DeleteMessage {
		n += 2
	}
	if m.DeleteHistory {
		n += 2
	}
	if m.ReportSpam {
		n += 2
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id_VECTORINPUTMESSAGE) > 0 {
		for _, e := range m.Id_VECTORINPUTMESSAGE {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if len(m.Id_VECTORINT32) > 0 {
		l = 0
		for _, e := range m.Id_VECTORINT32 {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ExcludePinned {
		n += 2
	}
	if m.FolderId != nil {
		l = m.FolderId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.FeedId != nil {
		l = m.FeedId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FromId_FLAGINPUTPEER != nil {
		l = m.FromId_FLAGINPUTPEER.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TopMsgId != nil {
		l = m.TopMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MinDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinDate))
	}
	if m.MaxDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxDate))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.FromId_FLAGINPUTUSER != nil {
		l = m.FromId_FLAGINPUTUSER.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 2 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadHistoryE306D3A) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.JustClear {
		n += 2
	}
	if m.Revoke {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Revoke {
		n += 2
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReceivedMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetTyping) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TopMsgId != nil {
		l = m.TopMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Action != nil {
		l = m.Action.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != nil {
		l = m.ReplyToMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TtlSeconds != nil {
		l = m.TtlSeconds.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != nil {
		l = m.ReplyToMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TtlSeconds != nil {
		l = m.TtlSeconds.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesForwardMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.WithMyScore {
		n += 2
	}
	if m.FromPeer != nil {
		l = m.FromPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if len(m.RandomId) > 0 {
		l = 0
		for _, e := range m.RandomId {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.ToPeer != nil {
		l = m.ToPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Grouped {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReportSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPeerSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetChats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetFullChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.Photo != nil {
		l = m.Photo.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesAddChatUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FwdLimit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FwdLimit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteChatUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesCreateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDhConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Version != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Version))
	}
	if m.RandomLength != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomLength))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesRequestEncryption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.GA)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesAcceptEncryption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.GB)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.KeyFingerprint != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.KeyFingerprint))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDiscardEncryption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetEncryptedTyping) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Typing != nil {
		l = m.Typing.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadEncryptedHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendEncrypted) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendEncryptedFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendEncryptedService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReceivedQueue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.MaxQts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxQts))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReportEncryptedSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadMessageContents) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Emoticon)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash_INT32 != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash_INT32))
	}
	if m.ExcludeFeatured {
		n += 2
	}
	l = len(m.Hash_STRING)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAllStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetWebPagePreview) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesExportChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesCheckChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesImportChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesInstallStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Archived != nil {
		l = m.Archived.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUninstallStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesStartBot) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Bot != nil {
		l = m.Bot.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.StartParam)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessagesViews5784D3E1) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.Increment != nil {
		l = m.Increment.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.IsAdmin != nil {
		l = m.IsAdmin.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesMigrateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearchGlobal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FolderId != nil {
		l = m.FolderId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MinDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinDate))
	}
	if m.MaxDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxDate))
	}
	if m.OffsetRate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetRate))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReorderStickerSets) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Masks {
		n += 2
	}
	if len(m.Order) > 0 {
		l = 0
		for _, e := range m.Order {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDocumentByHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Sha256)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Size2 != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Size2))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSavedGifs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSaveGif) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetInlineBotResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Bot != nil {
		l = m.Bot.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetInlineBotResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Gallery {
		n += 2
	}
	if m.Private {
		n += 2
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.CacheTime != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.CacheTime))
	}
	if m.NextOffset != nil {
		l = m.NextOffset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SwitchPm != nil {
		l = m.SwitchPm.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendInlineBotResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.HideVia {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != nil {
		l = m.ReplyToMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessageEditData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.StopGeoLive {
		n += 2
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditInlineBotMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.StopGeoLive {
		n += 2
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetBotCallbackAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Game {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetBotCallbackAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Alert {
		n += 2
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Url != nil {
		l = m.Url.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.CacheTime != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.CacheTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPeerDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Peers_VECTORINPUTDIALOGPEER) > 0 {
		for _, e := range m.Peers_VECTORINPUTDIALOGPEER {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if len(m.Peers_VECTORINPUTPEER) > 0 {
		for _, e := range m.Peers_VECTORINPUTPEER {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSaveDraft) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.ReplyToMsgId != nil {
		l = m.ReplyToMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAllDrafts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetFeaturedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadFeaturedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetRecentStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Attached {
		n += 2
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSaveRecentSticker) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Attached {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesClearRecentStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Attached {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetArchivedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Masks {
		n += 2
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMaskStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAttachedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetGameScore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.EditMessage {
		n += 2
	}
	if m.Force {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Score != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Score))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetInlineGameScore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.EditMessage {
		n += 2
	}
	if m.Force {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Score != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Score))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetGameHighScores) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetInlineGameHighScores) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetCommonChats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAllChats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.ExceptIds) > 0 {
		l = 0
		for _, e := range m.ExceptIds {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetWebPage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesToggleDialogPin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Pinned {
		n += 2
	}
	if m.Peer_INPUTDIALOGPEER != nil {
		l = m.Peer_INPUTDIALOGPEER.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer_INPUTPEER != nil {
		l = m.Peer_INPUTPEER.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReorderPinnedDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Force {
		n += 2
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if len(m.Order_VECTORINPUTDIALOGPEER) > 0 {
		for _, e := range m.Order_VECTORINPUTDIALOGPEER {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if len(m.Order_VECTORINPUTPEER) > 0 {
		for _, e := range m.Order_VECTORINPUTPEER {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPinnedDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetBotShippingResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ShippingOptions) > 0 {
		for _, e := range m.ShippingOptions {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetBotPrecheckoutResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Success {
		n += 2
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUploadMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendScreenshotNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReplyToMsgId))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetFavedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesFaveSticker) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unfave != nil {
		l = m.Unfave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetUnreadMentions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadMentions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetRecentLocations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendMultiMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != nil {
		l = m.ReplyToMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.MultiMedia) > 0 {
		for _, e := range m.MultiMedia {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TtlSeconds != nil {
		l = m.TtlSeconds.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUploadEncryptedFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearchStickerSets) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ExcludeFeatured {
		n += 2
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSplitRanges) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesMarkDialogUnread) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Unread {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDialogUnreadMarks) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesClearAllDrafts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUpdatePinnedMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Unpin {
		n += 2
	}
	if m.PmOneside {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if len(m.Options) > 0 {
		for _, b := range m.Options {
			l = len(b)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPollResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetOnlines) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetStatsURL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Dark {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Params)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatAbout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.About)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatNotice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Notice)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatDefaultBannedRights) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BannedRights != nil {
		l = m.BannedRights.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiKeywords) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiKeywordsDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FromVersion != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FromVersion))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiKeywordsLanguages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.LangCodes) > 0 {
		for _, s := range m.LangCodes {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiURL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSearchCounters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Filters) > 0 {
		for _, e := range m.Filters {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesRequestUrlAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.ButtonId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ButtonId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesAcceptUrlAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.WriteAllowed {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.ButtonId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ButtonId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesHidePeerSettingsBar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetScheduledHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetScheduledMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendScheduledMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteScheduledMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPollVotes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	l = len(m.Option)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != nil {
		l = m.Offset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesToggleStickerSets) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Uninstall {
		n += 2
	}
	if m.Archive {
		n += 2
	}
	if m.Unarchive {
		n += 2
	}
	if len(m.Stickersets) > 0 {
		for _, e := range m.Stickersets {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDialogFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSuggestedDialogFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUpdateDialogFilter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUpdateDialogFiltersOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Order) > 0 {
		l = 0
		for _, e := range m.Order {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetOldFeaturedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetReplies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDiscussionMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadDiscussion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.ReadMaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReadMaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUnpinAllMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUpdatesGetState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUpdatesGetDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Pts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Pts))
	}
	if m.PtsTotalLimit != nil {
		l = m.PtsTotalLimit.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Date != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Date))
	}
	if m.Qts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Qts))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUpdatesGetChannelDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Force {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Pts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Pts))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosUpdateProfilePhoto72D4742C) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosUploadProfilePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Video != nil {
		l = m.Video.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.VideoStartTs != nil {
		l = m.VideoStartTs.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Caption)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Crop != nil {
		l = m.Crop.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosDeletePhotos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosGetUserPhotos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadSaveFilePart) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FileId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FileId))
	}
	if m.FilePart != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FilePart))
	}
	l = len(m.Bytes)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Precise {
		n += 2
	}
	if m.CdnSupported {
		n += 2
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadSaveBigFilePart) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FileId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FileId))
	}
	if m.FilePart != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FilePart))
	}
	if m.FileTotalParts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FileTotalParts))
	}
	l = len(m.Bytes)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetWebFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetCdnFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadReuploadCdnFile9B2754A8) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.RequestToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetCdnFileHashes4DA54231) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetFileHashes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetNearestDc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetAppUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.DeviceModel)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.SystemVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.AppVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetInviteText) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetSupport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetAppChangelog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PrevAppVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpSetBotUpdatesStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.PendingUpdatesCount != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.PendingUpdatesCount))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetCdnConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetRecentMeUrls) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Referer)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetTermsOfServiceUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpAcceptTermsOfService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetDeepLinkInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetAppConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpSaveAppLog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Events) > 0 {
		for _, e := range m.Events {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetPassportConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetSupportName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetUserInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpEditUserInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetPromoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpHidePromoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpDismissSuggestion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Suggestion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetCountriesList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsReadHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteUserHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsReportSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id_VECTORINPUTMESSAGE) > 0 {
		for _, e := range m.Id_VECTORINPUTMESSAGE {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if len(m.Id_VECTORINT32) > 0 {
		l = 0
		for _, e := range m.Id_VECTORINT32 {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetParticipants) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetParticipant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetFullChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsCreateChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Broadcast {
		n += 2
	}
	if m.Megagroup {
		n += 2
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.About)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Notice)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AdminRights_CHATADMINRIGHTS != nil {
		l = m.AdminRights_CHATADMINRIGHTS.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Rank)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AdminRights_CHANNELADMINRIGHTS != nil {
		l = m.AdminRights_CHANNELADMINRIGHTS.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Photo != nil {
		l = m.Photo.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsCheckUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsUpdateUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsJoinChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsLeaveChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsInviteToChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsExportMessageLink) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Grouped_FLAGBOOLEAN {
		n += 2
	}
	if m.Thread {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.Grouped_BOOL != nil {
		l = m.Grouped_BOOL.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsToggleSignatures) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetAdminedPublicChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ByLocation {
		n += 2
	}
	if m.CheckLimit {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditBanned) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BannedRights_CHATBANNEDRIGHTS != nil {
		l = m.BannedRights_CHATBANNEDRIGHTS.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BannedRights_CHANNELBANNEDRIGHTS != nil {
		l = m.BannedRights_CHANNELBANNEDRIGHTS.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetAdminLog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.EventsFilter != nil {
		l = m.EventsFilter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Admins) > 0 {
		for _, e := range m.Admins {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsSetStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsReadMessageContents) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsTogglePreHistoryHidden) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetLeftChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetGroupsForDiscussion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsSetDiscussionGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Broadcast != nil {
		l = m.Broadcast.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Group != nil {
		l = m.Group.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditCreator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditLocation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsToggleSlowMode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Seconds != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Seconds))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetInactiveChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsSendCustomRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.CustomMethod)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsAnswerWebhookJSONQuery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsSetBotCommands) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Commands) > 0 {
		for _, e := range m.Commands {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetPaymentForm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetPaymentReceipt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsValidateRequestedInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Save {
		n += 2
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsSendPaymentForm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.RequestedInfoId != nil {
		l = m.RequestedInfoId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ShippingOptionId != nil {
		l = m.ShippingOptionId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Credentials != nil {
		l = m.Credentials.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetSavedInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsClearSavedInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Credentials {
		n += 2
	}
	if m.Info {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetBankCardData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Number)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersCreateStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Masks {
		n += 2
	}
	if m.Animated {
		n += 2
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.ShortName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Stickers) > 0 {
		for _, e := range m.Stickers {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersRemoveStickerFromSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Sticker != nil {
		l = m.Sticker.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersChangeStickerPosition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Sticker != nil {
		l = m.Sticker.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Position != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Position))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersAddStickerToSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Sticker != nil {
		l = m.Sticker.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersSetStickerSetThumb) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneGetCallConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneRequestCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Video {
		n += 2
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.GAHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Protocol != nil {
		l = m.Protocol.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneAcceptCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.GB)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Protocol != nil {
		l = m.Protocol.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneConfirmCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.GA)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.KeyFingerprint != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.KeyFingerprint))
	}
	if m.Protocol != nil {
		l = m.Protocol.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneReceivedCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneDiscardCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Video {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Duration != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Duration))
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ConnectionId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ConnectionId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneSetCallRating) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserInitiative {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Rating != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Rating))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneSaveCallDebug) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Debug != nil {
		l = m.Debug.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneSendSignalingData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetLangPack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetStrings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Keys) > 0 {
		for _, s := range m.Keys {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FromVersion != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FromVersion))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetLanguages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetLanguage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLFoldersEditPeerFolders) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.FolderPeers) > 0 {
		for _, e := range m.FolderPeers {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLFoldersDeleteFolder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetBroadcastStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Dark {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TzOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TzOffset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsLoadAsyncGraph) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.X != nil {
		l = m.X.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetMegagroupStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Dark {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetMessagePublicForwards) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.OffsetRate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetRate))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetMessageStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Dark {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLWalletGetInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLWalletGetRecords) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Type != nil {
		l = m.Type.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Date != nil {
		l = m.Date.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsFollow) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Followed {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsLike) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Liked {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsSendComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsReward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.User != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.User))
	}
	if m.Blog != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Blog))
	}
	if m.PaymentPassword != nil {
		l = m.PaymentPassword.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Amount != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetFollows) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetFans) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsCreateGroupTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Users) > 0 {
		l = 0
		for _, e := range m.Users {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsDeleteGroupTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.TagIds) > 0 {
		l = 0
		for _, e := range m.TagIds {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsEditGroupTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.TagId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TagId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsAddGroupTagMember) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.TagId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TagId))
	}
	if len(m.Users) > 0 {
		l = 0
		for _, e := range m.Users {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsDeleteGroupTagMember) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.TagId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TagId))
	}
	if len(m.Users) > 0 {
		l = 0
		for _, e := range m.Users {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetGroupTags) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsSendBlog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.VisibleType != nil {
		l = m.VisibleType.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.MentionUsers) > 0 {
		l = 0
		for _, e := range m.MentionUsers {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.Text != nil {
		l = m.Text.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.Content != nil {
		l = m.Content.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Topics) > 0 {
		for _, s := range m.Topics {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsDeleteBlog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Blogs) > 0 {
		l = 0
		for _, e := range m.Blogs {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetBlogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Blogs) > 0 {
		l = 0
		for _, e := range m.Blogs {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetCommentList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Comments) > 0 {
		l = 0
		for _, e := range m.Comments {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsReadHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Pts != nil {
		l = m.Pts.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReadId != nil {
		l = m.ReadId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.VisibleType != nil {
		l = m.VisibleType.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetComments) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetLikes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetUnreads) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Pts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Pts))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetTopics) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FromTopicId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FromTopicId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBlogsGetHotTopics) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessagesViewsC4C8A55D) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.Increment != nil {
		l = m.Increment.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosUpdateProfilePhotoF0BB5152) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearchGifs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetProxyData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLWalletSendLiteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLWalletGetKeySecretSalt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Revoke != nil {
		l = m.Revoke.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsDeleteContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsDeleteContacts59AB389E) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesHideReportSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetBroadcastsForDiscussion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetWallPapersC04CFAC2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesToggleChatAdmins) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditAbout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.About)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsExportInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsToggleInvites) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsUpdatePinnedMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsExportCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsImportCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.ExportCard) > 0 {
		l = 0
		for _, e := range m.ExportCard {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSendInvites) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.PhoneNumbers) > 0 {
		for _, s := range m.PhoneNumbers {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetTermsOfService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.CountryIso2)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthCheckPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetFeed) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.OffsetToMaxRead {
		n += 2
	}
	if m.FeedId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FeedId))
	}
	if m.OffsetPosition != nil {
		l = m.OffsetPosition.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxPosition != nil {
		l = m.MaxPosition.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MinPosition != nil {
		l = m.MinPosition.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.SourcesHash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.SourcesHash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsSearchFeed) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FeedId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FeedId))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetFeedSources) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FeedId != nil {
		l = m.FeedId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsChangeFeedBroadcastFFB37511) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FeedId != nil {
		l = m.FeedId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsSetFeedBroadcastsEA80BFAE) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FeedId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FeedId))
	}
	if len(m.Channels) > 0 {
		for _, e := range m.Channels {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.AlsoNewlyJoined != nil {
		l = m.AlsoNewlyJoined.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsReadFeed) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FeedId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FeedId))
	}
	if m.MaxPosition != nil {
		l = m.MaxPosition.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesForwardMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadReuploadCdnFile1AF91C09) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.RequestToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetCdnFileHashesF715C87B) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsChangeFeedBroadcast2528871E) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FeedId != nil {
		l = m.FeedId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsSetFeedBroadcasts7E91B8F2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FeedId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FeedId))
	}
	if len(m.Channels) > 0 {
		for _, e := range m.Channels {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.AlsoNewlyJoined != nil {
		l = m.AlsoNewlyJoined.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadHistoryB04F2510) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetScheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Version != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Version))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpTest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountCreatePredefinedUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FirstName != nil {
		l = m.FirstName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.LastName != nil {
		l = m.LastName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Username != nil {
		l = m.Username.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Verified {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdatePredefinedUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdatePredefinedProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FirstName != nil {
		l = m.FirstName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.LastName != nil {
		l = m.LastName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.About != nil {
		l = m.About.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateVerified) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.Verified {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdatePredefinedVerified) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Verified {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdatePredefinedCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthToggleBan) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Predefined {
		n += 2
	}
	if m.Expires != nil {
		l = m.Expires.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetPredefinedUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetPredefinedUsers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetMe) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBizInvokeBizDataRaw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.BizData != nil {
		l = m.BizData.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_SecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_WallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_Int) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		l = 0
		for _, e := range m.Datas {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_ContactStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_SavedContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_ReceivedNotifyMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_Long) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		l = 0
		for _, e := range m.Datas {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_StickerSetCovered) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_MessageRange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_DialogPeer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_EmojiLanguage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_Messages_SearchCounter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_DialogFilter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_DialogFilterSuggested) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_FileHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_LangPackString) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_LangPackLanguage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_CdnFileHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_PredefinedUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSchemaTlSyncService(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozSchemaTlSyncService(x uint64) (n int) {
	return sovSchemaTlSyncService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TLInvokeAfterMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeAfterMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeAfterMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInvokeAfterMsgs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeAfterMsgs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeAfterMsgs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MsgIds = append(m.MsgIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.MsgIds) == 0 {
					m.MsgIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MsgIds = append(m.MsgIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgIds", wireType)
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInitConnection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_initConnection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_initConnection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceModel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceModel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemLangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemLangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proxy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proxy == nil {
				m.Proxy = &InputClientProxy{}
			}
			if err := m.Proxy.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &JSONValue{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInvokeWithLayer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeWithLayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeWithLayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Layer", wireType)
			}
			m.Layer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Layer |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInvokeWithoutUpdates) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeWithoutUpdates: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeWithoutUpdates: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInvokeWithMessagesRange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeWithMessagesRange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeWithMessagesRange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Range", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Range == nil {
				m.Range = &MessageRange{}
			}
			if err := m.Range.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInvokeWithTakeout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeWithTakeout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeWithTakeout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TakeoutId", wireType)
			}
			m.TakeoutId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TakeoutId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSendCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_sendCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_sendCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowFlashcall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowFlashcall = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CurrentNumber == nil {
				m.CurrentNumber = &Bool{}
			}
			if err := m.CurrentNumber.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSignUp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_signUp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_signUp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSignIn) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_signIn: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_signIn: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthLogOut) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_logOut: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_logOut: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthResetAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_resetAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_resetAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthExportAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_exportAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_exportAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DcId", wireType)
			}
			m.DcId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DcId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthImportAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_importAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_importAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytes = append(m.Bytes[:0], dAtA[iNdEx:postIndex]...)
			if m.Bytes == nil {
				m.Bytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthBindTempAuthKey) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_bindTempAuthKey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_bindTempAuthKey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PermAuthKeyId", wireType)
			}
			m.PermAuthKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PermAuthKeyId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			m.Nonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Nonce |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			m.ExpiresAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiresAt |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EncryptedMessage", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EncryptedMessage = append(m.EncryptedMessage[:0], dAtA[iNdEx:postIndex]...)
			if m.EncryptedMessage == nil {
				m.EncryptedMessage = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthImportBotAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_importBotAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_importBotAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotAuthToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BotAuthToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthCheckPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_checkPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_checkPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PasswordHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PasswordHash = append(m.PasswordHash[:0], dAtA[iNdEx:postIndex]...)
			if m.PasswordHash == nil {
				m.PasswordHash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthRequestPasswordRecovery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_requestPasswordRecovery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_requestPasswordRecovery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthRecoverPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_recoverPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_recoverPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthResendCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_resendCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_resendCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthCancelCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_cancelCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_cancelCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthDropTempAuthKeys) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_dropTempAuthKeys: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_dropTempAuthKeys: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExceptAuthKeys = append(m.ExceptAuthKeys, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExceptAuthKeys) == 0 {
					m.ExceptAuthKeys = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExceptAuthKeys = append(m.ExceptAuthKeys, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExceptAuthKeys", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthExportLoginToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_exportLoginToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_exportLoginToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExceptIds = append(m.ExceptIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExceptIds) == 0 {
					m.ExceptIds = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExceptIds = append(m.ExceptIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExceptIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthImportLoginToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_importLoginToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_importLoginToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = append(m.Token[:0], dAtA[iNdEx:postIndex]...)
			if m.Token == nil {
				m.Token = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthAcceptLoginToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_acceptLoginToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_acceptLoginToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = append(m.Token[:0], dAtA[iNdEx:postIndex]...)
			if m.Token == nil {
				m.Token = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountRegisterDevice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_registerDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_registerDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoMuted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoMuted = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppSandbox", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AppSandbox == nil {
				m.AppSandbox = &Bool{}
			}
			if err := m.AppSandbox.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secret", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secret = append(m.Secret[:0], dAtA[iNdEx:postIndex]...)
			if m.Secret == nil {
				m.Secret = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.OtherUids = append(m.OtherUids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OtherUids) == 0 {
					m.OtherUids = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.OtherUids = append(m.OtherUids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherUids", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUnregisterDevice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_unregisterDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_unregisterDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.OtherUids = append(m.OtherUids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OtherUids) == 0 {
					m.OtherUids = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.OtherUids = append(m.OtherUids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherUids", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateNotifySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputNotifyPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &InputPeerNotifySettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetNotifySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputNotifyPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetNotifySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FirstName == nil {
				m.FirstName = &types.StringValue{}
			}
			if err := m.FirstName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastName == nil {
				m.LastName = &types.StringValue{}
			}
			if err := m.LastName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.About == nil {
				m.About = &types.StringValue{}
			}
			if err := m.About.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offline", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Offline == nil {
				m.Offline = &Bool{}
			}
			if err := m.Offline.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetWallPapersAABB1763) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getWallPapersAABB1763: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getWallPapersAABB1763: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountReportPeer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_reportPeer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_reportPeer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &ReportReason{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountCheckUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_checkUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_checkUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetPrivacy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &InputPrivacyKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetPrivacy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &InputPrivacyKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rules", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rules = append(m.Rules, &InputPrivacyRule{})
			if err := m.Rules[len(m.Rules)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountDeleteAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_deleteAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_deleteAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAccountTTL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAccountTTL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAccountTTL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetAccountTTL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setAccountTTL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setAccountTTL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ttl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ttl == nil {
				m.Ttl = &AccountDaysTTL{}
			}
			if err := m.Ttl.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendChangePhoneCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendChangePhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendChangePhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowFlashcall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowFlashcall = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CurrentNumber == nil {
				m.CurrentNumber = &Bool{}
			}
			if err := m.CurrentNumber.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountChangePhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_changePhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_changePhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateDeviceLocked) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateDeviceLocked: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateDeviceLocked: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
			}
			m.Period = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Period |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetPasswordSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getPasswordSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getPasswordSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentPasswordHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentPasswordHash = append(m.CurrentPasswordHash[:0], dAtA[iNdEx:postIndex]...)
			if m.CurrentPasswordHash == nil {
				m.CurrentPasswordHash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdatePasswordSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updatePasswordSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updatePasswordSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NewSettings == nil {
				m.NewSettings = &Account_PasswordInputSettings{}
			}
			if err := m.NewSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentPasswordHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentPasswordHash = append(m.CurrentPasswordHash[:0], dAtA[iNdEx:postIndex]...)
			if m.CurrentPasswordHash == nil {
				m.CurrentPasswordHash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendConfirmPhoneCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendConfirmPhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendConfirmPhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowFlashcall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowFlashcall = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CurrentNumber == nil {
				m.CurrentNumber = &Bool{}
			}
			if err := m.CurrentNumber.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountConfirmPhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_confirmPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_confirmPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetTmpPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getTmpPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getTmpPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
			}
			m.Period = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Period |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PasswordHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PasswordHash = append(m.PasswordHash[:0], dAtA[iNdEx:postIndex]...)
			if m.PasswordHash == nil {
				m.PasswordHash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetWebAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getWebAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getWebAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetWebAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetWebAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAllSecureValues) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAllSecureValues: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAllSecureValues: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetSecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getSecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getSecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Types", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Types = append(m.Types, &SecureValueType{})
			if err := m.Types[len(m.Types)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveSecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveSecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveSecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Value == nil {
				m.Value = &InputSecureValue{}
			}
			if err := m.Value.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecureSecretId", wireType)
			}
			m.SecureSecretId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SecureSecretId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountDeleteSecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_deleteSecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_deleteSecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Types", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Types = append(m.Types, &SecureValueType{})
			if err := m.Types[len(m.Types)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAuthorizationForm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAuthorizationForm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAuthorizationForm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotId", wireType)
			}
			m.BotId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountAcceptAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_acceptAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_acceptAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotId", wireType)
			}
			m.BotId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValueHashes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValueHashes = append(m.ValueHashes, &SecureValueHash{})
			if err := m.ValueHashes[len(m.ValueHashes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Credentials == nil {
				m.Credentials = &SecureCredentialsEncrypted{}
			}
			if err := m.Credentials.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendVerifyPhoneCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendVerifyPhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendVerifyPhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowFlashcall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowFlashcall = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CurrentNumber == nil {
				m.CurrentNumber = &Bool{}
			}
			if err := m.CurrentNumber.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountVerifyPhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_verifyPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_verifyPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendVerifyEmailCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendVerifyEmailCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendVerifyEmailCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountVerifyEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_verifyEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_verifyEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountInitTakeoutSession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_initTakeoutSession: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_initTakeoutSession: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contacts", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Contacts = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageUsers", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageUsers = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageChats", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageChats = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageMegagroups", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageMegagroups = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageChannels", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageChannels = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Files", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Files = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileMaxSize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FileMaxSize == nil {
				m.FileMaxSize = &types.Int32Value{}
			}
			if err := m.FileMaxSize.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountFinishTakeoutSession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_finishTakeoutSession: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_finishTakeoutSession: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountConfirmPasswordEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_confirmPasswordEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_confirmPasswordEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResendPasswordEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resendPasswordEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resendPasswordEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountCancelPasswordEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_cancelPasswordEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_cancelPasswordEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetContactSignUpNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getContactSignUpNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getContactSignUpNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetContactSignUpNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setContactSignUpNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setContactSignUpNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Silent == nil {
				m.Silent = &Bool{}
			}
			if err := m.Silent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetNotifyExceptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getNotifyExceptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getNotifyExceptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompareSound", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CompareSound = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputNotifyPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Wallpaper == nil {
				m.Wallpaper = &InputWallPaper{}
			}
			if err := m.Wallpaper.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUploadWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_uploadWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_uploadWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &WallPaperSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Wallpaper == nil {
				m.Wallpaper = &InputWallPaper{}
			}
			if err := m.Wallpaper.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &WallPaperSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountInstallWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_installWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_installWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Wallpaper == nil {
				m.Wallpaper = &InputWallPaper{}
			}
			if err := m.Wallpaper.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &WallPaperSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetWallPapers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetWallPapers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetWallPapers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAutoDownloadSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAutoDownloadSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAutoDownloadSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveAutoDownloadSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveAutoDownloadSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveAutoDownloadSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Low", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Low = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field High", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.High = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &AutoDownloadSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUploadTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_uploadTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_uploadTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &InputFile{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountCreateTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_createTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_createTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slug", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Slug = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Document", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Document == nil {
				m.Document = &InputDocument{}
			}
			if err := m.Document.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &InputThemeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slug", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Slug == nil {
				m.Slug = &types.StringValue{}
			}
			if err := m.Slug.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Title == nil {
				m.Title = &types.StringValue{}
			}
			if err := m.Title.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Document", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Document == nil {
				m.Document = &InputDocument{}
			}
			if err := m.Document.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &InputThemeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountInstallTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_installTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_installTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Format == nil {
				m.Format = &types.StringValue{}
			}
			if err := m.Format.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentId", wireType)
			}
			m.DocumentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DocumentId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetThemes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getThemes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getThemes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetContentSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setContentSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setContentSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SensitiveEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SensitiveEnabled = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetContentSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getContentSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getContentSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetMultiWallPapers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getMultiWallPapers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getMultiWallPapers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpapers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wallpapers = append(m.Wallpapers, &InputWallPaper{})
			if err := m.Wallpapers[len(m.Wallpapers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetGlobalPrivacySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getGlobalPrivacySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getGlobalPrivacySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetGlobalPrivacySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setGlobalPrivacySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setGlobalPrivacySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &GlobalPrivacySettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetUsers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getUsers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getUsers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputUser{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetFullUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getFullUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getFullUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersSetSecureValueErrors) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_setSecureValueErrors: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_setSecureValueErrors: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Errors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Errors = append(m.Errors, &SecureValueError{})
			if err := m.Errors[len(m.Errors)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetContactIDs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getContactIDs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getContactIDs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetStatuses) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getStatuses: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getStatuses: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetContacts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getContacts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getContacts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsImportContacts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_importContacts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_importContacts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contacts = append(m.Contacts, &InputContact{})
			if err := m.Contacts[len(m.Contacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsDeleteContacts96A0E00) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_deleteContacts96A0E00: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_deleteContacts96A0E00: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputUser{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsDeleteByPhones) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_deleteByPhones: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_deleteByPhones: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phones", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phones = append(m.Phones, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsBlock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_block: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_block: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id_INPUTPEER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id_INPUTPEER == nil {
				m.Id_INPUTPEER = &InputPeer{}
			}
			if err := m.Id_INPUTPEER.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id_INPUTUSER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id_INPUTUSER == nil {
				m.Id_INPUTUSER = &InputUser{}
			}
			if err := m.Id_INPUTUSER.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsUnblock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_unblock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_unblock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id_INPUTPEER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id_INPUTPEER == nil {
				m.Id_INPUTPEER = &InputPeer{}
			}
			if err := m.Id_INPUTPEER.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id_INPUTUSER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id_INPUTUSER == nil {
				m.Id_INPUTUSER = &InputUser{}
			}
			if err := m.Id_INPUTUSER.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetBlocked) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getBlocked: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getBlocked: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsSearch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_search: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_search: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsResolveUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_resolveUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_resolveUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetTopPeers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getTopPeers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getTopPeers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Correspondents", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Correspondents = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotsPm", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BotsPm = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotsInline", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BotsInline = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCalls", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PhoneCalls = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardUsers", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForwardUsers = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardChats", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForwardChats = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Groups", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Groups = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channels", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Channels = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsResetTopPeerRating) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_resetTopPeerRating: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_resetTopPeerRating: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Category == nil {
				m.Category = &TopPeerCategory{}
			}
			if err := m.Category.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsResetSaved) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_resetSaved: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_resetSaved: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetSaved) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getSaved: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getSaved: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsToggleTopPeers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_toggleTopPeers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_toggleTopPeers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsAddContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_addContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_addContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddPhonePrivacyException", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddPhonePrivacyException = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsAcceptContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_acceptContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_acceptContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetLocated) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getLocated: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getLocated: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfExpires", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SelfExpires == nil {
				m.SelfExpires = &types.Int32Value{}
			}
			if err := m.SelfExpires.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsBlockFromReplies) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_blockFromReplies: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_blockFromReplies: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteMessage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeleteMessage = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteHistory", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeleteHistory = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportSpam", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReportSpam = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id_VECTORINPUTMESSAGE", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id_VECTORINPUTMESSAGE = append(m.Id_VECTORINPUTMESSAGE, &InputMessage{})
			if err := m.Id_VECTORINPUTMESSAGE[len(m.Id_VECTORINPUTMESSAGE)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id_VECTORINT32 = append(m.Id_VECTORINT32, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id_VECTORINT32) == 0 {
					m.Id_VECTORINT32 = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id_VECTORINT32 = append(m.Id_VECTORINT32, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id_VECTORINT32", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludePinned", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExcludePinned = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FolderId == nil {
				m.FolderId = &types.Int32Value{}
			}
			if err := m.FolderId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FeedId == nil {
				m.FeedId = &types.Int32Value{}
			}
			if err := m.FeedId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_search: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_search: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromId_FLAGINPUTPEER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FromId_FLAGINPUTPEER == nil {
				m.FromId_FLAGINPUTPEER = &InputPeer{}
			}
			if err := m.FromId_FLAGINPUTPEER.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopMsgId == nil {
				m.TopMsgId = &types.Int32Value{}
			}
			if err := m.TopMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &MessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDate", wireType)
			}
			m.MinDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDate", wireType)
			}
			m.MaxDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromId_FLAGINPUTUSER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FromId_FLAGINPUTUSER == nil {
				m.FromId_FLAGINPUTUSER = &InputUser{}
			}
			if err := m.FromId_FLAGINPUTUSER.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadHistoryE306D3A) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readHistoryE306D3A: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readHistoryE306D3A: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JustClear", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.JustClear = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoke", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Revoke = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoke", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Revoke = bool(v != 0)
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReceivedMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_receivedMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_receivedMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetTyping) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setTyping: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setTyping: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopMsgId == nil {
				m.TopMsgId = &types.Int32Value{}
			}
			if err := m.TopMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Action == nil {
				m.Action = &SendMessageAction{}
			}
			if err := m.Action.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyToMsgId == nil {
				m.ReplyToMsgId = &types.Int32Value{}
			}
			if err := m.ReplyToMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TtlSeconds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TtlSeconds == nil {
				m.TtlSeconds = &types.Int32Value{}
			}
			if err := m.TtlSeconds.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyToMsgId == nil {
				m.ReplyToMsgId = &types.Int32Value{}
			}
			if err := m.ReplyToMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TtlSeconds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TtlSeconds == nil {
				m.TtlSeconds = &types.Int32Value{}
			}
			if err := m.TtlSeconds.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesForwardMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_forwardMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_forwardMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithMyScore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithMyScore = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FromPeer == nil {
				m.FromPeer = &InputPeer{}
			}
			if err := m.FromPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 7:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RandomId = append(m.RandomId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RandomId) == 0 {
					m.RandomId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RandomId = append(m.RandomId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ToPeer == nil {
				m.ToPeer = &InputPeer{}
			}
			if err := m.ToPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grouped", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Grouped = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReportSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reportSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reportSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPeerSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPeerSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPeerSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_report: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_report: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &ReportReason{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetChats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getChats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getChats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetFullChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getFullChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getFullChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatPhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Photo == nil {
				m.Photo = &InputChatPhoto{}
			}
			if err := m.Photo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesAddChatUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_addChatUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_addChatUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FwdLimit", wireType)
			}
			m.FwdLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FwdLimit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteChatUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteChatUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteChatUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesCreateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_createChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_createChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &InputUser{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDhConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDhConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDhConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomLength", wireType)
			}
			m.RandomLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomLength |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesRequestEncryption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_requestEncryption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_requestEncryption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GA", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GA = append(m.GA[:0], dAtA[iNdEx:postIndex]...)
			if m.GA == nil {
				m.GA = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesAcceptEncryption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_acceptEncryption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_acceptEncryption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GB", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GB = append(m.GB[:0], dAtA[iNdEx:postIndex]...)
			if m.GB == nil {
				m.GB = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyFingerprint", wireType)
			}
			m.KeyFingerprint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.KeyFingerprint |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDiscardEncryption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_discardEncryption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_discardEncryption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetEncryptedTyping) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setEncryptedTyping: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setEncryptedTyping: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Typing", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Typing == nil {
				m.Typing = &Bool{}
			}
			if err := m.Typing.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadEncryptedHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readEncryptedHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readEncryptedHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDate", wireType)
			}
			m.MaxDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendEncrypted) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendEncrypted: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendEncrypted: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendEncryptedFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputEncryptedFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendEncryptedService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReceivedQueue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_receivedQueue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_receivedQueue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxQts", wireType)
			}
			m.MaxQts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxQts |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReportEncryptedSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reportEncryptedSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reportEncryptedSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadMessageContents) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readMessageContents: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readMessageContents: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emoticon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emoticon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash_INT32", wireType)
			}
			m.Hash_INT32 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash_INT32 |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeFeatured", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExcludeFeatured = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash_STRING", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash_STRING = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAllStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAllStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAllStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetWebPagePreview) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getWebPagePreview: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getWebPagePreview: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesExportChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_exportChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_exportChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesCheckChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_checkChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_checkChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesImportChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_importChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_importChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesInstallStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_installStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_installStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Archived", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Archived == nil {
				m.Archived = &Bool{}
			}
			if err := m.Archived.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUninstallStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_uninstallStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_uninstallStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesStartBot) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_startBot: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_startBot: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bot == nil {
				m.Bot = &InputUser{}
			}
			if err := m.Bot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessagesViews5784D3E1) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessagesViews5784D3E1: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessagesViews5784D3E1: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Increment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Increment == nil {
				m.Increment = &Bool{}
			}
			if err := m.Increment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAdmin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IsAdmin == nil {
				m.IsAdmin = &Bool{}
			}
			if err := m.IsAdmin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesMigrateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_migrateChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_migrateChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearchGlobal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_searchGlobal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_searchGlobal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FolderId == nil {
				m.FolderId = &types.Int32Value{}
			}
			if err := m.FolderId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &MessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDate", wireType)
			}
			m.MinDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDate", wireType)
			}
			m.MaxDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetRate", wireType)
			}
			m.OffsetRate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetRate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReorderStickerSets) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reorderStickerSets: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reorderStickerSets: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Masks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Masks = bool(v != 0)
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Order = append(m.Order, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Order) == 0 {
					m.Order = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Order = append(m.Order, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDocumentByHash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDocumentByHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDocumentByHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha256 = append(m.Sha256[:0], dAtA[iNdEx:postIndex]...)
			if m.Sha256 == nil {
				m.Sha256 = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size2", wireType)
			}
			m.Size2 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size2 |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSavedGifs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSavedGifs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSavedGifs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSaveGif) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_saveGif: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_saveGif: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputDocument{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetInlineBotResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getInlineBotResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getInlineBotResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bot == nil {
				m.Bot = &InputUser{}
			}
			if err := m.Bot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetInlineBotResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setInlineBotResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setInlineBotResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gallery", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Gallery = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Private", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Private = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &InputBotInlineResult{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheTime", wireType)
			}
			m.CacheTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CacheTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextOffset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NextOffset == nil {
				m.NextOffset = &types.StringValue{}
			}
			if err := m.NextOffset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchPm", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SwitchPm == nil {
				m.SwitchPm = &InlineBotSwitchPM{}
			}
			if err := m.SwitchPm.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendInlineBotResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendInlineBotResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendInlineBotResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HideVia", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HideVia = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyToMsgId == nil {
				m.ReplyToMsgId = &types.Int32Value{}
			}
			if err := m.ReplyToMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessageEditData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessageEditData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessageEditData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &types.StringValue{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StopGeoLive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StopGeoLive = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditInlineBotMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editInlineBotMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editInlineBotMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputBotInlineMessageID{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &types.StringValue{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StopGeoLive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StopGeoLive = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetBotCallbackAnswer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getBotCallbackAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getBotCallbackAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Game", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Game = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetBotCallbackAnswer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setBotCallbackAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setBotCallbackAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alert", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Alert = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &types.StringValue{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Url == nil {
				m.Url = &types.StringValue{}
			}
			if err := m.Url.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheTime", wireType)
			}
			m.CacheTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CacheTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPeerDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPeerDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPeerDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peers_VECTORINPUTDIALOGPEER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Peers_VECTORINPUTDIALOGPEER = append(m.Peers_VECTORINPUTDIALOGPEER, &InputDialogPeer{})
			if err := m.Peers_VECTORINPUTDIALOGPEER[len(m.Peers_VECTORINPUTDIALOGPEER)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peers_VECTORINPUTPEER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Peers_VECTORINPUTPEER = append(m.Peers_VECTORINPUTPEER, &InputPeer{})
			if err := m.Peers_VECTORINPUTPEER[len(m.Peers_VECTORINPUTPEER)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSaveDraft) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_saveDraft: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_saveDraft: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyToMsgId == nil {
				m.ReplyToMsgId = &types.Int32Value{}
			}
			if err := m.ReplyToMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAllDrafts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAllDrafts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAllDrafts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetFeaturedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getFeaturedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getFeaturedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadFeaturedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readFeaturedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readFeaturedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetRecentStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getRecentStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getRecentStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attached", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Attached = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSaveRecentSticker) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_saveRecentSticker: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_saveRecentSticker: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attached", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Attached = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputDocument{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesClearRecentStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_clearRecentStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_clearRecentStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attached", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Attached = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetArchivedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getArchivedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getArchivedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Masks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Masks = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMaskStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMaskStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMaskStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAttachedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAttachedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAttachedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputStickeredMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetGameScore) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setGameScore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setGameScore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditMessage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EditMessage = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetInlineGameScore) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setInlineGameScore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setInlineGameScore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditMessage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EditMessage = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputBotInlineMessageID{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetGameHighScores) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getGameHighScores: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getGameHighScores: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetInlineGameHighScores) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getInlineGameHighScores: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getInlineGameHighScores: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputBotInlineMessageID{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetCommonChats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getCommonChats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getCommonChats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAllChats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAllChats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAllChats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExceptIds = append(m.ExceptIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExceptIds) == 0 {
					m.ExceptIds = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExceptIds = append(m.ExceptIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExceptIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetWebPage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getWebPage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getWebPage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesToggleDialogPin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_toggleDialogPin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_toggleDialogPin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pinned", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Pinned = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer_INPUTDIALOGPEER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer_INPUTDIALOGPEER == nil {
				m.Peer_INPUTDIALOGPEER = &InputDialogPeer{}
			}
			if err := m.Peer_INPUTDIALOGPEER.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer_INPUTPEER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer_INPUTPEER == nil {
				m.Peer_INPUTPEER = &InputPeer{}
			}
			if err := m.Peer_INPUTPEER.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReorderPinnedDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reorderPinnedDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reorderPinnedDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order_VECTORINPUTDIALOGPEER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Order_VECTORINPUTDIALOGPEER = append(m.Order_VECTORINPUTDIALOGPEER, &InputDialogPeer{})
			if err := m.Order_VECTORINPUTDIALOGPEER[len(m.Order_VECTORINPUTDIALOGPEER)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order_VECTORINPUTPEER", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Order_VECTORINPUTPEER = append(m.Order_VECTORINPUTPEER, &InputPeer{})
			if err := m.Order_VECTORINPUTPEER[len(m.Order_VECTORINPUTPEER)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPinnedDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPinnedDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPinnedDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetBotShippingResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setBotShippingResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setBotShippingResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &types.StringValue{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShippingOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShippingOptions = append(m.ShippingOptions, &ShippingOption{})
			if err := m.ShippingOptions[len(m.ShippingOptions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetBotPrecheckoutResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setBotPrecheckoutResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setBotPrecheckoutResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &types.StringValue{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUploadMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_uploadMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_uploadMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendScreenshotNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendScreenshotNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendScreenshotNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			m.ReplyToMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyToMsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetFavedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getFavedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getFavedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesFaveSticker) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_faveSticker: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_faveSticker: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputDocument{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unfave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unfave == nil {
				m.Unfave = &Bool{}
			}
			if err := m.Unfave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetUnreadMentions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getUnreadMentions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getUnreadMentions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadMentions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readMentions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readMentions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetRecentLocations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getRecentLocations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getRecentLocations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendMultiMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendMultiMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendMultiMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyToMsgId == nil {
				m.ReplyToMsgId = &types.Int32Value{}
			}
			if err := m.ReplyToMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiMedia", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MultiMedia = append(m.MultiMedia, &InputSingleMedia{})
			if err := m.MultiMedia[len(m.MultiMedia)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TtlSeconds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TtlSeconds == nil {
				m.TtlSeconds = &types.Int32Value{}
			}
			if err := m.TtlSeconds.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUploadEncryptedFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_uploadEncryptedFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_uploadEncryptedFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputEncryptedFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearchStickerSets) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_searchStickerSets: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_searchStickerSets: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeFeatured", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExcludeFeatured = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSplitRanges) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSplitRanges: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSplitRanges: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesMarkDialogUnread) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_markDialogUnread: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_markDialogUnread: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unread", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Unread = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputDialogPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDialogUnreadMarks) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDialogUnreadMarks: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDialogUnreadMarks: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesClearAllDrafts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_clearAllDrafts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_clearAllDrafts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUpdatePinnedMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_updatePinnedMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_updatePinnedMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unpin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Unpin = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PmOneside", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PmOneside = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Options", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Options = append(m.Options, make([]byte, postIndex-iNdEx))
			copy(m.Options[len(m.Options)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPollResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPollResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPollResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetOnlines) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getOnlines: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getOnlines: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetStatsURL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getStatsURL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getStatsURL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatAbout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatAbout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatAbout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.About = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatNotice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatNotice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatNotice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatDefaultBannedRights) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatDefaultBannedRights: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatDefaultBannedRights: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannedRights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BannedRights == nil {
				m.BannedRights = &ChatBannedRights{}
			}
			if err := m.BannedRights.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiKeywords) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywords: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywords: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiKeywordsDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromVersion", wireType)
			}
			m.FromVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromVersion |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiKeywordsLanguages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsLanguages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsLanguages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCodes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCodes = append(m.LangCodes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiURL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiURL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiURL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSearchCounters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSearchCounters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSearchCounters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filters = append(m.Filters, &MessagesFilter{})
			if err := m.Filters[len(m.Filters)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesRequestUrlAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_requestUrlAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_requestUrlAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonId", wireType)
			}
			m.ButtonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ButtonId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesAcceptUrlAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_acceptUrlAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_acceptUrlAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriteAllowed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WriteAllowed = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonId", wireType)
			}
			m.ButtonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ButtonId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesHidePeerSettingsBar) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_hidePeerSettingsBar: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_hidePeerSettingsBar: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetScheduledHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getScheduledHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getScheduledHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetScheduledMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getScheduledMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getScheduledMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendScheduledMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendScheduledMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendScheduledMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteScheduledMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteScheduledMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteScheduledMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPollVotes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPollVotes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPollVotes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Option", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Option = append(m.Option[:0], dAtA[iNdEx:postIndex]...)
			if m.Option == nil {
				m.Option = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Offset == nil {
				m.Offset = &types.StringValue{}
			}
			if err := m.Offset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesToggleStickerSets) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_toggleStickerSets: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_toggleStickerSets: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uninstall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Uninstall = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Archive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Archive = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unarchive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Unarchive = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickersets", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stickersets = append(m.Stickersets, &InputStickerSet{})
			if err := m.Stickersets[len(m.Stickersets)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDialogFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDialogFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDialogFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSuggestedDialogFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSuggestedDialogFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSuggestedDialogFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUpdateDialogFilter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_updateDialogFilter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_updateDialogFilter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &DialogFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUpdateDialogFiltersOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_updateDialogFiltersOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_updateDialogFiltersOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Order = append(m.Order, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Order) == 0 {
					m.Order = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Order = append(m.Order, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetOldFeaturedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getOldFeaturedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getOldFeaturedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetReplies) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getReplies: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getReplies: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDiscussionMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDiscussionMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDiscussionMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadDiscussion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readDiscussion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readDiscussion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadMaxId", wireType)
			}
			m.ReadMaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReadMaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUnpinAllMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_unpinAllMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_unpinAllMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUpdatesGetState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_updates_getState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_updates_getState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUpdatesGetDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_updates_getDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_updates_getDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pts", wireType)
			}
			m.Pts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pts |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PtsTotalLimit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PtsTotalLimit == nil {
				m.PtsTotalLimit = &types.Int32Value{}
			}
			if err := m.PtsTotalLimit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			m.Date = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Date |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Qts", wireType)
			}
			m.Qts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Qts |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUpdatesGetChannelDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_updates_getChannelDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_updates_getChannelDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &ChannelMessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pts", wireType)
			}
			m.Pts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pts |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosUpdateProfilePhoto72D4742C) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_updateProfilePhoto72D4742C: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_updateProfilePhoto72D4742C: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputPhoto{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosUploadProfilePhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_uploadProfilePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_uploadProfilePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Video == nil {
				m.Video = &InputFile{}
			}
			if err := m.Video.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoStartTs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VideoStartTs == nil {
				m.VideoStartTs = &types.DoubleValue{}
			}
			if err := m.VideoStartTs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Caption = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Crop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Crop == nil {
				m.Crop = &InputPhotoCrop{}
			}
			if err := m.Crop.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosDeletePhotos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_deletePhotos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_deletePhotos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputPhoto{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosGetUserPhotos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_getUserPhotos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_getUserPhotos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadSaveFilePart) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_saveFilePart: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_saveFilePart: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileId", wireType)
			}
			m.FileId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePart", wireType)
			}
			m.FilePart = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FilePart |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytes = append(m.Bytes[:0], dAtA[iNdEx:postIndex]...)
			if m.Bytes == nil {
				m.Bytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Precise", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Precise = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CdnSupported", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CdnSupported = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &InputFileLocation{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadSaveBigFilePart) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_saveBigFilePart: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_saveBigFilePart: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileId", wireType)
			}
			m.FileId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePart", wireType)
			}
			m.FilePart = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FilePart |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileTotalParts", wireType)
			}
			m.FileTotalParts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileTotalParts |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytes = append(m.Bytes[:0], dAtA[iNdEx:postIndex]...)
			if m.Bytes == nil {
				m.Bytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetWebFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getWebFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getWebFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &InputWebFileLocation{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetCdnFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getCdnFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getCdnFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadReuploadCdnFile9B2754A8) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_reuploadCdnFile9B2754A8: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_reuploadCdnFile9B2754A8: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestToken = append(m.RequestToken[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestToken == nil {
				m.RequestToken = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetCdnFileHashes4DA54231) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getCdnFileHashes4DA54231: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getCdnFileHashes4DA54231: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetFileHashes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getFileHashes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getFileHashes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &InputFileLocation{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetNearestDc) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getNearestDc: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getNearestDc: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetAppUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getAppUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getAppUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceModel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceModel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetInviteText) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getInviteText: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getInviteText: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetSupport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getSupport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getSupport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetAppChangelog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getAppChangelog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getAppChangelog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrevAppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrevAppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpSetBotUpdatesStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_setBotUpdatesStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_setBotUpdatesStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PendingUpdatesCount", wireType)
			}
			m.PendingUpdatesCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PendingUpdatesCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetCdnConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getCdnConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getCdnConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetRecentMeUrls) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getRecentMeUrls: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getRecentMeUrls: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Referer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Referer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetTermsOfServiceUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getTermsOfServiceUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getTermsOfServiceUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpAcceptTermsOfService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_acceptTermsOfService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_acceptTermsOfService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &DataJSON{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetDeepLinkInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getDeepLinkInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getDeepLinkInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetAppConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getAppConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getAppConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpSaveAppLog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_saveAppLog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_saveAppLog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, &InputAppEvent{})
			if err := m.Events[len(m.Events)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetPassportConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getPassportConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getPassportConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetSupportName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getSupportName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getSupportName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetUserInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getUserInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getUserInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpEditUserInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_editUserInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_editUserInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetPromoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getPromoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getPromoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpHidePromoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_hidePromoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_hidePromoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpDismissSuggestion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_dismissSuggestion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_dismissSuggestion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Suggestion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Suggestion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetCountriesList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getCountriesList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getCountriesList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsReadHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_readHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_readHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteUserHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteUserHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteUserHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsReportSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_reportSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_reportSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id_VECTORINPUTMESSAGE", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id_VECTORINPUTMESSAGE = append(m.Id_VECTORINPUTMESSAGE, &InputMessage{})
			if err := m.Id_VECTORINPUTMESSAGE[len(m.Id_VECTORINPUTMESSAGE)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id_VECTORINT32 = append(m.Id_VECTORINT32, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id_VECTORINT32) == 0 {
					m.Id_VECTORINT32 = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id_VECTORINT32 = append(m.Id_VECTORINT32, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id_VECTORINT32", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetParticipants) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getParticipants: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getParticipants: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &ChannelParticipantsFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetParticipant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getParticipant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getParticipant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputChannel{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetFullChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getFullChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getFullChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsCreateChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_createChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_createChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Broadcast", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Broadcast = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Megagroup", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Megagroup = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.About = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &types.StringValue{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminRights_CHATADMINRIGHTS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminRights_CHATADMINRIGHTS == nil {
				m.AdminRights_CHATADMINRIGHTS = &ChatAdminRights{}
			}
			if err := m.AdminRights_CHATADMINRIGHTS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rank", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rank = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminRights_CHANNELADMINRIGHTS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminRights_CHANNELADMINRIGHTS == nil {
				m.AdminRights_CHANNELADMINRIGHTS = &ChannelAdminRights{}
			}
			if err := m.AdminRights_CHANNELADMINRIGHTS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditPhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Photo == nil {
				m.Photo = &InputChatPhoto{}
			}
			if err := m.Photo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsCheckUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_checkUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_checkUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsUpdateUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_updateUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_updateUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsJoinChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_joinChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_joinChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsLeaveChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_leaveChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_leaveChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsInviteToChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_inviteToChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_inviteToChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &InputUser{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsExportMessageLink) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_exportMessageLink: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_exportMessageLink: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grouped_FLAGBOOLEAN", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Grouped_FLAGBOOLEAN = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thread", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Thread = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grouped_BOOL", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Grouped_BOOL == nil {
				m.Grouped_BOOL = &Bool{}
			}
			if err := m.Grouped_BOOL.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsToggleSignatures) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_toggleSignatures: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_toggleSignatures: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetAdminedPublicChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getAdminedPublicChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getAdminedPublicChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ByLocation", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ByLocation = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CheckLimit", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CheckLimit = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditBanned) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editBanned: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editBanned: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannedRights_CHATBANNEDRIGHTS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BannedRights_CHATBANNEDRIGHTS == nil {
				m.BannedRights_CHATBANNEDRIGHTS = &ChatBannedRights{}
			}
			if err := m.BannedRights_CHATBANNEDRIGHTS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannedRights_CHANNELBANNEDRIGHTS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BannedRights_CHANNELBANNEDRIGHTS == nil {
				m.BannedRights_CHANNELBANNEDRIGHTS = &ChannelBannedRights{}
			}
			if err := m.BannedRights_CHANNELBANNEDRIGHTS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetAdminLog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getAdminLog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getAdminLog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventsFilter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EventsFilter == nil {
				m.EventsFilter = &ChannelAdminLogEventsFilter{}
			}
			if err := m.EventsFilter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admins", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admins = append(m.Admins, &InputUser{})
			if err := m.Admins[len(m.Admins)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsSetStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_setStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_setStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsReadMessageContents) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_readMessageContents: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_readMessageContents: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsTogglePreHistoryHidden) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_togglePreHistoryHidden: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_togglePreHistoryHidden: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetLeftChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getLeftChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getLeftChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetGroupsForDiscussion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getGroupsForDiscussion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getGroupsForDiscussion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsSetDiscussionGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_setDiscussionGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_setDiscussionGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Broadcast", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Broadcast == nil {
				m.Broadcast = &InputChannel{}
			}
			if err := m.Broadcast.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Group == nil {
				m.Group = &InputChannel{}
			}
			if err := m.Group.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditCreator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editCreator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editCreator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditLocation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editLocation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editLocation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsToggleSlowMode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_toggleSlowMode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_toggleSlowMode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seconds", wireType)
			}
			m.Seconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Seconds |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetInactiveChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getInactiveChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getInactiveChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsSendCustomRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_sendCustomRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_sendCustomRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &DataJSON{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsAnswerWebhookJSONQuery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_answerWebhookJSONQuery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_answerWebhookJSONQuery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &DataJSON{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsSetBotCommands) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_setBotCommands: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_setBotCommands: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commands", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Commands = append(m.Commands, &BotCommand{})
			if err := m.Commands[len(m.Commands)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetPaymentForm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getPaymentForm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getPaymentForm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetPaymentReceipt) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getPaymentReceipt: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getPaymentReceipt: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsValidateRequestedInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_validateRequestedInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_validateRequestedInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Save", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Save = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &PaymentRequestedInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsSendPaymentForm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_sendPaymentForm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_sendPaymentForm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestedInfoId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestedInfoId == nil {
				m.RequestedInfoId = &types.StringValue{}
			}
			if err := m.RequestedInfoId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShippingOptionId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShippingOptionId == nil {
				m.ShippingOptionId = &types.StringValue{}
			}
			if err := m.ShippingOptionId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Credentials == nil {
				m.Credentials = &InputPaymentCredentials{}
			}
			if err := m.Credentials.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetSavedInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getSavedInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getSavedInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsClearSavedInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_clearSavedInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_clearSavedInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Credentials = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Info = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetBankCardData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getBankCardData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getBankCardData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Number = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersCreateStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_createStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_createStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Masks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Masks = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Animated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Animated = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShortName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &InputDocument{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stickers = append(m.Stickers, &InputStickerSetItem{})
			if err := m.Stickers[len(m.Stickers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersRemoveStickerFromSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_removeStickerFromSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_removeStickerFromSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sticker", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sticker == nil {
				m.Sticker = &InputDocument{}
			}
			if err := m.Sticker.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersChangeStickerPosition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_changeStickerPosition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_changeStickerPosition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sticker", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sticker == nil {
				m.Sticker = &InputDocument{}
			}
			if err := m.Sticker.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			m.Position = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Position |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersAddStickerToSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_addStickerToSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_addStickerToSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sticker", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sticker == nil {
				m.Sticker = &InputStickerSetItem{}
			}
			if err := m.Sticker.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersSetStickerSetThumb) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_setStickerSetThumb: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_setStickerSetThumb: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &InputDocument{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneGetCallConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_getCallConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_getCallConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneRequestCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_requestCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_requestCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GAHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GAHash = append(m.GAHash[:0], dAtA[iNdEx:postIndex]...)
			if m.GAHash == nil {
				m.GAHash = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocol == nil {
				m.Protocol = &PhoneCallProtocol{}
			}
			if err := m.Protocol.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneAcceptCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_acceptCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_acceptCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GB", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GB = append(m.GB[:0], dAtA[iNdEx:postIndex]...)
			if m.GB == nil {
				m.GB = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocol == nil {
				m.Protocol = &PhoneCallProtocol{}
			}
			if err := m.Protocol.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneConfirmCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_confirmCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_confirmCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GA", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GA = append(m.GA[:0], dAtA[iNdEx:postIndex]...)
			if m.GA == nil {
				m.GA = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyFingerprint", wireType)
			}
			m.KeyFingerprint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.KeyFingerprint |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocol == nil {
				m.Protocol = &PhoneCallProtocol{}
			}
			if err := m.Protocol.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneReceivedCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_receivedCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_receivedCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneDiscardCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_discardCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_discardCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &PhoneCallDiscardReason{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionId", wireType)
			}
			m.ConnectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConnectionId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneSetCallRating) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_setCallRating: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_setCallRating: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserInitiative", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UserInitiative = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rating", wireType)
			}
			m.Rating = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rating |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneSaveCallDebug) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_saveCallDebug: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_saveCallDebug: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Debug", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Debug == nil {
				m.Debug = &DataJSON{}
			}
			if err := m.Debug.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneSendSignalingData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_sendSignalingData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_sendSignalingData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetLangPack) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getLangPack: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getLangPack: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetStrings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getStrings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getStrings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keys", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keys = append(m.Keys, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromVersion", wireType)
			}
			m.FromVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromVersion |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetLanguages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getLanguages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getLanguages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetLanguage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getLanguage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getLanguage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLFoldersEditPeerFolders) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_folders_editPeerFolders: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_folders_editPeerFolders: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderPeers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FolderPeers = append(m.FolderPeers, &InputFolderPeer{})
			if err := m.FolderPeers[len(m.FolderPeers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLFoldersDeleteFolder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_folders_deleteFolder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_folders_deleteFolder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetBroadcastStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getBroadcastStats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getBroadcastStats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TzOffset", wireType)
			}
			m.TzOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TzOffset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsLoadAsyncGraph) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_loadAsyncGraph: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_loadAsyncGraph: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field X", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.X == nil {
				m.X = &types.Int64Value{}
			}
			if err := m.X.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetMegagroupStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getMegagroupStats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getMegagroupStats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetMessagePublicForwards) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getMessagePublicForwards: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getMessagePublicForwards: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetRate", wireType)
			}
			m.OffsetRate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetRate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetMessageStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getMessageStats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getMessageStats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLWalletGetInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_wallet_getInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_wallet_getInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLWalletGetRecords) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_wallet_getRecords: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_wallet_getRecords: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Type == nil {
				m.Type = &Wallet_RecordType{}
			}
			if err := m.Type.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Date == nil {
				m.Date = &types.Int32Value{}
			}
			if err := m.Date.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsFollow) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_follow: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_follow: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Followed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Followed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsLike) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_like: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_like: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &Blogs_IdType{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Liked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Liked = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsSendComment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_sendComment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_sendComment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &Blogs_IdType{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsReward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_reward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_reward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			m.User = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.User |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blog", wireType)
			}
			m.Blog = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Blog |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentPassword", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PaymentPassword == nil {
				m.PaymentPassword = &types.StringValue{}
			}
			if err := m.PaymentPassword.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Amount = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetFollows) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getFollows: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getFollows: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetFans) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getFans: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getFans: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsCreateGroupTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_createGroupTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_createGroupTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Users = append(m.Users, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Users) == 0 {
					m.Users = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Users = append(m.Users, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsDeleteGroupTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_deleteGroupTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_deleteGroupTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TagIds = append(m.TagIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.TagIds) == 0 {
					m.TagIds = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TagIds = append(m.TagIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TagIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsEditGroupTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_editGroupTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_editGroupTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagId", wireType)
			}
			m.TagId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TagId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsAddGroupTagMember) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_addGroupTagMember: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_addGroupTagMember: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagId", wireType)
			}
			m.TagId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TagId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Users = append(m.Users, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Users) == 0 {
					m.Users = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Users = append(m.Users, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsDeleteGroupTagMember) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_deleteGroupTagMember: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_deleteGroupTagMember: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagId", wireType)
			}
			m.TagId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TagId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Users = append(m.Users, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Users) == 0 {
					m.Users = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Users = append(m.Users, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetGroupTags) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getGroupTags: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getGroupTags: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsSendBlog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_sendBlog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_sendBlog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VisibleType", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VisibleType == nil {
				m.VisibleType = &VisibleType{}
			}
			if err := m.VisibleType.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MentionUsers = append(m.MentionUsers, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.MentionUsers) == 0 {
					m.MentionUsers = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MentionUsers = append(m.MentionUsers, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MentionUsers", wireType)
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Text == nil {
				m.Text = &types.StringValue{}
			}
			if err := m.Text.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Content == nil {
				m.Content = &InputBlogContent{}
			}
			if err := m.Content.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &types.StringValue{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topics = append(m.Topics, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsDeleteBlog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_deleteBlog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_deleteBlog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Blogs = append(m.Blogs, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Blogs) == 0 {
					m.Blogs = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Blogs = append(m.Blogs, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Blogs", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetBlogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getBlogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getBlogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Blogs = append(m.Blogs, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Blogs) == 0 {
					m.Blogs = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Blogs = append(m.Blogs, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Blogs", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetCommentList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getCommentList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getCommentList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Comments = append(m.Comments, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Comments) == 0 {
					m.Comments = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Comments = append(m.Comments, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Comments", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsReadHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_readHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_readHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pts == nil {
				m.Pts = &types.Int32Value{}
			}
			if err := m.Pts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReadId == nil {
				m.ReadId = &Blogs_IdType{}
			}
			if err := m.ReadId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VisibleType", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VisibleType == nil {
				m.VisibleType = &VisibleType{}
			}
			if err := m.VisibleType.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetComments) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getComments: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getComments: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &Blogs_IdType{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetLikes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getLikes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getLikes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &Blogs_IdType{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetUnreads) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getUnreads: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getUnreads: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pts", wireType)
			}
			m.Pts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pts |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetTopics) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getTopics: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getTopics: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromTopicId", wireType)
			}
			m.FromTopicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromTopicId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBlogsGetHotTopics) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_blogs_getHotTopics: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_blogs_getHotTopics: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessagesViewsC4C8A55D) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessagesViewsC4C8A55D: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessagesViewsC4C8A55D: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Increment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Increment == nil {
				m.Increment = &Bool{}
			}
			if err := m.Increment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosUpdateProfilePhotoF0BB5152) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_updateProfilePhotoF0BB5152: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_updateProfilePhotoF0BB5152: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputPhoto{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearchGifs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_searchGifs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_searchGifs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetProxyData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getProxyData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getProxyData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLWalletSendLiteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_wallet_sendLiteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_wallet_sendLiteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = append(m.Body[:0], dAtA[iNdEx:postIndex]...)
			if m.Body == nil {
				m.Body = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLWalletGetKeySecretSalt) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_wallet_getKeySecretSalt: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_wallet_getKeySecretSalt: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoke", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Revoke == nil {
				m.Revoke = &Bool{}
			}
			if err := m.Revoke.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsDeleteContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_deleteContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_deleteContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsDeleteContacts59AB389E) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_deleteContacts59AB389E: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_deleteContacts59AB389E: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputUser{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesHideReportSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_hideReportSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_hideReportSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetBroadcastsForDiscussion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getBroadcastsForDiscussion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getBroadcastsForDiscussion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetWallPapersC04CFAC2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getWallPapersC04CFAC2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getWallPapersC04CFAC2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesToggleChatAdmins) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_toggleChatAdmins: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_toggleChatAdmins: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditAbout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editAbout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editAbout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.About = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsExportInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_exportInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_exportInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsToggleInvites) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_toggleInvites: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_toggleInvites: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsUpdatePinnedMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_updatePinnedMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_updatePinnedMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsExportCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_exportCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_exportCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsImportCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_importCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_importCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExportCard = append(m.ExportCard, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExportCard) == 0 {
					m.ExportCard = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExportCard = append(m.ExportCard, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExportCard", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSendInvites) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_sendInvites: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_sendInvites: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumbers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumbers = append(m.PhoneNumbers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetTermsOfService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getTermsOfService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getTermsOfService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountryIso2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CountryIso2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthCheckPhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_checkPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_checkPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetFeed) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getFeed: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getFeed: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetToMaxRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OffsetToMaxRead = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedId", wireType)
			}
			m.FeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FeedId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPosition", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPosition == nil {
				m.OffsetPosition = &FeedPosition{}
			}
			if err := m.OffsetPosition.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPosition", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MaxPosition == nil {
				m.MaxPosition = &FeedPosition{}
			}
			if err := m.MaxPosition.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinPosition", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinPosition == nil {
				m.MinPosition = &FeedPosition{}
			}
			if err := m.MinPosition.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourcesHash", wireType)
			}
			m.SourcesHash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourcesHash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsSearchFeed) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_searchFeed: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_searchFeed: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedId", wireType)
			}
			m.FeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FeedId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetFeedSources) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getFeedSources: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getFeedSources: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FeedId == nil {
				m.FeedId = &types.Int32Value{}
			}
			if err := m.FeedId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsChangeFeedBroadcastFFB37511) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_changeFeedBroadcastFFB37511: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_changeFeedBroadcastFFB37511: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FeedId == nil {
				m.FeedId = &types.Int32Value{}
			}
			if err := m.FeedId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsSetFeedBroadcastsEA80BFAE) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_setFeedBroadcastsEA80BFAE: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_setFeedBroadcastsEA80BFAE: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedId", wireType)
			}
			m.FeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FeedId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Channels = append(m.Channels, &InputChannel{})
			if err := m.Channels[len(m.Channels)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlsoNewlyJoined", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AlsoNewlyJoined == nil {
				m.AlsoNewlyJoined = &Bool{}
			}
			if err := m.AlsoNewlyJoined.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsReadFeed) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_readFeed: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_readFeed: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedId", wireType)
			}
			m.FeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FeedId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPosition", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MaxPosition == nil {
				m.MaxPosition = &FeedPosition{}
			}
			if err := m.MaxPosition.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesForwardMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_forwardMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_forwardMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadReuploadCdnFile1AF91C09) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_reuploadCdnFile1AF91C09: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_reuploadCdnFile1AF91C09: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestToken = append(m.RequestToken[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestToken == nil {
				m.RequestToken = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetCdnFileHashesF715C87B) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getCdnFileHashesF715C87B: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getCdnFileHashesF715C87B: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsChangeFeedBroadcast2528871E) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_changeFeedBroadcast2528871E: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_changeFeedBroadcast2528871E: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FeedId == nil {
				m.FeedId = &types.Int32Value{}
			}
			if err := m.FeedId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsSetFeedBroadcasts7E91B8F2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_setFeedBroadcasts7E91B8F2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_setFeedBroadcasts7E91B8F2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedId", wireType)
			}
			m.FeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FeedId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Channels = append(m.Channels, &InputChannel{})
			if err := m.Channels[len(m.Channels)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlsoNewlyJoined", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AlsoNewlyJoined == nil {
				m.AlsoNewlyJoined = &Bool{}
			}
			if err := m.AlsoNewlyJoined.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadHistoryB04F2510) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readHistoryB04F2510: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readHistoryB04F2510: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetScheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getScheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getScheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpTest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_test: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_test: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountCreatePredefinedUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_createPredefinedUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_createPredefinedUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FirstName == nil {
				m.FirstName = &types.StringValue{}
			}
			if err := m.FirstName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastName == nil {
				m.LastName = &types.StringValue{}
			}
			if err := m.LastName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Username == nil {
				m.Username = &types.StringValue{}
			}
			if err := m.Username.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdatePredefinedUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updatePredefinedUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updatePredefinedUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdatePredefinedProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updatePredefinedProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updatePredefinedProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FirstName == nil {
				m.FirstName = &types.StringValue{}
			}
			if err := m.FirstName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastName == nil {
				m.LastName = &types.StringValue{}
			}
			if err := m.LastName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.About == nil {
				m.About = &types.StringValue{}
			}
			if err := m.About.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateVerified) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateVerified: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateVerified: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdatePredefinedVerified) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updatePredefinedVerified: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updatePredefinedVerified: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdatePredefinedCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updatePredefinedCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updatePredefinedCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthToggleBan) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_toggleBan: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_toggleBan: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Predefined", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Predefined = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expires", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Expires == nil {
				m.Expires = &types.Int32Value{}
			}
			if err := m.Expires.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &types.StringValue{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetPredefinedUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getPredefinedUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getPredefinedUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetPredefinedUsers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getPredefinedUsers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getPredefinedUsers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetMe) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getMe: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getMe: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBizInvokeBizDataRaw) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_biz_invokeBizDataRaw: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_biz_invokeBizDataRaw: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= (TLConstructor(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BizData == nil {
				m.BizData = &BizDataRaw{}
			}
			if err := m.BizData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_SecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_SecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_SecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &SecureValue{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_WallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_WallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_WallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &WallPaper{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &User{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_Int) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_Int: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_Int: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Datas = append(m.Datas, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Datas) == 0 {
					m.Datas = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Datas = append(m.Datas, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_ContactStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_ContactStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_ContactStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &ContactStatus{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_SavedContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_SavedContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_SavedContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &SavedContact{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_ReceivedNotifyMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_ReceivedNotifyMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_ReceivedNotifyMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &ReceivedNotifyMessage{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_Long) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_Long: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_Long: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Datas = append(m.Datas, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Datas) == 0 {
					m.Datas = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Datas = append(m.Datas, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_StickerSetCovered) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_StickerSetCovered: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_StickerSetCovered: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &StickerSetCovered{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_MessageRange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_MessageRange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_MessageRange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &MessageRange{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_DialogPeer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_DialogPeer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_DialogPeer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &DialogPeer{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_EmojiLanguage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_EmojiLanguage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_EmojiLanguage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &EmojiLanguage{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_Messages_SearchCounter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_Messages_SearchCounter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_Messages_SearchCounter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &Messages_SearchCounter{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_DialogFilter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_DialogFilter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_DialogFilter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &DialogFilter{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_DialogFilterSuggested) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_DialogFilterSuggested: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_DialogFilterSuggested: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &DialogFilterSuggested{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_FileHash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_FileHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_FileHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &FileHash{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_LangPackString) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_LangPackString: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_LangPackString: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &LangPackString{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_LangPackLanguage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_LangPackLanguage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_LangPackLanguage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &LangPackLanguage{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_CdnFileHash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_CdnFileHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_CdnFileHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &CdnFileHash{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_PredefinedUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_PredefinedUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_PredefinedUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &PredefinedUser{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSchemaTlSyncService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthSchemaTlSyncService
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipSchemaTlSyncService(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthSchemaTlSyncService = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSchemaTlSyncService   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("schema.tl.sync_service.proto", fileDescriptor_schema_tl_sync_service_f589721181dfadaf)
}

var fileDescriptor_schema_tl_sync_service_f589721181dfadaf = []byte{
	// 20547 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x6b, 0x90, 0x1c, 0x49,
	0x7a, 0x18, 0x86, 0x9e, 0x9e, 0x67, 0xce, 0xe0, 0x55, 0x78, 0x0d, 0x06, 0xef, 0x02, 0x76, 0x81,
	0x3d, 0xdc, 0x2e, 0x80, 0x01, 0xb0, 0xd8, 0x3d, 0x3e, 0x8e, 0xf3, 0x04, 0x66, 0x77, 0x06, 0x98,
	0xad, 0x19, 0x60, 0x6f, 0x49, 0x1e, 0xfb, 0x6a, 0xba, 0x72, 0xba, 0x6b, 0xa7, 0xba, 0xaa, 0xb7,
	0xaa, 0x7a, 0x80, 0x59, 0xdf, 0x1d, 0x9f, 0x77, 0xa2, 0x64, 0x4a, 0x67, 0x51, 0x3c, 0xf1, 0xcd,
	0xa0, 0x8e, 0xe2, 0xc3, 0xa4, 0x45, 0x52, 0xa7, 0xa3, 0x45, 0xeb, 0xc1, 0x60, 0xc8, 0x3e, 0x8a,
	0x92, 0xc2, 0xb2, 0x1c, 0x62, 0xd0, 0x11, 0xb2, 0x4d, 0xc9, 0xf4, 0xeb, 0x4c, 0x87, 0xec, 0xb3,
	0xff, 0x28, 0x42, 0x8e, 0xb0, 0x1d, 0xf9, 0xac, 0xcc, 0xac, 0xcc, 0xea, 0x9e, 0xad, 0x9e, 0x01,
	0xc8, 0xe0, 0xaf, 0x99, 0xce, 0xfc, 0xea, 0xcb, 0x2f, 0xbf, 0xcc, 0xfc, 0xf2, 0xcb, 0x2f, 0xbf,
	0xfc, 0x3e, 0x70, 0x36, 0xa9, 0x37, 0x61, 0xcb, 0x7d, 0x2d, 0x0d, 0x5e, 0x4b, 0x76, 0xc2, 0x7a,
	0x2d, 0x81, 0xf1, 0xb6, 0x5f, 0x87, 0xaf, 0xb5, 0xe3, 0x28, 0x8d, 0xac, 0x91, 0x56, 0x8a, 0xff,
	0x99, 0x7a, 0xb5, 0xe1, 0xa7, 0xcd, 0xce, 0xc6, 0x6b, 0xf5, 0xa8, 0x75, 0xa3, 0x11, 0x35, 0xa2,
	0x1b, 0xb8, 0x78, 0xa3, 0xb3, 0x89, 0x7f, 0xe1, 0x1f, 0xf8, 0x3f, 0xf2, 0xdd, 0xd4, 0xf9, 0x46,
	0x14, 0x35, 0x02, 0x98, 0x41, 0x3d, 0x8d, 0xdd, 0x76, 0x1b, 0xc6, 0x09, 0xad, 0x9f, 0xca, 0x5a,
	0xad, 0x47, 0x31, 0xac, 0xa5, 0x3b, 0x6d, 0xc8, 0xea, 0x4e, 0x08, 0x75, 0x71, 0xfd, 0xf6, 0x34,
	0x2d, 0x3e, 0x2e, 0x13, 0x4a, 0x4a, 0xed, 0x0f, 0xc1, 0xd1, 0xf5, 0xe5, 0x9a, 0x1f, 0x6e, 0x47,
	0x5b, 0x70, 0x66, 0x33, 0x85, 0xf1, 0x4a, 0xd2, 0xb0, 0xde, 0x00, 0xe3, 0xf5, 0x28, 0x4c, 0xd2,
	0xb8, 0x53, 0x4f, 0xa3, 0x78, 0xb2, 0x72, 0xb1, 0x72, 0xed, 0xd0, 0xf4, 0xc9, 0xd7, 0x68, 0x5f,
	0x5e, 0x5b, 0x5f, 0x9e, 0xcb, 0x6a, 0x1d, 0x11, 0xd4, 0x3a, 0x01, 0x86, 0x5b, 0x49, 0xa3, 0xe6,
	0x7b, 0x93, 0x03, 0x17, 0x2b, 0xd7, 0xaa, 0xce, 0x50, 0x2b, 0x69, 0x2c, 0x79, 0xd6, 0x71, 0x30,
	0xf4, 0x41, 0x07, 0xc6, 0x3b, 0x93, 0xd5, 0x8b, 0x95, 0x6b, 0x13, 0x0e, 0xf9, 0x61, 0x7f, 0x0e,
	0x58, 0xb9, 0xb6, 0x93, 0x12, 0x8d, 0x9f, 0x02, 0x23, 0xa4, 0xf1, 0x64, 0x72, 0xe0, 0x62, 0xf5,
	0x5a, 0xd5, 0x19, 0xc6, 0xad, 0x27, 0x86, 0xe6, 0x7f, 0xa9, 0x4a, 0xfb, 0xee, 0xa7, 0x73, 0x51,
	0x18, 0xc2, 0x7a, 0xea, 0x47, 0x61, 0xb9, 0xbe, 0xbb, 0x6d, 0x9f, 0xf5, 0x7d, 0xc8, 0x19, 0x72,
	0xdb, 0xfe, 0x92, 0x67, 0x5d, 0x02, 0x13, 0x1e, 0x44, 0x53, 0xa2, 0xd6, 0x8a, 0x3c, 0x18, 0x60,
	0x1a, 0xc6, 0x9c, 0x71, 0x52, 0xb6, 0x82, 0x8a, 0xac, 0x97, 0xc0, 0xa1, 0x64, 0x27, 0x49, 0x61,
	0xab, 0xb6, 0x0d, 0xe3, 0xc4, 0x8f, 0xc2, 0xc9, 0x41, 0x0c, 0x74, 0x90, 0x94, 0x3e, 0x21, 0x85,
	0xd6, 0x05, 0x30, 0xee, 0xb6, 0xdb, 0x1c, 0x66, 0x08, 0xc3, 0x00, 0xb7, 0xdd, 0x66, 0x00, 0xd7,
	0xc0, 0x11, 0x8a, 0x27, 0x70, 0xc3, 0x46, 0xad, 0x1e, 0x79, 0x70, 0x72, 0x18, 0x43, 0x51, 0xfc,
	0xcb, 0x6e, 0xd8, 0x98, 0x8b, 0x3c, 0x68, 0x9d, 0x01, 0x63, 0x18, 0xa4, 0xed, 0xd6, 0xb7, 0x26,
	0x47, 0x30, 0xc8, 0x28, 0x2a, 0x58, 0x75, 0xeb, 0x5b, 0xbc, 0x12, 0x7f, 0x3f, 0x9a, 0x55, 0xe2,
	0x2f, 0x6f, 0x80, 0xa1, 0x76, 0x1c, 0x3d, 0xdb, 0x99, 0x1c, 0xbb, 0x58, 0xb9, 0x36, 0x3e, 0x7d,
	0x9a, 0x73, 0x66, 0x29, 0x6c, 0x77, 0xd2, 0xb9, 0xc0, 0x87, 0x61, 0xba, 0x8a, 0x00, 0x1c, 0x02,
	0x67, 0x7d, 0x0c, 0x0c, 0xb7, 0xdd, 0xd8, 0x6d, 0x25, 0x93, 0x00, 0x7f, 0x61, 0xf1, 0x2f, 0xde,
	0x5a, 0x7b, 0xf4, 0xf0, 0x89, 0x1b, 0x74, 0xa0, 0x43, 0x21, 0xb2, 0x81, 0x1a, 0x17, 0x07, 0xea,
	0x43, 0x61, 0x9e, 0xbc, 0xeb, 0xa7, 0xcd, 0x65, 0x77, 0x07, 0xc6, 0x25, 0x06, 0xea, 0x38, 0x18,
	0x0a, 0x10, 0x0a, 0x36, 0x4e, 0xf8, 0x87, 0x61, 0x92, 0xf8, 0xe0, 0x94, 0xd4, 0x76, 0xd4, 0x49,
	0x1f, 0xb7, 0x3d, 0x37, 0x85, 0x49, 0x39, 0x02, 0x48, 0x53, 0x03, 0x62, 0x53, 0x3f, 0x59, 0x01,
	0x53, 0x52, 0x5b, 0x2b, 0x30, 0x49, 0xdc, 0x06, 0x4c, 0x1c, 0x37, 0x6c, 0xc0, 0x12, 0xcd, 0x5d,
	0x07, 0x43, 0x31, 0x42, 0x81, 0x9b, 0x1b, 0x9f, 0x3e, 0xc1, 0xbf, 0xa1, 0x0d, 0x60, 0xfc, 0x0e,
	0x81, 0x31, 0xb0, 0xe1, 0x0b, 0x15, 0x70, 0x5c, 0xa2, 0x6d, 0xdd, 0xdd, 0x82, 0x51, 0x27, 0x2d,
	0x41, 0xd5, 0x39, 0x00, 0x52, 0x82, 0x24, 0x13, 0x17, 0x63, 0xb4, 0xc4, 0x28, 0x32, 0xfe, 0xc5,
	0x00, 0x38, 0xb2, 0xbe, 0x5c, 0x73, 0x3b, 0x69, 0xb3, 0x96, 0xc0, 0xd0, 0xc3, 0x53, 0xf2, 0xa3,
	0xd3, 0x70, 0x09, 0x4c, 0xb4, 0x9b, 0x51, 0x08, 0x6b, 0x61, 0xa7, 0xb5, 0x41, 0x27, 0xc4, 0x98,
	0x33, 0x8e, 0xcb, 0x1e, 0xe2, 0x22, 0x61, 0x55, 0x57, 0xc5, 0x55, 0x7d, 0x1a, 0x8c, 0xa2, 0xe2,
	0xa6, 0x9b, 0x34, 0xe9, 0x62, 0x1d, 0x71, 0xdb, 0xfe, 0x03, 0x37, 0x69, 0x5a, 0xb7, 0xc0, 0x68,
	0x02, 0xd3, 0xd4, 0x0f, 0x1b, 0x09, 0x5e, 0xa3, 0x22, 0xc7, 0x11, 0xbd, 0x6b, 0xb4, 0xd2, 0xe1,
	0x60, 0xd6, 0x55, 0x70, 0xd8, 0x0d, 0x82, 0xe8, 0x69, 0x6d, 0x33, 0x70, 0x93, 0x66, 0xdd, 0x0d,
	0x02, 0xbc, 0x6e, 0x47, 0x9d, 0x43, 0xb8, 0x78, 0x91, 0x95, 0x5a, 0x77, 0xc0, 0xa1, 0x7a, 0x27,
	0x8e, 0x61, 0x98, 0x32, 0x92, 0x47, 0x70, 0x0b, 0x07, 0x79, 0x0b, 0xb3, 0x51, 0x14, 0x38, 0x07,
	0x29, 0x10, 0xed, 0x43, 0xd1, 0x82, 0xb6, 0xbf, 0x59, 0x01, 0x87, 0x38, 0x4b, 0xfd, 0x46, 0xf8,
	0xb8, 0xbd, 0xb7, 0x0c, 0x7d, 0x19, 0x1c, 0x26, 0x20, 0x88, 0x1a, 0xc2, 0x40, 0x22, 0x12, 0x0f,
	0xe2, 0x62, 0x44, 0x13, 0x66, 0xe3, 0x39, 0x00, 0x36, 0xfd, 0x38, 0x49, 0x6b, 0xa1, 0xdb, 0x82,
	0x94, 0xc7, 0x63, 0xb8, 0xe4, 0xa1, 0xdb, 0xa2, 0x12, 0x8c, 0xd5, 0x0e, 0xb1, 0x3e, 0xd1, 0xca,
	0x73, 0x00, 0x64, 0x6d, 0x50, 0x11, 0x38, 0xc6, 0xd1, 0xdb, 0x5f, 0x53, 0xba, 0xbc, 0x14, 0xbe,
	0x30, 0x5d, 0x16, 0xc8, 0x1e, 0x54, 0xc9, 0x7e, 0x2b, 0xa3, 0x3a, 0x88, 0x1a, 0x8f, 0xca, 0xac,
	0x3e, 0xfb, 0x5d, 0x70, 0x86, 0xe1, 0x8a, 0x61, 0x02, 0xd3, 0x99, 0x4e, 0xda, 0x8c, 0x62, 0xff,
	0x43, 0x17, 0x6d, 0x82, 0x25, 0x64, 0x9b, 0x1d, 0x64, 0x88, 0xe1, 0xb3, 0x76, 0x14, 0xcb, 0x98,
	0x4b, 0xf0, 0xf9, 0x18, 0x18, 0xf2, 0xea, 0xd9, 0xee, 0x3a, 0xe8, 0xd5, 0x97, 0x3c, 0xfb, 0x73,
	0x59, 0x6b, 0x7e, 0xab, 0x9f, 0xad, 0x1d, 0x02, 0x03, 0xbc, 0xa9, 0x01, 0x1f, 0x8b, 0xa3, 0x8d,
	0x9d, 0x14, 0x26, 0x4c, 0x1c, 0xe1, 0x1f, 0xf6, 0x1f, 0x55, 0xf0, 0xf6, 0x80, 0xdb, 0xdf, 0xf0,
	0x43, 0x6f, 0x1d, 0xb6, 0xda, 0x88, 0x82, 0xb7, 0xe1, 0x4e, 0x89, 0xb6, 0xaf, 0x82, 0x23, 0x6d,
	0x18, 0xb7, 0x08, 0xda, 0x2d, 0xb8, 0x93, 0xc9, 0xc7, 0x83, 0xa8, 0x9c, 0x36, 0x40, 0x64, 0x64,
	0x18, 0x85, 0x75, 0x88, 0x89, 0xaa, 0x3a, 0xe4, 0x07, 0x9a, 0x45, 0xf0, 0x59, 0xdb, 0x8f, 0x61,
	0x52, 0x73, 0x53, 0x3c, 0x8b, 0x86, 0x9c, 0x31, 0x5a, 0x32, 0x93, 0x5a, 0xd7, 0xc1, 0x51, 0x18,
	0xd6, 0xe3, 0x9d, 0x76, 0x0a, 0xbd, 0x5a, 0x8b, 0xec, 0x00, 0x78, 0x01, 0x4d, 0x38, 0x47, 0x78,
	0x05, 0xdd, 0x19, 0xec, 0xdf, 0xaf, 0x80, 0xf3, 0x32, 0x83, 0x67, 0xa3, 0xbe, 0xf1, 0xf8, 0x38,
	0x18, 0xda, 0x0c, 0xdc, 0x46, 0xc2, 0xf6, 0x61, 0xfc, 0xe3, 0x23, 0x08, 0xdc, 0x2b, 0xe0, 0xd0,
	0x46, 0x94, 0x12, 0x22, 0xd3, 0x68, 0x0b, 0x32, 0xd5, 0x68, 0x62, 0x83, 0xd0, 0xba, 0x8e, 0xca,
	0xec, 0xaf, 0x56, 0xc0, 0x09, 0xd6, 0x95, 0x7a, 0x13, 0xd6, 0xb7, 0x56, 0xdd, 0x24, 0x79, 0x1a,
	0xc5, 0x5e, 0x89, 0x1e, 0x7c, 0x02, 0x8c, 0xb6, 0x29, 0x16, 0xba, 0xb9, 0x9e, 0x57, 0xf4, 0x21,
	0xb1, 0xa1, 0x35, 0x67, 0xd5, 0xe1, 0xf0, 0xd6, 0x65, 0x70, 0x90, 0xfd, 0x9f, 0x89, 0x84, 0x09,
	0x67, 0x82, 0x15, 0xa2, 0xae, 0xd9, 0xdf, 0x05, 0x2e, 0x64, 0xcb, 0xf4, 0x83, 0x0e, 0x4c, 0x52,
	0x86, 0xcc, 0x81, 0xf5, 0x68, 0x1b, 0xc6, 0x25, 0xe6, 0x99, 0xdd, 0xc8, 0x26, 0x6f, 0x4c, 0xb0,
	0xf5, 0x81, 0x25, 0x16, 0x18, 0xc4, 0xd2, 0x8b, 0x88, 0x41, 0xfc, 0x3f, 0xd2, 0x6c, 0x2c, 0x51,
	0xda, 0xec, 0xc7, 0xbe, 0xdd, 0xa3, 0xcc, 0x95, 0x68, 0xab, 0xbb, 0x61, 0x1d, 0x06, 0x2f, 0x0e,
	0x6d, 0x9f, 0x07, 0x93, 0x8c, 0x34, 0x2f, 0x8e, 0xda, 0x82, 0x74, 0x29, 0xa3, 0x7d, 0x5e, 0x03,
	0x47, 0xe0, 0xb3, 0x3a, 0x6c, 0xa7, 0x5c, 0xc0, 0xb0, 0xf3, 0xd2, 0x21, 0x52, 0xce, 0xda, 0xb0,
	0x7f, 0xb1, 0x92, 0x11, 0x40, 0x84, 0xf9, 0x72, 0xd4, 0xf0, 0x43, 0xbc, 0x9e, 0xfa, 0x7f, 0x50,
	0x12, 0x57, 0x78, 0x55, 0x5e, 0xe1, 0x58, 0xa4, 0x61, 0x92, 0xd1, 0xe1, 0x6e, 0xf0, 0x62, 0x95,
	0x88, 0x34, 0x54, 0xb2, 0xe4, 0x25, 0xf6, 0xfb, 0x19, 0x99, 0x44, 0x48, 0xf5, 0x85, 0xcc, 0xe3,
	0x60, 0x88, 0x48, 0x13, 0xaa, 0xa5, 0xe3, 0x1f, 0x62, 0x5b, 0x6e, 0x1d, 0x11, 0xb0, 0x87, 0x6d,
	0xfd, 0xc8, 0x00, 0x38, 0x8d, 0x1a, 0xab, 0xd7, 0xa3, 0x4e, 0x98, 0xd6, 0x62, 0xd8, 0xf0, 0x93,
	0x14, 0xc6, 0xf3, 0xf8, 0xe8, 0x58, 0xa2, 0xb5, 0xd3, 0x60, 0x34, 0x8c, 0x6a, 0xad, 0x4e, 0x0a,
	0xc9, 0x10, 0x8c, 0x3a, 0x23, 0x61, 0xb4, 0x82, 0x7e, 0x62, 0xad, 0x1c, 0xb5, 0x8d, 0x2d, 0x0a,
	0x54, 0x02, 0x8f, 0xe1, 0x92, 0xf5, 0x9d, 0x36, 0xcc, 0xe8, 0x24, 0x22, 0x98, 0xfc, 0xb0, 0x5e,
	0x23, 0x07, 0xd3, 0xc4, 0x0d, 0xbd, 0x8d, 0xe8, 0x19, 0x55, 0x7a, 0x15, 0x95, 0x14, 0x9d, 0x53,
	0xd7, 0x08, 0x80, 0x75, 0x12, 0x0c, 0x27, 0xb0, 0x1e, 0xc3, 0x14, 0xab, 0x66, 0x13, 0x0e, 0xfd,
	0x85, 0x1a, 0x8f, 0xd2, 0x26, 0x8c, 0x6b, 0x1d, 0x34, 0xcc, 0x23, 0x64, 0x98, 0x71, 0xc9, 0x63,
	0xdf, 0x4b, 0xec, 0x5f, 0xab, 0x90, 0xdd, 0x9e, 0xb2, 0xa3, 0x13, 0xf6, 0x8d, 0x21, 0x72, 0xaf,
	0x07, 0x8c, 0xbd, 0xae, 0x8a, 0xbd, 0x96, 0xa9, 0x1d, 0x54, 0xa9, 0xfd, 0xc7, 0x15, 0x22, 0xbb,
	0x19, 0xb5, 0xf8, 0xd4, 0xf8, 0x30, 0x4a, 0xfd, 0xcd, 0x1d, 0x76, 0x02, 0x28, 0x41, 0xf1, 0xc7,
	0xc1, 0x60, 0x1b, 0x52, 0xe9, 0x32, 0x3e, 0x3d, 0x29, 0xef, 0x3a, 0xa4, 0x95, 0x55, 0x08, 0x63,
	0x07, 0x43, 0x59, 0xdf, 0x2a, 0x1c, 0x49, 0xaa, 0xf8, 0x8b, 0x8b, 0xf2, 0x17, 0x08, 0x56, 0xa6,
	0x2d, 0x3b, 0x9d, 0xd8, 0x5f, 0xac, 0x80, 0xb3, 0x42, 0x4f, 0x1a, 0x30, 0x7d, 0x3e, 0xdd, 0xb0,
	0xbf, 0x93, 0x28, 0x23, 0x7c, 0x39, 0x24, 0xfd, 0xa3, 0xc4, 0xfe, 0xbe, 0x01, 0xb2, 0xb0, 0xa5,
	0xe1, 0x5a, 0x8d, 0xa3, 0x4d, 0x3f, 0x28, 0x33, 0xb3, 0xbe, 0x45, 0x3a, 0xc5, 0x90, 0x6e, 0x9e,
	0x7d, 0x8d, 0x58, 0xf7, 0x5e, 0x63, 0xd6, 0xbd, 0xd7, 0xd6, 0xd2, 0xd8, 0x0f, 0x1b, 0xc4, 0x16,
	0x22, 0x9c, 0x71, 0xde, 0x14, 0xcf, 0x38, 0xd5, 0x1e, 0xbe, 0xcd, 0x4e, 0x40, 0xd3, 0x60, 0xc8,
	0xdd, 0x88, 0x3a, 0x44, 0xff, 0xeb, 0xf6, 0x19, 0x01, 0xb5, 0x3f, 0x4b, 0xf4, 0x01, 0x89, 0x03,
	0x6b, 0xa9, 0x9b, 0x76, 0x92, 0x52, 0xca, 0xec, 0x48, 0xb4, 0xb9, 0x19, 0xf8, 0x21, 0xeb, 0xbd,
	0x22, 0x17, 0x58, 0xad, 0xdd, 0x06, 0x17, 0xe5, 0x49, 0xf6, 0xae, 0x1b, 0x04, 0xab, 0x6e, 0x1b,
	0xc6, 0xc9, 0xcc, 0xcc, 0xec, 0xec, 0xad, 0x7b, 0xaf, 0xdf, 0x2e, 0xa7, 0x96, 0xe0, 0x8d, 0x85,
	0x1e, 0x1e, 0xd0, 0xff, 0xf6, 0xaf, 0x50, 0x8d, 0x90, 0xcf, 0x27, 0xb4, 0x75, 0xa0, 0xe9, 0x56,
	0xa2, 0x9d, 0x97, 0xa5, 0x09, 0x6d, 0xe5, 0x57, 0x19, 0x5d, 0x91, 0xaf, 0x82, 0xe1, 0x18, 0xba,
	0x49, 0x14, 0xd2, 0x71, 0xcd, 0x4c, 0x04, 0x0e, 0x26, 0xc3, 0xc1, 0x95, 0x0e, 0x05, 0xb2, 0xdb,
	0xd2, 0xe4, 0xc4, 0xea, 0xeb, 0xe3, 0x04, 0xc6, 0x68, 0x62, 0x94, 0x20, 0x76, 0x0a, 0x8c, 0x76,
	0x28, 0x16, 0xaa, 0xa6, 0xf0, 0xdf, 0xf6, 0x07, 0xd2, 0xd6, 0x43, 0x26, 0xc3, 0x1e, 0x37, 0xf9,
	0x39, 0x69, 0x38, 0x1a, 0x30, 0x5d, 0x8d, 0xfd, 0x6d, 0xb7, 0x5e, 0xe6, 0x28, 0xf5, 0x31, 0x50,
	0xdd, 0x82, 0x3b, 0x7a, 0xf1, 0x42, 0xb1, 0xbf, 0x0d, 0x77, 0x1c, 0x04, 0x64, 0xff, 0xba, 0x3c,
	0x1d, 0x92, 0x7d, 0x6e, 0xdf, 0xba, 0x01, 0x86, 0xe2, 0x4e, 0x80, 0x8f, 0x98, 0xd5, 0xbc, 0x65,
	0x95, 0x42, 0x3b, 0x9d, 0x00, 0x3a, 0x04, 0xce, 0x0e, 0xa4, 0x49, 0xe1, 0xc1, 0x00, 0xa6, 0x70,
	0x86, 0xfc, 0x2a, 0x41, 0xf2, 0x49, 0x3e, 0x33, 0xc9, 0xf8, 0xb0, 0x29, 0xb8, 0x2e, 0xb5, 0xd6,
	0x80, 0x29, 0x6d, 0x6a, 0x7d, 0x7d, 0xb9, 0x84, 0xd8, 0xfd, 0x5e, 0x09, 0x6b, 0xd2, 0x1f, 0xac,
	0xd6, 0x2b, 0xa0, 0x9a, 0xa6, 0x01, 0x65, 0xfb, 0x29, 0xfe, 0x05, 0xc5, 0x3d, 0xef, 0xee, 0x24,
	0xeb, 0xeb, 0xcb, 0x0e, 0x82, 0xb1, 0xbf, 0x34, 0x20, 0x6d, 0x2a, 0xf8, 0x70, 0xd2, 0x74, 0xc3,
	0x06, 0x5c, 0x65, 0xaa, 0xf8, 0xde, 0x9e, 0x05, 0x6e, 0xe5, 0xb6, 0xe6, 0x8f, 0x62, 0x2d, 0x1c,
	0xec, 0xd1, 0x5a, 0x38, 0xd4, 0xdd, 0x5a, 0x68, 0xff, 0x83, 0x0a, 0x38, 0x29, 0x09, 0x1b, 0xce,
	0x8d, 0x3f, 0x15, 0x56, 0xb2, 0x0f, 0xc0, 0xb9, 0x9c, 0xe0, 0x22, 0x0a, 0xe2, 0x72, 0x54, 0xdf,
	0x82, 0x5e, 0xb9, 0xa5, 0xd1, 0x86, 0xb1, 0x1f, 0xb1, 0x83, 0x0b, 0xfd, 0x65, 0x7f, 0x4a, 0xd5,
	0x8f, 0xfa, 0x66, 0x4d, 0x6b, 0x49, 0x9d, 0xc9, 0x5b, 0xea, 0xfa, 0xb4, 0x23, 0x56, 0xe9, 0x8e,
	0xe8, 0x48, 0x23, 0x8f, 0x24, 0x70, 0x69, 0x83, 0x80, 0xfd, 0x4f, 0x2b, 0xd2, 0x02, 0x13, 0x90,
	0xf6, 0x41, 0x7f, 0x2c, 0x63, 0x80, 0x99, 0x06, 0x27, 0xd8, 0xea, 0xd0, 0x19, 0x62, 0x8e, 0xd1,
	0xca, 0x55, 0xd1, 0x1e, 0xf3, 0x13, 0x03, 0xe0, 0x52, 0x5e, 0x4b, 0x7c, 0x31, 0xfa, 0xb3, 0x04,
	0x26, 0x42, 0xf8, 0xb4, 0xa6, 0x48, 0x93, 0x97, 0xf9, 0xf7, 0x8c, 0x68, 0xf6, 0x35, 0xc6, 0xc7,
	0xc5, 0xcb, 0x78, 0x08, 0x9f, 0xf2, 0x0e, 0x18, 0x59, 0x33, 0x68, 0x66, 0xcd, 0xf7, 0x0f, 0x48,
	0xe7, 0x1d, 0x62, 0xe5, 0x09, 0x37, 0xfd, 0xb8, 0xd5, 0x0f, 0x49, 0x2a, 0xce, 0xd6, 0x31, 0x32,
	0x5b, 0x5f, 0x40, 0xd1, 0xf9, 0x53, 0x15, 0x49, 0x85, 0xae, 0x0b, 0xfd, 0x2f, 0xa5, 0x53, 0xe6,
	0x04, 0xe3, 0x40, 0x77, 0xc1, 0x58, 0x55, 0x05, 0xe3, 0x3f, 0xaf, 0x48, 0x2a, 0x5d, 0x03, 0xa6,
	0xeb, 0xad, 0xf6, 0x73, 0x36, 0x82, 0x66, 0x12, 0xb5, 0x2a, 0x4a, 0xd4, 0xbc, 0x71, 0x74, 0xd0,
	0x6c, 0x1c, 0x15, 0x4e, 0x0c, 0x70, 0xa3, 0x6f, 0x92, 0x57, 0x3e, 0x8e, 0x60, 0xc9, 0xab, 0xa2,
	0xef, 0xb3, 0xf0, 0xfd, 0xb4, 0x24, 0x5a, 0xb4, 0x2d, 0x96, 0xe9, 0xd0, 0x7b, 0xd2, 0x56, 0x82,
	0x36, 0xa9, 0x20, 0x58, 0x83, 0xf5, 0x4e, 0x0c, 0xf1, 0x21, 0xb0, 0x0c, 0xea, 0x2f, 0xe4, 0x66,
	0x96, 0x80, 0xb8, 0x04, 0x97, 0x5e, 0x03, 0x43, 0xd8, 0xb1, 0x05, 0x9b, 0x27, 0x45, 0xfd, 0x59,
	0x40, 0xbf, 0xbe, 0xd3, 0x86, 0x0e, 0x01, 0xb3, 0xff, 0x36, 0xb9, 0x41, 0xe7, 0x22, 0xc8, 0xdd,
	0x86, 0xfd, 0x21, 0xe4, 0x06, 0x18, 0xda, 0x46, 0x28, 0xe8, 0xfc, 0x56, 0x54, 0x73, 0xa1, 0x0d,
	0x87, 0xc0, 0x61, 0x4f, 0x0c, 0x5c, 0x5a, 0x23, 0xa6, 0x2d, 0x76, 0x9d, 0x51, 0x75, 0x0e, 0x91,
	0xf2, 0x35, 0x5c, 0xbc, 0xe4, 0xd9, 0x3f, 0x2c, 0x1b, 0x57, 0x88, 0x16, 0xff, 0x7c, 0xd8, 0xf7,
	0xcb, 0x15, 0x75, 0x41, 0x49, 0x93, 0x6f, 0x31, 0x8a, 0x5b, 0xe5, 0xac, 0xbe, 0x1b, 0x51, 0x2a,
	0x58, 0x7d, 0x37, 0x22, 0x7a, 0xcf, 0x9f, 0xd4, 0xa3, 0x36, 0x93, 0x57, 0xe4, 0x07, 0x16, 0x65,
	0x9d, 0x8d, 0xc0, 0xaf, 0xd7, 0xd0, 0xf1, 0x89, 0xe9, 0x78, 0xb8, 0xe4, 0x6d, 0xb8, 0x63, 0xff,
	0xaa, 0xac, 0xb4, 0x13, 0x43, 0x6c, 0xbf, 0xd6, 0x66, 0x1f, 0x09, 0xb5, 0xbe, 0x05, 0x4c, 0xe0,
	0x09, 0x81, 0x85, 0x18, 0x4c, 0x26, 0x87, 0xcc, 0x23, 0x81, 0x44, 0x9a, 0x33, 0xbe, 0xcd, 0xfe,
	0x85, 0x89, 0xb5, 0x00, 0xc6, 0xeb, 0x31, 0xf4, 0x60, 0x98, 0xfa, 0x6e, 0x90, 0x60, 0x5b, 0xe9,
	0xf8, 0xf4, 0x65, 0xe5, 0xdb, 0xb9, 0x0c, 0x62, 0x81, 0xdd, 0xde, 0x39, 0xe2, 0x77, 0xba, 0x13,
	0xce, 0x13, 0x18, 0xfb, 0x9b, 0x3b, 0x7f, 0x7e, 0xc2, 0x21, 0x1c, 0xd9, 0xce, 0xb8, 0xf1, 0xa7,
	0xe2, 0x84, 0xd3, 0x36, 0x8c, 0xe7, 0x42, 0xcb, 0xf5, 0xcb, 0xde, 0x5e, 0x1d, 0x07, 0x43, 0x10,
	0xa1, 0xa1, 0xe4, 0x93, 0x1f, 0xf6, 0x67, 0x35, 0xfc, 0xc2, 0xad, 0xf5, 0xbb, 0x25, 0x7e, 0x7d,
	0x58, 0x15, 0xae, 0x0f, 0xbf, 0x39, 0x20, 0x6d, 0x5d, 0x7e, 0xe8, 0xa7, 0xd4, 0xfd, 0x68, 0x0d,
	0x26, 0x49, 0xb9, 0xc5, 0x3e, 0x05, 0x46, 0xeb, 0x51, 0x98, 0xba, 0xf5, 0x34, 0xa1, 0x57, 0x21,
	0xfc, 0x37, 0x52, 0x42, 0xe8, 0xfd, 0x78, 0xad, 0x93, 0xc0, 0x98, 0xcc, 0xde, 0x51, 0x67, 0x82,
	0x16, 0x3e, 0x46, 0x65, 0x22, 0x50, 0xbd, 0xe9, 0xa6, 0x09, 0x9d, 0xa8, 0x0c, 0x68, 0x0e, 0x95,
	0x59, 0xaf, 0x02, 0x8b, 0x01, 0xb5, 0x60, 0xc3, 0x6d, 0xc4, 0x51, 0xa7, 0x4d, 0x9c, 0x83, 0x46,
	0x9d, 0xa3, 0xb4, 0x66, 0x85, 0x57, 0x58, 0xaf, 0x80, 0x23, 0x02, 0xce, 0x30, 0x84, 0x74, 0xf5,
	0x8f, 0x3a, 0x87, 0x33, 0xb4, 0xb8, 0x18, 0xdf, 0xa1, 0xfb, 0x01, 0x4c, 0xb0, 0x1f, 0xd0, 0xa8,
	0x43, 0x7e, 0x58, 0x9f, 0x04, 0x07, 0xd1, 0x3f, 0xb5, 0x96, 0xfb, 0xac, 0x96, 0xf8, 0x1f, 0x12,
	0xa7, 0x9f, 0xf1, 0xe9, 0x33, 0x39, 0x2b, 0xf0, 0x52, 0x98, 0xde, 0x9e, 0x26, 0x3b, 0xd7, 0x38,
	0xfa, 0x62, 0xc5, 0x7d, 0xb6, 0xe6, 0x7f, 0x08, 0xed, 0x8e, 0xb4, 0x13, 0x6c, 0xfa, 0xa1, 0x9f,
	0x34, 0xfb, 0xc6, 0xf3, 0x49, 0x30, 0x92, 0x74, 0xea, 0x75, 0x98, 0x30, 0x96, 0xb3, 0x9f, 0x76,
	0x24, 0x35, 0xcb, 0xd4, 0x67, 0xaa, 0xf3, 0x95, 0x9d, 0x70, 0xba, 0x9b, 0xe9, 0xfc, 0x8d, 0x42,
	0xe8, 0xf5, 0xa9, 0x3d, 0x05, 0x37, 0xb9, 0x5b, 0xee, 0x17, 0xee, 0x3a, 0xb8, 0x2a, 0xef, 0xd4,
	0x73, 0x64, 0xd2, 0xae, 0x61, 0x07, 0x2e, 0x7c, 0x29, 0xe2, 0xd7, 0x4b, 0x6e, 0x84, 0xf6, 0x5f,
	0xaa, 0x48, 0xad, 0x24, 0x7b, 0xd2, 0x8a, 0xf5, 0x12, 0x18, 0x4e, 0xfc, 0x00, 0x86, 0xa9, 0xfe,
	0x7e, 0x80, 0x56, 0xda, 0x7f, 0x2b, 0x67, 0x46, 0x20, 0x57, 0x3f, 0x0b, 0xf8, 0x16, 0xb8, 0x9c,
	0x6e, 0x8c, 0x16, 0x71, 0x3d, 0x6a, 0xb5, 0x5d, 0xa4, 0xaf, 0x45, 0x9d, 0x90, 0xdd, 0x8a, 0x4e,
	0xd0, 0xc2, 0x35, 0x54, 0xc6, 0xef, 0xaa, 0xaa, 0x3d, 0xdd, 0x55, 0xfd, 0x25, 0xf9, 0x28, 0x28,
	0xde, 0x67, 0x94, 0x20, 0xf4, 0x2e, 0x18, 0x7b, 0xea, 0x06, 0x41, 0x1b, 0xa1, 0xc9, 0x99, 0x37,
	0x31, 0x21, 0xbc, 0x15, 0x27, 0x83, 0xb4, 0xff, 0xa5, 0xac, 0x18, 0x77, 0xda, 0x41, 0xe4, 0x7a,
	0xfd, 0xa0, 0xe7, 0x65, 0x30, 0x88, 0xc4, 0x86, 0xfe, 0xba, 0x63, 0xd1, 0x0f, 0xa0, 0x83, 0xeb,
	0xad, 0x33, 0x60, 0xac, 0xe5, 0xb7, 0x60, 0x76, 0xab, 0x3c, 0xe6, 0x8c, 0xa2, 0x02, 0x7c, 0xbd,
	0xfa, 0xba, 0xa0, 0x20, 0x90, 0xeb, 0xaa, 0x29, 0x8e, 0x88, 0x13, 0xa9, 0xb9, 0x97, 0xfc, 0x93,
	0x8a, 0x6c, 0x3c, 0x76, 0xb7, 0xe1, 0xf3, 0xe3, 0x31, 0x9a, 0xc7, 0x9d, 0x10, 0xd1, 0x40, 0x27,
	0x88, 0x3a, 0x8f, 0x49, 0xe5, 0x47, 0xee, 0xec, 0xef, 0xc9, 0x97, 0xdf, 0x7e, 0x98, 0xa4, 0x6e,
	0x10, 0x3c, 0xc7, 0xfe, 0xbe, 0x9e, 0x53, 0xeb, 0x7a, 0xeb, 0xc8, 0x13, 0x69, 0x2a, 0x92, 0x63,
	0x2e, 0xbf, 0xe9, 0x2b, 0x21, 0xad, 0xbe, 0x07, 0xd8, 0xb9, 0xc3, 0x4b, 0x34, 0x1f, 0x3d, 0x0d,
	0xd1, 0x5c, 0xef, 0xc3, 0x05, 0xf1, 0xef, 0x56, 0xc0, 0x65, 0x65, 0xb6, 0xf5, 0xb7, 0x05, 0xeb,
	0x08, 0xa8, 0x06, 0xd1, 0x53, 0x2a, 0x7b, 0xd0, 0xbf, 0xd8, 0x4c, 0xe0, 0x37, 0x9a, 0x54, 0xf1,
	0xc0, 0xff, 0x5b, 0x6f, 0xe6, 0x26, 0xd0, 0xb9, 0xec, 0x82, 0x43, 0x43, 0x90, 0xc0, 0xfa, 0x3f,
	0x92, 0xf5, 0x5e, 0x22, 0x06, 0xd6, 0x9b, 0xb0, 0x05, 0xf7, 0x41, 0x04, 0x5c, 0x03, 0x43, 0x69,
	0xb3, 0xd3, 0xda, 0xa0, 0x93, 0x45, 0x07, 0x48, 0x00, 0x90, 0xb0, 0xc0, 0xda, 0x8b, 0xe0, 0xf8,
	0x3b, 0x8a, 0x0a, 0x98, 0xdf, 0x6f, 0x26, 0x49, 0x86, 0x64, 0x49, 0x62, 0xff, 0x6f, 0xca, 0xd5,
	0x45, 0x0c, 0xdd, 0x14, 0x96, 0xed, 0xa0, 0x05, 0x06, 0x93, 0xa0, 0xd3, 0x60, 0x7a, 0x03, 0xfa,
	0x1f, 0x7b, 0x84, 0xf8, 0x69, 0xc0, 0x0f, 0x83, 0xf8, 0x87, 0x35, 0x0d, 0x46, 0xbd, 0xa8, 0xde,
	0x69, 0xa1, 0xcd, 0x8c, 0x0c, 0xcd, 0x49, 0xb9, 0x97, 0xf3, 0xb4, 0xd6, 0xe1, 0x70, 0xd6, 0xbd,
	0x9c, 0xb7, 0xf8, 0x19, 0xf9, 0x1b, 0x4c, 0xbe, 0x66, 0x30, 0xbf, 0x31, 0xa0, 0x0c, 0xa6, 0xd7,
	0x87, 0xbe, 0x9e, 0x04, 0xc3, 0x9b, 0x51, 0xdc, 0x72, 0x53, 0x76, 0xf9, 0x47, 0x7e, 0x59, 0xaf,
	0xa0, 0xc1, 0x83, 0xdc, 0x0b, 0xe1, 0x98, 0x86, 0x44, 0x87, 0x40, 0x58, 0x37, 0x29, 0xbb, 0x7a,
	0x71, 0x3c, 0x20, 0xcc, 0x9c, 0x66, 0xcc, 0x1c, 0xea, 0xc5, 0x57, 0x21, 0xcf, 0xea, 0xe1, 0x8f,
	0xc0, 0xea, 0x91, 0xdd, 0xb0, 0xfa, 0x2b, 0xe4, 0xf5, 0x83, 0xb8, 0xf4, 0xcb, 0x32, 0x9a, 0x33,
	0x74, 0xa0, 0x2b, 0x43, 0x7b, 0xdb, 0x58, 0xec, 0xdf, 0x97, 0x15, 0x0e, 0xba, 0x41, 0xf4, 0x61,
	0xf2, 0x7b, 0x6e, 0xbc, 0x45, 0x85, 0x12, 0xfe, 0xdf, 0xba, 0xc3, 0x27, 0x49, 0x2f, 0x3e, 0x29,
	0xb9, 0x29, 0x34, 0xd8, 0xad, 0xc7, 0xf6, 0xdf, 0xa9, 0x80, 0x63, 0x8a, 0xa5, 0xfa, 0xf9, 0xcf,
	0xeb, 0x0b, 0x60, 0x9c, 0xcd, 0xa4, 0x9a, 0xef, 0xe1, 0x5e, 0x54, 0x1d, 0xc0, 0x8a, 0x96, 0x3c,
	0xfb, 0xb3, 0xd2, 0x24, 0x61, 0x44, 0x27, 0x7b, 0x40, 0x35, 0xb3, 0x1e, 0x57, 0x05, 0x67, 0x96,
	0x2f, 0x56, 0xa4, 0x43, 0x32, 0x55, 0xd6, 0x61, 0x98, 0xf6, 0x61, 0x63, 0xba, 0x0e, 0x8e, 0x26,
	0x30, 0x4c, 0xfc, 0xd4, 0xdf, 0x86, 0x35, 0x18, 0xba, 0x1b, 0x01, 0x77, 0x1c, 0x3c, 0xc2, 0x2b,
	0x16, 0x48, 0x79, 0xde, 0xce, 0xdc, 0x37, 0x3a, 0xec, 0x1f, 0xad, 0xa8, 0xb8, 0x57, 0x3a, 0x41,
	0xea, 0xf7, 0x43, 0x7d, 0xb0, 0xee, 0x01, 0xc0, 0x75, 0x1b, 0x66, 0x31, 0x35, 0xaa, 0x41, 0x02,
	0xa8, 0x5d, 0x93, 0xd4, 0x82, 0x06, 0x4c, 0xef, 0x07, 0xd1, 0x86, 0x1b, 0x50, 0x7f, 0x8d, 0x3e,
	0xf4, 0xfa, 0xa7, 0x15, 0xc5, 0xa3, 0xef, 0x2d, 0x58, 0x9f, 0x10, 0x04, 0xa3, 0x7a, 0x83, 0xa3,
	0x6d, 0x4b, 0x90, 0x8d, 0x1f, 0xe0, 0x47, 0x94, 0xd8, 0x3e, 0x82, 0x3a, 0x4f, 0x8c, 0x22, 0x1f,
	0x9d, 0x14, 0x9b, 0xbe, 0xbb, 0xa8, 0xe6, 0x55, 0x04, 0x84, 0xda, 0x19, 0xf0, 0x3d, 0x3b, 0xc5,
	0x0b, 0x8d, 0x37, 0xb9, 0xd8, 0x09, 0x02, 0x54, 0xd7, 0x87, 0x56, 0x2b, 0x05, 0xad, 0xfe, 0x26,
	0x99, 0x7c, 0xa4, 0xd9, 0x44, 0xba, 0xe2, 0x58, 0x88, 0xe3, 0xa8, 0x2f, 0xbd, 0x2e, 0x68, 0xdf,
	0xba, 0x05, 0x86, 0x21, 0x6e, 0x27, 0xe7, 0x1f, 0xa4, 0x52, 0xe2, 0x50, 0x40, 0xdb, 0xc7, 0xd7,
	0x32, 0xcc, 0x9e, 0x25, 0x98, 0x09, 0x96, 0xe6, 0x93, 0x3e, 0xfb, 0xd2, 0xad, 0xe1, 0xcd, 0x47,
	0x6c, 0x8a, 0x78, 0x0e, 0x96, 0xba, 0x57, 0x6a, 0xe4, 0x90, 0xce, 0x31, 0xdb, 0x5c, 0x7f, 0xa9,
	0xff, 0x8b, 0xe4, 0x7c, 0xcc, 0x5b, 0x22, 0x5e, 0xe4, 0x7d, 0x68, 0xec, 0x96, 0x64, 0x5e, 0xac,
	0x4a, 0xb6, 0x6f, 0x72, 0x37, 0x4a, 0x6a, 0x33, 0xab, 0xa3, 0xfd, 0xfd, 0x15, 0x7c, 0x0f, 0xc8,
	0x69, 0x21, 0x37, 0x42, 0x8c, 0x96, 0x37, 0x5f, 0x9f, 0xb9, 0xb9, 0x70, 0xf3, 0xe6, 0x1e, 0xaf,
	0xb0, 0x50, 0x66, 0x07, 0x21, 0x61, 0x96, 0x98, 0xc8, 0x4b, 0x6e, 0x68, 0xd8, 0x8c, 0x4d, 0x98,
	0x31, 0xe6, 0xd0, 0x5f, 0xf6, 0xdf, 0xaf, 0x60, 0x29, 0xc2, 0x1b, 0xdc, 0x08, 0xa2, 0xfa, 0x56,
	0xa9, 0x23, 0xed, 0x84, 0xef, 0xd5, 0x96, 0x1e, 0xae, 0x3e, 0x5e, 0x5f, 0x5d, 0x58, 0x70, 0x0a,
	0xbc, 0x31, 0xc7, 0x7d, 0x8f, 0x83, 0x89, 0x9f, 0x3d, 0x5e, 0x5b, 0x70, 0xf4, 0x27, 0x15, 0xcc,
	0x24, 0xf6, 0x19, 0x02, 0xb3, 0xff, 0x21, 0x51, 0x57, 0x38, 0xf5, 0x9d, 0xf0, 0x4f, 0x17, 0xfd,
	0xdf, 0x47, 0x4e, 0x4d, 0xe2, 0x3a, 0x9b, 0x0d, 0xfa, 0xe0, 0x2b, 0x15, 0x6d, 0x6e, 0x26, 0x30,
	0x65, 0xbe, 0x52, 0xe4, 0x17, 0x7e, 0x7c, 0xed, 0xb7, 0xfc, 0x94, 0xbd, 0xee, 0xc2, 0x3f, 0xec,
	0x18, 0x3f, 0xc2, 0xe1, 0x14, 0x24, 0xd0, 0x8d, 0xeb, 0xcd, 0x12, 0xad, 0x4f, 0x80, 0xca, 0x07,
	0x54, 0x69, 0xaa, 0x7c, 0x60, 0x68, 0x33, 0xc1, 0x06, 0x15, 0xde, 0x66, 0x0c, 0x93, 0x28, 0xd8,
	0xde, 0x6b, 0x1f, 0xd7, 0xbf, 0x5e, 0xcd, 0xc9, 0xb4, 0xf5, 0xa8, 0x8d, 0x86, 0x32, 0x29, 0x75,
	0x06, 0x3f, 0x54, 0x8f, 0xe2, 0x18, 0x26, 0xed, 0x28, 0xf4, 0x60, 0xc8, 0xef, 0x32, 0x94, 0x52,
	0xeb, 0x14, 0x18, 0xd9, 0x88, 0xd2, 0xa4, 0xd6, 0x6e, 0x51, 0x93, 0xc2, 0x30, 0xfa, 0xb9, 0xda,
	0x42, 0xca, 0x2d, 0xae, 0xf0, 0x43, 0xec, 0xa9, 0x4d, 0xee, 0x30, 0x00, 0x2a, 0x5a, 0xc2, 0x25,
	0x08, 0x80, 0x5e, 0x49, 0xb9, 0x41, 0xc0, 0xae, 0x2e, 0xc8, 0x2d, 0xd5, 0x1c, 0x2a, 0xb1, 0x2e,
	0x83, 0x83, 0x9b, 0x51, 0xfc, 0xd4, 0x8d, 0x3d, 0x7a, 0x59, 0x42, 0x2e, 0x2c, 0x26, 0x68, 0x21,
	0xbf, 0x2c, 0x61, 0x40, 0xe4, 0xb2, 0x64, 0x44, 0x02, 0x22, 0x97, 0x25, 0x27, 0xc1, 0x30, 0xbd,
	0x20, 0x19, 0x25, 0x34, 0xd2, 0x5b, 0x91, 0x29, 0x30, 0xca, 0x6f, 0x43, 0xc6, 0xe8, 0x55, 0x0d,
	0xbb, 0x06, 0xc9, 0x66, 0x1b, 0xd0, 0xcf, 0xb6, 0x71, 0x61, 0xe4, 0xf9, 0x16, 0x30, 0x21, 0x6c,
	0x01, 0xbf, 0x4d, 0xec, 0xcb, 0xe2, 0x74, 0xe0, 0x43, 0xe3, 0xb8, 0x48, 0xd7, 0x29, 0x31, 0x3e,
	0x77, 0xc0, 0x68, 0xdd, 0x4d, 0x61, 0x23, 0x8a, 0xf3, 0xbe, 0xc0, 0xb4, 0x8d, 0x39, 0x5a, 0xef,
	0x70, 0x48, 0xee, 0x4b, 0x5e, 0x2d, 0xf6, 0x25, 0xa7, 0x5e, 0x7b, 0x32, 0xe5, 0x6b, 0xee, 0x76,
	0x99, 0xe5, 0x6b, 0xaf, 0x62, 0x1d, 0x4b, 0xda, 0xcf, 0x4b, 0x62, 0xfc, 0x5e, 0x79, 0x4f, 0x49,
	0xa3, 0x46, 0x23, 0x80, 0x7d, 0x98, 0xfb, 0x57, 0xc1, 0x88, 0x78, 0x24, 0xc9, 0x3f, 0x30, 0xa0,
	0xb5, 0xf6, 0x5f, 0x18, 0x90, 0xf9, 0xe4, 0x7a, 0x1e, 0xdd, 0x55, 0x4b, 0xb4, 0xfe, 0x6d, 0xe0,
	0x8c, 0xeb, 0x79, 0x35, 0xb2, 0x36, 0xda, 0x44, 0x4b, 0xae, 0x41, 0x76, 0x27, 0x41, 0x97, 0xe1,
	0xa4, 0xeb, 0x79, 0x78, 0xef, 0xa4, 0x6a, 0x34, 0xbf, 0xb3, 0xa0, 0x9b, 0x71, 0xb5, 0x50, 0xf1,
	0x2b, 0xf3, 0x10, 0xfe, 0x38, 0x18, 0xc2, 0xa4, 0xd1, 0x37, 0xf0, 0xe4, 0x87, 0xbd, 0x23, 0xeb,
	0x85, 0xc4, 0x7d, 0xa2, 0x3c, 0x2f, 0x7a, 0xd1, 0xa2, 0xff, 0xd7, 0xfc, 0x5e, 0xb3, 0x1c, 0xa1,
	0x19, 0x5f, 0x66, 0xaf, 0x39, 0x0f, 0xc0, 0x86, 0x5b, 0xdf, 0x42, 0x72, 0x82, 0xdf, 0xdd, 0x08,
	0x25, 0xd6, 0x6d, 0x30, 0xd6, 0x80, 0x51, 0xad, 0x1d, 0xf9, 0x21, 0xb3, 0x59, 0x28, 0xd6, 0xa2,
	0xfb, 0x30, 0x5a, 0x45, 0xb5, 0xce, 0x68, 0x83, 0xfe, 0x67, 0x7d, 0x3b, 0x98, 0x48, 0x60, 0xb0,
	0x59, 0xa3, 0x2f, 0xa7, 0xa9, 0xd9, 0xa2, 0xf8, 0x0a, 0x15, 0x7d, 0xb0, 0x40, 0xe0, 0xed, 0x3f,
	0x22, 0x8e, 0x3d, 0xb2, 0x4e, 0xb3, 0x18, 0x47, 0x2d, 0x07, 0xb6, 0x03, 0xbf, 0x94, 0x1a, 0xf5,
	0x12, 0x38, 0x44, 0x54, 0x32, 0xfe, 0x7e, 0x9b, 0xf4, 0xf9, 0x20, 0x29, 0xa5, 0x8f, 0xb7, 0x05,
	0xb0, 0xa6, 0x9f, 0xa4, 0x11, 0x8d, 0xa5, 0xc1, 0xc1, 0x1e, 0x90, 0x42, 0x24, 0xda, 0xc9, 0xd3,
	0x97, 0x5a, 0xd2, 0x76, 0x5b, 0x4c, 0xf6, 0x93, 0xa2, 0xb5, 0xb6, 0xdb, 0x12, 0x82, 0xfa, 0x0c,
	0x11, 0x29, 0x8a, 0xc3, 0xea, 0xd8, 0xbf, 0x47, 0x0c, 0x4e, 0x94, 0x04, 0x3c, 0x94, 0x2c, 0x62,
	0x49, 0x89, 0xbe, 0xbd, 0x05, 0x4e, 0xf8, 0x5e, 0xed, 0xc9, 0xc2, 0xdc, 0xfa, 0x23, 0x07, 0xab,
	0x28, 0x2b, 0x0b, 0x6b, 0x6b, 0x33, 0xf7, 0x17, 0xf4, 0xea, 0x33, 0x8b, 0x60, 0x72, 0xdc, 0xf7,
	0xf2, 0x9f, 0x20, 0x06, 0x08, 0xb8, 0xd6, 0x6f, 0x4f, 0xe3, 0xa3, 0xd3, 0x90, 0x73, 0x30, 0x83,
	0x5e, 0xbf, 0x3d, 0x6d, 0x7f, 0xb1, 0x8a, 0xe7, 0xa4, 0xd8, 0x91, 0x79, 0xdf, 0x0d, 0xa2, 0x46,
	0xc9, 0x31, 0x82, 0xcf, 0xea, 0x41, 0xc7, 0x83, 0xb5, 0xb6, 0x1f, 0x86, 0xdc, 0x60, 0x72, 0x90,
	0x96, 0xae, 0xe2, 0x42, 0xeb, 0x0d, 0x30, 0xb6, 0x19, 0x05, 0x1e, 0x8c, 0x6b, 0x5c, 0x0e, 0x14,
	0x4e, 0xb1, 0x51, 0x02, 0xbd, 0xe4, 0xa1, 0x61, 0x23, 0x9b, 0x5c, 0xcd, 0x73, 0x53, 0x48, 0xdf,
	0xf9, 0x03, 0x52, 0x34, 0xef, 0xa6, 0x58, 0x30, 0x50, 0x00, 0x3e, 0x72, 0xa3, 0xa4, 0x60, 0x09,
	0x2d, 0x09, 0xf6, 0x35, 0xde, 0x62, 0x86, 0x8d, 0x5b, 0x0c, 0xc5, 0x88, 0x9f, 0x45, 0xf1, 0xdd,
	0x74, 0x44, 0xb7, 0x9b, 0x8e, 0x66, 0xbb, 0xa9, 0x75, 0x07, 0x8c, 0x6c, 0x42, 0xe8, 0xa1, 0x96,
	0xc7, 0xba, 0x77, 0x6a, 0x18, 0xc1, 0x2e, 0x79, 0xf6, 0x6f, 0x0c, 0xe4, 0x06, 0x82, 0x4d, 0xd2,
	0xbd, 0x7f, 0x91, 0x25, 0xb1, 0xab, 0xaa, 0xb0, 0xab, 0x2b, 0xb3, 0xcf, 0x01, 0x80, 0xf6, 0x01,
	0xaa, 0x84, 0x10, 0x6e, 0x8f, 0xb9, 0x9e, 0xf7, 0x48, 0xd1, 0x43, 0x86, 0x45, 0xce, 0xa1, 0x85,
	0xe5, 0x3e, 0x43, 0xed, 0x51, 0x86, 0xb6, 0xdc, 0x67, 0x4b, 0x1e, 0x2e, 0xf6, 0x43, 0x54, 0x3c,
	0x4a, 0x8b, 0xfd, 0x70, 0xc9, 0xe3, 0x7c, 0x1e, 0x13, 0xb4, 0x96, 0x3f, 0x1e, 0xc4, 0x8a, 0x33,
	0xe7, 0x58, 0x69, 0xc5, 0xb9, 0x57, 0x6e, 0x61, 0x05, 0xbb, 0xca, 0x14, 0xec, 0x45, 0x70, 0x62,
	0x33, 0x8e, 0x5a, 0x35, 0xdf, 0xab, 0x2d, 0x2e, 0xcf, 0xdc, 0xcf, 0x0e, 0x2e, 0x83, 0x46, 0x34,
	0xc7, 0xd0, 0x07, 0x4b, 0x9e, 0x04, 0x6e, 0xbd, 0x09, 0x40, 0x1a, 0xb5, 0x6b, 0x82, 0xb4, 0xe9,
	0xb6, 0x1c, 0xd2, 0xa8, 0xbd, 0x82, 0x43, 0x8c, 0xdd, 0x00, 0xc3, 0x9b, 0x7e, 0x90, 0xf2, 0xb9,
	0x7c, 0x4a, 0x8d, 0x72, 0x94, 0x2c, 0xe2, 0x6a, 0x87, 0x82, 0x59, 0xa7, 0xc1, 0x28, 0xe2, 0x32,
	0x1e, 0x4f, 0xc2, 0xfe, 0x91, 0x96, 0x1f, 0xe2, 0xc1, 0x44, 0x55, 0xee, 0x33, 0x52, 0x35, 0x4a,
	0xab, 0xdc, 0x67, 0xf9, 0x45, 0x35, 0xa6, 0xcc, 0x12, 0x79, 0x12, 0x00, 0xe3, 0x24, 0x18, 0xd7,
	0x4f, 0x82, 0x09, 0xfd, 0x24, 0x38, 0xa8, 0x9b, 0x04, 0x87, 0x84, 0xc5, 0xa6, 0xe3, 0x3e, 0x3e,
	0xff, 0x1d, 0x36, 0x6e, 0xc5, 0x2a, 0xf7, 0x11, 0xb8, 0xa0, 0x44, 0x1f, 0x11, 0x95, 0x68, 0xfb,
	0x27, 0x89, 0x6a, 0xcc, 0x27, 0x59, 0x0c, 0x5d, 0x8f, 0xae, 0xcb, 0x85, 0xdb, 0x37, 0x5f, 0x9f,
	0xbf, 0x3d, 0xb3, 0x0f, 0x13, 0x2e, 0x63, 0x53, 0x55, 0x60, 0x93, 0xfd, 0xcf, 0x88, 0xeb, 0x31,
	0xa7, 0x4d, 0xde, 0xda, 0x4a, 0xbd, 0x08, 0x7f, 0xbf, 0x93, 0xa4, 0xb5, 0x7a, 0x00, 0xdd, 0x98,
	0x8a, 0xee, 0x31, 0x54, 0x32, 0x87, 0x0a, 0xc8, 0x23, 0xb9, 0xed, 0x68, 0x0b, 0xb2, 0x73, 0x14,
	0xf9, 0xc5, 0x7b, 0x33, 0xd8, 0x73, 0x6f, 0x86, 0xc4, 0xde, 0x7c, 0x1e, 0xeb, 0xc8, 0x4a, 0x67,
	0xfa, 0xb0, 0xa9, 0x66, 0xe4, 0x0e, 0x48, 0xe4, 0x1e, 0xa2, 0xea, 0x67, 0x95, 0x44, 0xb9, 0xb1,
	0x23, 0xac, 0xb2, 0x08, 0x03, 0x5d, 0x87, 0xfe, 0x36, 0x8f, 0x06, 0x93, 0x94, 0x0c, 0x0c, 0x48,
	0x3a, 0x3c, 0x20, 0x76, 0xf8, 0x1b, 0xe4, 0xcd, 0xa5, 0x20, 0xbf, 0xd2, 0xf5, 0x9d, 0x76, 0xb9,
	0xc3, 0x56, 0xaf, 0x33, 0x4a, 0x16, 0x36, 0xd5, 0xdd, 0x08, 0x9b, 0x69, 0x30, 0xec, 0xe2, 0x70,
	0x81, 0x39, 0x17, 0x8e, 0x35, 0x18, 0x32, 0x76, 0xcd, 0x60, 0x08, 0x87, 0x42, 0xda, 0xff, 0xed,
	0xa0, 0xac, 0x2e, 0x25, 0x19, 0x64, 0xb9, 0x79, 0x1a, 0x46, 0xb5, 0xa7, 0x70, 0xa3, 0x9d, 0xa9,
	0x81, 0x63, 0x61, 0xf4, 0x2e, 0x29, 0xc0, 0x91, 0x16, 0x88, 0x73, 0x15, 0x9d, 0xa7, 0xe4, 0x97,
	0xa2, 0x31, 0x0f, 0xe6, 0x34, 0xe6, 0x0b, 0x60, 0x1c, 0xcf, 0xfc, 0x9a, 0x17, 0xbb, 0x9b, 0x29,
	0x3b, 0xee, 0xe3, 0xa2, 0x79, 0x54, 0xc2, 0x99, 0x3c, 0xdc, 0x85, 0xc9, 0xb3, 0xe0, 0x70, 0x0c,
	0xdb, 0xc1, 0x4e, 0x2d, 0x8d, 0x18, 0xa7, 0x47, 0xba, 0x73, 0x7a, 0x02, 0x7f, 0xb3, 0x1e, 0x11,
	0x6e, 0x4f, 0x82, 0x11, 0xa6, 0xe7, 0x92, 0xe0, 0x65, 0xec, 0x27, 0x92, 0xc6, 0xb1, 0x1b, 0x7a,
	0x58, 0xf6, 0x61, 0x69, 0x5c, 0x75, 0x46, 0x49, 0xc1, 0x92, 0x67, 0xdd, 0x03, 0x04, 0x4d, 0xad,
	0xe5, 0xc6, 0x5b, 0x9d, 0x36, 0x0d, 0x3f, 0x78, 0x5c, 0x7c, 0x68, 0x1d, 0xec, 0xac, 0xe0, 0x3a,
	0x67, 0x3c, 0xce, 0x7e, 0x58, 0xd3, 0x60, 0x14, 0x86, 0xa9, 0x9f, 0xfa, 0x30, 0x99, 0x1c, 0xc7,
	0x5a, 0xe7, 0x49, 0x75, 0x33, 0x59, 0x40, 0xf5, 0x3b, 0x0e, 0x87, 0xb3, 0xbe, 0x03, 0x1c, 0x4c,
	0xea, 0x4d, 0xe8, 0x75, 0x02, 0x48, 0xf6, 0x8d, 0x89, 0x1e, 0x7a, 0xc9, 0xbe, 0xc0, 0x3b, 0xcb,
	0xb7, 0x82, 0xf1, 0x34, 0x0d, 0x6a, 0x09, 0xac, 0x47, 0xa1, 0x97, 0x60, 0xa9, 0xdf, 0xe5, 0x7b,
	0x90, 0xa6, 0xc1, 0x1a, 0x01, 0xb7, 0xff, 0xe7, 0x41, 0x75, 0x21, 0xa1, 0xd9, 0xe5, 0xf9, 0x6e,
	0x39, 0xa9, 0x21, 0x78, 0xe6, 0x99, 0x26, 0x4f, 0xb5, 0xdb, 0xe4, 0x19, 0x34, 0x4e, 0x9e, 0xa1,
	0xdd, 0x4f, 0x9e, 0xe1, 0xdd, 0x4e, 0x9e, 0x57, 0xc0, 0x50, 0x0b, 0xf1, 0x81, 0x4e, 0xbb, 0x63,
	0xea, 0xf9, 0xc1, 0xf3, 0x5d, 0x87, 0x40, 0xfc, 0xf9, 0x3c, 0xeb, 0x61, 0x9e, 0xfd, 0x54, 0x15,
	0x5b, 0x4d, 0xf9, 0x3c, 0xa3, 0x96, 0xbb, 0xfe, 0xec, 0x51, 0x1f, 0x69, 0xb6, 0xd9, 0xe0, 0xe0,
	0x53, 0x3f, 0x6d, 0xd6, 0x5a, 0x3b, 0xb5, 0xa4, 0x1e, 0xc5, 0xcc, 0x78, 0x39, 0x8e, 0x0a, 0x57,
	0x76, 0xd6, 0x50, 0x91, 0x75, 0x03, 0x8c, 0x61, 0x0d, 0xa9, 0xcb, 0xac, 0x1b, 0x45, 0x40, 0xf8,
	0xa4, 0x43, 0x36, 0xc6, 0x61, 0xb6, 0x31, 0xca, 0x13, 0x60, 0x04, 0x07, 0x4b, 0xca, 0x26, 0xc0,
	0x75, 0x30, 0x92, 0x46, 0x04, 0xf7, 0xa8, 0x11, 0xf7, 0x70, 0x1a, 0x61, 0xcc, 0xb9, 0x01, 0x1c,
	0xdb, 0xed, 0x00, 0x4e, 0x82, 0x11, 0x6c, 0x11, 0x85, 0x1e, 0x9e, 0x6a, 0xa3, 0x0e, 0xfb, 0x69,
	0x7f, 0x28, 0x1f, 0x9f, 0x84, 0x23, 0xfc, 0x9e, 0xef, 0xa6, 0xf6, 0xf7, 0xca, 0xf3, 0xa2, 0x41,
	0x8e, 0x8c, 0x7d, 0xb8, 0x9c, 0xee, 0x95, 0x80, 0xdf, 0xaa, 0xc8, 0x47, 0x21, 0xd2, 0xfb, 0x7d,
	0xd0, 0x23, 0x14, 0x25, 0x4a, 0x08, 0xed, 0x31, 0xd8, 0x4b, 0x68, 0x8f, 0xcf, 0x60, 0x4b, 0xab,
	0xc8, 0x38, 0x62, 0x06, 0x2f, 0x1f, 0xbb, 0x90, 0x69, 0x75, 0x41, 0xce, 0x4e, 0xb3, 0xd8, 0x09,
	0x02, 0xd4, 0x4a, 0xb9, 0x60, 0xcb, 0xf5, 0xa6, 0x2b, 0x3c, 0x93, 0x1a, 0x46, 0x3f, 0x97, 0x3c,
	0xfb, 0x87, 0x14, 0x8d, 0x1c, 0x7a, 0x3e, 0xee, 0xd1, 0x3a, 0xf6, 0xdb, 0xea, 0x7f, 0x83, 0x7a,
	0x5f, 0x3c, 0xfb, 0x67, 0x0d, 0x64, 0xac, 0x36, 0xa3, 0x34, 0xda, 0x0b, 0x32, 0x5e, 0xc5, 0xa6,
	0xd6, 0x34, 0xa2, 0x9a, 0xe4, 0x29, 0xf5, 0x0d, 0x2c, 0x6d, 0xda, 0x21, 0x50, 0xf6, 0x7f, 0xaa,
	0x58, 0xcf, 0x5c, 0x0f, 0x5f, 0x7f, 0x94, 0x74, 0x64, 0x30, 0x52, 0x77, 0x1d, 0x8c, 0x74, 0x12,
	0xd1, 0xca, 0xa4, 0x3b, 0x15, 0x0e, 0x23, 0x90, 0x25, 0x2c, 0xed, 0x36, 0x9f, 0x7a, 0x35, 0x72,
	0x58, 0x25, 0xb6, 0x8e, 0xd1, 0xcd, 0xa7, 0xde, 0x32, 0xbe, 0x36, 0xfb, 0x99, 0x8a, 0xee, 0x90,
	0xf2, 0xa2, 0xd0, 0x6e, 0xff, 0x68, 0x45, 0x16, 0x82, 0xc4, 0x07, 0xb4, 0xe4, 0x64, 0xbf, 0x06,
	0x86, 0xc8, 0xa5, 0x96, 0xf9, 0xda, 0x9c, 0x00, 0x18, 0x26, 0xe3, 0x8f, 0xe6, 0x4d, 0xa5, 0xf3,
	0x4d, 0xfc, 0x3a, 0xbe, 0x51, 0xee, 0x1d, 0x0d, 0x8b, 0x05, 0x4e, 0x18, 0xc6, 0x7e, 0x5a, 0x97,
	0xc1, 0x41, 0xba, 0x5d, 0x05, 0x30, 0x6c, 0xa4, 0xcc, 0x53, 0x6c, 0x82, 0x14, 0x2e, 0xe3, 0x32,
	0xfb, 0x6b, 0xc4, 0xa1, 0x45, 0x10, 0x98, 0x38, 0xc0, 0x24, 0x7d, 0x45, 0x58, 0xee, 0x51, 0x87,
	0x30, 0x64, 0x03, 0xbd, 0x4c, 0xb7, 0x6c, 0x73, 0xa5, 0x96, 0x37, 0xbe, 0xb9, 0x1e, 0x06, 0xd5,
	0x46, 0xcd, 0xa5, 0xef, 0xbf, 0x07, 0x1a, 0x33, 0xf6, 0x7f, 0x5e, 0x91, 0x0f, 0xa9, 0xe4, 0xf6,
	0xa2, 0x2f, 0x54, 0xdf, 0x90, 0x24, 0xbe, 0xe2, 0x1c, 0xca, 0x5f, 0x57, 0xa2, 0xb9, 0x44, 0x45,
	0x3f, 0x26, 0x6e, 0x83, 0x06, 0x8c, 0x18, 0x68, 0xcc, 0x5a, 0x57, 0xc1, 0xe1, 0x2d, 0xb8, 0x53,
	0xdb, 0xf4, 0xc3, 0x06, 0x8c, 0xdb, 0xb1, 0x4f, 0x1d, 0x81, 0xab, 0xce, 0xa1, 0x2d, 0xb8, 0xb3,
	0x98, 0x95, 0xda, 0xb1, 0xcc, 0x7b, 0xcf, 0x4f, 0xea, 0x6e, 0xec, 0xf5, 0xa5, 0x17, 0x46, 0xc9,
	0xfc, 0x55, 0xc5, 0x8e, 0x93, 0xc0, 0xac, 0x53, 0xa5, 0x4f, 0xdd, 0xbb, 0xe6, 0xdd, 0x4b, 0x60,
	0x38, 0xc5, 0x8d, 0x1a, 0xdc, 0x5a, 0x49, 0xa5, 0xfd, 0x2b, 0x15, 0xfc, 0x10, 0x5f, 0x32, 0x3e,
	0x71, 0x74, 0xe5, 0xed, 0x3c, 0xbb, 0x26, 0x5b, 0xb4, 0x0d, 0x56, 0x25, 0xdb, 0xa0, 0xfd, 0x5f,
	0x29, 0x5b, 0x0e, 0x3a, 0x83, 0x71, 0x14, 0x7b, 0xa0, 0x19, 0xdf, 0x90, 0xee, 0x87, 0x7b, 0xa0,
	0x5d, 0x5a, 0x68, 0x83, 0xca, 0x31, 0x06, 0x7b, 0xfa, 0xa6, 0x2e, 0x0d, 0x05, 0x8c, 0xff, 0xb7,
	0x7f, 0x68, 0x40, 0x9e, 0xa6, 0x52, 0x8f, 0x16, 0xcb, 0x45, 0xc6, 0x7b, 0x6e, 0xbd, 0x42, 0x2d,
	0xe0, 0x17, 0x0b, 0xc3, 0x85, 0x2d, 0x64, 0x4f, 0x17, 0xec, 0xdf, 0x51, 0xe6, 0xa0, 0xc4, 0x86,
	0x35, 0x92, 0xf0, 0x63, 0x3f, 0xe7, 0x60, 0x4e, 0x60, 0xea, 0x7a, 0x3c, 0x28, 0x8c, 0x63, 0x28,
	0x4f, 0x4c, 0x66, 0xd7, 0x7b, 0xa7, 0x03, 0x3b, 0x25, 0x55, 0x32, 0xb4, 0x16, 0x3e, 0x48, 0x59,
	0x08, 0xe7, 0xe1, 0x96, 0xfb, 0xec, 0x9d, 0x34, 0xb1, 0x7f, 0x84, 0x44, 0x12, 0x50, 0x74, 0xf1,
	0x8c, 0x65, 0xe5, 0x8e, 0x24, 0xbb, 0xe5, 0x97, 0xbd, 0xa5, 0x52, 0xe3, 0xb2, 0x03, 0x2b, 0xf5,
	0x4d, 0xee, 0xa7, 0xb6, 0xfd, 0xaf, 0xf2, 0x7b, 0xfd, 0x5a, 0xea, 0xd7, 0xb7, 0xca, 0x79, 0x39,
	0x4c, 0x81, 0x51, 0xd8, 0x8a, 0x52, 0xbf, 0xce, 0xe3, 0xb2, 0xf1, 0xdf, 0xd6, 0x39, 0x00, 0x9a,
	0x6e, 0xd2, 0xac, 0xb1, 0x2b, 0x4e, 0x7c, 0xed, 0x80, 0x4a, 0x70, 0x81, 0xf5, 0x0a, 0x8e, 0xf7,
	0x8b, 0x6f, 0x22, 0x37, 0xa1, 0x9b, 0x76, 0x62, 0xc8, 0x2c, 0x7e, 0x87, 0x69, 0xf9, 0x22, 0x2d,
	0xb6, 0x2e, 0x80, 0x71, 0x8c, 0x69, 0x6d, 0xdd, 0x59, 0x7a, 0x78, 0x9f, 0x65, 0x18, 0x41, 0x45,
	0xa4, 0xc4, 0x7e, 0x5f, 0xd6, 0xfd, 0x68, 0x14, 0x91, 0xf2, 0xdd, 0xd3, 0x39, 0x65, 0xfe, 0xb2,
	0xa2, 0x9f, 0x90, 0x00, 0x2f, 0xab, 0x6e, 0x03, 0xae, 0xc6, 0x70, 0xdb, 0x87, 0x4f, 0xcb, 0xa9,
	0x4e, 0xe2, 0xd5, 0xb9, 0x60, 0xea, 0x11, 0x8d, 0x32, 0xd5, 0xde, 0x8c, 0x32, 0xf6, 0x4f, 0x2a,
	0x2a, 0x09, 0x89, 0x95, 0x8c, 0x26, 0xe0, 0x52, 0xb8, 0xed, 0xa7, 0x70, 0x1f, 0x0e, 0xa1, 0xc2,
	0xa6, 0x5f, 0x95, 0x36, 0xfd, 0x2d, 0xf9, 0x5c, 0x8e, 0x43, 0x47, 0xf6, 0x85, 0x32, 0x4d, 0x44,
	0x26, 0x3b, 0x90, 0xf9, 0x40, 0xdd, 0x68, 0xf7, 0xaa, 0xb5, 0x2f, 0x29, 0xfb, 0x6d, 0xb6, 0xd2,
	0xd6, 0x60, 0x19, 0x6d, 0xff, 0x0d, 0x00, 0x12, 0x3a, 0xa5, 0x61, 0xaa, 0x8f, 0xdd, 0x98, 0xb5,
	0xe3, 0x08, 0xb0, 0x68, 0xa3, 0x90, 0xa6, 0x2c, 0x7d, 0x84, 0xf3, 0x7c, 0xa9, 0xb2, 0x5e, 0x01,
	0xa3, 0x6e, 0x5c, 0x6f, 0x22, 0x89, 0xaf, 0xd7, 0xb5, 0x78, 0xb5, 0xfd, 0x65, 0x45, 0x70, 0x77,
	0xc2, 0x17, 0xa2, 0x0b, 0xf6, 0x7f, 0x57, 0x91, 0xad, 0x24, 0x49, 0xea, 0xe2, 0x54, 0x04, 0x25,
	0x88, 0xb9, 0x02, 0xaa, 0x1b, 0x51, 0x5a, 0x70, 0x3c, 0x41, 0xd5, 0xbd, 0xfa, 0xe0, 0x15, 0x2b,
	0x21, 0x17, 0xc0, 0x38, 0x26, 0xb8, 0x86, 0xd3, 0x1c, 0x31, 0xb1, 0x8a, 0x8b, 0x56, 0x51, 0x89,
	0xfd, 0xf5, 0x0a, 0xb8, 0x62, 0x70, 0xa5, 0x79, 0xe2, 0xc3, 0xa7, 0xc9, 0xdd, 0x7b, 0x6f, 0xdc,
	0x99, 0xbf, 0xbd, 0x70, 0xeb, 0x39, 0x58, 0xb3, 0xae, 0x83, 0x31, 0x3f, 0xac, 0xc7, 0x50, 0x78,
	0xd4, 0xa8, 0xcc, 0x9e, 0xac, 0x1e, 0xf5, 0x43, 0x6b, 0x74, 0x99, 0xf1, 0x5a, 0x7e, 0xf8, 0xdc,
	0xcd, 0x1a, 0xd7, 0xc0, 0xa8, 0x9f, 0xd4, 0x5c, 0x44, 0x8b, 0xbe, 0x27, 0x23, 0x7e, 0x82, 0x29,
	0x55, 0x2d, 0x66, 0x2d, 0xbf, 0x11, 0x97, 0x37, 0x22, 0x18, 0xcf, 0x65, 0x7f, 0xab, 0x8a, 0xdf,
	0xb1, 0x2b, 0x4e, 0x1c, 0xe4, 0xe1, 0x4d, 0xa9, 0xd5, 0x26, 0xb8, 0x16, 0x0d, 0xec, 0xc6, 0xb5,
	0x48, 0x76, 0xee, 0xc8, 0x3c, 0x2b, 0x06, 0x77, 0xef, 0x59, 0x31, 0x64, 0xf6, 0xac, 0x18, 0x96,
	0x3d, 0x2b, 0x32, 0x17, 0x9b, 0x38, 0x73, 0xc9, 0xa0, 0x2e, 0x36, 0x0e, 0x02, 0x50, 0x5c, 0x96,
	0x46, 0x7b, 0x72, 0x59, 0x2a, 0xf4, 0xd7, 0xe0, 0x0e, 0x19, 0x40, 0x74, 0xc8, 0x50, 0x7c, 0x7d,
	0xc6, 0x55, 0x5f, 0x1f, 0xfb, 0x8b, 0x39, 0x7f, 0x88, 0x28, 0xf6, 0x60, 0x9c, 0x89, 0xae, 0x92,
	0xb9, 0xc1, 0x5a, 0x6e, 0xb2, 0xc5, 0x3c, 0xb8, 0xc9, 0x0f, 0x54, 0x8a, 0xdb, 0xc0, 0x0b, 0xb3,
	0xea, 0x90, 0x1f, 0xf6, 0xdf, 0xcc, 0x6b, 0x48, 0xec, 0xd9, 0xeb, 0xec, 0x0e, 0x8e, 0x24, 0x54,
	0xee, 0x78, 0xd6, 0x74, 0xa7, 0xef, 0xbe, 0x4e, 0x53, 0x12, 0xd0, 0x5f, 0x38, 0x0c, 0x96, 0xff,
	0x21, 0x64, 0x7a, 0x26, 0xf9, 0x21, 0xbf, 0xca, 0x1e, 0x54, 0x5e, 0x65, 0x37, 0xe5, 0xe9, 0xcd,
	0x7c, 0x89, 0xef, 0xfb, 0x9b, 0xfd, 0x56, 0x19, 0x7f, 0x8e, 0xbc, 0xc4, 0xc8, 0x56, 0x92, 0xbb,
	0x0d, 0xef, 0xfb, 0x9b, 0xa5, 0xc4, 0x66, 0xe6, 0xd3, 0x6a, 0x7a, 0x61, 0x8c, 0xc4, 0x64, 0x8f,
	0x8f, 0x74, 0x7f, 0x64, 0x40, 0xde, 0x5f, 0x1b, 0x30, 0x25, 0x0e, 0xf6, 0xb3, 0x51, 0xea, 0xc0,
	0xa4, 0x13, 0x94, 0x9a, 0x3b, 0xfd, 0xdd, 0xd2, 0x24, 0xaf, 0xd9, 0xc1, 0x1e, 0xbd, 0x66, 0x79,
	0xda, 0x36, 0xb2, 0xc9, 0x91, 0x1f, 0x82, 0x67, 0x11, 0xf1, 0x43, 0x66, 0x9e, 0x45, 0xff, 0x5e,
	0x61, 0x47, 0xd2, 0x57, 0x76, 0x4c, 0x82, 0x91, 0x86, 0x1b, 0x04, 0x2c, 0xd1, 0xde, 0xa8, 0xc3,
	0x7e, 0xa2, 0x1a, 0xec, 0xab, 0x9d, 0x32, 0xff, 0x1d, 0xf6, 0x13, 0x09, 0x28, 0x4c, 0x72, 0xb6,
	0x8d, 0x8f, 0xe0, 0xdf, 0xf8, 0x9e, 0x77, 0x24, 0x26, 0x34, 0xd1, 0x30, 0x6e, 0xe7, 0x64, 0x6e,
	0xcc, 0x46, 0x94, 0x78, 0x42, 0xb9, 0xc3, 0xa0, 0xd1, 0xf9, 0xac, 0xee, 0xd6, 0x9b, 0xb0, 0x96,
	0xfa, 0x2d, 0x26, 0xf6, 0xc6, 0x70, 0xc9, 0xba, 0xdf, 0x82, 0xd6, 0xb7, 0x81, 0xf1, 0x10, 0x3e,
	0x4b, 0x99, 0xdb, 0xd8, 0x48, 0x0f, 0x6f, 0xaa, 0x01, 0xfa, 0x80, 0x7a, 0x95, 0xdd, 0x03, 0x63,
	0xc9, 0x53, 0x3f, 0xad, 0x37, 0x6b, 0xed, 0x16, 0x15, 0x8a, 0x53, 0x02, 0x61, 0x94, 0x9b, 0x6b,
	0x18, 0x64, 0x75, 0xc5, 0x19, 0x25, 0xc0, 0xab, 0x2d, 0xfb, 0xeb, 0x55, 0x95, 0xf9, 0xa1, 0xa7,
	0x70, 0xff, 0x45, 0x74, 0x1e, 0x38, 0x0d, 0x46, 0x9b, 0xbe, 0x07, 0x6b, 0xdb, 0xbe, 0x4b, 0xfd,
	0x52, 0x46, 0xd0, 0xef, 0x27, 0xbe, 0xbb, 0xaf, 0x4e, 0x29, 0x92, 0xc2, 0x37, 0xaa, 0x28, 0x7c,
	0xe2, 0x2c, 0x1a, 0x93, 0x67, 0x11, 0xd1, 0xaf, 0x00, 0x5e, 0x06, 0x48, 0x70, 0xe4, 0xee, 0x83,
	0xc7, 0x77, 0x79, 0x1f, 0x6c, 0xff, 0xa8, 0xb2, 0x1d, 0x65, 0xca, 0xe3, 0x82, 0xe7, 0xa3, 0x1d,
	0xcb, 0xdd, 0x47, 0xb5, 0x91, 0xe6, 0x4b, 0xb3, 0xbf, 0xac, 0x78, 0x3b, 0x21, 0x4d, 0x70, 0xcf,
	0xbd, 0x9d, 0x7a, 0x95, 0x6c, 0x84, 0xd8, 0x41, 0x9e, 0xdc, 0xed, 0xf5, 0xcc, 0x1a, 0xd0, 0x4b,
	0x08, 0x0a, 0x6e, 0x2b, 0xe0, 0xbe, 0x25, 0xc3, 0x5d, 0x7d, 0x4b, 0x54, 0x27, 0x91, 0x91, 0x8f,
	0xe2, 0x24, 0x32, 0xfa, 0x51, 0x9d, 0x44, 0x76, 0xed, 0x63, 0x60, 0x83, 0x83, 0x49, 0x1a, 0xb5,
	0x6b, 0x68, 0x03, 0x08, 0xfc, 0x6d, 0x48, 0x3d, 0x0d, 0xc6, 0x51, 0xe1, 0x7d, 0x18, 0x2d, 0xfb,
	0xdb, 0x50, 0xde, 0x1f, 0xc6, 0x7b, 0xdb, 0x1f, 0xec, 0x3f, 0xac, 0xca, 0xa6, 0x54, 0x34, 0x2f,
	0xb8, 0xd0, 0xd9, 0xf3, 0x09, 0x72, 0x53, 0x78, 0x6e, 0x73, 0xd1, 0x20, 0xbd, 0x29, 0x11, 0x4b,
	0xf3, 0xea, 0xd4, 0x18, 0xfc, 0x48, 0x53, 0x63, 0x68, 0xd7, 0x53, 0x63, 0xf8, 0xa3, 0x4c, 0x8d,
	0x91, 0x1e, 0xa7, 0x46, 0x6e, 0x60, 0x47, 0xbb, 0x0c, 0xec, 0x58, 0x8f, 0x03, 0xfb, 0xff, 0x29,
	0x36, 0xf2, 0x06, 0x44, 0x2c, 0x9d, 0x73, 0x83, 0x00, 0x09, 0xf7, 0x99, 0x30, 0x79, 0x5a, 0xea,
	0x72, 0xd8, 0x02, 0x83, 0x0d, 0xf6, 0x9e, 0x72, 0xd4, 0xc1, 0xff, 0xf7, 0xbc, 0xdc, 0xb3, 0xf7,
	0x2b, 0x83, 0xc2, 0xfb, 0x15, 0xed, 0xd5, 0x80, 0x18, 0xcb, 0x7a, 0x78, 0x77, 0xb1, 0xac, 0xed,
	0x1f, 0x1b, 0x50, 0x6f, 0x09, 0xfa, 0xca, 0x81, 0xe3, 0x60, 0xc8, 0x0d, 0x60, 0xcc, 0xf6, 0x53,
	0xf2, 0x43, 0xda, 0x69, 0xaa, 0xf2, 0x4e, 0xf3, 0x51, 0xa7, 0xee, 0x6b, 0xa0, 0xda, 0x89, 0x83,
	0x9e, 0x24, 0x21, 0x02, 0xec, 0xa2, 0xde, 0xd8, 0xff, 0xbe, 0x92, 0xb3, 0x19, 0xa3, 0xb1, 0x29,
	0xff, 0xc2, 0xe6, 0x3d, 0x70, 0x06, 0x0d, 0x6f, 0x22, 0x3e, 0x16, 0x9a, 0x5f, 0x9a, 0x59, 0x7e,
	0x74, 0x9f, 0xbe, 0x99, 0xae, 0xe6, 0xcd, 0x4b, 0xa4, 0x55, 0x3c, 0x37, 0xa6, 0xf0, 0xc7, 0xda,
	0x6f, 0xad, 0xfb, 0xe0, 0x44, 0x0e, 0x35, 0x46, 0x5a, 0xd5, 0xdd, 0xff, 0x63, 0x74, 0xc7, 0x55,
	0x74, 0x08, 0xde, 0xfe, 0xd5, 0x01, 0xc5, 0x2d, 0xd3, 0xdd, 0x86, 0x44, 0x8d, 0xd9, 0x33, 0x19,
	0xa7, 0x51, 0x6e, 0xaa, 0xbb, 0x55, 0x6e, 0x7a, 0x75, 0x63, 0x9f, 0x94, 0x37, 0x4e, 0x83, 0x19,
	0x7d, 0xb8, 0x47, 0x33, 0xfa, 0x7a, 0xee, 0x9c, 0x38, 0x13, 0x04, 0x98, 0x5b, 0x65, 0x82, 0x48,
	0x44, 0xb9, 0x13, 0x17, 0xbb, 0xee, 0xd8, 0xa3, 0x7b, 0x8b, 0x20, 0x7f, 0x61, 0xdd, 0xc7, 0x16,
	0xb3, 0xeb, 0xa6, 0x2a, 0x56, 0xb4, 0xfe, 0x62, 0xde, 0x06, 0xe0, 0xc0, 0x3a, 0x0c, 0xfb, 0x74,
	0xe9, 0xe4, 0xa6, 0x29, 0x5a, 0xc9, 0xec, 0xf5, 0x1a, 0xff, 0xad, 0x8d, 0x41, 0xf4, 0x5f, 0x28,
	0xb4, 0xa0, 0xd9, 0x2e, 0x11, 0xb3, 0x47, 0xb4, 0xbc, 0x2c, 0x6c, 0xeb, 0xbd, 0x1d, 0xd2, 0x07,
	0x8b, 0x0e, 0xe9, 0x4f, 0xe5, 0x19, 0x83, 0xcf, 0x1e, 0xfb, 0xc1, 0x53, 0xfb, 0x6f, 0x56, 0x72,
	0x73, 0x75, 0x86, 0x5a, 0xe6, 0xfb, 0xd0, 0xb2, 0xde, 0xb2, 0x94, 0x7b, 0xf6, 0x56, 0xd5, 0x19,
	0xc8, 0x06, 0xc5, 0xc0, 0x09, 0x5b, 0x39, 0x57, 0xcf, 0x15, 0x37, 0xd9, 0xda, 0xa3, 0xd5, 0xf4,
	0x25, 0x0d, 0x4f, 0x28, 0xbf, 0xfa, 0xd0, 0xe2, 0x34, 0x53, 0xd3, 0x58, 0x66, 0x3e, 0xdd, 0x65,
	0x04, 0xf4, 0x44, 0x7d, 0xcd, 0xfe, 0xe1, 0x01, 0xd5, 0x5c, 0x9b, 0xde, 0x77, 0x5b, 0x90, 0x78,
	0x1a, 0x97, 0x8a, 0x1f, 0x8e, 0x94, 0x61, 0xe5, 0x49, 0xef, 0xb8, 0x78, 0x70, 0x3a, 0x0e, 0x86,
	0x36, 0xa3, 0xb8, 0xce, 0x8c, 0x16, 0xe4, 0x47, 0xcf, 0xc2, 0x9a, 0x48, 0x8e, 0x21, 0x7e, 0xea,
	0x11, 0x6c, 0xe7, 0xc3, 0x5d, 0x6d, 0xe7, 0x24, 0xfa, 0x7d, 0xcc, 0xec, 0xb2, 0xe4, 0x07, 0x62,
	0xc5, 0x79, 0xad, 0xfd, 0xe6, 0xb9, 0x32, 0xe4, 0x26, 0x3f, 0xde, 0xf5, 0xaa, 0xe5, 0x0b, 0xac,
	0x18, 0xea, 0x9d, 0x15, 0xc3, 0x22, 0x2b, 0x7e, 0x27, 0x2f, 0x87, 0x11, 0x13, 0x1e, 0xf8, 0x8d,
	0x26, 0x66, 0x44, 0xb2, 0xff, 0x87, 0x70, 0xb1, 0x5b, 0x83, 0x5d, 0x1d, 0x27, 0x7f, 0x87, 0x84,
	0x19, 0xcb, 0x9b, 0x26, 0xfb, 0xd6, 0x8d, 0x9b, 0x82, 0x2d, 0x75, 0xd7, 0xe3, 0xd2, 0xdd, 0xf3,
	0xf3, 0x37, 0xf3, 0x8a, 0xe6, 0x5c, 0xd4, 0x6a, 0x45, 0x61, 0x59, 0x7f, 0xea, 0x5d, 0x39, 0x33,
	0xea, 0xdf, 0x29, 0x1a, 0x24, 0x69, 0x9c, 0x73, 0x15, 0x99, 0x21, 0x8e, 0xd9, 0x49, 0x39, 0xfd,
	0x50, 0x48, 0x96, 0x3c, 0xa0, 0x26, 0x4b, 0x7e, 0x96, 0x7b, 0x63, 0x4d, 0xbd, 0x2a, 0xca, 0x45,
	0xae, 0x45, 0x47, 0x06, 0x72, 0x39, 0x8f, 0x0f, 0x05, 0x3a, 0xf5, 0xe0, 0xdf, 0x55, 0xe4, 0x8d,
	0x83, 0x84, 0x00, 0xa1, 0x2a, 0x79, 0xa9, 0xfb, 0xc1, 0x93, 0x60, 0x58, 0x7a, 0x64, 0x4f, 0x7f,
	0x59, 0x6f, 0x03, 0xac, 0x96, 0xd7, 0xd4, 0xb3, 0x81, 0x36, 0x84, 0xb7, 0x70, 0x36, 0x38, 0x86,
	0xbe, 0x52, 0x0f, 0x05, 0x6f, 0x82, 0x43, 0x19, 0xb2, 0x2e, 0xaf, 0x9b, 0x0f, 0x72, 0x04, 0xf8,
	0x18, 0xf0, 0x77, 0x06, 0x54, 0x9d, 0x10, 0x5f, 0xe0, 0x90, 0x18, 0x00, 0xe5, 0x4f, 0x42, 0x5c,
	0x0c, 0x0e, 0x88, 0x62, 0xf0, 0x8c, 0x1a, 0x5a, 0x60, 0x48, 0xb8, 0xe2, 0x7b, 0x0f, 0x9c, 0xc1,
	0x24, 0x18, 0x0e, 0x4f, 0x83, 0xdd, 0x0e, 0x4f, 0xf8, 0x63, 0xe3, 0xe1, 0x29, 0x87, 0x1a, 0x23,
	0x1d, 0x32, 0x1f, 0x9e, 0x54, 0x74, 0x98, 0x6b, 0x1d, 0xd9, 0x9b, 0x04, 0x1d, 0x1c, 0xfb, 0xc4,
	0xb0, 0x33, 0xea, 0xd5, 0xa8, 0xc0, 0x1a, 0xfb, 0x9b, 0x24, 0x00, 0x9b, 0x72, 0x8e, 0x5f, 0x6b,
	0xfa, 0xed, 0xb6, 0x1f, 0x36, 0xca, 0x5f, 0x4b, 0x88, 0x47, 0xf6, 0x01, 0xf9, 0xc8, 0x3e, 0x0d,
	0x86, 0x70, 0xe8, 0xbe, 0x9e, 0x02, 0xab, 0x12, 0x50, 0x6b, 0x16, 0x1c, 0x49, 0x28, 0x6d, 0xb5,
	0x88, 0x44, 0xc2, 0xa7, 0xc3, 0x97, 0x5d, 0xd4, 0x32, 0xe2, 0x1f, 0xe1, 0x7a, 0xe7, 0x70, 0x22,
	0xfd, 0x4e, 0xec, 0x7f, 0xa2, 0xf8, 0x1f, 0x90, 0x2e, 0xaf, 0xc6, 0x10, 0xbb, 0x0b, 0x45, 0x9d,
	0xfe, 0x5c, 0xc6, 0xe8, 0x93, 0x3e, 0x14, 0x99, 0x30, 0x38, 0x3f, 0x06, 0x7b, 0xe6, 0x87, 0xfd,
	0x4b, 0x8a, 0xff, 0x1d, 0x89, 0x72, 0x5d, 0xf6, 0x2d, 0x64, 0xaf, 0x5b, 0x30, 0xb7, 0xfb, 0x55,
	0xbb, 0xd9, 0xfd, 0xec, 0x7f, 0x5e, 0x01, 0x2f, 0xab, 0xf7, 0x2f, 0x6b, 0xf5, 0x18, 0xc2, 0x30,
	0x69, 0x46, 0x69, 0x9f, 0xb2, 0x2b, 0xf4, 0x4a, 0xf7, 0x4b, 0x7a, 0xab, 0xc1, 0x50, 0xd1, 0xad,
	0x87, 0xe2, 0xe6, 0xa2, 0x7a, 0x7f, 0xa1, 0x93, 0xb6, 0xbb, 0xbd, 0x67, 0xc7, 0xec, 0xaf, 0x28,
	0xe3, 0xbc, 0xe9, 0x6e, 0xc3, 0xf2, 0xc7, 0xcc, 0x5d, 0xdd, 0xf7, 0x6e, 0x16, 0xdd, 0xf7, 0xa2,
	0x4a, 0xfb, 0xfb, 0x07, 0x72, 0x5a, 0xe1, 0xe3, 0x90, 0xf8, 0x9f, 0x86, 0x65, 0x93, 0x56, 0xf4,
	0x25, 0xb0, 0x89, 0x1c, 0xb2, 0x62, 0xd0, 0x18, 0xb2, 0x62, 0x48, 0x1f, 0xb2, 0x62, 0x58, 0x1f,
	0xb2, 0x62, 0x44, 0x08, 0x59, 0x61, 0x7f, 0x56, 0x3e, 0x2e, 0xed, 0x6f, 0xef, 0xed, 0xff, 0x24,
	0x7f, 0x3b, 0x46, 0xce, 0xf2, 0x38, 0xec, 0xd4, 0x3e, 0x0d, 0x81, 0x36, 0x00, 0x21, 0x9f, 0xd5,
	0x83, 0xc2, 0xac, 0xfe, 0x6f, 0xaa, 0xb2, 0x12, 0x8b, 0xdf, 0x71, 0x77, 0x82, 0xd4, 0xff, 0xf3,
	0xc7, 0xdc, 0x4b, 0x9e, 0xf5, 0x09, 0x30, 0xde, 0x42, 0xcc, 0xa8, 0xb1, 0x27, 0xdd, 0x9a, 0x44,
	0xd9, 0x6b, 0x7e, 0xd8, 0x08, 0x20, 0x91, 0xb4, 0xa0, 0x95, 0xb1, 0x2e, 0x77, 0x29, 0x36, 0x5a,
	0xf2, 0xe5, 0xf4, 0xd8, 0xee, 0x5e, 0x4e, 0xff, 0x43, 0xd5, 0xb5, 0x12, 0xef, 0x4b, 0xfd, 0x7a,
	0x4d, 0xb1, 0xeb, 0x37, 0x04, 0xec, 0x11, 0x44, 0xb5, 0xd7, 0x47, 0x10, 0xbf, 0xa4, 0x1a, 0xf7,
	0xb0, 0x97, 0x5a, 0x7f, 0x9c, 0x9e, 0x74, 0x2e, 0xea, 0x03, 0x7a, 0x17, 0x75, 0xd9, 0x37, 0x4d,
	0xb7, 0x84, 0x9e, 0xe4, 0x8e, 0x81, 0x6b, 0xed, 0xc0, 0x4f, 0x1d, 0x37, 0x2c, 0xf5, 0x40, 0xdd,
	0xfe, 0x39, 0xc5, 0xcb, 0xbb, 0xe5, 0xc6, 0x5b, 0x44, 0x15, 0x25, 0x22, 0xbd, 0xdc, 0xe2, 0xec,
	0x60, 0x1c, 0x6c, 0x71, 0x92, 0x5f, 0xc5, 0x29, 0x87, 0x04, 0x75, 0x9c, 0x88, 0xba, 0xef, 0xce,
	0xdd, 0xc0, 0x89, 0xe4, 0xad, 0xb8, 0xf1, 0x56, 0x99, 0xee, 0x2b, 0x6c, 0xc5, 0x12, 0xa0, 0x1f,
	0xf6, 0xf9, 0x7f, 0x93, 0x5b, 0x17, 0x38, 0xa7, 0x32, 0xd6, 0xf4, 0xcb, 0x5f, 0x08, 0x9b, 0xc4,
	0xde, 0x71, 0x30, 0xd4, 0x09, 0xdb, 0x7e, 0xc8, 0x2c, 0x47, 0xf8, 0x07, 0x4e, 0xbc, 0xd7, 0xaa,
	0x45, 0x21, 0x4c, 0x7c, 0x8f, 0x05, 0x12, 0x18, 0x6b, 0xb7, 0x1e, 0x91, 0x82, 0x9e, 0x45, 0x1d,
	0x8b, 0x1e, 0xc0, 0x9c, 0x21, 0xfe, 0x63, 0xd5, 0x7b, 0x19, 0x86, 0xde, 0x93, 0x68, 0x5f, 0xde,
	0x05, 0x64, 0x77, 0x9f, 0x55, 0xf1, 0xee, 0x73, 0x12, 0x8c, 0x88, 0x67, 0x85, 0x09, 0x87, 0xfd,
	0xb4, 0xbf, 0xac, 0xb9, 0xae, 0x8b, 0x82, 0xa0, 0xfc, 0x01, 0xa0, 0x1c, 0xc5, 0x6a, 0x6c, 0x83,
	0x06, 0x4c, 0x1f, 0x61, 0x83, 0xd1, 0x7e, 0xe8, 0x10, 0xbf, 0xac, 0x7b, 0xd2, 0xe3, 0xa6, 0xc9,
	0x63, 0x67, 0xb9, 0xcf, 0xa9, 0x35, 0x7a, 0xbd, 0xd2, 0x3e, 0x09, 0x86, 0xb1, 0x2f, 0x79, 0x42,
	0x9d, 0x2d, 0xe9, 0x2f, 0xfb, 0xaf, 0x99, 0x1c, 0xb0, 0x37, 0xa2, 0x4e, 0xba, 0x3f, 0x8a, 0x8e,
	0x8b, 0x9a, 0x62, 0xcf, 0x9f, 0xf1, 0x0f, 0xfb, 0xaf, 0x2b, 0x73, 0x8a, 0x51, 0x85, 0xce, 0x38,
	0xf5, 0xfd, 0x58, 0x05, 0x27, 0xc1, 0x70, 0x88, 0xdb, 0xa2, 0x74, 0xd1, 0x5f, 0xf6, 0x3f, 0x23,
	0x19, 0xee, 0x72, 0x84, 0xcd, 0xc3, 0x4d, 0xb7, 0x13, 0xa4, 0xb3, 0x2e, 0x12, 0x42, 0x8e, 0xdf,
	0x68, 0xee, 0xcb, 0xcc, 0xff, 0x76, 0x70, 0x70, 0x03, 0xb7, 0x58, 0x8b, 0x71, 0x93, 0x74, 0x16,
	0x64, 0xfa, 0x0d, 0x22, 0x4d, 0xa4, 0xc9, 0x99, 0xd8, 0x10, 0x7e, 0x69, 0xec, 0x25, 0x0b, 0xad,
	0xe8, 0x7d, 0xff, 0x6d, 0xb8, 0xf3, 0x34, 0x8a, 0xbd, 0x92, 0xf6, 0x92, 0xc0, 0x0d, 0x1b, 0x35,
	0x21, 0x7f, 0xe2, 0x28, 0x2a, 0xc0, 0xe9, 0x48, 0xbf, 0xa2, 0x9c, 0x63, 0xd5, 0x76, 0xe7, 0xfd,
	0xcd, 0x4d, 0x18, 0xc3, 0xb0, 0xd4, 0x48, 0x17, 0x51, 0x60, 0x5d, 0x02, 0x13, 0x38, 0xbc, 0x0b,
	0x7b, 0x0d, 0x4f, 0x04, 0xc7, 0x38, 0x2a, 0x7b, 0x42, 0x8a, 0xec, 0xef, 0xab, 0x80, 0x97, 0x8a,
	0x88, 0x5c, 0x76, 0xc3, 0x46, 0xa7, 0x64, 0x04, 0x9b, 0x73, 0x00, 0x70, 0x1a, 0x59, 0x84, 0xfb,
	0x31, 0x46, 0x64, 0x62, 0xb7, 0x73, 0x42, 0x04, 0x53, 0x50, 0x4e, 0x88, 0x14, 0x8e, 0xcc, 0xd7,
	0xf2, 0x77, 0x12, 0x6b, 0x58, 0x6b, 0x9b, 0x8b, 0x3a, 0x61, 0x5a, 0x36, 0xe4, 0x78, 0x6f, 0x93,
	0xfa, 0x16, 0x18, 0x21, 0xcf, 0x02, 0xd8, 0x73, 0x3a, 0xe3, 0xf3, 0x01, 0x06, 0x67, 0x7f, 0x55,
	0x11, 0x17, 0x34, 0x30, 0xc1, 0xe3, 0x38, 0x98, 0xe9, 0xa4, 0xcd, 0xe7, 0xb7, 0x69, 0x9e, 0x01,
	0x63, 0x1b, 0x9d, 0x34, 0x8d, 0xc2, 0xcc, 0x95, 0x68, 0x94, 0x14, 0x2c, 0x79, 0xf6, 0x1f, 0x2a,
	0x92, 0x97, 0x84, 0x25, 0x28, 0x4f, 0xf3, 0x65, 0x70, 0xf0, 0x69, 0xec, 0xa7, 0xb0, 0x86, 0x33,
	0x1f, 0x73, 0xbd, 0x78, 0x02, 0x17, 0xce, 0x90, 0xb2, 0xb2, 0x9e, 0x50, 0x52, 0xc7, 0x86, 0x94,
	0x8e, 0xfd, 0xa0, 0xa2, 0x9f, 0x35, 0x7d, 0x0f, 0x8a, 0xa1, 0x7d, 0x66, 0xdd, 0x78, 0x1f, 0xb6,
	0xe0, 0x1f, 0xcf, 0x5f, 0x03, 0xaf, 0xd1, 0xb3, 0x99, 0xb7, 0x7f, 0x31, 0x62, 0x75, 0xb7, 0x1a,
	0x3f, 0x96, 0x77, 0x7c, 0xe3, 0x94, 0xf5, 0x21, 0x2c, 0xd6, 0x47, 0x7c, 0xb7, 0x85, 0xf4, 0xb8,
	0x4b, 0x79, 0xeb, 0xe2, 0xf3, 0xa7, 0xeb, 0xc7, 0x95, 0x6b, 0x46, 0x9a, 0xf0, 0xfe, 0x05, 0xa0,
	0xec, 0x9b, 0x95, 0x9c, 0xff, 0x11, 0xd2, 0x7c, 0x91, 0xa2, 0xfe, 0x3c, 0x2e, 0x6f, 0x4f, 0x82,
	0x61, 0xa2, 0x93, 0xd3, 0x97, 0xfc, 0xf4, 0x97, 0x75, 0x87, 0xbf, 0xa5, 0xe8, 0xc5, 0x43, 0x2f,
	0x97, 0x08, 0x41, 0x0c, 0x40, 0x6c, 0xff, 0xef, 0xca, 0x06, 0x41, 0x6e, 0xe4, 0xfa, 0x73, 0xa6,
	0x3f, 0x0b, 0xc6, 0xf8, 0xeb, 0x51, 0xe6, 0xa5, 0xc6, 0x0b, 0xd0, 0x01, 0x84, 0x3e, 0x3a, 0x65,
	0x2f, 0x30, 0xe8, 0x4f, 0xf2, 0x1d, 0xab, 0x1b, 0x64, 0xdf, 0xb1, 0xda, 0x4f, 0x80, 0xf1, 0xec,
	0x59, 0x68, 0x3e, 0x9f, 0xbe, 0xfa, 0x86, 0x54, 0x04, 0xb6, 0x3f, 0x95, 0xd3, 0x8f, 0xc8, 0xf9,
	0x98, 0xec, 0x3f, 0x65, 0xce, 0xb0, 0x6e, 0x4e, 0xb9, 0x58, 0xeb, 0x34, 0x1a, 0x30, 0x49, 0xd9,
	0x65, 0x55, 0xf9, 0x26, 0xd4, 0x20, 0xbc, 0xe4, 0x98, 0x2c, 0x62, 0xef, 0x83, 0x53, 0x59, 0x25,
	0x0b, 0x61, 0x46, 0x9f, 0xfc, 0xa9, 0x09, 0xfb, 0xc5, 0x06, 0xd9, 0x83, 0x3f, 0x7b, 0x5b, 0xbe,
	0x3d, 0xca, 0x93, 0x96, 0x3c, 0x8a, 0xbd, 0xb2, 0xce, 0xaf, 0xe4, 0xfd, 0x1b, 0xb9, 0xce, 0xa6,
	0xef, 0xdf, 0x7e, 0xbe, 0x82, 0x73, 0xbe, 0x4a, 0x87, 0xc2, 0xa0, 0x9f, 0xce, 0x76, 0xbb, 0x4a,
	0x62, 0xa3, 0x35, 0x46, 0xfd, 0x5e, 0x3e, 0xa4, 0x79, 0xf9, 0xf8, 0xff, 0xe5, 0xf5, 0x98, 0xec,
	0x42, 0x60, 0xb0, 0x38, 0xd2, 0xf9, 0x50, 0x97, 0x48, 0xe7, 0xc3, 0xc6, 0x1b, 0x83, 0x11, 0xfd,
	0x8d, 0xc1, 0xa8, 0xfe, 0xc6, 0x60, 0x4c, 0x17, 0xe4, 0x1a, 0x08, 0x8c, 0xfc, 0xe9, 0x8a, 0xc6,
	0xba, 0x95, 0xd4, 0x3b, 0x38, 0x19, 0x7d, 0x79, 0x3b, 0x51, 0x49, 0xeb, 0xc4, 0x6f, 0xe5, 0x54,
	0x56, 0xd7, 0xcb, 0xc8, 0x7b, 0x7e, 0x43, 0x7d, 0x1e, 0x8c, 0x23, 0x52, 0x6a, 0x94, 0xf9, 0xf4,
	0x7e, 0x87, 0x98, 0x03, 0x9f, 0x2d, 0x79, 0xe8, 0x58, 0x74, 0x56, 0x7e, 0xef, 0xdf, 0xf6, 0xc3,
	0x99, 0x20, 0xd8, 0xbf, 0x6d, 0xd8, 0x7e, 0x84, 0x9f, 0x6c, 0x12, 0x99, 0xc1, 0x4d, 0x2b, 0x25,
	0x86, 0xd2, 0xfe, 0xaf, 0xc9, 0x3e, 0x2e, 0x60, 0xec, 0xcb, 0x09, 0xf4, 0x08, 0xa8, 0xb6, 0x79,
	0xa0, 0x1b, 0xf4, 0xaf, 0x35, 0x07, 0x0e, 0xb7, 0x71, 0x26, 0x9b, 0xd4, 0x0d, 0x6a, 0x99, 0x3c,
	0xe8, 0x72, 0x27, 0x70, 0xb0, 0x9d, 0x26, 0xeb, 0xe8, 0x93, 0x65, 0x26, 0x34, 0x84, 0x94, 0x02,
	0xf8, 0x7f, 0xd4, 0xd4, 0x07, 0x69, 0x42, 0xd7, 0x1e, 0xfa, 0xd7, 0xfe, 0x01, 0xf2, 0x50, 0x52,
	0xe8, 0xd3, 0x1c, 0x49, 0x7d, 0xd4, 0x97, 0xae, 0xe9, 0xfd, 0x47, 0x6e, 0xe0, 0xf7, 0xea, 0xa8,
	0x91, 0xdc, 0x2e, 0xc0, 0x42, 0x1a, 0xa2, 0x4a, 0x87, 0x41, 0x59, 0xaf, 0x2b, 0x0f, 0xc5, 0xcf,
	0x8b, 0x86, 0x0b, 0x04, 0x61, 0x78, 0x2f, 0x4e, 0x39, 0x3b, 0x94, 0x71, 0x56, 0xaf, 0xad, 0x7c,
	0x81, 0x78, 0x29, 0xe0, 0xf8, 0x89, 0xdc, 0x4e, 0x1c, 0x47, 0x9b, 0x7e, 0x00, 0x71, 0x68, 0xc5,
	0x7b, 0xd3, 0xf3, 0x77, 0xee, 0xdd, 0x99, 0x9e, 0x2b, 0x75, 0xda, 0xca, 0xae, 0x7f, 0x95, 0xbb,
	0x7b, 0x12, 0xbd, 0x11, 0x29, 0x8a, 0x7f, 0x32, 0x80, 0x17, 0x0d, 0xa7, 0x23, 0x88, 0x5c, 0x4f,
	0xa4, 0x63, 0x7f, 0x92, 0x69, 0x6f, 0xfb, 0x1e, 0x8c, 0x8a, 0x92, 0x69, 0x63, 0x00, 0x6b, 0x16,
	0x1c, 0xc2, 0xff, 0x90, 0x90, 0x19, 0xb5, 0x34, 0x31, 0xfa, 0x52, 0xcc, 0x47, 0x9d, 0x8d, 0x00,
	0xd2, 0x8b, 0x2f, 0xfc, 0xcd, 0x1a, 0xfa, 0x64, 0x3d, 0x41, 0xca, 0x5a, 0xdd, 0x25, 0xba, 0x28,
	0x75, 0xf3, 0xa7, 0x3f, 0xe5, 0xa7, 0x42, 0xc3, 0x3d, 0xbe, 0x11, 0xbe, 0x0e, 0x06, 0xeb, 0x71,
	0xc4, 0xde, 0xc0, 0x9d, 0xd2, 0xb0, 0x79, 0x2e, 0x8e, 0xda, 0x0e, 0x06, 0xb2, 0x9f, 0xe2, 0xfd,
	0x93, 0xf2, 0x9a, 0x1c, 0x16, 0x30, 0x48, 0xd2, 0x87, 0x51, 0xae, 0x16, 0x8d, 0xf2, 0xd7, 0x89,
	0xd1, 0x97, 0xb6, 0x4c, 0x53, 0x9b, 0x96, 0x6e, 0x7a, 0x57, 0xbe, 0x84, 0x99, 0xfa, 0x51, 0x95,
	0xd4, 0x8f, 0x6c, 0x37, 0x25, 0x2e, 0x18, 0xaa, 0x8f, 0xa1, 0x78, 0x59, 0x6f, 0xff, 0x1c, 0x09,
	0x88, 0x49, 0xa6, 0x29, 0x76, 0xc9, 0x47, 0xd3, 0x63, 0xd5, 0x8d, 0x4b, 0xc6, 0xb2, 0xc0, 0x29,
	0xda, 0xb9, 0x0b, 0x13, 0x5a, 0xcb, 0x90, 0x86, 0x0e, 0x45, 0x15, 0x6d, 0x37, 0x4e, 0xb9, 0xd3,
	0x19, 0x6b, 0xef, 0x38, 0x18, 0xda, 0xd8, 0x49, 0x69, 0x2e, 0xa5, 0x09, 0x87, 0xfc, 0xb0, 0xff,
	0x6f, 0x92, 0xfc, 0x91, 0x12, 0xd8, 0x80, 0x69, 0xc9, 0xab, 0x50, 0xfc, 0xb8, 0x1b, 0xd6, 0xfd,
	0x84, 0xc9, 0x33, 0xf6, 0xd3, 0xba, 0x0c, 0x0e, 0xd6, 0xbd, 0xb0, 0x96, 0x74, 0xda, 0xed, 0x28,
	0x4e, 0x21, 0xbb, 0xee, 0x9e, 0xa8, 0x7b, 0xe1, 0x1a, 0x2b, 0xb3, 0x5e, 0x07, 0xa3, 0x01, 0x75,
	0x0d, 0xc8, 0x45, 0xf7, 0xe7, 0xab, 0x8b, 0x39, 0x0f, 0x38, 0x1c, 0x56, 0x18, 0xac, 0x21, 0xbd,
	0xae, 0x28, 0xc9, 0x32, 0x9a, 0xb7, 0x42, 0x18, 0x95, 0x59, 0xbf, 0xf1, 0xdc, 0x06, 0xe6, 0x1a,
	0x38, 0x82, 0x2b, 0xc9, 0x56, 0x86, 0x40, 0x12, 0xba, 0x21, 0x1d, 0x42, 0xe5, 0x78, 0xbb, 0x42,
	0x80, 0x49, 0x36, 0x84, 0x43, 0xe2, 0x10, 0xfe, 0x67, 0xe4, 0x82, 0x2b, 0x1b, 0xc2, 0x77, 0xe1,
	0x46, 0xc9, 0x51, 0x7c, 0x53, 0x18, 0x06, 0xb2, 0x52, 0x94, 0xe7, 0xf6, 0xb4, 0x89, 0xc2, 0x91,
	0xa8, 0xea, 0x47, 0x42, 0xf2, 0xc1, 0xfd, 0x59, 0x95, 0xf6, 0x39, 0x2f, 0x2c, 0x49, 0x3b, 0xce,
	0xd8, 0x86, 0xd9, 0xb9, 0x05, 0x43, 0x1a, 0x3f, 0x63, 0x8c, 0x30, 0x72, 0x0b, 0xee, 0x96, 0xbe,
	0xbf, 0x41, 0x0c, 0x39, 0x94, 0xbe, 0x18, 0x92, 0x7f, 0x28, 0x91, 0x6f, 0xce, 0x4e, 0xdf, 0xbb,
	0x7b, 0x67, 0xe6, 0x8d, 0xbd, 0x23, 0xf6, 0x32, 0x38, 0x48, 0xed, 0xaf, 0x14, 0x82, 0x04, 0x3b,
	0x9d, 0xa0, 0x85, 0x18, 0xc8, 0xfe, 0x32, 0x39, 0x88, 0xe5, 0x78, 0xf8, 0xc0, 0x4d, 0x9a, 0x30,
	0xb9, 0x33, 0x3f, 0x73, 0xf7, 0xce, 0xf4, 0xed, 0x5b, 0xfb, 0xce, 0x51, 0xfb, 0x17, 0x88, 0x0c,
	0x97, 0x45, 0x0b, 0x21, 0xaa, 0x04, 0x31, 0xaf, 0xe7, 0xa6, 0xe6, 0x6e, 0x25, 0x84, 0x4c, 0xe5,
	0x0a, 0x96, 0x7f, 0x4d, 0x18, 0xb4, 0x69, 0x8a, 0xe3, 0x52, 0x61, 0x81, 0x69, 0xea, 0x46, 0x86,
	0xee, 0x21, 0x74, 0x63, 0x98, 0xa4, 0xf3, 0xf5, 0x12, 0x18, 0xbf, 0x59, 0x91, 0x50, 0xce, 0xb4,
	0xdb, 0x8f, 0xb1, 0xf2, 0x55, 0xf2, 0x5e, 0x3e, 0xea, 0x30, 0x9d, 0x73, 0xcc, 0xa1, 0xbf, 0xac,
	0x4b, 0x60, 0xc2, 0x83, 0xdb, 0x7e, 0x1d, 0xd6, 0x5a, 0x91, 0x47, 0x35, 0xcf, 0x31, 0x67, 0x9c,
	0x94, 0xad, 0xa0, 0x22, 0xeb, 0x25, 0x70, 0x28, 0xd9, 0x49, 0x52, 0x98, 0xdd, 0xf7, 0x90, 0x3b,
	0xd0, 0x83, 0xa4, 0x94, 0xde, 0xf8, 0xa0, 0x83, 0xac, 0xdb, 0x6e, 0x73, 0x18, 0x1a, 0x74, 0xcb,
	0x6d, 0xb7, 0x19, 0x80, 0x74, 0x75, 0x32, 0xac, 0x5c, 0x9d, 0x84, 0xf8, 0xdd, 0x26, 0xeb, 0x31,
	0x09, 0x5f, 0xb7, 0x0e, 0x9f, 0xa5, 0x7b, 0x75, 0x55, 0xf3, 0x10, 0x07, 0xaf, 0x67, 0xed, 0xd1,
	0xdd, 0xa8, 0xc4, 0x90, 0x7d, 0x0e, 0x4f, 0x7c, 0x61, 0xc4, 0x90, 0x0a, 0xde, 0x80, 0x41, 0xd4,
	0x28, 0x15, 0x06, 0xfb, 0x48, 0x3b, 0x86, 0xdb, 0x35, 0x91, 0xaf, 0xa4, 0x23, 0x87, 0x50, 0xf9,
	0x0c, 0xe7, 0xad, 0xfd, 0x8b, 0xc4, 0xd5, 0x1f, 0xb7, 0x4f, 0x9c, 0x89, 0xc9, 0x8c, 0x49, 0x48,
	0x56, 0xf0, 0x52, 0x2f, 0xb6, 0x4e, 0xb4, 0x61, 0xe8, 0xf9, 0x61, 0x83, 0x9f, 0x86, 0x70, 0x5e,
	0x7c, 0x7a, 0x30, 0x3b, 0x46, 0x2b, 0x69, 0x73, 0xf8, 0xa2, 0x4b, 0x7c, 0xa6, 0x5a, 0x95, 0x9e,
	0xa9, 0x2a, 0x6b, 0x65, 0xce, 0x0b, 0x4b, 0xaf, 0xbe, 0x96, 0xc4, 0x78, 0xe2, 0x6a, 0xb8, 0x02,
	0x1f, 0xc7, 0x41, 0x49, 0xe7, 0xe9, 0x18, 0xa2, 0x73, 0x5e, 0xcc, 0xc2, 0x55, 0xd2, 0x9f, 0xf6,
	0x77, 0xe1, 0x73, 0x21, 0x6b, 0x6e, 0x1d, 0xc6, 0xad, 0xe4, 0xd1, 0x26, 0x0d, 0x49, 0x5b, 0x76,
	0x91, 0xda, 0xff, 0x01, 0x3e, 0xe7, 0x60, 0xe4, 0xe4, 0x3a, 0x4b, 0xc6, 0x5f, 0xea, 0x6d, 0x57,
	0x76, 0xce, 0x3a, 0x9a, 0x19, 0x17, 0xdd, 0xd4, 0x7d, 0x6b, 0xed, 0xd1, 0x43, 0xac, 0x7f, 0x37,
	0x24, 0x46, 0xce, 0x43, 0xd8, 0x5e, 0xf6, 0xc3, 0xad, 0xa5, 0x70, 0x33, 0x2a, 0xe7, 0x73, 0xd1,
	0x76, 0x53, 0x1e, 0x46, 0x12, 0xfd, 0xaf, 0xcc, 0x01, 0xb4, 0x54, 0xca, 0xce, 0x81, 0xcf, 0x67,
	0x8b, 0x19, 0x69, 0x76, 0x33, 0xed, 0xf6, 0x72, 0xa9, 0x75, 0xf7, 0x1a, 0x18, 0x86, 0xdb, 0x34,
	0xad, 0x73, 0x35, 0x7f, 0xc4, 0x9a, 0x69, 0xb7, 0x17, 0x50, 0xb5, 0x43, 0xa1, 0x68, 0xde, 0x7f,
	0xd6, 0xa3, 0x55, 0x37, 0x49, 0x68, 0x3a, 0xfb, 0x72, 0xf1, 0xe6, 0x75, 0x5e, 0xd8, 0x24, 0xf7,
	0xb0, 0x22, 0xb7, 0x1e, 0x96, 0xca, 0x9f, 0x6d, 0x7f, 0x16, 0x5b, 0x84, 0x18, 0x4e, 0x74, 0x22,
	0x2a, 0x39, 0xea, 0xbb, 0x39, 0x74, 0x21, 0xcd, 0x9c, 0xcf, 0x07, 0xe8, 0xf9, 0xfb, 0xdd, 0xbe,
	0x59, 0x58, 0x49, 0x6f, 0xea, 0x07, 0x7b, 0x7c, 0x53, 0x2f, 0x4f, 0xee, 0xd5, 0x38, 0x6a, 0x45,
	0xe5, 0x22, 0x02, 0xd9, 0x3b, 0xd9, 0xce, 0x88, 0xaf, 0x82, 0xcb, 0xa3, 0xec, 0xd9, 0x54, 0xd8,
	0xc9, 0xe6, 0xb5, 0xe7, 0x27, 0x2d, 0x3f, 0x49, 0xe8, 0x35, 0x4b, 0x39, 0x1b, 0xeb, 0x79, 0x00,
	0x12, 0x8e, 0x87, 0x8a, 0x06, 0xa1, 0xc4, 0xfe, 0x02, 0x31, 0x28, 0x66, 0x0a, 0x5a, 0x27, 0x4c,
	0x63, 0x1f, 0x26, 0xcb, 0x7e, 0xb2, 0x57, 0xfa, 0x80, 0xf6, 0xa6, 0xf9, 0xa7, 0x89, 0x36, 0xcb,
	0x92, 0x9e, 0x8b, 0x79, 0x18, 0x4b, 0x79, 0x0e, 0x73, 0x33, 0xdf, 0x40, 0x4f, 0x66, 0x3e, 0x43,
	0x26, 0xc6, 0x1f, 0x27, 0x26, 0x70, 0x4e, 0x5d, 0xdf, 0x92, 0x17, 0xee, 0x9a, 0x40, 0xf5, 0x62,
	0xf7, 0xef, 0x92, 0x5b, 0x4e, 0x85, 0x32, 0xb4, 0xe8, 0x9e, 0x03, 0xf7, 0x76, 0xf5, 0xa4, 0xf5,
	0x77, 0x69, 0xb6, 0xec, 0x6c, 0xc4, 0xfb, 0x90, 0xd1, 0x69, 0x4f, 0x49, 0xe6, 0xb1, 0xb5, 0x18,
	0xf3, 0xff, 0x9d, 0x32, 0x69, 0xfb, 0x93, 0x25, 0x7a, 0xd7, 0x7d, 0x30, 0xa6, 0x95, 0xae, 0xf6,
	0x23, 0xad, 0xf4, 0xa0, 0x36, 0xad, 0xf4, 0x00, 0xd6, 0x81, 0xc5, 0x9e, 0xaf, 0xba, 0x71, 0xea,
	0xd7, 0xfd, 0xb6, 0x5b, 0x2e, 0xe4, 0xfc, 0xae, 0x7b, 0xff, 0x09, 0xe5, 0x3e, 0xd7, 0x56, 0x2d,
	0xf3, 0x22, 0x61, 0x8a, 0x75, 0x3e, 0x3b, 0xb5, 0x0e, 0xea, 0xad, 0x15, 0x43, 0xba, 0x3b, 0xd0,
	0x61, 0x41, 0x6e, 0x7d, 0x4d, 0x91, 0x0c, 0x32, 0x23, 0x5e, 0xd8, 0xc5, 0xf7, 0x61, 0x6e, 0xe2,
	0x52, 0x7c, 0xe5, 0xd2, 0x82, 0x67, 0xa6, 0x67, 0x03, 0xb5, 0x68, 0xd5, 0xfc, 0x85, 0x3c, 0xcb,
	0x68, 0xce, 0x2e, 0xdc, 0x8f, 0xfd, 0x63, 0x99, 0xfd, 0x8f, 0x06, 0xf0, 0xa6, 0xcb, 0x29, 0xe1,
	0xf9, 0x94, 0x4a, 0x12, 0x72, 0x16, 0x8c, 0x6d, 0xc4, 0x91, 0xeb, 0xd5, 0xdd, 0x84, 0xf9, 0xe6,
	0x67, 0x05, 0xa8, 0xb6, 0x05, 0x1b, 0x2e, 0x4e, 0x6c, 0x47, 0xad, 0xb4, 0x59, 0x41, 0x96, 0x64,
	0x69, 0x50, 0x48, 0xb2, 0x94, 0xf9, 0x1e, 0x0f, 0x09, 0xbe, 0xc7, 0x82, 0xeb, 0xef, 0xb0, 0xe8,
	0xfa, 0x2b, 0xdf, 0x5c, 0x8c, 0xf4, 0x78, 0x73, 0xf1, 0x3a, 0x18, 0x71, 0x3d, 0x2f, 0x86, 0x49,
	0x42, 0x5f, 0x0f, 0x75, 0x09, 0xa9, 0x45, 0x81, 0xed, 0x1f, 0xaa, 0x62, 0xa5, 0x89, 0x33, 0x11,
	0xe9, 0x95, 0x65, 0x63, 0x62, 0xef, 0xad, 0x18, 0xff, 0x4e, 0x70, 0x16, 0x07, 0xca, 0xa6, 0xae,
	0xc8, 0xb5, 0xb9, 0x07, 0x33, 0xeb, 0x33, 0xf3, 0x2b, 0x4b, 0x0f, 0x9d, 0xa5, 0xfb, 0x0f, 0xd6,
	0xd7, 0xa8, 0x65, 0x7c, 0x52, 0x72, 0x4d, 0xc6, 0x3d, 0xa2, 0x9e, 0xc9, 0x53, 0x6e, 0xf6, 0x43,
	0xf9, 0x16, 0xc9, 0x88, 0xd8, 0x0d, 0xb7, 0xe8, 0x38, 0xe1, 0xff, 0xad, 0x3a, 0xb8, 0xa0, 0xb6,
	0xf7, 0xf0, 0xe1, 0xc2, 0xb2, 0xd8, 0xa4, 0x9a, 0xae, 0x85, 0x76, 0x50, 0x6c, 0xf5, 0x9c, 0xdc,
	0xaa, 0x82, 0xc1, 0xfe, 0x89, 0x4a, 0x7e, 0x18, 0xca, 0xa6, 0xa5, 0xdb, 0xf5, 0x30, 0xe8, 0x33,
	0x84, 0xfd, 0x6d, 0x0d, 0x69, 0x65, 0x2f, 0x13, 0x77, 0x4d, 0xda, 0x2e, 0x53, 0xd8, 0x7d, 0xa5,
	0xa2, 0x88, 0x86, 0x26, 0xac, 0x6f, 0xa1, 0x59, 0x14, 0x96, 0x3a, 0xff, 0xed, 0x9e, 0xee, 0x29,
	0x30, 0xda, 0xa1, 0xcd, 0x52, 0xae, 0xf2, 0xdf, 0xf6, 0x2f, 0x28, 0x92, 0x94, 0x18, 0x8d, 0x5e,
	0x34, 0x2a, 0x7f, 0x48, 0xd1, 0x92, 0xde, 0x8f, 0xfc, 0xf0, 0x39, 0x08, 0x7b, 0x7a, 0xd2, 0xe1,
	0x64, 0x04, 0xd0, 0xdd, 0x86, 0xcf, 0x81, 0x8e, 0xaf, 0x56, 0x64, 0xd5, 0xc9, 0x27, 0xf6, 0xd7,
	0x68, 0xff, 0x49, 0xc9, 0x52, 0xff, 0x55, 0xbb, 0xa4, 0xfe, 0xb3, 0xbf, 0xa8, 0x2c, 0x07, 0x9e,
	0x18, 0x71, 0xbf, 0xb9, 0xf7, 0xe5, 0x01, 0xf9, 0xbc, 0x43, 0xd2, 0xd1, 0x50, 0x9d, 0x76, 0xd9,
	0x0f, 0xb7, 0x4a, 0x11, 0x73, 0x8c, 0x66, 0x9b, 0xad, 0x2d, 0x2e, 0xcf, 0xdc, 0x9f, 0x7d, 0xf4,
	0x68, 0x79, 0x61, 0xe6, 0x21, 0xdd, 0xc0, 0x2d, 0x5a, 0x25, 0xd4, 0xa0, 0xfd, 0x37, 0x6d, 0xe2,
	0xa7, 0x8d, 0x34, 0x03, 0x39, 0xf9, 0x25, 0xf6, 0x6a, 0x70, 0x17, 0xa7, 0xba, 0x2c, 0x7c, 0xd5,
	0x4d, 0x30, 0xc1, 0x28, 0x41, 0x6d, 0xd1, 0xed, 0x41, 0x79, 0x87, 0x3f, 0x4e, 0x41, 0x10, 0x04,
	0x9a, 0x55, 0x67, 0x45, 0xbe, 0x50, 0x6f, 0x57, 0xbf, 0x11, 0x62, 0x87, 0xc1, 0x7d, 0xd5, 0xc8,
	0xaf, 0x82, 0x11, 0x18, 0xba, 0x1b, 0x81, 0x29, 0x25, 0x0b, 0xab, 0x45, 0x42, 0xf6, 0x8a, 0xa2,
	0x09, 0xe2, 0x1d, 0x0f, 0x7a, 0xab, 0x9d, 0x8d, 0xc0, 0xaf, 0xf7, 0x41, 0x27, 0xbd, 0x00, 0xc6,
	0x37, 0x76, 0x6a, 0xd2, 0x95, 0xd6, 0xa8, 0x03, 0x36, 0x76, 0xd8, 0x15, 0x16, 0x7e, 0x03, 0x8e,
	0x64, 0xbb, 0xe0, 0xe4, 0x34, 0xea, 0x00, 0x5c, 0x44, 0x72, 0x82, 0xfe, 0x3f, 0x03, 0xf2, 0x39,
	0x15, 0xed, 0x5e, 0xe4, 0xa1, 0xd2, 0x0b, 0xab, 0xe0, 0xd4, 0xc0, 0x79, 0xe9, 0xb1, 0x15, 0xd6,
	0x70, 0x66, 0x91, 0xca, 0x30, 0x2f, 0xa9, 0x38, 0x05, 0xaf, 0xaf, 0xce, 0x8a, 0xaf, 0xaf, 0xd4,
	0xcf, 0xad, 0x26, 0xb8, 0x94, 0x6b, 0x00, 0x29, 0x24, 0x52, 0x1b, 0x43, 0x4a, 0xd8, 0x39, 0xda,
	0x27, 0xa9, 0x99, 0x0b, 0x4a, 0x33, 0x2a, 0x12, 0xfb, 0xbf, 0x1c, 0xc8, 0x9d, 0x54, 0xf0, 0x14,
	0x29, 0x67, 0x74, 0xde, 0x35, 0xfb, 0xe5, 0x97, 0xd9, 0x4b, 0xe0, 0x20, 0xb1, 0x46, 0xd7, 0x24,
	0x9f, 0xb0, 0x2b, 0x5a, 0xf5, 0x6d, 0x39, 0x6a, 0x60, 0x0b, 0x36, 0x3b, 0x7b, 0x4e, 0x40, 0xe1,
	0x97, 0xf5, 0x31, 0x30, 0x8c, 0xf5, 0xba, 0x44, 0x1f, 0x41, 0x88, 0x0c, 0x2b, 0x81, 0x50, 0x42,
	0x53, 0x54, 0xf5, 0xa1, 0x29, 0xaa, 0xcc, 0xd1, 0x94, 0x9f, 0x61, 0x47, 0xc5, 0x1b, 0xf7, 0xdf,
	0x51, 0x36, 0xe3, 0xa4, 0x2f, 0x19, 0xdc, 0x76, 0xcd, 0x4f, 0x39, 0x5b, 0x52, 0x75, 0x17, 0xd9,
	0x92, 0x7e, 0x86, 0x3c, 0x96, 0x91, 0x0c, 0x85, 0xfd, 0x4b, 0x78, 0x57, 0xda, 0x1e, 0xf7, 0xb3,
	0xda, 0x8d, 0xf2, 0xc5, 0xb1, 0x64, 0xfe, 0x36, 0xf1, 0x66, 0x50, 0xf6, 0x89, 0xd5, 0x98, 0x91,
	0xf8, 0xc0, 0xf7, 0x3c, 0x18, 0xbe, 0x90, 0xbb, 0x45, 0x94, 0x33, 0x39, 0x2d, 0xc3, 0xcd, 0x7e,
	0xd8, 0x2d, 0x0c, 0x9e, 0xf0, 0xf6, 0xf7, 0xc8, 0xac, 0x6a, 0xc0, 0xf4, 0x3e, 0xda, 0x71, 0x93,
	0xc5, 0x28, 0xee, 0x87, 0xff, 0xb3, 0xfd, 0x0f, 0xc8, 0xb3, 0x07, 0x71, 0x2d, 0x66, 0x78, 0x71,
	0x53, 0x25, 0x3a, 0x75, 0x5b, 0xb5, 0x41, 0x18, 0x47, 0x42, 0x30, 0x4d, 0x5c, 0x07, 0x43, 0x99,
	0x59, 0xc2, 0xf8, 0x01, 0x81, 0xb1, 0xff, 0xad, 0x22, 0x4a, 0xf0, 0x03, 0xe3, 0x18, 0xba, 0x24,
	0x3f, 0xd3, 0x8b, 0xb9, 0x33, 0x8a, 0x31, 0xd0, 0x07, 0x77, 0x19, 0x03, 0xfd, 0x0f, 0x94, 0x03,
	0x04, 0xea, 0x2f, 0x57, 0x23, 0xf6, 0xb1, 0xc3, 0x92, 0x75, 0xa7, 0xda, 0xa3, 0x75, 0x67, 0x32,
	0xb3, 0xee, 0x10, 0xc3, 0x12, 0xb7, 0xdf, 0xfc, 0x0d, 0xe5, 0x10, 0x49, 0x35, 0xc7, 0x20, 0x7a,
	0xba, 0x12, 0x79, 0xfb, 0x7a, 0x88, 0x9c, 0x04, 0x23, 0x2c, 0xfe, 0x0c, 0xcd, 0x3e, 0x4c, 0x7f,
	0x52, 0x4f, 0x00, 0x71, 0x25, 0x2e, 0x85, 0x6e, 0x3d, 0xf5, 0xf9, 0x01, 0xae, 0xcc, 0xeb, 0xa3,
	0x5f, 0x24, 0x22, 0x7b, 0x23, 0x4a, 0xc9, 0x4b, 0xc2, 0xb9, 0x4e, 0x92, 0x46, 0x2d, 0x87, 0xf8,
	0x80, 0x95, 0x7b, 0xdd, 0x5a, 0xc7, 0xa8, 0x6a, 0x2d, 0x98, 0x36, 0x23, 0x8f, 0xde, 0x83, 0x4d,
	0x90, 0xc2, 0x15, 0x5c, 0x66, 0xbd, 0xc2, 0x83, 0x1d, 0x54, 0x4d, 0x0e, 0x03, 0x2c, 0xfe, 0xc1,
	0xcf, 0x10, 0x71, 0x81, 0xe9, 0x74, 0x71, 0xc4, 0xfd, 0x77, 0xe1, 0x46, 0x33, 0x8a, 0xb6, 0x10,
	0xd4, 0x3b, 0x38, 0x17, 0xd1, 0x9e, 0x04, 0xee, 0x7b, 0x89, 0xe6, 0x12, 0x30, 0x12, 0x48, 0xf2,
	0xf0, 0xfe, 0x20, 0xb9, 0xcf, 0xa1, 0x6c, 0xc4, 0xe9, 0x01, 0xa2, 0x56, 0xcb, 0x0d, 0xbd, 0x72,
	0xfb, 0xf1, 0x68, 0x9d, 0x62, 0xc9, 0xf9, 0x34, 0x67, 0x2d, 0x38, 0x1c, 0xc8, 0x6e, 0xe1, 0xc9,
	0xdc, 0x76, 0x77, 0x5a, 0x58, 0x3f, 0xc3, 0xe6, 0x78, 0xfc, 0xff, 0x62, 0x14, 0x97, 0xb9, 0x58,
	0xca, 0xde, 0xa0, 0x0c, 0x88, 0x6f, 0x63, 0xda, 0xf8, 0x34, 0xaa, 0x69, 0xce, 0x81, 0x75, 0xe8,
	0xb7, 0xd3, 0xfe, 0xb7, 0xf8, 0xf7, 0x89, 0xcb, 0x24, 0x6f, 0x72, 0xdb, 0x0d, 0x7c, 0xcf, 0x4d,
	0x21, 0x9d, 0xaf, 0xd0, 0x2b, 0xef, 0x45, 0x82, 0xa3, 0x88, 0xd3, 0xc8, 0x1d, 0xe8, 0x7f, 0xd3,
	0x03, 0x9c, 0x5b, 0x60, 0xd0, 0x0f, 0x37, 0x23, 0x2a, 0x48, 0x33, 0x17, 0x56, 0xce, 0x02, 0x81,
	0x22, 0x07, 0x83, 0xda, 0xbf, 0x4f, 0xee, 0x8d, 0x38, 0xf5, 0x68, 0xbd, 0xed, 0xe5, 0x00, 0x59,
	0x0f, 0xc0, 0xd1, 0x98, 0xd1, 0x51, 0x43, 0x24, 0x64, 0xfb, 0x44, 0xb1, 0x7d, 0xfb, 0x70, 0x2c,
	0x92, 0xbf, 0xe4, 0x59, 0x6f, 0x01, 0x4b, 0x89, 0x45, 0x99, 0xc5, 0x1e, 0x2e, 0x46, 0x75, 0x44,
	0x0e, 0x49, 0xb9, 0xe4, 0x59, 0xb3, 0x60, 0xbc, 0x1e, 0x43, 0x0f, 0x86, 0xa9, 0xef, 0x06, 0x09,
	0x3d, 0x29, 0x29, 0x61, 0x83, 0x29, 0x5b, 0xe6, 0x32, 0x38, 0x47, 0xfc, 0x88, 0x66, 0x14, 0x10,
	0xa7, 0x1e, 0xce, 0x3c, 0x57, 0x6e, 0xf8, 0xed, 0x1f, 0xa9, 0xc8, 0x0b, 0x08, 0x87, 0x42, 0xea,
	0x03, 0x62, 0xeb, 0xa2, 0xdc, 0x65, 0x1a, 0xf0, 0x5a, 0x28, 0x42, 0x33, 0x0f, 0x4f, 0x27, 0x72,
	0x04, 0x27, 0xf3, 0x25, 0x92, 0xa7, 0x4b, 0x03, 0xa2, 0x53, 0xea, 0xd6, 0x9c, 0x1b, 0x7b, 0x25,
	0xdd, 0x32, 0x4e, 0x82, 0xe1, 0xb0, 0xd3, 0xda, 0xe0, 0x4e, 0x67, 0xf4, 0x97, 0xfd, 0x07, 0xe4,
	0xfd, 0x0b, 0x3b, 0x70, 0xd0, 0x2b, 0xa1, 0xbe, 0x64, 0x88, 0xd5, 0xc7, 0xa8, 0x9f, 0x02, 0xa3,
	0x6e, 0xe8, 0xb7, 0xdc, 0xcc, 0x65, 0x9f, 0xff, 0xde, 0x55, 0x8c, 0xeb, 0xcc, 0xf6, 0x3e, 0x24,
	0x5e, 0x1c, 0x9d, 0x03, 0x20, 0x69, 0x46, 0x71, 0x5a, 0xc3, 0xa6, 0x59, 0x72, 0x4d, 0x34, 0x86,
	0x4b, 0xb0, 0x23, 0xd3, 0xc7, 0xc1, 0x50, 0xda, 0xec, 0xb4, 0x36, 0xf4, 0xb7, 0x44, 0x3c, 0x2a,
	0x24, 0x01, 0xb2, 0xde, 0x00, 0xa3, 0x8c, 0x31, 0x34, 0x5f, 0xd3, 0x59, 0xd3, 0x99, 0x6d, 0x29,
	0x85, 0x2d, 0x87, 0x43, 0xdb, 0x7f, 0x85, 0xbc, 0x70, 0xe4, 0x6c, 0x8d, 0x61, 0x2b, 0xe2, 0x21,
	0x2d, 0x17, 0xe3, 0xa8, 0x55, 0x8e, 0xb5, 0x37, 0xc1, 0x08, 0x45, 0xdd, 0x25, 0xbc, 0x25, 0x03,
	0xb3, 0x7f, 0x8d, 0x88, 0xd1, 0x6c, 0x9c, 0xb1, 0x0b, 0x29, 0x25, 0x68, 0x35, 0x4a, 0xfc, 0x92,
	0x5a, 0xdd, 0xae, 0x29, 0x42, 0x13, 0xa1, 0x4d, 0xdb, 0x65, 0x6f, 0x18, 0xd8, 0x6f, 0xfb, 0x9f,
	0x10, 0x9b, 0x31, 0xa7, 0xd6, 0xf5, 0xd8, 0x0b, 0xe0, 0xf5, 0xe8, 0x79, 0x65, 0x5e, 0x7e, 0x3d,
	0xeb, 0x61, 0xb5, 0x20, 0xc1, 0x00, 0x9b, 0x0b, 0x9c, 0xf3, 0xff, 0x88, 0xa8, 0x31, 0xbc, 0x2f,
	0x89, 0x98, 0xd9, 0x7a, 0x9d, 0xce, 0xb3, 0xfd, 0xef, 0x0e, 0x5f, 0x09, 0xd5, 0x1e, 0x56, 0x02,
	0x75, 0x0d, 0x6c, 0x37, 0xa3, 0x10, 0xe2, 0xcb, 0x73, 0x37, 0x08, 0x4a, 0x7b, 0x56, 0xfe, 0xc0,
	0x00, 0xf6, 0x67, 0x23, 0x48, 0xe9, 0xee, 0x83, 0x10, 0x97, 0x13, 0x39, 0xe4, 0x29, 0x1d, 0x15,
	0x39, 0xe4, 0xd9, 0xdc, 0xae, 0x4e, 0x4c, 0xb9, 0xa8, 0xb8, 0x43, 0x42, 0x2e, 0xc0, 0x49, 0x30,
	0xda, 0xa8, 0xb9, 0x35, 0xec, 0x15, 0x41, 0x1e, 0xcd, 0x0c, 0x37, 0x66, 0x70, 0x72, 0xd6, 0xd7,
	0xc1, 0x28, 0xc6, 0x58, 0x8f, 0x02, 0x6a, 0xbd, 0xce, 0xde, 0x11, 0xac, 0xa2, 0x1e, 0xa2, 0x9e,
	0xad, 0x52, 0x08, 0x87, 0xc3, 0xda, 0x5f, 0x27, 0x59, 0x4e, 0x09, 0x13, 0x88, 0x63, 0x6e, 0x49,
	0x1e, 0x5c, 0x97, 0x1c, 0xf0, 0xf2, 0x2f, 0xf2, 0x08, 0x29, 0xf4, 0xa9, 0xf1, 0x61, 0x50, 0x6d,
	0xd4, 0x36, 0xe8, 0x3b, 0x90, 0x81, 0xc6, 0xac, 0xd4, 0x8f, 0xc1, 0x5d, 0xf4, 0xe3, 0xff, 0xac,
	0x08, 0x83, 0x59, 0x47, 0x53, 0x23, 0x6e, 0xed, 0x7b, 0x47, 0x5c, 0xde, 0x91, 0x19, 0xeb, 0x2a,
	0x38, 0xbc, 0x05, 0x77, 0x6a, 0x9b, 0x7e, 0xd8, 0x80, 0x71, 0x3b, 0x66, 0x79, 0x4f, 0xab, 0xce,
	0xa1, 0x2d, 0xb8, 0xb3, 0x98, 0x95, 0x4a, 0x3d, 0x1e, 0xda, 0x45, 0x8f, 0x3f, 0x8f, 0x2f, 0x79,
	0xd9, 0xec, 0xad, 0x43, 0x7f, 0x1b, 0x7a, 0xfb, 0xd8, 0x63, 0xfb, 0x2f, 0x8b, 0xcb, 0xc7, 0xf3,
	0x93, 0xba, 0x1b, 0x7b, 0x7b, 0xb4, 0x7c, 0xc4, 0x80, 0x44, 0x5d, 0xc6, 0x61, 0x0a, 0x8c, 0x7a,
	0x9d, 0x38, 0x7b, 0x71, 0x37, 0xe4, 0xf0, 0xdf, 0xd6, 0x3d, 0x30, 0x1c, 0x43, 0x37, 0xa1, 0x0f,
	0x38, 0xc6, 0xa7, 0x2f, 0xe4, 0xf9, 0x3c, 0x4f, 0xfa, 0xe1, 0x60, 0x30, 0x87, 0x82, 0xe3, 0x93,
	0x65, 0x14, 0x86, 0xb0, 0xce, 0xb4, 0x50, 0x62, 0x0f, 0x9e, 0xc8, 0x0a, 0x97, 0x3c, 0xfb, 0x5f,
	0x55, 0x04, 0x19, 0x95, 0x10, 0x19, 0xe5, 0xb8, 0xa9, 0x1f, 0x96, 0x31, 0x9c, 0x5f, 0x05, 0x87,
	0x89, 0xe8, 0x08, 0xfd, 0xd4, 0x77, 0xd1, 0x01, 0x9c, 0xf2, 0xe6, 0x10, 0x16, 0x17, 0xbc, 0x74,
	0x77, 0x4c, 0x3a, 0x09, 0x86, 0x63, 0x4c, 0x19, 0x73, 0xc3, 0x22, 0xbf, 0xf0, 0xdb, 0xdc, 0xa8,
	0x85, 0xb3, 0xb3, 0xb3, 0xb7, 0xb9, 0xe4, 0xa7, 0xfd, 0x2b, 0x52, 0xe7, 0xdc, 0x6d, 0xc2, 0x2c,
	0xb8, 0xd1, 0x69, 0xec, 0xd7, 0x02, 0xbb, 0x0a, 0x86, 0x3c, 0xd4, 0x9e, 0xf9, 0x58, 0x4c, 0xea,
	0x99, 0xef, 0x28, 0x1b, 0x87, 0xd0, 0xc3, 0x97, 0x72, 0x81, 0x1f, 0x36, 0x4a, 0xaa, 0xb0, 0xbb,
	0x22, 0xd7, 0x12, 0x0e, 0xf1, 0x34, 0x21, 0xa0, 0xfd, 0x97, 0x89, 0x01, 0x2f, 0x70, 0xc3, 0x46,
	0xdb, 0xad, 0x6f, 0x61, 0x8b, 0xaa, 0x1b, 0x36, 0x56, 0xdd, 0xfa, 0x56, 0x1f, 0x5c, 0x7f, 0x11,
	0x4a, 0xd1, 0xf5, 0x17, 0xa3, 0x95, 0xfc, 0x82, 0xab, 0xca, 0x3b, 0xa1, 0x9f, 0x27, 0x83, 0x2a,
	0xd2, 0x43, 0x8e, 0x51, 0xc9, 0xf3, 0x20, 0x07, 0xb1, 0x6c, 0x0b, 0xee, 0x10, 0x77, 0xf4, 0x31,
	0x07, 0xff, 0x6f, 0x7f, 0x95, 0xd8, 0x8a, 0x44, 0x12, 0xfb, 0x1a, 0x02, 0x70, 0xf7, 0x54, 0xaa,
	0xf1, 0x01, 0x07, 0xf3, 0xf1, 0x01, 0x3f, 0xc0, 0x27, 0x45, 0x75, 0x98, 0xcb, 0x46, 0x04, 0x2c,
	0x22, 0xd9, 0x34, 0xb5, 0x3a, 0xe5, 0x02, 0x99, 0x7c, 0xf4, 0xa9, 0xf5, 0xd7, 0xc8, 0x22, 0x24,
	0x79, 0x30, 0xa8, 0x07, 0x12, 0x84, 0xf1, 0x22, 0xf9, 0x5d, 0x82, 0xa4, 0x6f, 0x01, 0x13, 0x34,
	0xdb, 0x06, 0xce, 0x91, 0xa8, 0xcf, 0xcc, 0x48, 0x9a, 0xc1, 0xce, 0xfe, 0xe3, 0x9b, 0xfc, 0x7f,
	0x16, 0x35, 0x91, 0x11, 0x45, 0xae, 0x8a, 0x08, 0xec, 0x5e, 0xe5, 0xff, 0xf8, 0x6d, 0xc2, 0x87,
	0x24, 0x75, 0xe9, 0x69, 0x9a, 0x99, 0xfe, 0x71, 0xcc, 0xd7, 0x3e, 0x07, 0x7c, 0xdd, 0x75, 0x90,
	0x8d, 0x33, 0x60, 0x2c, 0xfd, 0x50, 0x8e, 0xd7, 0x3f, 0x9a, 0x7e, 0x48, 0x82, 0xef, 0xd8, 0x3f,
	0x46, 0xa6, 0x14, 0x21, 0x3d, 0x88, 0x5c, 0x6f, 0x26, 0xd9, 0x09, 0xeb, 0xf7, 0x63, 0xb7, 0xdd,
	0x2c, 0xb7, 0xc5, 0x67, 0xef, 0x6e, 0xd1, 0xa9, 0x19, 0xbf, 0xb9, 0x7d, 0x05, 0x54, 0x9e, 0x15,
	0xc5, 0x3b, 0x79, 0xfd, 0x0e, 0xb1, 0xec, 0x54, 0x9e, 0xd9, 0x3f, 0xad, 0x70, 0x74, 0x85, 0x79,
	0x72, 0xbe, 0x08, 0x1c, 0xb5, 0x7f, 0x7d, 0x80, 0x1e, 0x73, 0x39, 0x75, 0xf8, 0xa6, 0x94, 0xb8,
	0x57, 0x2c, 0x46, 0xf1, 0x53, 0x37, 0xf6, 0x92, 0xfd, 0xbe, 0x96, 0xd4, 0x98, 0x12, 0xb3, 0xc8,
	0x4c, 0x71, 0x16, 0x30, 0x86, 0x46, 0x66, 0x72, 0xdc, 0x14, 0x5a, 0xb7, 0x39, 0x40, 0x97, 0x28,
	0xd5, 0xf4, 0xa3, 0xd5, 0x5c, 0x76, 0x88, 0x61, 0x25, 0x18, 0x94, 0x36, 0x98, 0x93, 0xfd, 0x9b,
	0xe4, 0x92, 0x47, 0x65, 0xd8, 0x0b, 0xb1, 0x3c, 0xf4, 0x11, 0x2e, 0xe9, 0x13, 0xeb, 0xa7, 0x6e,
	0x10, 0xc0, 0x94, 0x5c, 0x8d, 0x94, 0xb2, 0x00, 0xfe, 0x6b, 0x72, 0x72, 0xc9, 0xf0, 0x39, 0xb0,
	0x5e, 0x32, 0xc4, 0xee, 0x6b, 0x60, 0x30, 0xdd, 0x69, 0xc3, 0xdc, 0x83, 0x72, 0xda, 0x06, 0x69,
	0x60, 0x7d, 0xa7, 0x0d, 0x1d, 0x0c, 0x67, 0xdd, 0xa0, 0x71, 0x83, 0x7a, 0x88, 0x38, 0x44, 0x82,
	0x0a, 0xed, 0xca, 0x8f, 0xdf, 0x4e, 0xc1, 0x91, 0xf5, 0xe5, 0xda, 0x46, 0x10, 0x35, 0x78, 0xec,
	0x93, 0x7d, 0x78, 0xe0, 0xf5, 0xa5, 0x0a, 0x38, 0xcc, 0x9b, 0xdd, 0x8c, 0x82, 0x20, 0x7a, 0xba,
	0x0f, 0xb1, 0xb3, 0xa6, 0xc0, 0x28, 0x69, 0x2b, 0x33, 0x2f, 0xb2, 0xdf, 0xf6, 0x17, 0x2b, 0xe0,
	0x20, 0xa7, 0x28, 0xf0, 0xb7, 0x60, 0x1f, 0x7c, 0xff, 0xe5, 0x79, 0x4c, 0x50, 0x2f, 0x91, 0xb1,
	0x1d, 0xf0, 0xe9, 0xa2, 0xdb, 0xe2, 0xb4, 0x90, 0x1f, 0xf6, 0x7f, 0x48, 0xa6, 0x1c, 0x81, 0xc6,
	0x57, 0x70, 0x44, 0xcd, 0xdf, 0x7b, 0x7a, 0x2c, 0x30, 0x98, 0xc2, 0x67, 0x2c, 0xa4, 0x37, 0xfe,
	0xdf, 0xfe, 0x03, 0x71, 0xa0, 0x62, 0x88, 0x44, 0x64, 0xb9, 0x95, 0x8f, 0x8e, 0x46, 0xec, 0x61,
	0x29, 0xfa, 0x1f, 0x95, 0x21, 0xec, 0xec, 0x01, 0x1c, 0xfa, 0xdf, 0xba, 0x0f, 0x8e, 0x50, 0x33,
	0x77, 0x4d, 0xb9, 0xa1, 0xee, 0x72, 0x4f, 0x41, 0xbf, 0x62, 0x77, 0xd6, 0x68, 0x2d, 0xb8, 0x2d,
	0xfc, 0x6a, 0x1c, 0x4d, 0xfa, 0x8a, 0x43, 0x7f, 0xd9, 0xbf, 0x48, 0x2c, 0x2b, 0x7c, 0xda, 0x2f,
	0xe2, 0x69, 0x90, 0xec, 0x4f, 0x84, 0xf2, 0x5d, 0xc4, 0x04, 0xf9, 0x4a, 0x45, 0x5e, 0x9e, 0x8b,
	0x6e, 0xf8, 0xe2, 0x11, 0xf9, 0xbd, 0x58, 0x17, 0x21, 0x34, 0x92, 0x2b, 0x02, 0xec, 0xaf, 0xb1,
	0xee, 0x36, 0x4a, 0xea, 0x22, 0xd8, 0x82, 0x3f, 0xa0, 0x3c, 0xfd, 0xc8, 0x9c, 0x74, 0x87, 0x98,
	0x43, 0x6e, 0x20, 0x10, 0x40, 0x14, 0xc7, 0x3e, 0x10, 0x70, 0x0a, 0x8c, 0xa4, 0x6e, 0x43, 0x48,
	0xad, 0x38, 0x9c, 0xba, 0x8d, 0x25, 0x2f, 0xa1, 0xb6, 0x1d, 0xd2, 0x1a, 0xd2, 0x9d, 0xfb, 0xd0,
	0xd6, 0x09, 0x30, 0x4c, 0xda, 0x62, 0xf7, 0x75, 0xb8, 0x29, 0xc3, 0x0b, 0x82, 0x1f, 0x24, 0x4a,
	0x16, 0x21, 0xc0, 0xf5, 0x3c, 0xd6, 0xfe, 0x0a, 0x6c, 0x6d, 0x94, 0x12, 0xde, 0x66, 0x2a, 0x34,
	0x3c, 0xff, 0x22, 0x79, 0x6b, 0xa9, 0x63, 0xfa, 0xfe, 0x12, 0xf2, 0x8e, 0x30, 0x1c, 0xcc, 0x2b,
	0x69, 0xdd, 0x2d, 0x73, 0x4c, 0xb6, 0xbf, 0x51, 0xc5, 0x5a, 0x44, 0x26, 0x82, 0x67, 0xcb, 0x85,
	0xd3, 0xb8, 0x07, 0x26, 0xb6, 0xfd, 0xc4, 0xdf, 0x08, 0x60, 0x4d, 0xd8, 0xfa, 0x8f, 0xf3, 0x4f,
	0x9f, 0x90, 0x4a, 0x2c, 0x88, 0xc7, 0xb7, 0xb3, 0x1f, 0xd6, 0x65, 0x70, 0xb0, 0x45, 0x32, 0x68,
	0xd5, 0xc4, 0x9e, 0x4f, 0xd0, 0x42, 0xb4, 0x59, 0x27, 0xd6, 0x4d, 0x2a, 0xb6, 0x7b, 0x11, 0x90,
	0x18, 0x52, 0x7a, 0x5f, 0x3e, 0xd4, 0xdb, 0xfb, 0x72, 0xd9, 0xf4, 0x3d, 0x2c, 0x27, 0x84, 0xb3,
	0x6e, 0x83, 0x91, 0x3a, 0xf1, 0x37, 0xa4, 0x77, 0x67, 0x4a, 0xaa, 0x26, 0xc4, 0x3f, 0xea, 0x90,
	0xe8, 0x30, 0x48, 0xd9, 0x75, 0x67, 0x74, 0xf7, 0x0f, 0xb3, 0xc6, 0x76, 0xf1, 0x30, 0x0b, 0x7b,
	0xa7, 0x47, 0x6d, 0xbf, 0x9e, 0x4c, 0x02, 0x6c, 0xc1, 0xa0, 0xbf, 0x6c, 0x28, 0xec, 0x03, 0x64,
	0x16, 0x97, 0x1c, 0xeb, 0xe3, 0x60, 0x08, 0x63, 0x63, 0x01, 0x6c, 0xf1, 0x0f, 0xbb, 0x2e, 0x4c,
	0x28, 0x74, 0xd2, 0x2c, 0x9f, 0x07, 0x54, 0xd3, 0x48, 0x24, 0x88, 0x41, 0x9a, 0x13, 0x17, 0x86,
	0x69, 0xc9, 0xc7, 0xeb, 0x53, 0xc4, 0xe9, 0x84, 0x07, 0xa5, 0x18, 0x72, 0xf8, 0x6f, 0xfb, 0x37,
	0x44, 0x55, 0xa5, 0x3f, 0x8f, 0xd4, 0x5f, 0xcd, 0x82, 0x6f, 0x76, 0x51, 0x76, 0x71, 0xfc, 0xc8,
	0xd7, 0xc0, 0x08, 0x0e, 0x7b, 0xca, 0x6f, 0x6f, 0x0c, 0xea, 0xcd, 0x30, 0x82, 0x5a, 0xf2, 0xec,
	0xff, 0x43, 0xd9, 0xf7, 0xcb, 0x13, 0xfc, 0x91, 0xd7, 0x76, 0xff, 0xb3, 0xf5, 0xe9, 0x9e, 0xe4,
	0xfe, 0xaa, 0x38, 0x44, 0xd9, 0xa4, 0x48, 0xf6, 0x5e, 0x9b, 0x2c, 0xec, 0x9f, 0x5e, 0x91, 0xf8,
	0xe5, 0x8a, 0xbc, 0x4c, 0x96, 0xfd, 0x2d, 0xf8, 0x62, 0x52, 0xfa, 0x54, 0x9e, 0x46, 0x24, 0xf1,
	0x56, 0xd2, 0xd7, 0xa0, 0xb3, 0xda, 0xd0, 0xd3, 0xf6, 0x0f, 0x57, 0x70, 0xc8, 0x19, 0xde, 0xf2,
	0x3a, 0x16, 0x63, 0x25, 0x1a, 0xb6, 0xc1, 0x41, 0x6c, 0x32, 0xc5, 0xf2, 0x30, 0xdb, 0x72, 0xb1,
	0xcd, 0x14, 0x23, 0x17, 0x79, 0x20, 0x91, 0xd2, 0x90, 0x37, 0xde, 0x07, 0x51, 0x79, 0x62, 0x78,
	0x43, 0x03, 0x62, 0x43, 0x5f, 0x57, 0x92, 0xd6, 0x0a, 0x91, 0x05, 0x9e, 0xf8, 0xf0, 0x69, 0x32,
	0x77, 0x67, 0xee, 0x8d, 0x99, 0xbb, 0x77, 0xe7, 0xf7, 0x3f, 0x95, 0x80, 0x75, 0x1d, 0x8c, 0xf9,
	0x61, 0x3d, 0x86, 0xf8, 0x5a, 0x66, 0x50, 0xe7, 0xb1, 0x9d, 0xd5, 0x77, 0x0d, 0x6b, 0xbb, 0x78,
	0x73, 0x76, 0xf6, 0xee, 0xad, 0xbb, 0xd3, 0x7b, 0x1d, 0xd6, 0x56, 0x49, 0x0c, 0x4e, 0xf2, 0xfb,
	0xdd, 0xf7, 0x37, 0xcb, 0x8c, 0x1c, 0x7e, 0x13, 0x32, 0xc0, 0xde, 0x84, 0x98, 0x02, 0xe0, 0xe5,
	0x82, 0xd4, 0x3c, 0xdb, 0x29, 0x19, 0xa4, 0x86, 0x44, 0x40, 0xa2, 0xb6, 0x13, 0xa4, 0xaa, 0x2d,
	0xfb, 0xdc, 0xfd, 0xaf, 0xdc, 0x41, 0x75, 0x23, 0xf2, 0x76, 0x68, 0x00, 0x42, 0xfc, 0xbf, 0xfd,
	0x39, 0xac, 0x76, 0x67, 0xa6, 0xa0, 0xb7, 0xe1, 0xce, 0x1a, 0xac, 0xc7, 0x30, 0x5d, 0x73, 0x83,
	0x72, 0xa7, 0xf3, 0xe1, 0x18, 0x6e, 0x47, 0x5b, 0x6c, 0xef, 0x50, 0x33, 0xcc, 0x92, 0x4a, 0x7b,
	0x87, 0xbc, 0xa5, 0x88, 0xc2, 0xd4, 0xad, 0xa7, 0xfc, 0xd1, 0x21, 0xf9, 0x59, 0x6a, 0xfd, 0x0f,
	0x14, 0x46, 0x2b, 0x42, 0x13, 0xe6, 0x07, 0xe8, 0x3b, 0x09, 0x6d, 0xdb, 0xc9, 0xdd, 0x37, 0x67,
	0x66, 0x6f, 0xbf, 0xf1, 0xe6, 0x42, 0x1f, 0x88, 0xa8, 0x16, 0x10, 0xf1, 0x79, 0x39, 0xf0, 0x7a,
	0xd3, 0xf7, 0xa0, 0xd3, 0x8f, 0x28, 0x29, 0xbd, 0x9a, 0xac, 0x36, 0x70, 0xf2, 0x2b, 0xd1, 0xed,
	0x9a, 0xdf, 0x17, 0xf4, 0xed, 0x11, 0x04, 0x49, 0xec, 0xe8, 0xd6, 0x71, 0xa0, 0x3b, 0x1c, 0x5e,
	0xd5, 0x0d, 0x82, 0x55, 0xb7, 0x0d, 0xe3, 0x64, 0xee, 0xe6, 0x9d, 0xb9, 0xc5, 0x99, 0xb9, 0x12,
	0xc2, 0xc1, 0xfe, 0x29, 0x25, 0x06, 0x3c, 0x71, 0x6e, 0xe7, 0x0f, 0xfa, 0x93, 0x72, 0x87, 0xe5,
	0x7a, 0xd3, 0x4d, 0xb3, 0xfd, 0x63, 0x18, 0xfd, 0x5c, 0xf2, 0x7a, 0x7f, 0xd0, 0xa2, 0x7b, 0xb2,
	0x5f, 0x36, 0x99, 0xdd, 0x47, 0x79, 0xb2, 0xaf, 0xc9, 0x6a, 0xa7, 0x3e, 0x96, 0x26, 0xcf, 0x6c,
	0x49, 0xa8, 0xc8, 0xfd, 0x7c, 0xee, 0xfb, 0x1b, 0xca, 0x73, 0x2a, 0x32, 0x7e, 0x84, 0x8e, 0x17,
	0xf3, 0x4d, 0xeb, 0xd7, 0x94, 0xf7, 0x69, 0xfb, 0x93, 0xf2, 0x73, 0xd7, 0x77, 0x09, 0x2c, 0x94,
	0x11, 0x4b, 0xe3, 0x49, 0x1c, 0xda, 0xb8, 0xb8, 0x23, 0xe3, 0x3d, 0x57, 0xca, 0xf4, 0x69, 0x27,
	0x32, 0x4e, 0xbf, 0x55, 0x1e, 0xa7, 0x75, 0x01, 0x8c, 0x13, 0xda, 0x6a, 0x75, 0x37, 0xf6, 0xe8,
	0xf1, 0x0c, 0x64, 0xe4, 0xda, 0x7f, 0x85, 0x1c, 0x77, 0xdc, 0x4e, 0xda, 0xc4, 0x9b, 0x63, 0xf9,
	0xb9, 0x72, 0x19, 0x1c, 0x24, 0xce, 0x1b, 0xc4, 0x45, 0x98, 0x65, 0xbf, 0x9b, 0xc0, 0x85, 0x0f,
	0x49, 0x59, 0x41, 0x18, 0xce, 0x67, 0x52, 0xc0, 0xc2, 0x3e, 0x46, 0x99, 0x9c, 0xc0, 0x22, 0x33,
	0xde, 0xa9, 0xf9, 0x49, 0x34, 0x4d, 0x15, 0x91, 0x71, 0x5a, 0xb6, 0x94, 0x44, 0xd3, 0xf6, 0x07,
	0x58, 0x6f, 0xc6, 0x9c, 0xc0, 0xef, 0x99, 0xb1, 0x4f, 0x48, 0xb9, 0x26, 0x45, 0x46, 0xb0, 0x26,
	0x05, 0x3e, 0xd8, 0xbf, 0x55, 0xc5, 0xdc, 0x97, 0x62, 0xfb, 0xc0, 0x52, 0x2f, 0xa5, 0xaf, 0x03,
	0x8b, 0x9e, 0x54, 0xd2, 0x08, 0xa7, 0xfa, 0x10, 0x52, 0x09, 0x1f, 0x26, 0x35, 0xeb, 0xd1, 0x8a,
	0xfb, 0xcc, 0x81, 0xae, 0x87, 0x23, 0x84, 0x43, 0xe8, 0x65, 0x87, 0x9a, 0x61, 0xf4, 0x73, 0xc9,
	0xb3, 0xbe, 0x1d, 0x1c, 0x66, 0xd7, 0x87, 0xcc, 0xc7, 0x56, 0x7d, 0x99, 0x8f, 0xe8, 0x64, 0x8e,
	0xbf, 0xce, 0x21, 0x7a, 0x8b, 0xc8, 0x1c, 0x81, 0xe5, 0xc3, 0xe9, 0x90, 0xf1, 0x70, 0x2a, 0xc6,
	0x41, 0xb7, 0xde, 0x00, 0x13, 0x88, 0x60, 0xde, 0xe2, 0x48, 0x51, 0x8b, 0xe3, 0x2d, 0xf7, 0x99,
	0xe0, 0x77, 0x3c, 0xd1, 0xf2, 0xc3, 0xec, 0xcb, 0xd1, 0xe2, 0x2f, 0xfd, 0x90, 0x7f, 0xc9, 0x0e,
	0xc4, 0x63, 0xd9, 0x81, 0x18, 0x8d, 0x1b, 0x89, 0x40, 0x9c, 0xd4, 0x84, 0xd4, 0x33, 0xe3, 0xb4,
	0xec, 0x01, 0x3a, 0x33, 0xff, 0x80, 0xf2, 0xc8, 0x9d, 0x28, 0xc8, 0x25, 0x87, 0x4e, 0x18, 0x8d,
	0x01, 0x69, 0x34, 0xe4, 0xd7, 0xd4, 0x4a, 0x56, 0x9e, 0xc1, 0x5c, 0x56, 0x9e, 0xfd, 0xba, 0xfb,
	0xfd, 0x79, 0x4d, 0x60, 0x2a, 0x08, 0xbd, 0x35, 0xc2, 0xa7, 0x12, 0x8c, 0xb8, 0x23, 0x33, 0xa2,
	0x8b, 0x95, 0x87, 0x71, 0x49, 0x17, 0x26, 0xf1, 0x9f, 0x92, 0xa4, 0xae, 0x42, 0x58, 0x1a, 0x37,
	0x6c, 0x40, 0x44, 0x25, 0xd7, 0xcc, 0x16, 0x17, 0x67, 0x6f, 0xdf, 0xbb, 0x7b, 0xeb, 0xd6, 0x7e,
	0xee, 0x8e, 0x77, 0xe4, 0x75, 0xd7, 0x5b, 0x07, 0xed, 0x6f, 0x90, 0xbc, 0xa5, 0xe2, 0xfb, 0x57,
	0xa9, 0x27, 0xc9, 0xc2, 0xcc, 0x1b, 0x37, 0x67, 0x17, 0x67, 0x16, 0xf6, 0x62, 0x0e, 0xde, 0x02,
	0xa3, 0xac, 0x61, 0x7d, 0x9c, 0x3c, 0xd6, 0x49, 0x0e, 0x66, 0xbd, 0x09, 0x8e, 0xba, 0x41, 0x12,
	0xd5, 0x42, 0xf8, 0x34, 0xd8, 0xc1, 0x61, 0x6c, 0xa0, 0xa7, 0x3f, 0x01, 0x1f, 0x46, 0x70, 0x0f,
	0x11, 0xd8, 0x5b, 0x18, 0xca, 0xfe, 0x05, 0x62, 0x93, 0x92, 0x5e, 0xad, 0xef, 0xd5, 0xea, 0x52,
	0xc5, 0x4e, 0xb5, 0x57, 0xb1, 0x63, 0xff, 0x9a, 0x92, 0xe9, 0x69, 0x93, 0x38, 0x88, 0xec, 0x5f,
	0x06, 0x2a, 0x35, 0x4f, 0x60, 0xce, 0xf9, 0x5c, 0xb0, 0xc0, 0x17, 0x27, 0x0f, 0xb8, 0x35, 0xb3,
	0xf8, 0xe6, 0xad, 0xb9, 0x9b, 0x6f, 0xbe, 0xd0, 0xc9, 0x03, 0x16, 0xef, 0xdd, 0xba, 0x3b, 0xf7,
	0xc6, 0xbd, 0xd9, 0xfd, 0x4f, 0x1e, 0xd0, 0x83, 0x1c, 0x99, 0xbe, 0x3b, 0xfd, 0xc6, 0x1b, 0xf7,
	0x6e, 0x2d, 0xfc, 0x19, 0x90, 0x23, 0xf7, 0x16, 0xde, 0xbc, 0x35, 0xfb, 0xc6, 0xe2, 0xf4, 0x9f,
	0x7e, 0x39, 0xf2, 0x55, 0x25, 0x55, 0xac, 0x70, 0x03, 0x31, 0x7b, 0xf3, 0xce, 0xe2, 0xf4, 0xdd,
	0x5b, 0x37, 0xf7, 0x29, 0x21, 0x5b, 0x3e, 0xb6, 0x84, 0xc9, 0x0b, 0xc7, 0x6e, 0x48, 0x39, 0x20,
	0xd6, 0xea, 0x4d, 0xd8, 0x2a, 0x99, 0x03, 0x47, 0x0c, 0xd0, 0x3f, 0xe4, 0xb0, 0x9f, 0xf6, 0x03,
	0x30, 0xc1, 0x1a, 0x4a, 0x4b, 0x19, 0xc3, 0xec, 0x7f, 0x49, 0x72, 0x92, 0x31, 0xb3, 0x04, 0xb9,
	0xe2, 0x5f, 0x8d, 0xa1, 0x07, 0x37, 0xd1, 0x38, 0x94, 0x74, 0x19, 0x3a, 0x8e, 0x63, 0xd1, 0x85,
	0xfc, 0xa2, 0x1f, 0xff, 0xb0, 0xbe, 0x05, 0x2d, 0xe5, 0x38, 0xa1, 0x4f, 0xf5, 0x7a, 0x79, 0xa3,
	0x3a, 0x86, 0xe1, 0xf1, 0x43, 0xbe, 0x37, 0xc1, 0x58, 0xe0, 0xb2, 0x6f, 0x7b, 0xb9, 0x16, 0x1d,
	0x45, 0xe0, 0x34, 0x98, 0x79, 0x16, 0xbb, 0xad, 0x97, 0xb4, 0xab, 0x1c, 0x1a, 0x69, 0x28, 0x42,
	0x82, 0x09, 0xfc, 0xbf, 0x35, 0x05, 0x46, 0xb7, 0x61, 0xec, 0x6f, 0xfa, 0x90, 0xc4, 0xa3, 0x19,
	0x75, 0xf8, 0x6f, 0xfb, 0xaf, 0x92, 0xfc, 0xb8, 0x8c, 0xab, 0xcc, 0x1c, 0x2c, 0x72, 0xb5, 0x64,
	0xe0, 0x3a, 0x3d, 0x67, 0x8b, 0xa2, 0xd3, 0xfd, 0xfc, 0x00, 0x96, 0xd0, 0x26, 0x9a, 0xa8, 0xb1,
	0xfa, 0xcf, 0xcc, 0x60, 0x4f, 0x8b, 0x81, 0x44, 0xbb, 0x7d, 0x46, 0x8d, 0x41, 0xdf, 0x4f, 0x8c,
	0x30, 0x32, 0x8b, 0x9e, 0xd0, 0x41, 0xed, 0x63, 0x66, 0x56, 0x71, 0xea, 0x54, 0x77, 0x37, 0x75,
	0xfa, 0x40, 0x8d, 0x71, 0xea, 0x18, 0x69, 0xfa, 0x42, 0x45, 0x12, 0x12, 0x2a, 0x4d, 0x73, 0xe5,
	0xc2, 0x67, 0xe8, 0xe9, 0x61, 0x4b, 0xae, 0x9a, 0x2d, 0x39, 0xfb, 0x9b, 0xe4, 0x0e, 0x11, 0x1f,
	0xf4, 0x89, 0x81, 0x6c, 0xd6, 0x0d, 0xfb, 0xde, 0xf2, 0x79, 0x00, 0xda, 0xbc, 0x6f, 0x2c, 0x4e,
	0x5a, 0x56, 0x62, 0xdd, 0x05, 0x23, 0xf0, 0x59, 0xdb, 0x8f, 0x21, 0xcb, 0xc2, 0x57, 0xb8, 0x77,
	0x33, 0x58, 0xeb, 0x8e, 0xf2, 0x08, 0xaa, 0x4b, 0xca, 0x67, 0x02, 0x6b, 0x07, 0x58, 0x51, 0xc5,
	0x0e, 0x22, 0xe4, 0x5a, 0x65, 0x2f, 0x25, 0xb3, 0xfd, 0x2e, 0x7e, 0x7d, 0x6b, 0x68, 0xad, 0x8c,
	0xd7, 0x4d, 0x1b, 0x1c, 0x12, 0x11, 0xaf, 0xc0, 0x3e, 0xae, 0x26, 0xee, 0xd9, 0x5e, 0x15, 0x3c,
	0xdb, 0xed, 0x1f, 0x24, 0x5e, 0xf4, 0x1b, 0xfe, 0x87, 0x35, 0x3f, 0xdc, 0x8e, 0xb6, 0xe0, 0xac,
	0xff, 0xe1, 0xbc, 0x9b, 0xba, 0x8e, 0xfb, 0xb4, 0x94, 0x83, 0xef, 0x28, 0xc2, 0x88, 0x5f, 0x18,
	0xa9, 0x37, 0x71, 0x59, 0x03, 0xce, 0xc8, 0x06, 0xf9, 0xdf, 0xfe, 0x0e, 0x60, 0x3d, 0x81, 0xe8,
	0xcb, 0xda, 0x1a, 0xac, 0x77, 0x62, 0x92, 0x98, 0xd1, 0xfa, 0x18, 0x18, 0x42, 0x18, 0x92, 0xc9,
	0x0a, 0xd6, 0xa3, 0x32, 0x87, 0x02, 0x01, 0xc8, 0x21, 0x20, 0xf6, 0xb7, 0x82, 0x23, 0x14, 0x03,
	0xbf, 0x2f, 0xb0, 0xae, 0xc9, 0xdf, 0x67, 0xfa, 0x0b, 0x07, 0x61, 0x5f, 0x4f, 0x83, 0x71, 0xfa,
	0x35, 0x9e, 0x2f, 0x97, 0xe5, 0x0f, 0x33, 0x25, 0x8c, 0x84, 0xc0, 0x24, 0xdf, 0xd8, 0x00, 0xd0,
	0x6f, 0x96, 0x42, 0x6c, 0xf1, 0xc9, 0x3e, 0x19, 0x62, 0x30, 0xf3, 0xe0, 0x38, 0x85, 0xa1, 0x37,
	0x45, 0x34, 0x25, 0xd0, 0xc7, 0xe5, 0x06, 0x32, 0x9e, 0x4a, 0x60, 0x0c, 0xcb, 0x2c, 0x38, 0xc6,
	0xb8, 0xe3, 0x6e, 0x23, 0x39, 0x42, 0x2e, 0xbc, 0xae, 0xcb, 0x48, 0x32, 0x35, 0x53, 0x84, 0x62,
	0x38, 0xd6, 0xc1, 0x59, 0x8a, 0xc3, 0xa1, 0x6f, 0x31, 0x1f, 0x46, 0xa9, 0xbf, 0xb9, 0xc3, 0xce,
	0x72, 0x77, 0x64, 0x64, 0x59, 0x14, 0x24, 0x2d, 0x38, 0xc3, 0x7a, 0x99, 0xf3, 0x6d, 0x39, 0x0a,
	0x1b, 0x32, 0x13, 0xaa, 0x0c, 0x68, 0x19, 0x4c, 0x32, 0xf2, 0xf9, 0x53, 0xeb, 0xb9, 0x68, 0x1b,
	0xc6, 0xd0, 0xb3, 0x6e, 0xca, 0xcd, 0x66, 0xae, 0xe0, 0x39, 0xd0, 0x3c, 0x33, 0x18, 0x2d, 0xe8,
	0xa4, 0x62, 0x66, 0x86, 0x08, 0xc5, 0x70, 0x7c, 0x3b, 0x38, 0x4a, 0x71, 0x90, 0xc4, 0xdd, 0xd8,
	0x40, 0xf4, 0x8a, 0x8c, 0xe1, 0x98, 0x92, 0x06, 0x1c, 0xab, 0xbb, 0xb9, 0x61, 0x5d, 0x68, 0x45,
	0xef, 0xfb, 0xfc, 0x25, 0x93, 0x71, 0x58, 0x25, 0x30, 0x86, 0xe5, 0x09, 0x38, 0x27, 0xf7, 0x24,
	0xa9, 0xad, 0x61, 0x33, 0x1b, 0x4e, 0xba, 0x01, 0x63, 0xeb, 0xae, 0x8c, 0x2e, 0x7b, 0x0e, 0xda,
	0xd2, 0xc2, 0xe7, 0x39, 0x24, 0x65, 0x4c, 0x37, 0x72, 0x48, 0x4a, 0x73, 0x9e, 0x9b, 0x2e, 0x62,
	0x2d, 0x4f, 0xf4, 0x6e, 0x9e, 0x2e, 0x5a, 0x70, 0x86, 0xf5, 0x13, 0xe0, 0x30, 0xc5, 0xca, 0xce,
	0xbc, 0xf8, 0xd9, 0xa4, 0x80, 0x28, 0x7b, 0x36, 0xc9, 0x20, 0xd8, 0xb7, 0x8b, 0xe0, 0x04, 0x9b,
	0x6a, 0xf4, 0x85, 0x17, 0xd9, 0x07, 0xac, 0x57, 0x65, 0x0c, 0xd9, 0xbb, 0x47, 0x19, 0x8e, 0xe1,
	0x79, 0x0b, 0x9c, 0x52, 0xf0, 0xf0, 0xe1, 0xbb, 0x21, 0x63, 0x3a, 0x9d, 0xc3, 0xa4, 0x8e, 0x60,
	0x26, 0xb6, 0x84, 0x63, 0xbc, 0x59, 0x6c, 0x09, 0x40, 0xf9, 0x5e, 0x29, 0x5b, 0x96, 0xb1, 0x57,
	0x32, 0x1c, 0xc5, 0x33, 0xfd, 0x1f, 0x5d, 0x06, 0x96, 0xb3, 0x3a, 0xc7, 0x26, 0x12, 0x5b, 0xd5,
	0x4f, 0xc0, 0x71, 0x9d, 0xcb, 0x88, 0x75, 0x51, 0x10, 0xe2, 0x5a, 0xa7, 0x92, 0xa9, 0xa9, 0xfc,
	0x64, 0x63, 0x75, 0xf6, 0x01, 0x6b, 0x1d, 0x1c, 0x13, 0xbf, 0x62, 0x2e, 0x64, 0x17, 0x4c, 0x68,
	0x29, 0x40, 0x17, 0xac, 0xcb, 0xe0, 0xb0, 0xe2, 0x91, 0x61, 0x9d, 0xd1, 0x62, 0x24, 0x95, 0x5d,
	0xb0, 0x05, 0xe0, 0x8c, 0xee, 0x58, 0xbc, 0x70, 0xfb, 0xe6, 0xeb, 0xf3, 0xb7, 0x67, 0xac, 0xab,
	0x5a, 0xcc, 0x79, 0xc0, 0x29, 0x3b, 0xdf, 0xca, 0xcc, 0xe6, 0x26, 0xac, 0xa7, 0xfc, 0xfe, 0x0e,
	0xb5, 0xe6, 0x82, 0x93, 0xbc, 0x5a, 0x8e, 0xf1, 0x68, 0x6b, 0x1b, 0x92, 0x60, 0xa6, 0x2e, 0x99,
	0xdb, 0xa0, 0x20, 0xf6, 0x01, 0xcb, 0x03, 0xa7, 0x94, 0xcf, 0xf9, 0x78, 0x5e, 0x2e, 0x68, 0x83,
	0x0f, 0x69, 0x6f, 0x1d, 0xd9, 0x02, 0xa7, 0x05, 0x6e, 0x10, 0xd9, 0xcf, 0xdb, 0x79, 0xc9, 0xc0,
	0x34, 0x19, 0x6c, 0x2a, 0x03, 0x2b, 0xda, 0x73, 0xf0, 0x88, 0x1f, 0x17, 0x06, 0x35, 0xe4, 0x96,
	0xc5, 0x8b, 0x86, 0x61, 0xe7, 0x10, 0x53, 0x47, 0xb2, 0x3d, 0x99, 0x64, 0xbf, 0xb3, 0x0f, 0x58,
	0x0f, 0x80, 0xa5, 0xc0, 0x7a, 0xbe, 0x6b, 0x9d, 0x2f, 0xc0, 0xe5, 0xf9, 0xae, 0x16, 0xd3, 0x3a,
	0x98, 0x34, 0x18, 0x3d, 0x13, 0xeb, 0x8a, 0x16, 0x9f, 0x02, 0xa5, 0xc5, 0x1a, 0x82, 0xb3, 0xd2,
	0x44, 0x53, 0xc3, 0x94, 0x5e, 0x33, 0x4e, 0x49, 0x05, 0xb2, 0xc7, 0xa1, 0xfc, 0x34, 0x98, 0x12,
	0x17, 0xe1, 0xbb, 0x70, 0x63, 0xd5, 0x6d, 0xa0, 0x03, 0xc9, 0xb6, 0x0f, 0x9f, 0x5a, 0x2f, 0x9b,
	0x16, 0xab, 0x0c, 0x37, 0x95, 0xdb, 0x4a, 0x31, 0xdb, 0xec, 0x03, 0x56, 0x0a, 0x2e, 0x19, 0xfd,
	0xd1, 0xee, 0xde, 0x7b, 0xe3, 0xce, 0xfc, 0xed, 0x85, 0x5b, 0xd6, 0xab, 0xdd, 0x24, 0x8d, 0x04,
	0x3e, 0x75, 0xde, 0xb8, 0xa4, 0x31, 0x9c, 0x7d, 0xc0, 0xfa, 0x14, 0x38, 0xa1, 0xba, 0x6d, 0x05,
	0xd1, 0x86, 0x1b, 0x58, 0x97, 0x0a, 0x44, 0x05, 0x01, 0xe9, 0x22, 0x30, 0xde, 0x93, 0xd9, 0xc5,
	0x42, 0xbc, 0xcc, 0xee, 0x60, 0xa9, 0x6e, 0x64, 0x97, 0x0c, 0x37, 0x25, 0x3c, 0xfc, 0xa7, 0x15,
	0x78, 0x51, 0x9d, 0xd1, 0xf4, 0x7d, 0xc1, 0xf3, 0x53, 0xec, 0xfb, 0x75, 0xb5, 0x0b, 0x93, 0x18,
	0xa0, 0x4e, 0x4e, 0x28, 0x20, 0xca, 0xa2, 0x82, 0x9e, 0x9f, 0x16, 0x2f, 0x2a, 0x01, 0x42, 0x3b,
	0x69, 0xdf, 0x92, 0x45, 0x3d, 0x9d, 0x1c, 0x66, 0x51, 0x4f, 0x01, 0x04, 0x5c, 0xb4, 0xc4, 0x3e,
	0x60, 0xbd, 0x23, 0x50, 0x46, 0x4c, 0xe0, 0x64, 0x89, 0xea, 0x29, 0x13, 0x20, 0xcc, 0x93, 0x70,
	0x43, 0x1e, 0x34, 0xe2, 0x85, 0xba, 0x42, 0xde, 0x06, 0x24, 0xe6, 0x41, 0x93, 0xe1, 0xba, 0x4c,
	0x8c, 0x9a, 0x30, 0xe5, 0x24, 0xf4, 0x97, 0x0a, 0x16, 0x2c, 0xc5, 0xdc, 0xa3, 0x64, 0x97, 0xa6,
	0x07, 0x49, 0xa4, 0xc9, 0x42, 0x89, 0x26, 0xe6, 0xe9, 0xa1, 0x00, 0x76, 0xe9, 0x86, 0x23, 0xec,
	0x1f, 0x58, 0xfc, 0x75, 0x82, 0xd4, 0x27, 0x03, 0x70, 0xd9, 0x2c, 0x23, 0x39, 0x90, 0x76, 0x76,
	0x7c, 0x8f, 0x80, 0xb3, 0x01, 0xd3, 0xb5, 0x76, 0xe0, 0xa7, 0x58, 0xd5, 0x36, 0xed, 0x49, 0x32,
	0xd0, 0xd4, 0x59, 0x75, 0xa7, 0x10, 0xd5, 0x75, 0xfb, 0x80, 0xf5, 0xdd, 0x82, 0xc8, 0xd4, 0x79,
	0xce, 0x5c, 0x33, 0xcc, 0x9c, 0x1c, 0xa4, 0x96, 0xfa, 0x45, 0x70, 0x54, 0xea, 0xec, 0x93, 0x28,
	0x85, 0xd6, 0x39, 0x23, 0x2f, 0x50, 0xb5, 0x16, 0x8f, 0x23, 0x73, 0x61, 0x35, 0x0a, 0x02, 0x07,
	0x26, 0x9d, 0x20, 0x2d, 0xe0, 0x82, 0x00, 0xa4, 0xc5, 0xb9, 0x22, 0xab, 0x6e, 0xf8, 0xc1, 0xf1,
	0x63, 0x67, 0xd9, 0xac, 0xba, 0x31, 0x08, 0x41, 0x02, 0xb1, 0x22, 0xfb, 0x80, 0xb5, 0x29, 0x6c,
	0xeb, 0x0d, 0x98, 0xe2, 0x03, 0xc9, 0xdb, 0x70, 0xe7, 0x29, 0x7e, 0xc9, 0xfb, 0x92, 0x09, 0xa7,
	0x04, 0x36, 0x75, 0x51, 0x3e, 0xcf, 0xb0, 0xf2, 0x2c, 0xe0, 0x85, 0x7d, 0xc0, 0xfa, 0x10, 0x5c,
	0x36, 0x22, 0x10, 0x22, 0x63, 0xdc, 0xe8, 0xa9, 0xc5, 0xec, 0x83, 0x9e, 0xda, 0xee, 0x00, 0xdb,
	0x88, 0x2a, 0x8b, 0x70, 0xf1, 0x5a, 0x4f, 0x4d, 0x73, 0xf8, 0xa9, 0x73, 0xea, 0x14, 0x95, 0x0e,
	0x73, 0xf9, 0x91, 0xc2, 0xd5, 0x85, 0x23, 0xc5, 0x20, 0x84, 0x91, 0x62, 0x45, 0x58, 0x4b, 0x90,
	0x24, 0x9a, 0x74, 0xc4, 0x2b, 0x90, 0x68, 0x32, 0xdc, 0xd4, 0xcb, 0x86, 0x85, 0xa5, 0x9c, 0x19,
	0xf1, 0x86, 0x7a, 0x4a, 0x10, 0x5d, 0xf8, 0xae, 0xf2, 0x71, 0x1c, 0xcc, 0x74, 0xd2, 0xa6, 0x61,
	0xf2, 0xca, 0x40, 0x53, 0xd9, 0x29, 0x97, 0x96, 0x90, 0x59, 0x6d, 0x1f, 0xb0, 0x9e, 0x08, 0x3a,
	0x31, 0x09, 0xdd, 0xc5, 0x10, 0xeb, 0x75, 0x62, 0x09, 0xa6, 0x00, 0xef, 0xa6, 0x20, 0x14, 0xe8,
	0x05, 0x92, 0xd7, 0x09, 0xb8, 0x40, 0x35, 0x08, 0x05, 0x0d, 0x64, 0x17, 0x81, 0xd9, 0x04, 0xe7,
	0xb4, 0x5f, 0x73, 0x55, 0xf0, 0x95, 0xae, 0x0d, 0xf5, 0x78, 0x9e, 0xfa, 0x0c, 0x38, 0x2f, 0x49,
	0x9a, 0x7c, 0x53, 0x1f, 0x33, 0x4a, 0xa5, 0x7c, 0x5b, 0x3a, 0x71, 0xe2, 0x81, 0x8b, 0xca, 0xb9,
	0x20, 0xdf, 0xc6, 0xc7, 0x0b, 0x4e, 0x11, 0xbd, 0xb5, 0xf2, 0x9e, 0xb0, 0x53, 0x52, 0x19, 0x87,
	0x84, 0xa6, 0x69, 0xa7, 0x14, 0x41, 0xa6, 0xce, 0xe4, 0x39, 0x84, 0x2b, 0x96, 0xfd, 0x24, 0xcd,
	0x1f, 0x39, 0x1d, 0xd8, 0x0e, 0x7c, 0x98, 0x98, 0xf5, 0x10, 0x0a, 0xd0, 0x85, 0xf1, 0x1f, 0xc8,
	0x43, 0x9c, 0x79, 0x30, 0xb3, 0x0d, 0xc6, 0x38, 0xc4, 0x39, 0xd0, 0xa9, 0xcb, 0xf9, 0x96, 0x72,
	0x40, 0xf6, 0x01, 0xeb, 0x91, 0xb4, 0xde, 0x5c, 0x4f, 0xf0, 0x9a, 0xbe, 0x6c, 0xd4, 0x27, 0x32,
	0xa0, 0x29, 0xf9, 0x4a, 0xd8, 0x3e, 0x60, 0x35, 0x04, 0xd1, 0xde, 0x09, 0xdb, 0x7e, 0x38, 0x13,
	0x04, 0x5d, 0x4e, 0x6c, 0x2a, 0x58, 0x6f, 0x6a, 0x8a, 0x5f, 0xa0, 0xf0, 0xf3, 0x07, 0x28, 0xbd,
	0x29, 0xfc, 0x0c, 0x7c, 0xea, 0x98, 0x2a, 0xa7, 0x96, 0xb0, 0xc2, 0x2c, 0xee, 0xa8, 0x8a, 0xd7,
	0xc9, 0xe5, 0x1e, 0xce, 0x5f, 0xda, 0xc9, 0xd9, 0x52, 0x8e, 0x5f, 0xea, 0x3d, 0xf9, 0xb5, 0x6e,
	0x16, 0x01, 0x06, 0xd9, 0x13, 0xb7, 0xa6, 0xff, 0xde, 0x61, 0x70, 0x54, 0x30, 0xc9, 0x10, 0xc3,
	0x98, 0xb5, 0x26, 0x4f, 0x63, 0x52, 0x5a, 0x30, 0x8d, 0x29, 0xc0, 0xd4, 0x69, 0xdd, 0xe4, 0xc2,
	0x55, 0xf6, 0x01, 0x6b, 0x41, 0x3a, 0xf8, 0xa6, 0xeb, 0x3b, 0x6d, 0x3f, 0x6c, 0x18, 0x0f, 0xbe,
	0xb4, 0x3e, 0x3f, 0x91, 0xee, 0x0b, 0xb4, 0x09, 0xd9, 0x57, 0x2f, 0x18, 0xf8, 0xc2, 0x00, 0xf2,
	0x88, 0xde, 0x13, 0x8e, 0xcf, 0x0d, 0xe2, 0x7f, 0xb7, 0x06, 0xd3, 0x14, 0x47, 0xee, 0xba, 0x62,
	0x94, 0x04, 0x02, 0x94, 0xa0, 0xef, 0x8b, 0xc5, 0xf6, 0x01, 0xeb, 0x93, 0x82, 0x8d, 0x88, 0x90,
	0x60, 0xb0, 0x11, 0x91, 0xca, 0x3c, 0x6d, 0x35, 0x45, 0x57, 0x83, 0x30, 0x66, 0x83, 0x70, 0xb9,
	0x88, 0x34, 0x36, 0x10, 0xe7, 0xf2, 0x03, 0x21, 0x54, 0xab, 0x83, 0xe1, 0x6e, 0xc3, 0xf9, 0xd8,
	0xdd, 0x4c, 0x4d, 0x83, 0xc1, 0xea, 0xf3, 0x74, 0x3e, 0x94, 0x45, 0xe9, 0x4c, 0x10, 0x60, 0xc0,
	0x02, 0x51, 0xca, 0x41, 0xb4, 0xb3, 0xff, 0x1d, 0x61, 0x4c, 0xc8, 0xa5, 0x20, 0xb5, 0x6b, 0xfb,
	0xa1, 0x61, 0x4c, 0x14, 0xa8, 0x3c, 0x89, 0xdf, 0x25, 0x08, 0xcf, 0x18, 0x46, 0xb1, 0x07, 0x63,
	0xa2, 0x73, 0x33, 0x86, 0xbe, 0x62, 0x18, 0x99, 0x3c, 0x68, 0x1e, 0x79, 0x5d, 0x56, 0x58, 0x65,
	0xc4, 0x46, 0x85, 0x55, 0x46, 0xda, 0x75, 0xac, 0xde, 0x17, 0xb4, 0x55, 0xb2, 0x97, 0xc6, 0x10,
	0x86, 0x49, 0x33, 0x4a, 0xb1, 0xa5, 0xca, 0xa7, 0xc9, 0x1c, 0x6e, 0x14, 0x6c, 0xbe, 0xba, 0x0f,
	0xb4, 0x03, 0xb0, 0x26, 0x74, 0xa8, 0xe5, 0xc6, 0x5b, 0x84, 0x0a, 0x72, 0x10, 0x35, 0x74, 0x48,
	0x05, 0xcb, 0x73, 0xa9, 0xa9, 0xee, 0x5f, 0x19, 0xf0, 0x8a, 0x1b, 0x6f, 0x25, 0x45, 0xfb, 0x97,
	0x02, 0x2a, 0xec, 0x94, 0xb9, 0xcb, 0x11, 0x65, 0xdb, 0xc2, 0x41, 0xc0, 0xb3, 0x19, 0xa9, 0x5f,
	0x37, 0x32, 0x90, 0x6e, 0x82, 0x4b, 0x92, 0xf0, 0x51, 0x18, 0xf8, 0x61, 0xd1, 0x86, 0x4e, 0x01,
	0xa6, 0x8e, 0x4b, 0x49, 0xaa, 0x68, 0x29, 0x16, 0x3a, 0x67, 0xa5, 0x97, 0x51, 0xa2, 0xe0, 0x98,
	0x75, 0x63, 0x83, 0x78, 0xd7, 0x40, 0xe6, 0x49, 0xdd, 0x90, 0xe7, 0xa2, 0x78, 0xc7, 0x51, 0x30,
	0x17, 0x25, 0xb0, 0xfc, 0x49, 0x57, 0xac, 0xb6, 0x0f, 0x58, 0x9f, 0x93, 0x0f, 0x2f, 0xfc, 0xee,
	0x44, 0x6e, 0xcc, 0x78, 0x78, 0xd1, 0xc3, 0xe7, 0x2d, 0xb1, 0xda, 0xfb, 0x19, 0xfb, 0x80, 0xf5,
	0xae, 0x60, 0x82, 0x20, 0xc7, 0x67, 0xe9, 0xf2, 0xe8, 0x6a, 0xc1, 0x39, 0x5b, 0x04, 0xd4, 0xad,
	0xe3, 0x4b, 0x05, 0xf0, 0xc9, 0x23, 0x24, 0x0a, 0x0c, 0x4a, 0x83, 0x09, 0x3c, 0xdf, 0x88, 0x38,
	0x39, 0x95, 0x57, 0x71, 0x97, 0x8d, 0xc3, 0xee, 0x98, 0x77, 0xb0, 0xe9, 0xff, 0xb7, 0x02, 0x46,
	0x9c, 0xd5, 0xb9, 0xd9, 0x28, 0x4d, 0xac, 0x77, 0xc0, 0x49, 0x43, 0x2e, 0x10, 0xe9, 0x18, 0xa3,
	0x87, 0x99, 0xca, 0x07, 0x02, 0x25, 0xdc, 0x2e, 0x4a, 0xdb, 0x71, 0x35, 0x87, 0x57, 0x0f, 0xa8,
	0xdd, 0xc2, 0x75, 0x09, 0x37, 0x2e, 0x68, 0x08, 0x15, 0x01, 0xf2, 0x0c, 0xf8, 0xf2, 0x20, 0x18,
	0x77, 0x56, 0xe7, 0x78, 0x2e, 0xb0, 0x0d, 0x70, 0xda, 0x1c, 0x03, 0x5f, 0x5a, 0x02, 0x46, 0x30,
	0x61, 0x09, 0x64, 0x17, 0x98, 0xbc, 0x16, 0x4b, 0xe3, 0x73, 0xc5, 0x01, 0xe1, 0x5f, 0xd1, 0xb6,
	0xa3, 0x03, 0xed, 0xda, 0x56, 0x00, 0xce, 0x77, 0x89, 0xf5, 0xfe, 0x31, 0x7d, 0xa7, 0x74, 0xb0,
	0x5d, 0x5b, 0xfb, 0x0c, 0x98, 0x34, 0xc6, 0x6a, 0xbf, 0xa2, 0x6d, 0x47, 0x81, 0xea, 0xda, 0xc2,
	0x26, 0x38, 0x53, 0x14, 0x41, 0xfd, 0xaa, 0xb6, 0x91, 0x3c, 0x60, 0xb7, 0x76, 0xa6, 0xff, 0xf5,
	0x00, 0x18, 0x73, 0x56, 0xe7, 0xde, 0xc5, 0x4f, 0x80, 0xad, 0x79, 0x70, 0x48, 0x89, 0x33, 0x37,
	0x25, 0x36, 0x24, 0xd7, 0x09, 0x92, 0x9b, 0x56, 0xa0, 0x52, 0x6c, 0x40, 0x39, 0x9a, 0x8f, 0x2e,
	0x77, 0x4e, 0x8f, 0x88, 0x56, 0x4f, 0x9d, 0xd2, 0x07, 0x8d, 0x4b, 0xb0, 0xcd, 0xf0, 0xa4, 0xe1,
	0x31, 0xb4, 0xad, 0xc1, 0xa9, 0xc0, 0x08, 0x0c, 0xa0, 0x00, 0xa4, 0x32, 0x69, 0x47, 0x61, 0x02,
	0x89, 0xfe, 0x68, 0x7a, 0xff, 0x7c, 0x59, 0x4f, 0xb2, 0x04, 0x24, 0xe8, 0x24, 0x14, 0x42, 0xaa,
	0xb6, 0x0f, 0x4c, 0xff, 0xec, 0x18, 0x38, 0x21, 0x9c, 0x1b, 0x48, 0x1d, 0xda, 0xea, 0xd4, 0xdb,
	0xdc, 0xf9, 0x26, 0x0d, 0x31, 0x6f, 0x34, 0x34, 0x31, 0x08, 0xdd, 0x21, 0x98, 0xd5, 0x61, 0x23,
	0xee, 0x94, 0x6a, 0xdc, 0x59, 0x08, 0xeb, 0xf1, 0x0e, 0xce, 0x4e, 0x62, 0xb0, 0x38, 0xe5, 0xe0,
	0x04, 0x7b, 0x0d, 0x2d, 0x84, 0x1e, 0xa2, 0x1a, 0x0f, 0xc8, 0x69, 0xc5, 0xc6, 0x23, 0xa0, 0x7f,
	0xa9, 0xc0, 0x14, 0xd4, 0x13, 0xf6, 0xc7, 0x02, 0xf5, 0x34, 0xcc, 0x77, 0x57, 0xea, 0x73, 0x70,
	0x79, 0x49, 0x2a, 0x6e, 0x88, 0x09, 0x4c, 0x79, 0xab, 0xf4, 0x70, 0x75, 0xd5, 0x74, 0xb8, 0x52,
	0x00, 0xbb, 0x69, 0xcd, 0xae, 0xc7, 0x3f, 0x60, 0xe6, 0xab, 0x57, 0x8c, 0xe7, 0x50, 0x15, 0x34,
	0x8f, 0x7c, 0x53, 0x30, 0xb9, 0xa1, 0x99, 0xcd, 0xbf, 0x30, 0x98, 0xdc, 0x24, 0x18, 0xc1, 0x68,
	0x28, 0x78, 0x98, 0x84, 0x59, 0x97, 0x32, 0x23, 0x86, 0x68, 0xa4, 0x94, 0x70, 0x2c, 0xfa, 0x01,
	0x34, 0x30, 0x3d, 0x07, 0xb7, 0x8b, 0xf6, 0x52, 0x81, 0x69, 0x12, 0x1e, 0xf6, 0x70, 0xf2, 0x95,
	0xee, 0x4d, 0x52, 0xd0, 0x5d, 0xb4, 0xba, 0x2e, 0x70, 0x93, 0x5d, 0x72, 0xbf, 0xd3, 0x81, 0x1d,
	0x68, 0xe0, 0xa6, 0x04, 0x23, 0x88, 0x3b, 0xc1, 0x47, 0x4a, 0x51, 0x54, 0xc9, 0x29, 0x35, 0x23,
	0x11, 0x69, 0x2c, 0xd7, 0x0a, 0xce, 0xb3, 0x12, 0xa4, 0x4e, 0x51, 0x3d, 0xab, 0x5c, 0x9f, 0xc9,
	0x03, 0x73, 0xad, 0xe0, 0xa2, 0x4d, 0x1e, 0x1a, 0xcd, 0x7a, 0x43, 0xe5, 0xf6, 0x81, 0xe9, 0x3f,
	0xbc, 0x84, 0x35, 0x03, 0x9e, 0x68, 0x6d, 0x09, 0x1c, 0x97, 0x9e, 0x31, 0xb1, 0x69, 0x2c, 0x49,
	0x25, 0x1d, 0x44, 0x9e, 0x7c, 0x0f, 0x9c, 0x52, 0x12, 0x65, 0xea, 0x3d, 0x1c, 0x0c, 0x40, 0x3d,
	0x5e, 0x8b, 0xfb, 0x60, 0x4a, 0x41, 0xf0, 0x38, 0x81, 0x31, 0x23, 0xfb, 0xe5, 0x82, 0x86, 0x04,
	0xb8, 0xde, 0x2c, 0x66, 0xf7, 0xc1, 0x31, 0xa1, 0xe7, 0x7a, 0x8b, 0x8a, 0x06, 0x20, 0xcf, 0x99,
	0x27, 0x02, 0x93, 0x8d, 0x8e, 0x3c, 0x3a, 0x88, 0x2e, 0xf6, 0x4f, 0x1f, 0x4c, 0x8a, 0x5f, 0xad,
	0xba, 0x71, 0xea, 0xd7, 0xfd, 0xb6, 0x1b, 0xa6, 0x8a, 0xa5, 0xc6, 0x04, 0x25, 0x9c, 0x30, 0x38,
	0x08, 0x9d, 0x1a, 0x22, 0x18, 0x16, 0x4d, 0xa7, 0x0c, 0x48, 0x0c, 0x83, 0x2b, 0x03, 0x4d, 0x5d,
	0xe9, 0xa5, 0x21, 0x7c, 0xce, 0x96, 0x58, 0xc5, 0xe7, 0xa9, 0x91, 0x55, 0x0c, 0x42, 0xd0, 0x29,
	0x38, 0xab, 0xd0, 0x1e, 0x43, 0x74, 0x0a, 0x89, 0xf8, 0xc5, 0x4e, 0x10, 0xb0, 0x64, 0xe7, 0x46,
	0xe2, 0x05, 0x20, 0xdd, 0x28, 0x20, 0xd4, 0x08, 0xc4, 0x3e, 0x60, 0xad, 0x82, 0x93, 0xd9, 0xcb,
	0x2b, 0xac, 0x35, 0x33, 0xe4, 0xb6, 0x16, 0xb9, 0x04, 0x63, 0x72, 0x85, 0x91, 0xc3, 0x48, 0x78,
	0x2d, 0x3f, 0x94, 0x8d, 0x50, 0xf9, 0xfa, 0x9e, 0x30, 0xad, 0xe3, 0x20, 0x94, 0x66, 0x4c, 0xb8,
	0xbe, 0x27, 0x4c, 0x38, 0x1a, 0x4f, 0x01, 0x26, 0x5c, 0x6f, 0xb8, 0x1b, 0x15, 0xf8, 0xd5, 0x84,
	0xf5, 0x2d, 0xfe, 0x52, 0xc4, 0xc0, 0x2f, 0x11, 0x46, 0x7b, 0x7a, 0x54, 0xc2, 0x33, 0x70, 0x7c,
	0xfa, 0xc1, 0x95, 0x81, 0xf2, 0x08, 0x97, 0x85, 0x29, 0xf8, 0x7e, 0xe4, 0x87, 0x6c, 0x34, 0xf5,
	0x53, 0x50, 0x80, 0xd0, 0xf6, 0xf6, 0x21, 0x38, 0xc1, 0x61, 0x03, 0xe8, 0xf2, 0x1c, 0x97, 0xb2,
	0x25, 0x50, 0x0b, 0x62, 0x72, 0x6e, 0xe2, 0xc0, 0x3e, 0x8e, 0x86, 0xb0, 0x1e, 0x31, 0x94, 0xfa,
	0x35, 0xaf, 0x40, 0x69, 0xb1, 0x8a, 0x73, 0x98, 0x06, 0xc7, 0x29, 0x9c, 0xc3, 0x12, 0x8c, 0xe1,
	0xca, 0x6a, 0xaa, 0x20, 0xad, 0xbf, 0x5e, 0x4e, 0xe7, 0xe0, 0x04, 0x7d, 0x7e, 0x01, 0xd7, 0xf1,
	0xad, 0x00, 0xd5, 0x62, 0xc9, 0x7a, 0xda, 0x9c, 0x24, 0xff, 0x25, 0x6d, 0x23, 0x2a, 0x98, 0xe1,
	0xb6, 0xe1, 0x52, 0xf7, 0x3c, 0xf6, 0xaf, 0x9a, 0x64, 0x87, 0x16, 0xbc, 0x48, 0x40, 0xbd, 0x25,
	0xec, 0x34, 0x42, 0x46, 0xfa, 0x0b, 0xc6, 0xd5, 0x45, 0x00, 0xb4, 0xa4, 0x7f, 0x5a, 0x96, 0xa0,
	0x3c, 0xbf, 0xfa, 0xc5, 0x42, 0x6a, 0x97, 0xa3, 0x86, 0xb0, 0x29, 0xf2, 0x6a, 0x56, 0x47, 0x7d,
	0x1d, 0xec, 0x03, 0x92, 0xc2, 0x20, 0xa6, 0x1b, 0xd7, 0xa3, 0x17, 0x20, 0x74, 0x17, 0x0d, 0x67,
	0x0b, 0x13, 0x7f, 0x5f, 0x33, 0xea, 0x20, 0xaa, 0x47, 0x5d, 0x0e, 0xf5, 0x4a, 0x6e, 0x3e, 0x6b,
	0x1d, 0x3a, 0xf5, 0x30, 0x3a, 0xcd, 0xec, 0x42, 0xb7, 0x1c, 0xdb, 0xd7, 0x0b, 0x26, 0x9b, 0x0a,
	0xac, 0x1d, 0xb7, 0xef, 0x92, 0x37, 0x73, 0x29, 0x1b, 0xb6, 0x71, 0x33, 0x17, 0xa1, 0x8a, 0x26,
	0x98, 0x2f, 0x74, 0xc0, 0x90, 0xf9, 0xfa, 0xba, 0xa9, 0x0d, 0x0d, 0x70, 0x51, 0x53, 0xef, 0x82,
	0x33, 0x45, 0x39, 0xb0, 0xaf, 0x9a, 0xe6, 0x89, 0x02, 0x58, 0x2c, 0x97, 0xc5, 0xec, 0xd4, 0x17,
	0x8d, 0xab, 0x84, 0x42, 0x68, 0xd9, 0xfd, 0xb6, 0x20, 0x97, 0xa5, 0xdc, 0xcf, 0x97, 0x8c, 0xe8,
	0x18, 0x48, 0x9e, 0x34, 0x47, 0xd8, 0x83, 0x94, 0x8c, 0xcb, 0x97, 0x8b, 0x84, 0x10, 0x05, 0xd2,
	0x12, 0xb8, 0x25, 0xac, 0x0e, 0x5d, 0x8a, 0xe4, 0x6b, 0xa6, 0xf1, 0x52, 0x21, 0xa7, 0x34, 0x4f,
	0x0f, 0x04, 0x98, 0x94, 0xdc, 0xa4, 0x5f, 0xee, 0x25, 0x30, 0xd8, 0x0d, 0x53, 0x9b, 0x86, 0x0f,
	0x8a, 0xe6, 0xc9, 0x82, 0xaa, 0xe4, 0xe0, 0x58, 0x59, 0x05, 0x4a, 0x0e, 0xaa, 0xd7, 0x09, 0x91,
	0x13, 0xfa, 0xb8, 0x56, 0x97, 0x0a, 0xb6, 0x18, 0x02, 0x22, 0x38, 0x2d, 0xb0, 0xdd, 0x05, 0x11,
	0x47, 0x2a, 0x95, 0x4d, 0x51, 0x0e, 0x55, 0x65, 0x17, 0x0c, 0x2a, 0x85, 0xd1, 0x8e, 0xe9, 0x77,
	0x0b, 0x63, 0xda, 0xd5, 0x21, 0xae, 0x08, 0xd2, 0xe0, 0xc8, 0x76, 0x24, 0x17, 0xaa, 0xe7, 0xac,
	0x51, 0xbf, 0x85, 0xd0, 0xd3, 0x39, 0xec, 0xa2, 0x72, 0xf9, 0xad, 0x80, 0x2e, 0x8c, 0xcc, 0x05,
	0xc3, 0x2a, 0x66, 0x00, 0x5d, 0x7d, 0x32, 0x4f, 0x99, 0xe2, 0xb2, 0x5c, 0x2e, 0x22, 0x98, 0x02,
	0x09, 0x66, 0x38, 0x0e, 0x21, 0x54, 0x63, 0x03, 0xf1, 0x95, 0x9e, 0xa2, 0xaa, 0xdc, 0x34, 0x68,
	0x9c, 0xc6, 0x2f, 0xb4, 0x8c, 0x6f, 0x02, 0xbb, 0x87, 0xb0, 0x27, 0xaf, 0x99, 0x24, 0x9f, 0x1e,
	0xde, 0xe4, 0xf3, 0x98, 0x8f, 0x3a, 0x72, 0xce, 0xb8, 0x4f, 0xe2, 0xa1, 0xd0, 0xe1, 0xf1, 0x8b,
	0xf9, 0xc3, 0xa3, 0x45, 0xf4, 0xcc, 0x1f, 0xf6, 0x45, 0x7e, 0x81, 0xc2, 0x22, 0xe6, 0xf0, 0x58,
	0x0e, 0x3d, 0x32, 0x87, 0xc1, 0xe7, 0xaf, 0x3c, 0xfe, 0xa4, 0x8a, 0x4d, 0xdb, 0xf8, 0xd8, 0x91,
	0x58, 0x5b, 0xe0, 0x92, 0x31, 0x4a, 0xe9, 0xbd, 0xe9, 0xf9, 0x3b, 0xf7, 0xee, 0x4c, 0xcf, 0xc9,
	0xfa, 0x5b, 0x57, 0x70, 0xc1, 0xab, 0x81, 0xc2, 0xe2, 0x6a, 0xbc, 0x73, 0x9f, 0xe6, 0x5f, 0x07,
	0x91, 0xeb, 0x89, 0x5f, 0xcb, 0x4a, 0xa8, 0x11, 0xcc, 0x8c, 0xfc, 0x21, 0x38, 0x46, 0x4b, 0x88,
	0x8e, 0x42, 0x3b, 0x78, 0x41, 0x83, 0x56, 0x04, 0x30, 0xda, 0xaf, 0x1c, 0x70, 0x9c, 0x82, 0xd3,
	0x64, 0x29, 0x14, 0xe1, 0x45, 0x0d, 0x42, 0x09, 0x42, 0x30, 0x2a, 0x89, 0x24, 0xa2, 0xd9, 0x14,
	0x15, 0x70, 0x9b, 0xc7, 0x84, 0xed, 0x8d, 0xdb, 0x0c, 0x5c, 0x70, 0x99, 0xc1, 0x24, 0x08, 0x20,
	0xf6, 0x81, 0xe9, 0x7f, 0x3c, 0x84, 0xad, 0x58, 0x34, 0xa9, 0x76, 0x82, 0xe4, 0x89, 0x29, 0x49,
	0xbc, 0x24, 0x4f, 0x0c, 0x40, 0x82, 0x3c, 0xe1, 0x10, 0x42, 0x35, 0x5e, 0xe1, 0x53, 0x05, 0x69,
	0xe1, 0x5f, 0xee, 0xd2, 0x06, 0x85, 0x13, 0xdc, 0x60, 0xd5, 0x66, 0x28, 0x84, 0x7d, 0xc0, 0x7a,
	0x06, 0xce, 0x77, 0xc9, 0x06, 0xff, 0x31, 0x6d, 0x6b, 0x5a, 0xd8, 0xa9, 0x6b, 0xf9, 0x16, 0x9f,
	0x50, 0x40, 0x4f, 0x82, 0xc4, 0x77, 0xbd, 0x93, 0xc6, 0x4c, 0xee, 0x57, 0xb4, 0x6d, 0x2a, 0x50,
	0x82, 0xa2, 0x91, 0xef, 0x1f, 0xf5, 0xfe, 0x7c, 0x0f, 0x9c, 0xd0, 0x27, 0x39, 0xbf, 0x64, 0xe2,
	0x21, 0x07, 0x11, 0xb6, 0x6b, 0x5e, 0xcf, 0x2b, 0x89, 0x21, 0xc0, 0x94, 0xe8, 0x5c, 0x3f, 0x09,
	0x64, 0x20, 0x9d, 0xd6, 0x3f, 0x69, 0xcc, 0x55, 0x7e, 0xc5, 0x44, 0xae, 0x08, 0x25, 0xec, 0xaf,
	0x1c, 0x44, 0xac, 0xb7, 0x0f, 0x4c, 0xff, 0x5f, 0x07, 0xc1, 0xa8, 0xb3, 0x3a, 0x47, 0xe2, 0xe9,
	0xcf, 0x80, 0x83, 0x72, 0x1e, 0xa3, 0xd3, 0xd2, 0xcd, 0xaf, 0x58, 0x25, 0xb8, 0xde, 0x91, 0x72,
	0x54, 0x68, 0x1f, 0xb0, 0xbe, 0x15, 0x4c, 0x48, 0x39, 0x89, 0x26, 0xf3, 0x18, 0x48, 0x8d, 0x76,
	0x5b, 0x78, 0x03, 0x00, 0x21, 0x7f, 0xd0, 0xc9, 0xfc, 0xb7, 0xa8, 0xdc, 0xb4, 0x31, 0xe5, 0x13,
	0xfe, 0x9c, 0xcb, 0x23, 0x10, 0xaa, 0xb5, 0x78, 0x38, 0xfd, 0x34, 0x55, 0x8f, 0x86, 0x7e, 0x52,
	0xa3, 0xfd, 0x7a, 0x19, 0x1c, 0xc9, 0x65, 0xc4, 0x39, 0xab, 0xe5, 0x21, 0xad, 0x9d, 0x9a, 0xd4,
	0xb0, 0x71, 0x9e, 0xf7, 0xe9, 0xa0, 0x9c, 0xb7, 0x46, 0x3f, 0x1c, 0xa8, 0xaa, 0x10, 0xcf, 0x32,
	0x38, 0xae, 0xcd, 0x2d, 0x73, 0x31, 0x8f, 0x4e, 0x86, 0x30, 0xf4, 0xf1, 0xb8, 0x36, 0x51, 0x8c,
	0x06, 0x9b, 0x0c, 0xa1, 0xc5, 0xb6, 0x00, 0x2c, 0x4d, 0x22, 0x98, 0xf3, 0x79, 0x5c, 0x62, 0xbd,
	0xf6, 0x00, 0x64, 0x4a, 0xe7, 0x72, 0x39, 0x8f, 0x2b, 0x07, 0xa4, 0x25, 0xed, 0x53, 0x60, 0xaa,
	0x20, 0x39, 0xcb, 0xcb, 0xdd, 0xba, 0x5b, 0x80, 0x79, 0x95, 0x75, 0x5a, 0x4a, 0xb7, 0x72, 0x5e,
	0x3b, 0xba, 0xbc, 0x3e, 0x37, 0xc4, 0xbc, 0xc6, 0x3e, 0x60, 0x7d, 0x07, 0x38, 0xa4, 0x24, 0x5b,
	0x99, 0xd2, 0xcf, 0x7d, 0x54, 0xa7, 0xa5, 0x69, 0x9e, 0x4d, 0x5d, 0x21, 0x89, 0xc7, 0x59, 0x53,
	0x1f, 0x8d, 0x58, 0xe6, 0x18, 0x1d, 0x3c, 0x47, 0xc7, 0x94, 0xb6, 0x57, 0xb8, 0x4e, 0x90, 0x21,
	0x2b, 0x7e, 0x3d, 0x8e, 0x66, 0xa9, 0x5f, 0xdd, 0x1a, 0x9b, 0x61, 0x4a, 0x0e, 0x8e, 0x8b, 0x5a,
	0x54, 0x02, 0x84, 0x70, 0xdc, 0x23, 0xd5, 0x2c, 0x59, 0x03, 0xa6, 0xec, 0x68, 0x3e, 0xcd, 0xc6,
	0x39, 0xdd, 0xea, 0x2e, 0xb8, 0x62, 0xba, 0x2f, 0xac, 0x6f, 0x86, 0x43, 0xbf, 0xbe, 0x19, 0x0a,
	0x43, 0x17, 0x57, 0x18, 0x35, 0x62, 0x46, 0x89, 0x73, 0x45, 0xfd, 0x4b, 0x8a, 0x3a, 0xf7, 0x40,
	0x60, 0x3b, 0xc9, 0xf9, 0xa0, 0x67, 0x3b, 0xae, 0x2b, 0x94, 0x15, 0x6f, 0x09, 0x3d, 0x64, 0x49,
	0x19, 0xf4, 0x3d, 0xa4, 0xb5, 0x82, 0x5a, 0x46, 0xb1, 0x91, 0x72, 0xcc, 0xad, 0xc3, 0x6a, 0x9a,
	0x85, 0x33, 0x5a, 0x54, 0xa4, 0x72, 0x4a, 0xcd, 0x30, 0x41, 0x8a, 0x31, 0xb7, 0x2c, 0x4d, 0x96,
	0x04, 0xfd, 0x7a, 0xe1, 0xf5, 0x46, 0x74, 0xd3, 0xff, 0xcb, 0x61, 0x72, 0x07, 0x49, 0x43, 0x09,
	0x5b, 0x6b, 0xe0, 0x24, 0x0f, 0x2b, 0x8c, 0x19, 0x8e, 0xff, 0x5f, 0x9a, 0x57, 0xcf, 0xd9, 0x5a,
	0x18, 0x93, 0x0f, 0xfa, 0x7b, 0xe0, 0xb8, 0xf8, 0x01, 0x89, 0xc9, 0x91, 0xbb, 0x73, 0xd3, 0x40,
	0xe4, 0x9f, 0x0c, 0x49, 0x61, 0x3d, 0xe8, 0x75, 0x5e, 0x9e, 0x96, 0x02, 0xd4, 0x0c, 0x42, 0x38,
	0x15, 0xf3, 0x6a, 0x56, 0x47, 0x2f, 0x50, 0x95, 0xf0, 0xca, 0x0c, 0xf5, 0x65, 0x2d, 0x6a, 0x19,
	0x48, 0xb8, 0x40, 0xe5, 0x10, 0x4b, 0x2d, 0x6a, 0xd7, 0xc8, 0x5a, 0xf9, 0x0c, 0x38, 0x6f, 0x88,
	0x83, 0xff, 0xe6, 0xeb, 0x33, 0x37, 0x17, 0x6e, 0xde, 0x94, 0x15, 0xcc, 0x62, 0x58, 0xad, 0x10,
	0x7a, 0x24, 0xf4, 0x83, 0xca, 0xab, 0x1d, 0x1c, 0xad, 0xd8, 0xd4, 0x0f, 0x19, 0x28, 0xbf, 0xec,
	0xbf, 0x0d, 0x1c, 0xe2, 0xb0, 0x1b, 0x41, 0x54, 0xdf, 0x92, 0x97, 0x97, 0x5c, 0x97, 0xff, 0x7c,
	0x06, 0x1c, 0xe1, 0x20, 0x9d, 0x90, 0x20, 0x38, 0xab, 0x45, 0x40, 0x6b, 0xf3, 0x28, 0xd6, 0xc0,
	0x31, 0x71, 0x40, 0x67, 0x11, 0x54, 0xce, 0x0c, 0x92, 0x07, 0x10, 0x4e, 0x31, 0xbc, 0x96, 0x56,
	0x61, 0x53, 0xfa, 0x61, 0x5e, 0xaa, 0x8b, 0x98, 0xa0, 0x54, 0x0a, 0x02, 0x88, 0xd7, 0x2c, 0x46,
	0x9d, 0xd0, 0x23, 0xaa, 0x2a, 0x2f, 0x8b, 0x61, 0x12, 0x05, 0xdb, 0xd9, 0x2d, 0xd8, 0x15, 0x2d,
	0x4e, 0x05, 0x4a, 0x50, 0x55, 0x39, 0x88, 0x43, 0x40, 0x3c, 0xea, 0x43, 0xac, 0x4c, 0xfb, 0xf5,
	0xa8, 0x8d, 0xf3, 0x1e, 0x9b, 0xa7, 0x3d, 0x83, 0xd0, 0x4d, 0x7b, 0x56, 0x47, 0x0d, 0xc6, 0x02,
	0x55, 0xfc, 0x3b, 0x9a, 0xde, 0xfe, 0xaa, 0x89, 0x7c, 0x05, 0x50, 0xeb, 0x4e, 0x29, 0xc3, 0x63,
	0x5d, 0xdf, 0x30, 0x68, 0x19, 0x80, 0x4e, 0xbb, 0x39, 0x2a, 0x49, 0x0a, 0x8c, 0xe6, 0x9c, 0x51,
	0x90, 0x60, 0x24, 0x39, 0x8f, 0x61, 0x31, 0xae, 0x8f, 0xb2, 0x48, 0x88, 0xe1, 0x90, 0x33, 0x54,
	0xbf, 0x48, 0x64, 0xa0, 0x3c, 0x91, 0x6f, 0x09, 0xbd, 0x75, 0x3d, 0x1e, 0x67, 0x48, 0xdf, 0xdb,
	0x0c, 0xc0, 0x78, 0x1d, 0xc8, 0x41, 0xb1, 0x33, 0x17, 0x43, 0xa7, 0x97, 0xc8, 0x12, 0x8c, 0xe9,
	0x21, 0xba, 0xc8, 0x23, 0x6c, 0x4a, 0x2f, 0x5a, 0x40, 0x14, 0x40, 0x8b, 0xeb, 0x09, 0x38, 0x2d,
	0x2f, 0xf9, 0xc5, 0x38, 0x6a, 0xb1, 0x27, 0x65, 0x2f, 0x99, 0x25, 0x83, 0x00, 0x66, 0xc0, 0x7b,
	0xd2, 0x90, 0x9d, 0xc4, 0xee, 0x2e, 0x11, 0x85, 0x7d, 0x98, 0x03, 0xd0, 0x4b, 0xca, 0x1a, 0xb8,
	0xd0, 0x2d, 0xf3, 0xc8, 0xf5, 0x1e, 0x44, 0x2e, 0x03, 0xd6, 0xdd, 0x76, 0x1d, 0xd3, 0xc5, 0xfa,
	0xd7, 0x33, 0x37, 0x03, 0x30, 0x6d, 0x9d, 0xe2, 0xba, 0x11, 0xc2, 0xfc, 0x5f, 0x28, 0xda, 0x83,
	0x10, 0x3a, 0x39, 0xd2, 0x96, 0x7d, 0x60, 0xfa, 0x1b, 0x55, 0x7c, 0xb8, 0x25, 0x71, 0xd5, 0xe6,
	0xc1, 0x21, 0x1e, 0x1a, 0x8d, 0x94, 0x48, 0x42, 0x5c, 0xae, 0xcb, 0x9b, 0xaf, 0xe8, 0xf9, 0xf6,
	0x3e, 0x38, 0xca, 0x21, 0x17, 0x3b, 0x41, 0x80, 0x8f, 0xc9, 0xe7, 0xb4, 0x88, 0x58, 0xb5, 0xe0,
	0xc4, 0x8d, 0x7e, 0x52, 0xaf, 0x8d, 0xc7, 0x60, 0x8a, 0x40, 0xa2, 0x65, 0x9f, 0x45, 0x24, 0x5b,
	0x88, 0xe3, 0x48, 0x7d, 0xa8, 0x6b, 0x86, 0xd3, 0x5d, 0x47, 0x9c, 0x32, 0xc5, 0xb1, 0xbb, 0xac,
	0xa5, 0x52, 0x06, 0x9a, 0x32, 0x85, 0x0a, 0x22, 0x32, 0xde, 0x18, 0xb4, 0xee, 0x4a, 0x0f, 0xb8,
	0x13, 0x41, 0xc6, 0x6b, 0xc3, 0x16, 0xd9, 0x07, 0xac, 0x7b, 0x60, 0x5c, 0x8c, 0x5f, 0x77, 0x4a,
	0x8b, 0x76, 0x05, 0xe6, 0x87, 0xfa, 0x17, 0x06, 0x00, 0x40, 0x43, 0x4d, 0x16, 0x13, 0x52, 0x63,
	0x89, 0x6d, 0x8f, 0xab, 0x56, 0x50, 0xde, 0x72, 0xd5, 0x5a, 0x61, 0xf9, 0xb0, 0x2a, 0x5c, 0x4e,
	0x4c, 0x46, 0x02, 0xb4, 0xf0, 0x0c, 0xfd, 0x92, 0x01, 0xa1, 0xf0, 0xf0, 0xfc, 0x4c, 0x0e, 0xab,
	0xf4, 0xe6, 0x3c, 0x04, 0x67, 0x85, 0xef, 0xe8, 0x85, 0x99, 0xd0, 0xc2, 0x35, 0x43, 0x0b, 0x39,
	0x48, 0x41, 0xf7, 0x62, 0x60, 0x39, 0x18, 0xfb, 0xc0, 0xf4, 0xdf, 0x1b, 0xc2, 0x0b, 0x82, 0xa4,
	0x6e, 0x78, 0x1b, 0x5b, 0x76, 0x43, 0x88, 0x11, 0xba, 0x41, 0x40, 0xfd, 0x81, 0x55, 0xcb, 0xae,
	0x0a, 0xa0, 0x7f, 0x93, 0xf0, 0x10, 0x1c, 0x25, 0xb0, 0xd4, 0xb5, 0x17, 0xc1, 0xcb, 0xeb, 0x22,
	0x57, 0x2d, 0x9c, 0x43, 0x48, 0x1d, 0x26, 0x0b, 0xd5, 0x10, 0x4b, 0x0a, 0x29, 0xa4, 0xa2, 0x1d,
	0xa1, 0x3b, 0x9b, 0x47, 0x97, 0xd5, 0x16, 0x62, 0xe3, 0xd4, 0xd5, 0x51, 0x17, 0xe2, 0x96, 0x89,
	0x3a, 0xa1, 0xba, 0x10, 0xdf, 0x02, 0xb0, 0x58, 0x77, 0x88, 0xcf, 0x26, 0x46, 0x78, 0x5e, 0xd7,
	0xdd, 0xac, 0x3e, 0xbf, 0x58, 0x17, 0x19, 0x59, 0xd4, 0xa3, 0xd8, 0x44, 0x96, 0x50, 0x6d, 0xda,
	0xdc, 0x08, 0x60, 0x42, 0x06, 0x8a, 0x6a, 0x2e, 0x9a, 0x91, 0x94, 0x00, 0xb4, 0xb8, 0xee, 0x73,
	0x5c, 0xee, 0x36, 0xee, 0xee, 0x3c, 0xdc, 0xe8, 0xe8, 0x71, 0x89, 0x00, 0x5a, 0xbf, 0x28, 0xd6,
	0x66, 0xe8, 0x61, 0x77, 0x97, 0xc0, 0x0f, 0x1b, 0xd8, 0x78, 0x79, 0x59, 0x47, 0x98, 0x02, 0x94,
	0xbf, 0x61, 0xf9, 0xbb, 0x07, 0xf1, 0xab, 0x1a, 0x1c, 0x02, 0x60, 0x1e, 0x1c, 0xe4, 0x39, 0x59,
	0x70, 0x64, 0x54, 0xc9, 0x34, 0x26, 0x55, 0x09, 0x2b, 0x1b, 0x97, 0xaf, 0xc1, 0x30, 0x45, 0xe5,
	0x78, 0x18, 0xc7, 0x09, 0xa8, 0xdf, 0x08, 0x1f, 0xb7, 0x65, 0x69, 0x23, 0x54, 0x08, 0xab, 0x18,
	0x97, 0x22, 0x0a, 0xa2, 0xd8, 0xff, 0x10, 0x5f, 0xc6, 0x2b, 0x68, 0x96, 0x42, 0x03, 0x9a, 0xa5,
	0xb0, 0x1b, 0x9a, 0x7b, 0x14, 0x4d, 0x10, 0x35, 0x1e, 0x75, 0x52, 0x0d, 0x1a, 0x52, 0x91, 0xe7,
	0xf4, 0x3b, 0x60, 0x12, 0xd7, 0x63, 0x15, 0x52, 0xc2, 0xaa, 0x08, 0x66, 0x13, 0x94, 0xee, 0x55,
	0x38, 0x41, 0x49, 0x36, 0x6b, 0x09, 0x5a, 0x83, 0x52, 0x03, 0x25, 0xbc, 0x67, 0xc7, 0x20, 0xec,
	0x82, 0x5b, 0xed, 0x74, 0x8d, 0x36, 0x44, 0xb6, 0xf1, 0x6e, 0x0d, 0x69, 0xa0, 0xba, 0x71, 0x75,
	0x09, 0x1c, 0xc7, 0xe5, 0x1b, 0x7e, 0xe8, 0xad, 0xc3, 0x56, 0x1b, 0xd5, 0xbf, 0x0d, 0x15, 0x07,
	0x63, 0x1d, 0x84, 0xee, 0x26, 0xf1, 0x8c, 0x40, 0xc5, 0x6c, 0xa4, 0x90, 0x7b, 0xd5, 0x40, 0xae,
	0x0a, 0xd8, 0x8d, 0xe2, 0x35, 0x60, 0x09, 0x59, 0x76, 0x58, 0x22, 0xf6, 0xf3, 0x39, 0xec, 0x52,
	0x7d, 0x37, 0xa4, 0xef, 0x83, 0xb3, 0x74, 0xf4, 0xb1, 0xfc, 0x65, 0x9f, 0x39, 0xb0, 0x1e, 0x6d,
	0x43, 0x35, 0xea, 0x45, 0x11, 0xa4, 0xb0, 0x89, 0x63, 0x30, 0xb5, 0x1e, 0x1f, 0xa8, 0x8e, 0x53,
	0x0c, 0xb8, 0x88, 0x77, 0xe1, 0xa2, 0xa6, 0x0d, 0x09, 0xa2, 0x5b, 0x27, 0x1e, 0x80, 0xc3, 0x7c,
	0x0a, 0xd3, 0x75, 0x7f, 0x46, 0x3b, 0xbf, 0xbb, 0xae, 0xfc, 0x4f, 0x52, 0x4c, 0x75, 0x37, 0xac,
	0xc3, 0xc0, 0x80, 0x29, 0xab, 0xcc, 0xcf, 0x85, 0xb7, 0xc1, 0x09, 0x0c, 0xe3, 0xc5, 0x51, 0x5b,
	0x98, 0x34, 0xca, 0x03, 0x6b, 0x2d, 0x88, 0xce, 0x3f, 0xfb, 0x84, 0xb0, 0x8e, 0x96, 0xa3, 0x86,
	0x1f, 0x92, 0x84, 0x0b, 0x97, 0x0c, 0x4b, 0x2d, 0x03, 0x11, 0xb6, 0x29, 0x5c, 0x9f, 0xd5, 0x08,
	0x78, 0xc9, 0x3c, 0x2c, 0xc4, 0xab, 0x82, 0x14, 0xe2, 0x5d, 0xa7, 0x78, 0xc9, 0xee, 0x5b, 0x88,
	0x57, 0x05, 0x11, 0xc6, 0x44, 0x1d, 0xdd, 0x19, 0x70, 0x24, 0x97, 0x67, 0xeb, 0xac, 0x56, 0xac,
	0x33, 0x17, 0x17, 0x8d, 0x8b, 0xd6, 0x61, 0x35, 0x41, 0xd5, 0x19, 0xc3, 0xba, 0x41, 0x95, 0x82,
	0x61, 0x00, 0xd7, 0xcc, 0xa1, 0x1a, 0xe8, 0xe1, 0x3a, 0xbc, 0x15, 0x1e, 0x52, 0xa2, 0x60, 0x4f,
	0xe5, 0x90, 0xf1, 0xba, 0x02, 0xcd, 0x79, 0xfa, 0x4b, 0x23, 0xd8, 0x37, 0xe0, 0x31, 0xbe, 0x76,
	0x47, 0x3b, 0x2c, 0xcd, 0xe0, 0x81, 0x76, 0xd0, 0x45, 0x3f, 0x80, 0xab, 0x6e, 0xac, 0x1c, 0x94,
	0x35, 0x00, 0xf9, 0xde, 0xa2, 0x13, 0x0d, 0x4f, 0x05, 0x82, 0x5f, 0x68, 0x4c, 0x69, 0x70, 0xd0,
	0x3a, 0xe1, 0x44, 0x43, 0x2b, 0xc8, 0x8b, 0x0c, 0x6b, 0x05, 0x9c, 0x14, 0x5a, 0x9b, 0xf5, 0x1b,
	0x9c, 0x22, 0xdb, 0x40, 0x91, 0x00, 0xa3, 0x3b, 0x0b, 0x1e, 0xcd, 0x1a, 0x7e, 0x17, 0x6e, 0x60,
	0xba, 0xce, 0xe9, 0xe9, 0xa2, 0xd5, 0x02, 0xeb, 0x68, 0x1d, 0xad, 0x50, 0xd1, 0xd1, 0x10, 0xa8,
	0x26, 0x74, 0xb4, 0x3a, 0x8f, 0x8e, 0x56, 0xe0, 0x7b, 0xf4, 0xf3, 0xfa, 0x0c, 0x2f, 0x6f, 0xce,
	0x4e, 0xdf, 0xbb, 0x7b, 0x67, 0xe6, 0x0d, 0xd9, 0xf8, 0x58, 0x0c, 0x2b, 0xac, 0x11, 0x25, 0x30,
	0x2d, 0x16, 0xb8, 0x17, 0x0c, 0x79, 0x5a, 0xee, 0xcc, 0xcf, 0xdc, 0xbd, 0x33, 0x7d, 0xfb, 0x96,
	0x7c, 0xe8, 0xee, 0x02, 0x5c, 0xd8, 0xd6, 0x3a, 0x38, 0x2e, 0x0f, 0x36, 0xf9, 0x56, 0x16, 0xb8,
	0x3a, 0x88, 0x42, 0xac, 0x5b, 0x26, 0x5e, 0xf1, 0x6c, 0x38, 0x3d, 0xf0, 0x8a, 0xc1, 0x0a, 0xa2,
	0x3d, 0x1f, 0xf4, 0x16, 0x3b, 0x3c, 0x5f, 0xe8, 0x96, 0xd6, 0xa6, 0x17, 0x76, 0x31, 0xe0, 0x2e,
	0xcd, 0x4d, 0xff, 0x41, 0x15, 0x5f, 0x01, 0x2c, 0xbb, 0x61, 0xa3, 0xed, 0xd6, 0xb7, 0xd0, 0x96,
	0x15, 0xd0, 0xff, 0xb1, 0xf5, 0x87, 0x86, 0xec, 0x95, 0x39, 0xa8, 0x83, 0x10, 0x1a, 0x62, 0x45,
	0xd2, 0x09, 0xef, 0x53, 0xe0, 0x98, 0xf8, 0x19, 0x89, 0x26, 0xac, 0xb8, 0xcf, 0x68, 0x00, 0xf2,
	0x47, 0x65, 0x39, 0x1e, 0x31, 0xf6, 0xfa, 0x39, 0x29, 0x7e, 0x28, 0x9c, 0x1a, 0x6d, 0x13, 0x72,
	0xed, 0xc1, 0x54, 0x4b, 0xf6, 0xf7, 0x80, 0x13, 0x6a, 0x6f, 0x49, 0xfc, 0xb3, 0x4b, 0x45, 0x0c,
	0x21, 0x21, 0xcf, 0x2e, 0x9a, 0x48, 0x17, 0xa2, 0x9e, 0x3d, 0xce, 0xf3, 0xbb, 0x93, 0x8b, 0x32,
	0xa9, 0x83, 0x98, 0x32, 0xc7, 0x55, 0xb6, 0x0f, 0x4c, 0xbf, 0x07, 0x86, 0x9d, 0xd5, 0xb9, 0x59,
	0xff, 0x43, 0xeb, 0x11, 0x38, 0xae, 0x8d, 0x4a, 0x2f, 0xdf, 0x21, 0x6a, 0x20, 0xa6, 0x74, 0xb1,
	0xe6, 0xed, 0x03, 0xd3, 0xbf, 0x7b, 0x07, 0x1b, 0x18, 0x66, 0x48, 0x7a, 0x06, 0x24, 0x35, 0x59,
	0xa6, 0x86, 0x18, 0x36, 0xfc, 0x24, 0x85, 0xf1, 0x3c, 0xc4, 0x6f, 0x09, 0x25, 0xee, 0xeb, 0x61,
	0xf4, 0x2a, 0x3c, 0x4b, 0xfc, 0x10, 0x2a, 0x08, 0xaf, 0xe8, 0x10, 0xaa, 0x50, 0x5a, 0xef, 0x76,
	0x39, 0x97, 0x04, 0x09, 0x9f, 0xcb, 0x43, 0xe9, 0x5c, 0xd3, 0xa2, 0xd5, 0x40, 0xe6, 0x51, 0xbb,
	0xe0, 0xb4, 0x90, 0x62, 0x57, 0xc1, 0xfb, 0x92, 0x0e, 0x6f, 0x0e, 0x4c, 0x98, 0x80, 0xab, 0x10,
	0xc6, 0x72, 0x25, 0x31, 0xca, 0x67, 0xbc, 0x4b, 0x72, 0x8d, 0x5c, 0xd5, 0x33, 0x39, 0x07, 0xa8,
	0x57, 0xdc, 0x94, 0x14, 0x1b, 0x24, 0x27, 0xcb, 0x25, 0x33, 0x3f, 0x28, 0x48, 0xce, 0xea, 0x84,
	0x0f, 0x17, 0x12, 0x24, 0x8d, 0xd0, 0x7f, 0xd1, 0x8c, 0x8b, 0x40, 0xe4, 0xe9, 0xf2, 0xc1, 0x39,
	0x6d, 0xda, 0xe2, 0x99, 0x99, 0xd9, 0xd9, 0x5b, 0xf7, 0x5e, 0xbf, 0x2d, 0xbf, 0x51, 0x2d, 0x04,
	0x15, 0xd5, 0x68, 0x0a, 0x97, 0x01, 0x11, 0xeb, 0x45, 0xc6, 0x32, 0xa4, 0xf6, 0xe1, 0x08, 0xf6,
	0xe7, 0xf5, 0x2c, 0x65, 0xf5, 0x85, 0x9c, 0x94, 0x9f, 0x51, 0x69, 0x39, 0xd9, 0xe5, 0x15, 0x95,
	0xb0, 0x9e, 0x94, 0x47, 0x54, 0xb6, 0x99, 0x97, 0x1a, 0x74, 0x74, 0x60, 0x1e, 0x67, 0x5d, 0xc4,
	0x76, 0x48, 0x7f, 0xdb, 0xad, 0xef, 0xe8, 0xbb, 0x98, 0xd5, 0x0b, 0x37, 0xaf, 0xac, 0x92, 0xd6,
	0x38, 0x9d, 0x00, 0x1b, 0x47, 0x04, 0xb4, 0x49, 0x17, 0xb4, 0xc9, 0x2e, 0xd0, 0x0a, 0x9c, 0x24,
	0x26, 0x77, 0x26, 0x65, 0xb4, 0x9c, 0x94, 0x40, 0xf2, 0x9c, 0x7c, 0x9c, 0x21, 0x6b, 0xc0, 0x94,
	0x82, 0xad, 0xaf, 0x2f, 0xeb, 0x91, 0x49, 0x20, 0x82, 0xe6, 0x44, 0x0b, 0xe7, 0xdd, 0x9d, 0x64,
	0x7d, 0x7d, 0x59, 0xa6, 0x31, 0xe9, 0x8e, 0x56, 0x02, 0xc9, 0xd3, 0xf8, 0x99, 0x6c, 0x75, 0xe3,
	0xc3, 0x1a, 0xf6, 0xe7, 0x25, 0x06, 0x36, 0x74, 0x14, 0xbb, 0xaa, 0x47, 0x99, 0x03, 0x2c, 0x38,
	0xe0, 0xdd, 0x07, 0xc7, 0xb2, 0x99, 0xc7, 0x3f, 0x92, 0xf7, 0x5d, 0x0d, 0x80, 0x6e, 0x26, 0x4d,
	0xc9, 0x93, 0x8e, 0xc8, 0xdb, 0x65, 0x72, 0x01, 0xfb, 0xb2, 0x79, 0x72, 0x8a, 0x70, 0x3a, 0x5b,
	0x82, 0x28, 0x42, 0x15, 0xa3, 0x8d, 0x49, 0x84, 0x2a, 0x56, 0x9b, 0x0b, 0xb9, 0x79, 0x25, 0x03,
	0xc8, 0xd4, 0xe7, 0xed, 0x3e, 0x7a, 0xea, 0xf3, 0x70, 0xda, 0xeb, 0x68, 0x71, 0xf9, 0xb0, 0x03,
	0xfe, 0x05, 0xd3, 0xfa, 0x62, 0xe7, 0xfb, 0xd3, 0xf9, 0x95, 0x40, 0xab, 0x48, 0x98, 0x6b, 0xcd,
	0x37, 0xc5, 0x22, 0x5f, 0x03, 0x28, 0x3c, 0x23, 0x53, 0x1b, 0x11, 0xf6, 0x97, 0x4f, 0x83, 0xf3,
	0x8a, 0x8c, 0x57, 0xdb, 0xfb, 0x58, 0xc1, 0x7e, 0xa0, 0x36, 0xa9, 0x7b, 0x4a, 0x2f, 0xcd, 0x5b,
	0x62, 0x57, 0xce, 0x66, 0xf8, 0x35, 0xe3, 0x0c, 0x57, 0x20, 0x0b, 0xa6, 0xb8, 0xb0, 0xf9, 0xd4,
	0x85, 0xaf, 0xf4, 0x9b, 0x8f, 0x08, 0x91, 0x27, 0xf7, 0xbb, 0x33, 0xe9, 0xdb, 0x80, 0xe9, 0x7a,
	0xab, 0xcd, 0x87, 0xd4, 0x36, 0x70, 0x5d, 0x80, 0x11, 0xae, 0x9a, 0x19, 0x80, 0x50, 0x4b, 0x6e,
	0x39, 0xc4, 0xfd, 0x0a, 0x6e, 0x28, 0xd3, 0xfd, 0x9a, 0x69, 0x67, 0x53, 0x21, 0x85, 0x5b, 0x0e,
	0xbe, 0xb1, 0xa9, 0x30, 0x24, 0x46, 0x86, 0x34, 0x99, 0x55, 0x18, 0xfd, 0x56, 0xaa, 0x05, 0xcd,
	0xb3, 0x4a, 0x98, 0x38, 0xda, 0x2f, 0x0c, 0x13, 0x47, 0x0f, 0xab, 0x0b, 0x78, 0x35, 0x25, 0x2e,
	0xf8, 0x20, 0x10, 0xee, 0xfc, 0x12, 0xfd, 0x82, 0xcd, 0xc3, 0xe5, 0x4f, 0x3f, 0x42, 0x2d, 0x39,
	0x3a, 0x08, 0x1f, 0x8b, 0x49, 0x93, 0x4c, 0xc3, 0x2d, 0xc0, 0x74, 0x43, 0xfe, 0x04, 0x9c, 0xe2,
	0x13, 0xda, 0xdd, 0x86, 0x22, 0xf6, 0xcb, 0xda, 0x59, 0x2f, 0x03, 0x4d, 0x69, 0x13, 0x35, 0x91,
	0x08, 0x78, 0xf2, 0x0e, 0x28, 0x62, 0x7e, 0xc9, 0xbc, 0x51, 0x8a, 0xb8, 0x73, 0xec, 0x96, 0xa7,
	0xa6, 0x34, 0x38, 0xd8, 0xef, 0xfc, 0x5a, 0x2f, 0x92, 0x18, 0xfb, 0x9e, 0xdb, 0xc5, 0xc2, 0x98,
	0xfa, 0xf1, 0x0b, 0x6a, 0x2d, 0xb1, 0x8c, 0x15, 0x99, 0x90, 0xcd, 0x80, 0x5d, 0x77, 0x54, 0x9c,
	0xc1, 0x6e, 0xa7, 0x87, 0x1d, 0x55, 0x01, 0xec, 0x6d, 0x47, 0xdd, 0xce, 0x3e, 0xd2, 0xcb, 0x7c,
	0x01, 0x40, 0x17, 0x75, 0x50, 0x43, 0xea, 0x42, 0xcb, 0xf5, 0x83, 0x5e, 0x48, 0xe5, 0x80, 0xa2,
	0x21, 0x9a, 0x42, 0xe1, 0x40, 0x2c, 0xac, 0x5e, 0x47, 0x32, 0xae, 0x2c, 0x22, 0x19, 0x03, 0xe8,
	0xb8, 0xcb, 0x57, 0xa5, 0x1f, 0xfa, 0xe9, 0xba, 0xbb, 0x05, 0xa3, 0x4e, 0xba, 0x06, 0xc9, 0xab,
	0x44, 0xed, 0xaa, 0xcc, 0xc3, 0x89, 0x26, 0x55, 0x26, 0x27, 0x09, 0x80, 0x7c, 0x5a, 0xdb, 0xf4,
	0x43, 0x3f, 0x69, 0x2a, 0x6d, 0x68, 0x27, 0xa2, 0x0e, 0xb2, 0xf0, 0x20, 0xc8, 0x76, 0x01, 0x2a,
	0x9b, 0x09, 0x3b, 0xae, 0x15, 0xed, 0x17, 0x22, 0xa4, 0x36, 0xcc, 0x91, 0x28, 0xe0, 0x42, 0x4f,
	0xc6, 0x6c, 0x3c, 0xa5, 0x29, 0x80, 0x85, 0x88, 0x89, 0x15, 0xbe, 0x07, 0xc4, 0x1a, 0x40, 0xdd,
	0x31, 0xeb, 0x8a, 0xb0, 0x8c, 0x99, 0x67, 0x25, 0xbe, 0xe6, 0x93, 0x82, 0x76, 0xde, 0x34, 0x2c,
	0x7c, 0xe3, 0x17, 0x85, 0x4d, 0x25, 0xbb, 0x6e, 0x2a, 0xd9, 0x55, 0x53, 0xdf, 0x29, 0xa9, 0x4e,
	0xe4, 0x08, 0xbc, 0xf0, 0x0c, 0x89, 0x8d, 0x7c, 0x0a, 0x88, 0x02, 0x40, 0x43, 0x00, 0x89, 0xe3,
	0xba, 0xd3, 0xa6, 0x5e, 0xcd, 0x10, 0x21, 0xa6, 0x34, 0x29, 0xf3, 0xb0, 0xb1, 0xf2, 0x54, 0xa6,
	0x4d, 0x05, 0x91, 0xeb, 0x65, 0x28, 0x2f, 0xeb, 0x55, 0x2e, 0x09, 0xc8, 0x80, 0x55, 0x3c, 0x9e,
	0xb8, 0xdb, 0x30, 0xc3, 0x79, 0xc9, 0xb4, 0xe7, 0x64, 0x18, 0x8b, 0xac, 0x31, 0x7e, 0x98, 0xa4,
	0x6e, 0x10, 0x64, 0xf8, 0xae, 0xe8, 0x17, 0xbb, 0x0c, 0xa5, 0xbd, 0x0d, 0x97, 0x55, 0x01, 0x7e,
	0x20, 0xd7, 0xf7, 0x5a, 0x01, 0xca, 0x23, 0x7c, 0x0a, 0x2e, 0xc8, 0xfb, 0x51, 0x34, 0x1f, 0x3d,
	0x0d, 0x11, 0xab, 0xb8, 0x06, 0x7b, 0xdd, 0xbc, 0x79, 0xe5, 0x80, 0x85, 0x48, 0x3c, 0xc2, 0xfe,
	0x95, 0x03, 0xc3, 0xc6, 0x9f, 0x8b, 0x22, 0x1b, 0xb5, 0x2d, 0x7f, 0xdc, 0xc4, 0x74, 0x6d, 0xd3,
	0x1a, 0xcb, 0xc2, 0x31, 0x79, 0xf4, 0xd7, 0x71, 0x92, 0xe7, 0x0b, 0xe6, 0xe9, 0x81, 0x01, 0xf4,
	0xd9, 0x73, 0x1e, 0x08, 0x27, 0x41, 0xfc, 0xba, 0xa5, 0x00, 0x99, 0x00, 0x30, 0x75, 0x28, 0x03,
	0x40, 0xbf, 0x65, 0x4c, 0xe4, 0x1c, 0x50, 0x48, 0x96, 0x57, 0x80, 0x69, 0x0e, 0x1c, 0x15, 0xb9,
	0x42, 0xf0, 0x9c, 0x33, 0x31, 0x8d, 0x60, 0xc9, 0x71, 0x49, 0xd0, 0xff, 0xe9, 0xfc, 0x23, 0x78,
	0x2e, 0x16, 0xcc, 0x50, 0x03, 0xaa, 0x59, 0x70, 0x44, 0xd4, 0xed, 0x31, 0x9a, 0xb3, 0x26, 0xcd,
	0xdf, 0xd0, 0xa7, 0x95, 0xac, 0x4f, 0x0c, 0x2a, 0xd1, 0xf7, 0x89, 0x57, 0x0b, 0xf6, 0x06, 0xbe,
	0x23, 0xe2, 0x0a, 0xf9, 0xe4, 0x4a, 0x65, 0x21, 0x0c, 0x53, 0x3e, 0xc1, 0x5e, 0x2e, 0x90, 0x99,
	0x02, 0x9c, 0x4e, 0xf9, 0x98, 0x52, 0xa4, 0x79, 0x57, 0xb4, 0x79, 0x38, 0xc1, 0xc4, 0xcd, 0x80,
	0x14, 0x08, 0xbc, 0x4e, 0xc4, 0x96, 0x70, 0x26, 0x1c, 0x61, 0xd1, 0x9b, 0x5a, 0x52, 0xe0, 0x84,
	0x13, 0xb3, 0x9a, 0xa0, 0xd4, 0x3e, 0x60, 0xc5, 0xd9, 0x52, 0x6c, 0xc0, 0x94, 0xa4, 0xa9, 0xa2,
	0xa6, 0xa5, 0xe2, 0xa5, 0x68, 0x82, 0x16, 0x74, 0x2a, 0x6d, 0xbd, 0xdc, 0x66, 0xb2, 0xab, 0x36,
	0x93, 0x8f, 0xde, 0x66, 0xc3, 0x60, 0x1b, 0x9d, 0xbb, 0x79, 0x67, 0x6e, 0x71, 0x66, 0x6e, 0xba,
	0x07, 0xdb, 0x28, 0x03, 0x2d, 0x66, 0x68, 0x5d, 0x50, 0x95, 0x74, 0x49, 0xda, 0xaf, 0x99, 0x85,
	0x46, 0xef, 0x7e, 0x94, 0x5b, 0x19, 0x07, 0x8d, 0x39, 0xcb, 0x3f, 0x5e, 0x64, 0x8c, 0x56, 0xa1,
	0x8b, 0x1a, 0xf3, 0xb3, 0x6d, 0xc2, 0x94, 0x8c, 0xfc, 0x7a, 0x2f, 0x6d, 0x31, 0x13, 0x78, 0x41,
	0x53, 0x39, 0x13, 0x2e, 0x4f, 0xa3, 0x5d, 0x60, 0xc2, 0x65, 0x30, 0x79, 0xc3, 0x5b, 0x01, 0x9b,
	0x38, 0xe2, 0x9e, 0xd8, 0xc4, 0x9b, 0x28, 0xa0, 0xbd, 0xae, 0x5e, 0x96, 0x28, 0x89, 0xb7, 0xaf,
	0xf5, 0xd2, 0x10, 0x3e, 0x95, 0x14, 0xb8, 0x01, 0xfc, 0xd5, 0x09, 0x70, 0x58, 0x88, 0xcd, 0x8a,
	0xa3, 0xb2, 0xae, 0x08, 0x49, 0xa4, 0x88, 0x63, 0xa7, 0xfa, 0x10, 0x2c, 0x57, 0x5d, 0x14, 0xd4,
	0x44, 0x09, 0xf2, 0x4a, 0x83, 0xc8, 0xa5, 0xe6, 0x20, 0xaf, 0x0c, 0xa2, 0x7b, 0x8c, 0x39, 0x29,
	0xe7, 0x1b, 0xaa, 0x22, 0xb1, 0xdc, 0x6c, 0x63, 0x5e, 0x38, 0x0e, 0x63, 0x72, 0xf1, 0xcf, 0x41,
	0x93, 0x88, 0x05, 0xc5, 0x18, 0xcd, 0x71, 0xdd, 0xc4, 0xcc, 0x75, 0xae, 0x87, 0x43, 0xa9, 0xe0,
	0x45, 0xab, 0xef, 0xbb, 0x00, 0xd1, 0x35, 0x2b, 0x17, 0x8f, 0x36, 0x96, 0xe6, 0x1d, 0xa9, 0x0d,
	0x40, 0x5d, 0xb3, 0xe1, 0xf1, 0x28, 0x7c, 0xa9, 0x21, 0x68, 0x7d, 0x06, 0xa0, 0xc5, 0xe5, 0x0a,
	0x61, 0x71, 0xa9, 0x4b, 0x3d, 0x8f, 0x1d, 0x63, 0x08, 0x8b, 0xab, 0x82, 0x75, 0x8b, 0x3f, 0xf3,
	0xae, 0x90, 0xf4, 0x01, 0x5f, 0xdf, 0x08, 0x2d, 0xe8, 0x93, 0x3e, 0x28, 0x50, 0xc2, 0x5d, 0xaa,
	0x84, 0xf8, 0x89, 0x40, 0x3b, 0xf5, 0xdf, 0xef, 0x46, 0xbb, 0x0a, 0x66, 0x8a, 0xec, 0x97, 0x9b,
	0x2f, 0x24, 0x76, 0x61, 0xf1, 0x9c, 0x22, 0xf1, 0x0b, 0x75, 0x01, 0x9f, 0xb2, 0x64, 0x0a, 0x7e,
	0x23, 0x66, 0xe3, 0xa5, 0x9f, 0x50, 0x02, 0x84, 0x21, 0xbb, 0x91, 0x94, 0x3a, 0x64, 0x2e, 0x6a,
	0xb5, 0xa2, 0x90, 0xac, 0x77, 0x63, 0xea, 0x10, 0x01, 0xa8, 0x68, 0xd5, 0xaf, 0xc9, 0xab, 0x7e,
	0x86, 0x2c, 0xe9, 0x82, 0x44, 0xbd, 0x0c, 0xa2, 0x08, 0xa9, 0x96, 0x99, 0x38, 0x46, 0x52, 0x17,
	0x66, 0xea, 0xe3, 0x24, 0x89, 0x41, 0xf6, 0x19, 0x28, 0x3a, 0x7f, 0xd6, 0x4d, 0x39, 0x79, 0x64,
	0xa0, 0x3c, 0xc2, 0x00, 0x5c, 0xc9, 0xc1, 0xce, 0xc3, 0x4d, 0xb7, 0x13, 0xd0, 0xe8, 0x74, 0x8e,
	0xdf, 0x68, 0xa6, 0x89, 0x7c, 0xbc, 0xee, 0xe5, 0x0b, 0xd3, 0x9b, 0x1f, 0x25, 0xb5, 0x09, 0x9f,
	0x38, 0xa6, 0x24, 0x0e, 0x2a, 0x98, 0x0e, 0xef, 0xf4, 0x7f, 0x7f, 0x44, 0x4a, 0xbd, 0x4c, 0x83,
	0xd5, 0xa9, 0x72, 0x5c, 0x1f, 0xe5, 0x4e, 0x07, 0xa1, 0x93, 0xe3, 0xac, 0x2e, 0x9f, 0xbf, 0x66,
	0x26, 0x08, 0x38, 0xea, 0xcb, 0x05, 0x93, 0x85, 0x63, 0xd7, 0xe4, 0x44, 0x11, 0xaa, 0xc9, 0x4d,
	0x82, 0x86, 0xac, 0x35, 0x68, 0x9a, 0x35, 0x12, 0x4c, 0xd7, 0x38, 0xf5, 0x1f, 0x08, 0x81, 0xa3,
	0xe9, 0x89, 0x46, 0x68, 0x41, 0x1f, 0x38, 0x3a, 0x07, 0x37, 0xf5, 0x4a, 0x51, 0x2b, 0x4b, 0x04,
	0x5c, 0x08, 0x18, 0x22, 0x04, 0x45, 0x0e, 0xf3, 0x8d, 0x1a, 0x82, 0x22, 0xe7, 0x21, 0x8b, 0x83,
	0x84, 0xd3, 0xb4, 0x36, 0x19, 0x78, 0x62, 0xcc, 0x31, 0xad, 0x02, 0x6a, 0x63, 0x92, 0x49, 0x0c,
	0x76, 0xb7, 0xa1, 0x77, 0xdf, 0xdf, 0x2c, 0xc8, 0xfe, 0xc3, 0x41, 0x74, 0x89, 0xd4, 0x78, 0x25,
	0x71, 0xd2, 0x94, 0xf2, 0x0f, 0xdd, 0xf7, 0x37, 0xe5, 0x93, 0xa2, 0x5a, 0xab, 0xb5, 0xb9, 0x4b,
	0x1a, 0x08, 0xc4, 0x71, 0x30, 0x3d, 0x3e, 0x11, 0x8d, 0x09, 0xf8, 0x54, 0x48, 0x5d, 0xc4, 0x66,
	0x15, 0x46, 0x13, 0x32, 0x3d, 0xd7, 0xa0, 0x39, 0x64, 0x7a, 0xae, 0x45, 0xdd, 0x79, 0x32, 0x9f,
	0x53, 0x95, 0x63, 0x7e, 0xb9, 0x38, 0xf7, 0x2a, 0x47, 0x7b, 0x31, 0xdf, 0x11, 0x19, 0x42, 0x89,
	0x54, 0x8f, 0x78, 0x2b, 0x01, 0x98, 0x82, 0xa6, 0xab, 0x70, 0x5a, 0xeb, 0xb0, 0x9c, 0x74, 0x47,
	0xe9, 0xc2, 0x35, 0x73, 0x7a, 0x1e, 0xa5, 0x13, 0xdd, 0x06, 0x7a, 0x26, 0xae, 0x37, 0xfd, 0xed,
	0x5e, 0x06, 0x5a, 0x85, 0xd4, 0x86, 0xe6, 0x56, 0x60, 0xb0, 0x4a, 0x24, 0x25, 0x0e, 0x5b, 0x71,
	0x93, 0x2d, 0xde, 0x96, 0x31, 0x71, 0x98, 0x08, 0xd5, 0x5d, 0xbc, 0xb5, 0x94, 0x2e, 0xa5, 0xa9,
	0x5b, 0x6f, 0xf6, 0xd4, 0x25, 0x05, 0x52, 0xb8, 0xa5, 0x66, 0xb7, 0x68, 0x7c, 0x45, 0xcf, 0x45,
	0xdb, 0x30, 0xc6, 0x2f, 0xb4, 0xa1, 0x9c, 0x3a, 0x68, 0xd1, 0x15, 0xd9, 0x67, 0x4c, 0x1d, 0x24,
	0x81, 0xe9, 0xa2, 0x2f, 0x4a, 0x00, 0xc4, 0x92, 0x94, 0xa5, 0xc2, 0x73, 0x79, 0x36, 0x14, 0xc3,
	0x6e, 0x23, 0x40, 0xe4, 0xc7, 0xfc, 0x7d, 0x29, 0xb4, 0xbf, 0x1b, 0xd7, 0x9b, 0xa2, 0x48, 0x7b,
	0xb9, 0x20, 0xcb, 0xb6, 0x28, 0xd1, 0x74, 0x0b, 0x3b, 0xea, 0x84, 0x9e, 0x00, 0xa3, 0xac, 0x08,
	0x1a, 0xd0, 0xb2, 0x6b, 0x5b, 0x39, 0xb8, 0x7c, 0x17, 0x52, 0x70, 0x41, 0xca, 0x1c, 0x15, 0xe4,
	0x25, 0xc6, 0x75, 0x63, 0x9a, 0xa9, 0x3c, 0x70, 0x8f, 0x52, 0xea, 0xb1, 0x70, 0x36, 0xa0, 0x69,
	0xc7, 0x91, 0xc4, 0xbe, 0x50, 0x94, 0x97, 0xdc, 0x20, 0xaf, 0x31, 0xab, 0x88, 0xbc, 0x9e, 0xfe,
	0xb7, 0x63, 0xe0, 0x90, 0xa0, 0x5f, 0xcc, 0x46, 0xa9, 0x9c, 0xb7, 0x38, 0x75, 0xf1, 0x03, 0x15,
	0x53, 0xde, 0x62, 0x5a, 0x6d, 0x88, 0x3a, 0x28, 0xad, 0x85, 0x25, 0x9c, 0x4b, 0x6b, 0x36, 0x4a,
	0x59, 0xf2, 0x62, 0xe3, 0x5a, 0x50, 0x21, 0x75, 0xdb, 0x7e, 0x56, 0xab, 0xc8, 0xa8, 0xa4, 0xe7,
	0x96, 0x34, 0x90, 0x3a, 0xcf, 0x87, 0xb3, 0x52, 0xbe, 0x07, 0xe5, 0x0b, 0x23, 0xea, 0x1c, 0xa4,
	0x21, 0xa6, 0xee, 0x39, 0x49, 0xe3, 0xe4, 0xdf, 0x14, 0x27, 0x08, 0xd5, 0x81, 0xe6, 0x49, 0x57,
	0xb2, 0x8f, 0xce, 0x46, 0xf8, 0x69, 0xdf, 0x86, 0x5b, 0xdf, 0x9a, 0xc1, 0xf9, 0x9e, 0xcc, 0xd9,
	0xdb, 0x72, 0xa0, 0xba, 0xec, 0xa3, 0x39, 0x20, 0xa5, 0x3f, 0x49, 0xef, 0x4d, 0xea, 0x40, 0x8b,
	0x73, 0x16, 0x26, 0x30, 0xbd, 0xef, 0xb6, 0xe0, 0x5a, 0x3d, 0x8a, 0xa1, 0x31, 0x37, 0x7f, 0x06,
	0xa2, 0x65, 0xbe, 0x92, 0x83, 0x85, 0x30, 0x34, 0xc3, 0x7a, 0xb5, 0x78, 0xd2, 0x64, 0xb8, 0x35,
	0x89, 0x26, 0xa4, 0x3d, 0x1f, 0x41, 0x3e, 0xf0, 0x1b, 0x4d, 0x0c, 0x5d, 0xb0, 0xe7, 0xcb, 0x70,
	0xba, 0x49, 0x9f, 0xd5, 0xda, 0x07, 0xac, 0xb6, 0x90, 0x73, 0xb7, 0x21, 0x52, 0x25, 0xb4, 0xf5,
	0xf1, 0xe2, 0x25, 0xb6, 0xcb, 0x16, 0x3f, 0x2d, 0xe5, 0x11, 0x46, 0x43, 0xb6, 0xd6, 0xf4, 0xdb,
	0x6d, 0x3f, 0x64, 0xe1, 0xb7, 0x8d, 0x79, 0x84, 0x35, 0xb0, 0xc5, 0xb9, 0xdc, 0xc8, 0x27, 0xab,
	0x31, 0xc4, 0x16, 0x83, 0xa8, 0xc3, 0x97, 0xf2, 0xab, 0x05, 0x2d, 0xe4, 0xc1, 0xf3, 0x8f, 0x44,
	0x7f, 0xf2, 0x08, 0x7e, 0x24, 0xfa, 0x00, 0x06, 0x6d, 0xeb, 0x93, 0xe0, 0x50, 0x13, 0x06, 0x6d,
	0x6a, 0xc0, 0xdf, 0xf4, 0x95, 0xa0, 0x58, 0x72, 0xdd, 0xd4, 0xe1, 0xcc, 0x56, 0xc1, 0x52, 0x1b,
	0x3d, 0x00, 0x47, 0x19, 0xd0, 0x43, 0xe8, 0xc6, 0x30, 0x49, 0xe7, 0xeb, 0xb2, 0xa4, 0xcc, 0x55,
	0x0b, 0xd7, 0x93, 0xbc, 0x8c, 0x5c, 0x8e, 0x30, 0xd0, 0x99, 0x76, 0x9b, 0xcc, 0x51, 0x3d, 0x26,
	0x5e, 0x2d, 0x9c, 0xcd, 0x71, 0x1d, 0xaf, 0x20, 0x01, 0xc4, 0x18, 0x3c, 0x31, 0x87, 0xac, 0xc3,
	0x67, 0x4a, 0xec, 0xe2, 0x7c, 0xbd, 0xe0, 0x7f, 0x80, 0x2b, 0xb3, 0x1a, 0x12, 0xab, 0x89, 0x7d,
	0xb1, 0xd6, 0x69, 0xe7, 0x33, 0xa3, 0x2a, 0x95, 0x42, 0x70, 0x25, 0x5c, 0x43, 0x8b, 0x89, 0xd1,
	0x44, 0xe8, 0x0a, 0x71, 0xd8, 0x0c, 0xd4, 0xf0, 0xef, 0x3a, 0x08, 0x53, 0xde, 0x51, 0x0c, 0x4b,
	0x26, 0x00, 0x2d, 0xa7, 0x4e, 0xd6, 0x57, 0x72, 0x18, 0x35, 0x50, 0xf9, 0x69, 0x28, 0x0c, 0xea,
	0x9c, 0x17, 0xd2, 0x89, 0xa1, 0x1d, 0x0a, 0x5e, 0x2d, 0x0c, 0x2a, 0x2f, 0x23, 0xc6, 0x56, 0x06,
	0x4a, 0x54, 0xe1, 0x15, 0xf8, 0x38, 0x56, 0x73, 0x85, 0xe8, 0x20, 0x84, 0x43, 0x3a, 0xae, 0x16,
	0xeb, 0x88, 0xde, 0xcc, 0xbe, 0x5a, 0x87, 0x71, 0x2b, 0x79, 0xb4, 0x49, 0x93, 0x0f, 0xd1, 0x79,
	0x73, 0x4d, 0x87, 0x5f, 0x07, 0x29, 0xa8, 0x1e, 0x18, 0x4c, 0x07, 0x43, 0x3c, 0xab, 0x70, 0x35,
	0x71, 0x34, 0x92, 0x81, 0x64, 0x2d, 0xd3, 0x08, 0xa6, 0xcd, 0x39, 0xc3, 0x48, 0x9b, 0x87, 0xb0,
	0xbd, 0xec, 0x87, 0x5b, 0x38, 0x14, 0xa6, 0x96, 0x39, 0x22, 0x84, 0xca, 0x1c, 0xb1, 0x4e, 0x1e,
	0x3e, 0x34, 0x7b, 0x0a, 0x86, 0x8f, 0x57, 0x0b, 0xc3, 0xf7, 0xd6, 0xda, 0xa3, 0x87, 0xcc, 0xa1,
	0xec, 0x93, 0x74, 0xca, 0xe3, 0x7b, 0xe9, 0x76, 0x7b, 0x39, 0x6a, 0x68, 0xa6, 0x7c, 0x56, 0xa9,
	0xf5, 0x9a, 0x64, 0x6d, 0xad, 0xba, 0x49, 0x42, 0x63, 0x61, 0x21, 0x7a, 0x6c, 0x1d, 0x3d, 0x32,
	0x8c, 0x20, 0x8d, 0x31, 0x80, 0x5c, 0x4b, 0x7c, 0x6c, 0x95, 0x45, 0xf7, 0xd0, 0x55, 0x6f, 0x9b,
	0x35, 0x00, 0xc2, 0x05, 0x97, 0xb8, 0x32, 0x51, 0x15, 0x09, 0xef, 0xc6, 0xbe, 0x79, 0x9c, 0xc0,
	0x18, 0x8f, 0xc8, 0x59, 0x1d, 0x46, 0x56, 0x2b, 0x38, 0x84, 0xe1, 0x2a, 0x56, 0x8e, 0x57, 0x3a,
	0x19, 0x09, 0xa4, 0xad, 0x70, 0x64, 0xf9, 0x91, 0x10, 0xab, 0x0b, 0xb0, 0x09, 0x12, 0x72, 0x35,
	0x8e, 0x5a, 0x11, 0x0e, 0x14, 0xa0, 0x1d, 0x57, 0x5e, 0xad, 0x4a, 0x48, 0x5e, 0x41, 0xde, 0x38,
	0xe0, 0x32, 0x9c, 0xa1, 0x95, 0xe3, 0xcb, 0x4b, 0x48, 0xa9, 0x5e, 0xfb, 0x2c, 0x01, 0x83, 0x79,
	0x7e, 0xd2, 0xf2, 0x93, 0x84, 0xe6, 0x3c, 0xf5, 0xa3, 0x50, 0x33, 0xc4, 0x39, 0x18, 0xad, 0x61,
	0x26, 0xdb, 0x75, 0x3a, 0x61, 0x1a, 0xfb, 0x24, 0x43, 0xbd, 0xac, 0xe2, 0x68, 0x41, 0x04, 0x45,
	0x1f, 0xd7, 0x4b, 0x95, 0x39, 0xfe, 0x3d, 0xdb, 0x29, 0xe4, 0x1f, 0xa9, 0xd6, 0xf0, 0x8f, 0x54,
	0xc8, 0x73, 0x5b, 0x11, 0x08, 0x76, 0x77, 0xe9, 0xa3, 0xce, 0x6d, 0xb9, 0x16, 0x2f, 0x3d, 0xbe,
	0x33, 0xaf, 0xd5, 0xb1, 0xb7, 0x81, 0x76, 0x67, 0x26, 0x75, 0xc2, 0xce, 0x4c, 0x0a, 0xec, 0x03,
	0xd6, 0x6d, 0x30, 0x86, 0x81, 0x52, 0x98, 0xa4, 0xd6, 0x89, 0xdc, 0xb7, 0xa8, 0x38, 0xaf, 0x1b,
	0xfc, 0x7a, 0x05, 0x3f, 0xe1, 0x5a, 0x8c, 0x02, 0x0f, 0x1d, 0xe2, 0x1c, 0x70, 0x6a, 0x93, 0xfc,
	0x4b, 0x12, 0x06, 0x41, 0x18, 0xb3, 0x2a, 0xc9, 0x16, 0x6a, 0x00, 0x32, 0xdd, 0x41, 0x31, 0x70,
	0x72, 0x1f, 0x44, 0x80, 0x65, 0xa9, 0xa7, 0x83, 0xd0, 0x1a, 0x87, 0xff, 0x27, 0x12, 0xbf, 0x08,
	0xed, 0x64, 0x38, 0xc6, 0x74, 0x82, 0xfe, 0x91, 0xd2, 0x1d, 0x90, 0xaa, 0xcb, 0x72, 0x7e, 0x4e,
	0x2d, 0x90, 0x60, 0xdb, 0x20, 0x10, 0x72, 0x35, 0xb6, 0xd0, 0x1f, 0x27, 0x35, 0x41, 0xe4, 0x7a,
	0x33, 0xc9, 0x4e, 0x58, 0xbf, 0x1f, 0xbb, 0xed, 0xa6, 0x4c, 0xbb, 0x0e, 0x42, 0xb8, 0xe6, 0xc1,
	0xb8, 0x70, 0x21, 0x31, 0x36, 0x73, 0x62, 0x56, 0x60, 0xc3, 0x6d, 0xc4, 0x51, 0xa7, 0x5d, 0x44,
	0xb1, 0x0c, 0x94, 0xa3, 0x58, 0xae, 0xc6, 0xc6, 0x86, 0xf3, 0xc2, 0xb7, 0x58, 0x57, 0x24, 0x39,
	0x6f, 0x16, 0x49, 0x3e, 0xff, 0x44, 0x4d, 0xc3, 0x5a, 0x04, 0xdb, 0x25, 0x65, 0xc0, 0x7b, 0xe0,
	0x84, 0xfa, 0x3d, 0xe9, 0xca, 0xa5, 0xa2, 0x26, 0x48, 0x47, 0xce, 0xe4, 0x3a, 0x92, 0x55, 0xda,
	0x07, 0x66, 0x6f, 0x7c, 0xf3, 0x7f, 0x38, 0x5f, 0xf9, 0xfd, 0x3f, 0x3e, 0x5f, 0xf9, 0x17, 0x7f,
	0x7c, 0xbe, 0xf2, 0x6f, 0xfe, 0xf8, 0x7c, 0xe5, 0x27, 0xfe, 0xc7, 0xf3, 0x07, 0xbe, 0xf3, 0x74,
	0x23, 0x6a, 0xe0, 0xfc, 0x02, 0xe9, 0x8d, 0x7a, 0xd0, 0x49, 0x52, 0x18, 0xdf, 0xa0, 0x58, 0x36,
	0x86, 0xf1, 0x9f, 0xdb, 0xff, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x0a, 0xd4, 0x49, 0x52,
	0xb7, 0x01, 0x00,
}
